<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="0" name="Jsonata.Net.Native.JsonParser.TestSuite.dll" fullname="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonParser.TestSuite\bin\Debug\net5.0\Jsonata.Net.Native.JsonParser.TestSuite.dll" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" total="354" passed="298" failed="0" inconclusive="0" skipped="56" asserts="298" engine-version="3.12.0.0" clr-version="5.0.17" start-time="2022-08-11 22:34:30Z" end-time="2022-08-11 22:34:30Z" duration="0.280929">
  <command-line><![CDATA[F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonParser.TestSuite\bin\Debug\net5.0\testhost.dll --port 63690 --endpoint 127.0.0.1:063690 --role client --parentprocessid 24736 --telemetryoptedin false]]></command-line>
  <filter>
    <or>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail10</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail11</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail12</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail13</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail14</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail15</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail16</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail17</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail18</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail19</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail20</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail21</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail22</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail23</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail24</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail25</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail26</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail27</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail28</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail29</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail30</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail31</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail32</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail33</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail4</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail5</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail6</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail7</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail9</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_double_huge_neg_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_huge_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_neg_int_huge_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_pos_double_huge_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_neg_overflow</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_pos_overflow</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_underflow</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_too_big_neg_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_too_big_pos_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_very_big_negative_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_object_key_lone_2nd_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_1st_surrogate_but_2nd_missing</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_1st_valid_surrogate_2nd_invalid</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogates_escape_valid</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogate_and_escape_valid</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogate_pair</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_lonely_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_inverted_surrogates_U+1D11E</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_iso_latin_1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_lone_second_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_lone_utf8_continuation_byte</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_not_in_unicode_range</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_2_bytes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_6_bytes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_6_bytes_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_truncated-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF-16LE_with_BOM</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF-8_invalid_sequence</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_utf16BE_no_BOM</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_utf16LE_no_BOM</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF8_surrogate_U+D800</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_structure_500_nested_arrays</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_structure_UTF-8_BOM_empty_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_1_true_without_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_a_invalid_utf8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_colon_instead_of_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_comma_after_close</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_comma_and_number</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_double_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_double_extra_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_extra_close</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_extra_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_incomplete</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_incomplete_invalid_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_inner_array_no_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_invalid_utf8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_items_separated_by_semicolon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_just_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_just_minus</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_missing_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_newlines_unclosed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_number_and_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_number_and_several_commas</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_spaces_vertical_tab_formfeed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_star_inside</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_trailing_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_with_new_lines</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_with_object_inside</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_false</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_true</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_multidigit_number_then_00</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_++</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_+1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_+Inf</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-01</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-1_0_</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-2_</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-NaN</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number__-1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number__2e-3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_1_2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_3e+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_3e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_e1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0e+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_capital_E+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_capital_E</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e-</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1eE2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_000</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e+3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e-3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_9_e+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_expression</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_hex_1_digit</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_hex_2_digits</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_Inf</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_infinity</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid+-</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-negative-real</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-bigger-int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-exponent</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_infinity</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_sign_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_space_1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_NaN</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_int_starting_with_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_real_without_int_part</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_with_garbage_at_end</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_garbage_after_e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_without_fractional_part</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_with_invalid_utf8_after_e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_starting_with_dot</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_U+FF11_fullwidth_digit_one</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_alpha</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_alpha_char</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_leading_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_bad_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_bracket_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_comma_instead_of_colon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_double_colon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_emoji</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_garbage_at_end</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_key_with_single_quotes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_lone_continuation_byte_in_key_and_trailing_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_colon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_semicolon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_no-colon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_non_string_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_non_string_key_but_huge_number_instead</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_repeated_null_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_several_trailing_commas</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_single_quote</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_open</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_slash_open</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_slash_open_incomplete</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_two_commas_in_a_row</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_unquoted_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_unterminated-value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_with_single_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_single_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u1x</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_accentuated_char_no_quotes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_backslash_00</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_backslash_bad</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_ctrl_char_tab</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_emoji</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escape_x</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_escaped_character</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_surrogate_escape_invalid</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid-utf-8-in-escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_backslash_esc</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_unicode_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_utf8_after_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_leading_uescaped_thinspace</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_no_quotes_with_bad_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_doublequote</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_quote</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_string_no_double_quotes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_start_escape_unclosed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_ctrl_char</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_tab</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unicode_CapitalU</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_100000_opening_arrays</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_angle_bracket__</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_angle_bracket_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_with_extra_array_close</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_with_unclosed_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_ascii-unicode-identifier</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_capitalized_True</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_close_unopened_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_comma_instead_of_closing_brace</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_double_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_end_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_incomplete_UTF8_BOM</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_lone-invalid-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_lone-open-bracket</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_no_data</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_null-byte-outside-string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_number_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_followed_by_closing_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_unclosed_no_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_with_comment</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_apostrophe</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_open_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_open_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_close_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_open_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_open_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_string_with_apostrophes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_open</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_single_eacute</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_single_star</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_trailing_#</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_U+2060_word_joined</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_uescaped_LF_before_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_partial_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_unfinished_false</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_unfinished_true</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unicode-identifier</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_UTF8_BOM_no_data</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_whitespace_formfeed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_whitespace_U+2060_word_joiner</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_arraysWithSpaces</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_empty-string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_empty</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_ending_with_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_false</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_heterogeneous</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_1_and_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_leading_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_several_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_trailing_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_0e+1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_0e1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_after_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_double_close_to_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_int_with_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_minus_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_one</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e_neg_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e_pos_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_exponent</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_fraction_exponent</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_neg_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_pos_exponent</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_simple_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_simple_real</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_basic</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_duplicated_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_duplicated_key_and_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_empty</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_empty_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_escaped_null_in_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_extreme_numbers</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_long_strings</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_simple</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_string_unicode</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_with_newlines</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_1_2_3_bytes_UTF-8_sequences</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_accepted_surrogate_pair</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_accepted_surrogate_pairs</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_allowed_escapes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_backslash_and_u_escaped_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_backslash_doublequotes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_comments</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_double_escape_a</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_double_escape_n</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_escaped_control_character</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_escaped_noncharacter</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_in_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_in_array_with_leading_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_last_surrogates_1_and_2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nbsp_uescaped</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nonCharacterInUTF-8_U+10FFFF</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nonCharacterInUTF-8_U+FFFF</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_null_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_one-byte-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_pi</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_reservedCharacterInUTF-8_U+1BFFF</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_simple_ascii</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_three-byte-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_two-byte-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_u+2028_line_sep</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_u+2029_par_sep</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_uEscape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_uescaped_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unescaped_char_delete</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicodeEscapedBackslash</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_escaped_double_quote</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+10FFFE_nonchar</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+1FFFE_nonchar</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+200B_ZERO_WIDTH_SPACE</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+2064_invisible_plus</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+FDD0_nonchar</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+FFFE_nonchar</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_utf8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_with_del_character</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_false</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_negative_real</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_true</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_string_empty</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_trailing_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_true_in_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_whitespace_array</test>
    </or>
  </filter>
  <test-suite type="Assembly" id="0-1358" name="Jsonata.Net.Native.JsonParser.TestSuite.dll" fullname="F:/Projects/_NuGet_External/jsonata.net.native/src/Jsonata.Net.Native.JsonParser.TestSuite/bin/Debug/net5.0/Jsonata.Net.Native.JsonParser.TestSuite.dll" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.0789371Z" end-time="2022-08-11T22:34:30.1855794Z" duration="0.106604" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
    <environment framework-version="3.13.2.0" clr-version="5.0.17" os-version="Microsoft Windows 6.3.9600" platform="Win32NT" cwd="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonParser.TestSuite\bin\Debug\net5.0" machine-name="ABC-BARG" user="barg_ma" user-domain="ABC" culture="ru-RU" uiculture="ru-RU" os-architecture="x64" />
    <settings>
      <setting name="SynchronousEvents" value="False" />
      <setting name="RandomSeed" value="406632602" />
      <setting name="SkipNonTestAssemblies" value="True" />
      <setting name="ProcessModel" value="InProcess" />
      <setting name="DomainUsage" value="Single" />
      <setting name="DefaultTestNamePattern" value="{m}{a}" />
      <setting name="WorkDirectory" value="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonParser.TestSuite\bin\Debug\net5.0" />
      <setting name="NumberOfTestWorkers" value="4" />
    </settings>
    <properties>
      <property name="_PID" value="31984" />
      <property name="_APPDOMAIN" value="testhost" />
    </properties>
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="TestSuite" id="0-1359" name="Jsonata" fullname="Jsonata" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.0829264Z" end-time="2022-08-11T22:34:30.1855761Z" duration="0.102650" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="0-1360" name="Net" fullname="Jsonata.Net" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.0831254Z" end-time="2022-08-11T22:34:30.1855730Z" duration="0.102448" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestSuite" id="0-1361" name="Native" fullname="Jsonata.Net.Native" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.0831344Z" end-time="2022-08-11T22:34:30.1855697Z" duration="0.102436" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-suite type="TestSuite" id="0-1362" name="JsonParser" fullname="Jsonata.Net.Native.JsonParser" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.0831383Z" end-time="2022-08-11T22:34:30.1855667Z" duration="0.102429" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <test-suite type="TestSuite" id="0-1363" name="TestSuite" fullname="Jsonata.Net.Native.JsonParser.TestSuite" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.0831414Z" end-time="2022-08-11T22:34:30.1855631Z" duration="0.102423" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
              <reason>
                <message><![CDATA[One or more child tests were ignored]]></message>
              </reason>
              <test-suite type="TestFixture" id="0-1000" name="JSONchecker" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" testcasecount="36" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.0841052Z" end-time="2022-08-11T22:34:30.1434588Z" duration="0.059354" total="36" passed="31" failed="0" warnings="0" inconclusive="0" skipped="5" asserts="31">
                <reason>
                  <message><![CDATA[One or more child tests were ignored]]></message>
                </reason>
                <test-suite type="ParameterizedMethod" id="0-1037" name="Test" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" testcasecount="36" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.0869180Z" end-time="2022-08-11T22:34:30.1428891Z" duration="0.055971" total="36" passed="31" failed="0" warnings="0" inconclusive="0" skipped="5" asserts="31">
                  <reason>
                    <message><![CDATA[One or more child tests were ignored]]></message>
                  </reason>
                  <test-case id="0-1001" name="fail.fail1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1998983383" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.0869513Z" end-time="2022-08-11T22:34:30.1164750Z" duration="0.029615" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem at all]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail1'
JSON: '"A JSON payload should be an object or array, not a string."'
Expected: 'False'
Parsed: '"A JSON payload should be an object or array, not a string."'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1002" name="fail.fail10" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail10" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="467389715" result="Passed" start-time="2022-08-11T22:34:30.1183225Z" end-time="2022-08-11T22:34:30.1293414Z" duration="0.011019" asserts="1">
                    <output><![CDATA[File: 'fail10'
JSON: '{"Extra value after close": true} "misplaced quoted value"'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 34)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1003" name="fail.fail11" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail11" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1050606794" result="Passed" start-time="2022-08-11T22:34:30.1293730Z" end-time="2022-08-11T22:34:30.1300777Z" duration="0.000705" asserts="1">
                    <output><![CDATA[File: 'fail11'
JSON: '{"Illegal expression": 1 + 2}'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in object (at position 25)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1004" name="fail.fail12" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail12" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1770265732" result="Passed" start-time="2022-08-11T22:34:30.1301007Z" end-time="2022-08-11T22:34:30.1301822Z" duration="0.000081" asserts="1">
                    <output><![CDATA[File: 'fail12'
JSON: '{"Illegal invocation": alert()}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'a' (at position 23)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1005" name="fail.fail13" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail13" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1388368456" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1301903Z" end-time="2022-08-11T22:34:30.1310310Z" duration="0.000841" asserts="0">
                    <reason>
                      <message><![CDATA[Let's allow that too]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail13'
JSON: '{"Numbers cannot have leading zeroes": 013}'
Expected: 'False'
Parsed: '{"Numbers cannot have leading zeroes":13}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1006" name="fail.fail14" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail14" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1935073063" result="Passed" start-time="2022-08-11T22:34:30.1310573Z" end-time="2022-08-11T22:34:30.1311487Z" duration="0.000091" asserts="1">
                    <output><![CDATA[File: 'fail14'
JSON: '{"Numbers cannot be hex": 0x14}'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in object (at position 27)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1007" name="fail.fail15" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail15" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1926375756" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1311566Z" end-time="2022-08-11T22:34:30.1325035Z" duration="0.001347" asserts="0">
                    <reason>
                      <message><![CDATA[Maybe not that illegal?]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail15'
JSON: '["Illegal backslash escape: \x15"]'
Expected: 'False'
Parsed: '["Illegal backslash escape: \u0015"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1008" name="fail.fail16" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail16" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1042651931" result="Passed" start-time="2022-08-11T22:34:30.1325337Z" end-time="2022-08-11T22:34:30.1330572Z" duration="0.000523" asserts="1">
                    <output><![CDATA[File: 'fail16'
JSON: '[\naked]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1009" name="fail.fail17" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail17" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1426660168" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1330958Z" end-time="2022-08-11T22:34:30.1335100Z" duration="0.000414" asserts="0">
                    <reason>
                      <message><![CDATA[Maybe not that illegal?]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail17'
JSON: '["Illegal backslash escape: \017"]'
Expected: 'False'
Parsed: '["Illegal backslash escape: \u000f"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1010" name="fail.fail18" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail18" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1427708046" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1335317Z" end-time="2022-08-11T22:34:30.1337711Z" duration="0.000239" asserts="0">
                    <reason>
                      <message><![CDATA[Not too deep!]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail18'
JSON: '[[[[[[[[[[[[[[[[[[[["Too deep"]]]]]]]]]]]]]]]]]]]]'
Expected: 'False'
Parsed: '[[[[[[[[[[[[[[[[[[[["Too deep"]]]]]]]]]]]]]]]]]]]]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1011" name="fail.fail19" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail19" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="677594639" result="Passed" start-time="2022-08-11T22:34:30.1337880Z" end-time="2022-08-11T22:34:30.1338761Z" duration="0.000088" asserts="1">
                    <output><![CDATA[File: 'fail19'
JSON: '{"Missing colon" null}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got 'n' (at position 17)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1012" name="fail.fail2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1109078424" result="Passed" start-time="2022-08-11T22:34:30.1338843Z" end-time="2022-08-11T22:34:30.1339573Z" duration="0.000073" asserts="1">
                    <output><![CDATA[File: 'fail2'
JSON: '["Unclosed array"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 17)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1013" name="fail.fail20" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail20" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="736779100" result="Passed" start-time="2022-08-11T22:34:30.1339694Z" end-time="2022-08-11T22:34:30.1340337Z" duration="0.000065" asserts="1">
                    <output><![CDATA[File: 'fail20'
JSON: '{"Double colon":: null}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ':' (at position 16)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1014" name="fail.fail21" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail21" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="814589518" result="Passed" start-time="2022-08-11T22:34:30.1340413Z" end-time="2022-08-11T22:34:30.1341149Z" duration="0.000074" asserts="1">
                    <output><![CDATA[File: 'fail21'
JSON: '{"Comma instead of colon", null}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got ',' (at position 25)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1015" name="fail.fail22" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail22" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="579029264" result="Passed" start-time="2022-08-11T22:34:30.1341267Z" end-time="2022-08-11T22:34:30.1342375Z" duration="0.000111" asserts="1">
                    <output><![CDATA[File: 'fail22'
JSON: '["Colon instead of comma": false]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 25)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1016" name="fail.fail23" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail23" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="899748361" result="Passed" start-time="2022-08-11T22:34:30.1342988Z" end-time="2022-08-11T22:34:30.1345557Z" duration="0.000257" asserts="1">
                    <output><![CDATA[File: 'fail23'
JSON: '["Bad value", truth]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got 't' (at position 17)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1017" name="fail.fail24" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail24" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1778212848" result="Passed" start-time="2022-08-11T22:34:30.1352958Z" end-time="2022-08-11T22:34:30.1358793Z" duration="0.000584" asserts="1">
                    <output><![CDATA[File: 'fail24'
JSON: '['single quote']'
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1018" name="fail.fail25" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail25" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1388523668" result="Passed" start-time="2022-08-11T22:34:30.1358969Z" end-time="2022-08-11T22:34:30.1362425Z" duration="0.000346" asserts="1">
                    <output><![CDATA[File: 'fail25'
JSON: '["	tab	character	in	string	"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x9) (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1019" name="fail.fail26" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail26" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="639429781" result="Passed" start-time="2022-08-11T22:34:30.1362691Z" end-time="2022-08-11T22:34:30.1364378Z" duration="0.000169" asserts="1">
                    <output><![CDATA[File: 'fail26'
JSON: '["tab\	character\	in\	string\	"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x9) (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1020" name="fail.fail27" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail27" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="102027688" result="Passed" start-time="2022-08-11T22:34:30.1364535Z" end-time="2022-08-11T22:34:30.1365552Z" duration="0.000102" asserts="1">
                    <output><![CDATA[File: 'fail27'
JSON: '["line
break"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0xA) (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1021" name="fail.fail28" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail28" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1610538139" result="Passed" start-time="2022-08-11T22:34:30.1365788Z" end-time="2022-08-11T22:34:30.1367765Z" duration="0.000198" asserts="1">
                    <output><![CDATA[File: 'fail28'
JSON: '["line\
break"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0xA) (at position 7)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1022" name="fail.fail29" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail29" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1926805215" result="Passed" start-time="2022-08-11T22:34:30.1367856Z" end-time="2022-08-11T22:34:30.1369431Z" duration="0.000157" asserts="1">
                    <output><![CDATA[File: 'fail29'
JSON: '[0e]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1023" name="fail.fail3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="764312990" result="Passed" start-time="2022-08-11T22:34:30.1369510Z" end-time="2022-08-11T22:34:30.1371360Z" duration="0.000185" asserts="1">
                    <output><![CDATA[File: 'fail3'
JSON: '{unquoted_key: "keys must be quoted"}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got 'u' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1024" name="fail.fail30" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail30" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1583564163" result="Passed" start-time="2022-08-11T22:34:30.1371448Z" end-time="2022-08-11T22:34:30.1372381Z" duration="0.000093" asserts="1">
                    <output><![CDATA[File: 'fail30'
JSON: '[0e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e+' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1025" name="fail.fail31" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail31" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1033574476" result="Passed" start-time="2022-08-11T22:34:30.1372571Z" end-time="2022-08-11T22:34:30.1374723Z" duration="0.000215" asserts="1">
                    <output><![CDATA[File: 'fail31'
JSON: '[0e+-1]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e+-1' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1026" name="fail.fail32" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail32" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="614634204" result="Passed" start-time="2022-08-11T22:34:30.1374965Z" end-time="2022-08-11T22:34:30.1377295Z" duration="0.000233" asserts="1">
                    <output><![CDATA[File: 'fail32'
JSON: '{"Comma instead if closing brace": true,'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 40)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1027" name="fail.fail33" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail33" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="200294563" result="Passed" start-time="2022-08-11T22:34:30.1377534Z" end-time="2022-08-11T22:34:30.1379019Z" duration="0.000148" asserts="1">
                    <output><![CDATA[File: 'fail33'
JSON: '["mismatch"}'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1028" name="fail.fail4" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail4" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="67583899" result="Passed" start-time="2022-08-11T22:34:30.1379384Z" end-time="2022-08-11T22:34:30.1382240Z" duration="0.000286" asserts="1">
                    <output><![CDATA[File: 'fail4'
JSON: '["extra comma",]'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an array (at position 15)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1029" name="fail.fail5" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail5" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="662410946" result="Passed" start-time="2022-08-11T22:34:30.1382345Z" end-time="2022-08-11T22:34:30.1383785Z" duration="0.000134" asserts="1">
                    <output><![CDATA[File: 'fail5'
JSON: '["double extra comma",,]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 22)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1030" name="fail.fail6" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail6" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1931295292" result="Passed" start-time="2022-08-11T22:34:30.1384033Z" end-time="2022-08-11T22:34:30.1385147Z" duration="0.000111" asserts="1">
                    <output><![CDATA[File: 'fail6'
JSON: '[   , "<-- missing value"]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1031" name="fail.fail7" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail7" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1011331595" result="Passed" start-time="2022-08-11T22:34:30.1385419Z" end-time="2022-08-11T22:34:30.1386916Z" duration="0.000150" asserts="1">
                    <output><![CDATA[File: 'fail7'
JSON: '["Comma after the close"],'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 25)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1032" name="fail.fail8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="923264918" result="Passed" start-time="2022-08-11T22:34:30.1387103Z" end-time="2022-08-11T22:34:30.1388422Z" duration="0.000132" asserts="1">
                    <output><![CDATA[File: 'fail8'
JSON: '["Extra close"]]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 15)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1033" name="fail.fail9" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail9" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1462979489" result="Passed" start-time="2022-08-11T22:34:30.1389108Z" end-time="2022-08-11T22:34:30.1390605Z" duration="0.000149" asserts="1">
                    <output><![CDATA[File: 'fail9'
JSON: '{"Extra comma": true,}'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an object (at position 21)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1034" name="pass.pass1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="457398326" result="Passed" start-time="2022-08-11T22:34:30.1390768Z" end-time="2022-08-11T22:34:30.1411187Z" duration="0.002053" asserts="1">
                    <output><![CDATA[File: 'pass1'
JSON: '[
    "JSON Test Pattern pass1",
    {"object with 1 member":["array with 1 element"]},
    {},
    [],
    -42,
    true,
    false,
    null,
    {
        "integer": 1234567890,
        "real": -9876.543210,
        "e": 0.123456789e-12,
        "E": 1.234567890E+34,
        "":  23456789012E66,
        "zero": 0,
        "one": 1,
        "space": " ",
        "quote": "\"",
        "backslash": "\\",
        "controls": "\b\f\n\r\t",
        "slash": "/ & \/",
        "alpha": "abcdefghijklmnopqrstuvwyz",
        "ALPHA": "ABCDEFGHIJKLMNOPQRSTUVWYZ",
        "digit": "0123456789",
        "0123456789": "digit",
        "special": "`1~!@#$%^&*()_+-={':[,]}|;.</>?",
        "hex": "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A",
        "true": true,
        "false": false,
        "null": null,
        "array":[  ],
        "object":{  },
        "address": "50 St. James Street",
        "url": "http://www.JSON.org/",
        "comment": "// /* <!-- --",
        "# -- --> */": " ",
        " s p a c e d " :[1,2 , 3

,

4 , 5        ,          6           ,7        ],"compact":[1,2,3,4,5,6,7],
        "jsontext": "{\"object with 1 member\":[\"array with 1 element\"]}",
        "quotes": "&#34; \u0022 %22 0x22 034 &#x22;",
        "\/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:',./<>?"
: "A key can be any string"
    },
    0.5 ,98.6
,
99.44
,

1066,
1e1,
0.1e1,
1e-1,
1e00,2e+00,2e-00
,"rosebud"]'
Expected: 'True'
Parsed: '["JSON Test Pattern pass1",{"object with 1 member":["array with 1 element"]},{},[],-42,true,false,null,{"integer":1234567890,"real":-9876.543210,"e":0.000000000000123456789,"E":1.23456789e+34,"":2.3456789012e+76,"zero":0,"one":1,"space":" ","quote":""","backslash":"\","controls":"\u0008\u000c

	","slash":"/ & /","alpha":"abcdefghijklmnopqrstuvwyz","ALPHA":"ABCDEFGHIJKLMNOPQRSTUVWYZ","digit":"0123456789","0123456789":"digit","special":"`1~!@#$%^&*()_+-={':[,]}|;.</>?","hex":"ģ䕧覫췯ꯍ","true":true,"false":false,"null":null,"array":[],"object":{},"address":"50 St. James Street","url":"http://www.JSON.org/","comment":"// /* <!-- --","# -- --> */":" "," s p a c e d ":[1,2,3,4,5,6,7],"compact":[1,2,3,4,5,6,7],"jsontext":"{"object with 1 member":["array with 1 element"]}","quotes":"&#34; " %22 0x22 034 &#x22;","/\"쫾몾ꮘﳞ볚\u0008\u000c

	`1~!@#$%^&*()_+-=[]{}|;:',./<>?":"A key can be any string"},0.5,98.6,99.44,1066,10,1,0.1,1,2,2,"rosebud"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1035" name="pass.pass2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1094291163" result="Passed" start-time="2022-08-11T22:34:30.1411462Z" end-time="2022-08-11T22:34:30.1412095Z" duration="0.000063" asserts="1">
                    <output><![CDATA[File: 'pass2'
JSON: '[[[[[[[[[[[[[[[[[[["Not too deep"]]]]]]]]]]]]]]]]]]]'
Expected: 'True'
Parsed: '[[[[[[[[[[[[[[[[[[["Not too deep"]]]]]]]]]]]]]]]]]]]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1036" name="pass.pass3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="616621146" result="Passed" start-time="2022-08-11T22:34:30.1412177Z" end-time="2022-08-11T22:34:30.1412950Z" duration="0.000077" asserts="1">
                    <output><![CDATA[File: 'pass3'
JSON: '{
    "JSON Test Pattern pass3": {
        "The outermost value": "must be an object or array.",
        "In this test": "It is an object."
    }
}
'
Expected: 'True'
Parsed: '{"JSON Test Pattern pass3":{"The outermost value":"must be an object or array.","In this test":"It is an object."}}'
Result: 'True'
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestFixture" id="0-1038" name="JSONTestSuite" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" testcasecount="318" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.1442219Z" end-time="2022-08-11T22:34:30.1855576Z" duration="0.041336" total="318" passed="267" failed="0" warnings="0" inconclusive="0" skipped="51" asserts="267">
                <reason>
                  <message><![CDATA[One or more child tests were ignored]]></message>
                </reason>
                <test-suite type="ParameterizedMethod" id="0-1357" name="Test" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" testcasecount="318" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T22:34:30.1443266Z" end-time="2022-08-11T22:34:30.1855413Z" duration="0.041215" total="318" passed="267" failed="0" warnings="0" inconclusive="0" skipped="51" asserts="267">
                  <reason>
                    <message><![CDATA[One or more child tests were ignored]]></message>
                  </reason>
                  <test-case id="0-1039" name="ambigous.i_number_double_huge_neg_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_double_huge_neg_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1796221294" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1443390Z" end-time="2022-08-11T22:34:30.1452830Z" duration="0.000944" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_double_huge_neg_exp'
JSON: '[123.456e-789]'
Expected: ''
Parsed: '[0.0000000000000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1040" name="ambigous.i_number_huge_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_huge_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="877024339" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1452935Z" end-time="2022-08-11T22:34:30.1457032Z" duration="0.000410" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_huge_exp'
JSON: '[0.4e00669999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999969999999006]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1041" name="ambigous.i_number_neg_int_huge_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_neg_int_huge_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="654308333" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1457125Z" end-time="2022-08-11T22:34:30.1459425Z" duration="0.000230" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_neg_int_huge_exp'
JSON: '[-1e+9999]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1042" name="ambigous.i_number_pos_double_huge_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_pos_double_huge_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2079764384" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1459513Z" end-time="2022-08-11T22:34:30.1461714Z" duration="0.000220" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_pos_double_huge_exp'
JSON: '[1.5e+9999]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1043" name="ambigous.i_number_real_neg_overflow" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_neg_overflow" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="623646740" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1461798Z" end-time="2022-08-11T22:34:30.1463981Z" duration="0.000218" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_real_neg_overflow'
JSON: '[-123123e100000]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1044" name="ambigous.i_number_real_pos_overflow" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_pos_overflow" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="860277450" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1464068Z" end-time="2022-08-11T22:34:30.1466263Z" duration="0.000220" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_real_pos_overflow'
JSON: '[123123e100000]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1045" name="ambigous.i_number_real_underflow" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_underflow" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="87702922" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1466347Z" end-time="2022-08-11T22:34:30.1468334Z" duration="0.000198" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_real_underflow'
JSON: '[123e-10000000]'
Expected: ''
Parsed: '[0.0000000000000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1046" name="ambigous.i_number_too_big_neg_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_too_big_neg_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="342425865" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1468418Z" end-time="2022-08-11T22:34:30.1470610Z" duration="0.000219" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_too_big_neg_int'
JSON: '[-123123123123123123123123123123]'
Expected: ''
Exception: 'Parsing falied: Failed to parse an integer: '-123123123123123123123123123123' (at position 32)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1047" name="ambigous.i_number_too_big_pos_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_too_big_pos_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1170762098" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1470697Z" end-time="2022-08-11T22:34:30.1472813Z" duration="0.000212" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_too_big_pos_int'
JSON: '[100000000000000000000]'
Expected: ''
Parsed: '[100000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1048" name="ambigous.i_number_very_big_negative_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_very_big_negative_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="960225200" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1473052Z" end-time="2022-08-11T22:34:30.1475494Z" duration="0.000244" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_very_big_negative_int'
JSON: '[-237462374673276894279832749832423479823246327846]'
Expected: ''
Exception: 'Parsing falied: Failed to parse an integer: '-237462374673276894279832749832423479823246327846' (at position 50)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1049" name="ambigous.i_object_key_lone_2nd_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_object_key_lone_2nd_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="526834215" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1475579Z" end-time="2022-08-11T22:34:30.1477598Z" duration="0.000202" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_object_key_lone_2nd_surrogate'
JSON: '{"\uDFAA":0}'
Expected: ''
Parsed: '{"\udfaa":0}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1050" name="ambigous.i_string_1st_surrogate_but_2nd_missing" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_1st_surrogate_but_2nd_missing" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="785910407" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1477686Z" end-time="2022-08-11T22:34:30.1479663Z" duration="0.000198" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_1st_surrogate_but_2nd_missing'
JSON: '["\uDADA"]'
Expected: ''
Parsed: '["\udada"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1051" name="ambigous.i_string_1st_valid_surrogate_2nd_invalid" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_1st_valid_surrogate_2nd_invalid" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="384737720" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1479747Z" end-time="2022-08-11T22:34:30.1481697Z" duration="0.000195" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_1st_valid_surrogate_2nd_invalid'
JSON: '["\uD888\u1234"]'
Expected: ''
Parsed: '["\ud888ሴ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1052" name="ambigous.i_string_incomplete_surrogates_escape_valid" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogates_escape_valid" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="443902350" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1481782Z" end-time="2022-08-11T22:34:30.1483729Z" duration="0.000194" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_incomplete_surrogates_escape_valid'
JSON: '["\uD800\uD800\n"]'
Expected: ''
Parsed: '["\ud800\ud800
"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1053" name="ambigous.i_string_incomplete_surrogate_and_escape_valid" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogate_and_escape_valid" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1162021732" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1483811Z" end-time="2022-08-11T22:34:30.1485739Z" duration="0.000193" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_incomplete_surrogate_and_escape_valid'
JSON: '["\uD800\n"]'
Expected: ''
Parsed: '["\ud800
"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1054" name="ambigous.i_string_incomplete_surrogate_pair" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogate_pair" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1294400488" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1485824Z" end-time="2022-08-11T22:34:30.1487769Z" duration="0.000195" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_incomplete_surrogate_pair'
JSON: '["\uDd1ea"]'
Expected: ''
Parsed: '["\udd1ea"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1055" name="ambigous.i_string_invalid_lonely_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_lonely_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1875800261" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1487853Z" end-time="2022-08-11T22:34:30.1489788Z" duration="0.000194" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_invalid_lonely_surrogate'
JSON: '["\ud800"]'
Expected: ''
Parsed: '["\ud800"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1056" name="ambigous.i_string_invalid_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="68243159" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1489873Z" end-time="2022-08-11T22:34:30.1491805Z" duration="0.000193" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_invalid_surrogate'
JSON: '["\ud800abc"]'
Expected: ''
Parsed: '["\ud800abc"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1057" name="ambigous.i_string_invalid_utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2097862610" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1491890Z" end-time="2022-08-11T22:34:30.1493806Z" duration="0.000192" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_invalid_utf-8'
JSON: '["�"]'
Expected: ''
Parsed: '["�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1058" name="ambigous.i_string_inverted_surrogates_U+1D11E" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_inverted_surrogates_U+1D11E" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="6428510" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1493888Z" end-time="2022-08-11T22:34:30.1495892Z" duration="0.000200" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_inverted_surrogates_U+1D11E'
JSON: '["\uDd1e\uD834"]'
Expected: ''
Parsed: '["\udd1e\ud834"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1059" name="ambigous.i_string_iso_latin_1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_iso_latin_1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1099048097" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1495986Z" end-time="2022-08-11T22:34:30.1497933Z" duration="0.000194" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_iso_latin_1'
JSON: '["�"]'
Expected: ''
Parsed: '["�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1060" name="ambigous.i_string_lone_second_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_lone_second_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1363638220" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1498017Z" end-time="2022-08-11T22:34:30.1499952Z" duration="0.000194" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_lone_second_surrogate'
JSON: '["\uDFAA"]'
Expected: ''
Parsed: '["\udfaa"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1061" name="ambigous.i_string_lone_utf8_continuation_byte" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_lone_utf8_continuation_byte" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="369119198" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1500037Z" end-time="2022-08-11T22:34:30.1501951Z" duration="0.000192" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_lone_utf8_continuation_byte'
JSON: '["�"]'
Expected: ''
Parsed: '["�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1062" name="ambigous.i_string_not_in_unicode_range" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_not_in_unicode_range" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="399269502" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1502038Z" end-time="2022-08-11T22:34:30.1503946Z" duration="0.000191" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_not_in_unicode_range'
JSON: '["����"]'
Expected: ''
Parsed: '["����"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1063" name="ambigous.i_string_overlong_sequence_2_bytes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_2_bytes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="296147430" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1504031Z" end-time="2022-08-11T22:34:30.1505948Z" duration="0.000192" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_overlong_sequence_2_bytes'
JSON: '["��"]'
Expected: ''
Parsed: '["��"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1064" name="ambigous.i_string_overlong_sequence_6_bytes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_6_bytes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="32054950" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1506029Z" end-time="2022-08-11T22:34:30.1507970Z" duration="0.000194" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_overlong_sequence_6_bytes'
JSON: '["������"]'
Expected: ''
Parsed: '["������"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1065" name="ambigous.i_string_overlong_sequence_6_bytes_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_6_bytes_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1479760907" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1508055Z" end-time="2022-08-11T22:34:30.1509960Z" duration="0.000190" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_overlong_sequence_6_bytes_null'
JSON: '["������"]'
Expected: ''
Parsed: '["������"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1066" name="ambigous.i_string_truncated-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_truncated-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1463965393" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1510041Z" end-time="2022-08-11T22:34:30.1511946Z" duration="0.000190" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_truncated-utf-8'
JSON: '["��"]'
Expected: ''
Parsed: '["��"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1067" name="ambigous.i_string_UTF-16LE_with_BOM" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF-16LE_with_BOM" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1508143285" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1512027Z" end-time="2022-08-11T22:34:30.1513929Z" duration="0.000190" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_UTF-16LE_with_BOM'
JSON: '["é"]'
Expected: ''
Parsed: '["é"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1068" name="ambigous.i_string_UTF-8_invalid_sequence" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF-8_invalid_sequence" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1362316238" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1514011Z" end-time="2022-08-11T22:34:30.1515903Z" duration="0.000190" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_UTF-8_invalid_sequence'
JSON: '["日ш�"]'
Expected: ''
Parsed: '["日ш�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1069" name="ambigous.i_string_utf16BE_no_BOM" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_utf16BE_no_BOM" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="137737899" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1515988Z" end-time="2022-08-11T22:34:30.1520682Z" duration="0.000470" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_utf16BE_no_BOM'
JSON: '\u0000[\u0000"\u0000�\u0000"\u0000]'
Expected: ''
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\u0000' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1070" name="ambigous.i_string_utf16LE_no_BOM" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_utf16LE_no_BOM" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1793462759" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1520779Z" end-time="2022-08-11T22:34:30.1523160Z" duration="0.000238" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_utf16LE_no_BOM'
JSON: '[\u0000"\u0000�\u0000"\u0000]\u0000'
Expected: ''
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\u0000' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1071" name="ambigous.i_string_UTF8_surrogate_U+D800" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF8_surrogate_U+D800" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1789981397" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1523245Z" end-time="2022-08-11T22:34:30.1525313Z" duration="0.000207" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_UTF8_surrogate_U+D800'
JSON: '["���"]'
Expected: ''
Parsed: '["���"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1072" name="ambigous.i_structure_500_nested_arrays" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_structure_500_nested_arrays" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="775349534" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1525651Z" end-time="2022-08-11T22:34:30.1529717Z" duration="0.000407" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_structure_500_nested_arrays'

Expected: ''
Parsed
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1073" name="ambigous.i_structure_UTF-8_BOM_empty_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_structure_UTF-8_BOM_empty_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="194604698" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1529847Z" end-time="2022-08-11T22:34:30.1531839Z" duration="0.000200" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_structure_UTF-8_BOM_empty_object'
JSON: '{}'
Expected: ''
Parsed: '{}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1074" name="rejected.n_array_1_true_without_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_1_true_without_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="477340097" result="Passed" start-time="2022-08-11T22:34:30.1531927Z" end-time="2022-08-11T22:34:30.1532702Z" duration="0.000078" asserts="1">
                    <output><![CDATA[File: 'n_array_1_true_without_comma'
JSON: '[1 true]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1075" name="rejected.n_array_a_invalid_utf8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_a_invalid_utf8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="230343964" result="Passed" start-time="2022-08-11T22:34:30.1532781Z" end-time="2022-08-11T22:34:30.1533406Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_array_a_invalid_utf8'
JSON: '[a�]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'a' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1076" name="rejected.n_array_colon_instead_of_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_colon_instead_of_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2052503791" result="Passed" start-time="2022-08-11T22:34:30.1533475Z" end-time="2022-08-11T22:34:30.1534058Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_array_colon_instead_of_comma'
JSON: '["": 1]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1077" name="rejected.n_array_comma_after_close" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_comma_after_close" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="881390392" result="Passed" start-time="2022-08-11T22:34:30.1534136Z" end-time="2022-08-11T22:34:30.1534686Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_array_comma_after_close'
JSON: '[""],'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1078" name="rejected.n_array_comma_and_number" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_comma_and_number" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1241198630" result="Passed" start-time="2022-08-11T22:34:30.1534755Z" end-time="2022-08-11T22:34:30.1535338Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_array_comma_and_number'
JSON: '[,1]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1079" name="rejected.n_array_double_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_double_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2025573000" result="Passed" start-time="2022-08-11T22:34:30.1535407Z" end-time="2022-08-11T22:34:30.1535996Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_array_double_comma'
JSON: '[1,,2]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1080" name="rejected.n_array_double_extra_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_double_extra_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1955042326" result="Passed" start-time="2022-08-11T22:34:30.1536065Z" end-time="2022-08-11T22:34:30.1536666Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_array_double_extra_comma'
JSON: '["x",,]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1081" name="rejected.n_array_extra_close" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_extra_close" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="789094577" result="Passed" start-time="2022-08-11T22:34:30.1536738Z" end-time="2022-08-11T22:34:30.1537270Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_array_extra_close'
JSON: '["x"]]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1082" name="rejected.n_array_extra_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_extra_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2015026291" result="Passed" start-time="2022-08-11T22:34:30.1537342Z" end-time="2022-08-11T22:34:30.1537907Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_extra_comma'
JSON: '["",]'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an array (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1083" name="rejected.n_array_incomplete" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_incomplete" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1300819392" result="Passed" start-time="2022-08-11T22:34:30.1537976Z" end-time="2022-08-11T22:34:30.1538556Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_array_incomplete'
JSON: '["x"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1084" name="rejected.n_array_incomplete_invalid_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_incomplete_invalid_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="698199093" result="Passed" start-time="2022-08-11T22:34:30.1538625Z" end-time="2022-08-11T22:34:30.1539193Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_incomplete_invalid_value'
JSON: '[x'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'x' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1085" name="rejected.n_array_inner_array_no_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_inner_array_no_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="510407448" result="Passed" start-time="2022-08-11T22:34:30.1539262Z" end-time="2022-08-11T22:34:30.1539830Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_inner_array_no_comma'
JSON: '[3[4]]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1086" name="rejected.n_array_invalid_utf8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_invalid_utf8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="828724826" result="Passed" start-time="2022-08-11T22:34:30.1539902Z" end-time="2022-08-11T22:34:30.1540467Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_invalid_utf8'
JSON: '[�]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '�' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1087" name="rejected.n_array_items_separated_by_semicolon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_items_separated_by_semicolon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="197254902" result="Passed" start-time="2022-08-11T22:34:30.1540536Z" end-time="2022-08-11T22:34:30.1541097Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_items_separated_by_semicolon'
JSON: '[1:2]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1088" name="rejected.n_array_just_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_just_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1334513366" result="Passed" start-time="2022-08-11T22:34:30.1541170Z" end-time="2022-08-11T22:34:30.1541734Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_just_comma'
JSON: '[,]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1089" name="rejected.n_array_just_minus" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_just_minus" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="916815198" result="Passed" start-time="2022-08-11T22:34:30.1541804Z" end-time="2022-08-11T22:34:30.1542411Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_array_just_minus'
JSON: '[-]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1090" name="rejected.n_array_missing_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_missing_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="150371011" result="Passed" start-time="2022-08-11T22:34:30.1542483Z" end-time="2022-08-11T22:34:30.1543048Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_missing_value'
JSON: '[   , ""]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1091" name="rejected.n_array_newlines_unclosed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_newlines_unclosed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="396531828" result="Passed" start-time="2022-08-11T22:34:30.1543120Z" end-time="2022-08-11T22:34:30.1543706Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_array_newlines_unclosed'
JSON: '["a",
4
,1,'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1092" name="rejected.n_array_number_and_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_number_and_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="130112422" result="Passed" start-time="2022-08-11T22:34:30.1543784Z" end-time="2022-08-11T22:34:30.1544340Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_number_and_comma'
JSON: '[1,]'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1093" name="rejected.n_array_number_and_several_commas" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_number_and_several_commas" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2112827354" result="Passed" start-time="2022-08-11T22:34:30.1544412Z" end-time="2022-08-11T22:34:30.1544986Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_number_and_several_commas'
JSON: '[1,,]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1094" name="rejected.n_array_spaces_vertical_tab_formfeed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_spaces_vertical_tab_formfeed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="432583074" result="Passed" start-time="2022-08-11T22:34:30.1545055Z" end-time="2022-08-11T22:34:30.1545650Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_array_spaces_vertical_tab_formfeed'
JSON: '["\u000ba"\f]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0xB) (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1095" name="rejected.n_array_star_inside" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_star_inside" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="507905141" result="Passed" start-time="2022-08-11T22:34:30.1545722Z" end-time="2022-08-11T22:34:30.1546299Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_array_star_inside'
JSON: '[*]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '*' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1096" name="rejected.n_array_unclosed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="255038831" result="Passed" start-time="2022-08-11T22:34:30.1546368Z" end-time="2022-08-11T22:34:30.1546942Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_unclosed'
JSON: '[""'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1097" name="rejected.n_array_unclosed_trailing_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_trailing_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1783616954" result="Passed" start-time="2022-08-11T22:34:30.1547011Z" end-time="2022-08-11T22:34:30.1547582Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_unclosed_trailing_comma'
JSON: '[1,'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1098" name="rejected.n_array_unclosed_with_new_lines" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_with_new_lines" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="591591790" result="Passed" start-time="2022-08-11T22:34:30.1547651Z" end-time="2022-08-11T22:34:30.1548237Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_array_unclosed_with_new_lines'
JSON: '[1,
1
,1'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1099" name="rejected.n_array_unclosed_with_object_inside" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_with_object_inside" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1528000190" result="Passed" start-time="2022-08-11T22:34:30.1548309Z" end-time="2022-08-11T22:34:30.1548880Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_unclosed_with_object_inside'
JSON: '[{}'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1100" name="rejected.n_incomplete_false" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_false" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="771221176" result="Passed" start-time="2022-08-11T22:34:30.1548952Z" end-time="2022-08-11T22:34:30.1549553Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_incomplete_false'
JSON: '[fals]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got ']' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1101" name="rejected.n_incomplete_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="981766227" result="Passed" start-time="2022-08-11T22:34:30.1549625Z" end-time="2022-08-11T22:34:30.1550220Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_incomplete_null'
JSON: '[nul]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'l' but got ']' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1102" name="rejected.n_incomplete_true" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_true" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1955929507" result="Passed" start-time="2022-08-11T22:34:30.1550289Z" end-time="2022-08-11T22:34:30.1550872Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_incomplete_true'
JSON: '[tru]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got ']' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1103" name="rejected.n_multidigit_number_then_00" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_multidigit_number_then_00" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="822487301" result="Passed" start-time="2022-08-11T22:34:30.1550944Z" end-time="2022-08-11T22:34:30.1551473Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_multidigit_number_then_00'
JSON: '123\u0000'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1104" name="rejected.n_number_++" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_++" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="880855103" result="Passed" start-time="2022-08-11T22:34:30.1551542Z" end-time="2022-08-11T22:34:30.1552197Z" duration="0.000065" asserts="1">
                    <output><![CDATA[File: 'n_number_++'
JSON: '[++1234]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '+' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1105" name="rejected.n_number_+1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_+1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1143412657" result="Passed" start-time="2022-08-11T22:34:30.1552264Z" end-time="2022-08-11T22:34:30.1552819Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_number_+1'
JSON: '[+1]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '+' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1106" name="rejected.n_number_+Inf" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_+Inf" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1756871833" result="Passed" start-time="2022-08-11T22:34:30.1552885Z" end-time="2022-08-11T22:34:30.1553429Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_number_+Inf'
JSON: '[+Inf]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '+' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1107" name="rejected.n_number_-01" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-01" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="249297652" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1553498Z" end-time="2022-08-11T22:34:30.1555629Z" duration="0.000213" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_-01'
JSON: '[-01]'
Expected: 'False'
Parsed: '[-1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1108" name="rejected.n_number_-1_0_" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-1_0_" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="684681635" result="Passed" start-time="2022-08-11T22:34:30.1555711Z" end-time="2022-08-11T22:34:30.1556613Z" duration="0.000091" asserts="1">
                    <output><![CDATA[File: 'n_number_-1.0.'
JSON: '[-1.0.]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '-1.0.' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1109" name="rejected.n_number_-2_" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-2_" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1064056524" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1556689Z" end-time="2022-08-11T22:34:30.1558672Z" duration="0.000198" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_-2.'
JSON: '[-2.]'
Expected: 'False'
Parsed: '[-2]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1110" name="rejected.n_number_-NaN" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-NaN" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1970780117" result="Passed" start-time="2022-08-11T22:34:30.1558753Z" end-time="2022-08-11T22:34:30.1559408Z" duration="0.000066" asserts="1">
                    <output><![CDATA[File: 'n_number_-NaN'
JSON: '[-NaN]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1111" name="rejected.n_number__-1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number__-1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1334336414" result="Passed" start-time="2022-08-11T22:34:30.1559484Z" end-time="2022-08-11T22:34:30.1560067Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_.-1'
JSON: '[.-1]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '.' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1112" name="rejected.n_number__2e-3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number__2e-3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="856663980" result="Passed" start-time="2022-08-11T22:34:30.1560136Z" end-time="2022-08-11T22:34:30.1560704Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_number_.2e-3'
JSON: '[.2e-3]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '.' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1113" name="rejected.n_number_0_1_2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_1_2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="128339157" result="Passed" start-time="2022-08-11T22:34:30.1560773Z" end-time="2022-08-11T22:34:30.1561365Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_0.1.2'
JSON: '[0.1.2]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0.1.2' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1114" name="rejected.n_number_0_3e+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_3e+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1291489418" result="Passed" start-time="2022-08-11T22:34:30.1561434Z" end-time="2022-08-11T22:34:30.1562020Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_0.3e+'
JSON: '[0.3e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0.3e+' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1115" name="rejected.n_number_0_3e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_3e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="574543643" result="Passed" start-time="2022-08-11T22:34:30.1562089Z" end-time="2022-08-11T22:34:30.1562675Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_0.3e'
JSON: '[0.3e]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0.3e' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1116" name="rejected.n_number_0_e1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_e1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="501576554" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1562744Z" end-time="2022-08-11T22:34:30.1564734Z" duration="0.000199" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_0.e1'
JSON: '[0.e1]'
Expected: 'False'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1117" name="rejected.n_number_0e+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0e+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1245933757" result="Passed" start-time="2022-08-11T22:34:30.1564815Z" end-time="2022-08-11T22:34:30.1565458Z" duration="0.000064" asserts="1">
                    <output><![CDATA[File: 'n_number_0e+'
JSON: '[0e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e+' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1118" name="rejected.n_number_0e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1745431984" result="Passed" start-time="2022-08-11T22:34:30.1565530Z" end-time="2022-08-11T22:34:30.1566244Z" duration="0.000072" asserts="1">
                    <output><![CDATA[File: 'n_number_0e'
JSON: '[0e]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1119" name="rejected.n_number_0_capital_E+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_capital_E+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1669131149" result="Passed" start-time="2022-08-11T22:34:30.1566328Z" end-time="2022-08-11T22:34:30.1567026Z" duration="0.000070" asserts="1">
                    <output><![CDATA[File: 'n_number_0_capital_E+'
JSON: '[0E+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0E+' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1120" name="rejected.n_number_0_capital_E" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_capital_E" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="651036081" result="Passed" start-time="2022-08-11T22:34:30.1567098Z" end-time="2022-08-11T22:34:30.1567678Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_0_capital_E'
JSON: '[0E]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0E' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1121" name="rejected.n_number_1_0e+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1266710491" result="Passed" start-time="2022-08-11T22:34:30.1567750Z" end-time="2022-08-11T22:34:30.1568339Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_1.0e+'
JSON: '[1.0e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1.0e+' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1122" name="rejected.n_number_1_0e-" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e-" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="173629919" result="Passed" start-time="2022-08-11T22:34:30.1568411Z" end-time="2022-08-11T22:34:30.1568991Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_1.0e-'
JSON: '[1.0e-]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1.0e-' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1123" name="rejected.n_number_1_0e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="445501040" result="Passed" start-time="2022-08-11T22:34:30.1569075Z" end-time="2022-08-11T22:34:30.1569655Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_1.0e'
JSON: '[1.0e]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1.0e' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1124" name="rejected.n_number_1eE2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1eE2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2134850535" result="Passed" start-time="2022-08-11T22:34:30.1569724Z" end-time="2022-08-11T22:34:30.1570307Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_1eE2'
JSON: '[1eE2]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1eE2' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1125" name="rejected.n_number_1_000" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_000" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1396930931" result="Passed" start-time="2022-08-11T22:34:30.1570376Z" end-time="2022-08-11T22:34:30.1570926Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_number_1_000'
JSON: '[1 000.0]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1126" name="rejected.n_number_2_e+3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e+3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1659868975" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1570998Z" end-time="2022-08-11T22:34:30.1573111Z" duration="0.000211" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_2.e+3'
JSON: '[2.e+3]'
Expected: 'False'
Parsed: '[2000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1127" name="rejected.n_number_2_e-3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e-3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="810005827" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1573377Z" end-time="2022-08-11T22:34:30.1575469Z" duration="0.000210" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_2.e-3'
JSON: '[2.e-3]'
Expected: 'False'
Parsed: '[0.002]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1128" name="rejected.n_number_2_e3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1909505271" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1575605Z" end-time="2022-08-11T22:34:30.1578119Z" duration="0.000252" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_2.e3'
JSON: '[2.e3]'
Expected: 'False'
Parsed: '[2000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1129" name="rejected.n_number_9_e+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_9_e+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2116918603" result="Passed" start-time="2022-08-11T22:34:30.1578204Z" end-time="2022-08-11T22:34:30.1578889Z" duration="0.000069" asserts="1">
                    <output><![CDATA[File: 'n_number_9.e+'
JSON: '[9.e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '9.e+' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1130" name="rejected.n_number_expression" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_expression" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2122788780" result="Passed" start-time="2022-08-11T22:34:30.1578962Z" end-time="2022-08-11T22:34:30.1579583Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_number_expression'
JSON: '[1+2]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '1+2' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1131" name="rejected.n_number_hex_1_digit" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_hex_1_digit" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="268886837" result="Passed" start-time="2022-08-11T22:34:30.1579656Z" end-time="2022-08-11T22:34:30.1580229Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_hex_1_digit'
JSON: '[0x1]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1132" name="rejected.n_number_hex_2_digits" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_hex_2_digits" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="289798602" result="Passed" start-time="2022-08-11T22:34:30.1580302Z" end-time="2022-08-11T22:34:30.1580863Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_hex_2_digits'
JSON: '[0x42]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1133" name="rejected.n_number_Inf" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_Inf" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1860682087" result="Passed" start-time="2022-08-11T22:34:30.1580930Z" end-time="2022-08-11T22:34:30.1581488Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_Inf'
JSON: '[Inf]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'I' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1134" name="rejected.n_number_infinity" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_infinity" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1254351824" result="Passed" start-time="2022-08-11T22:34:30.1581558Z" end-time="2022-08-11T22:34:30.1582116Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_infinity'
JSON: '[Infinity]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'I' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1135" name="rejected.n_number_invalid+-" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid+-" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="973276099" result="Passed" start-time="2022-08-11T22:34:30.1582183Z" end-time="2022-08-11T22:34:30.1582774Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid+-'
JSON: '[0e+-1]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e+-1' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1136" name="rejected.n_number_invalid-negative-real" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-negative-real" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="980648717" result="Passed" start-time="2022-08-11T22:34:30.1582853Z" end-time="2022-08-11T22:34:30.1583414Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid-negative-real'
JSON: '[-123.123foo]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1137" name="rejected.n_number_invalid-utf-8-in-bigger-int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-bigger-int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1192538990" result="Passed" start-time="2022-08-11T22:34:30.1583484Z" end-time="2022-08-11T22:34:30.1584033Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid-utf-8-in-bigger-int'
JSON: '[123�]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1138" name="rejected.n_number_invalid-utf-8-in-exponent" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-exponent" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="419964289" result="Passed" start-time="2022-08-11T22:34:30.1584102Z" end-time="2022-08-11T22:34:30.1584652Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid-utf-8-in-exponent'
JSON: '[1e1�]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1139" name="rejected.n_number_invalid-utf-8-in-int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1702270083" result="Passed" start-time="2022-08-11T22:34:30.1584721Z" end-time="2022-08-11T22:34:30.1585262Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid-utf-8-in-int'
JSON: '[0�]
'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1140" name="rejected.n_number_minus_infinity" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_infinity" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="901019262" result="Passed" start-time="2022-08-11T22:34:30.1585334Z" end-time="2022-08-11T22:34:30.1585902Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_number_minus_infinity'
JSON: '[-Infinity]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1141" name="rejected.n_number_minus_sign_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_sign_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="579427174" result="Passed" start-time="2022-08-11T22:34:30.1585971Z" end-time="2022-08-11T22:34:30.1586774Z" duration="0.000080" asserts="1">
                    <output><![CDATA[File: 'n_number_minus_sign_with_trailing_garbage'
JSON: '[-foo]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1142" name="rejected.n_number_minus_space_1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_space_1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1660056914" result="Passed" start-time="2022-08-11T22:34:30.1586840Z" end-time="2022-08-11T22:34:30.1587417Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_number_minus_space_1'
JSON: '[- 1]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1143" name="rejected.n_number_NaN" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_NaN" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="270456842" result="Passed" start-time="2022-08-11T22:34:30.1587486Z" end-time="2022-08-11T22:34:30.1588033Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_number_NaN'
JSON: '[NaN]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'N' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1144" name="rejected.n_number_neg_int_starting_with_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_int_starting_with_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1093518728" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1588102Z" end-time="2022-08-11T22:34:30.1590125Z" duration="0.000202" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_neg_int_starting_with_zero'
JSON: '[-012]'
Expected: 'False'
Parsed: '[-12]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1145" name="rejected.n_number_neg_real_without_int_part" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_real_without_int_part" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="963518244" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1590203Z" end-time="2022-08-11T22:34:30.1592159Z" duration="0.000195" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_neg_real_without_int_part'
JSON: '[-.123]'
Expected: 'False'
Parsed: '[-0.123]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1146" name="rejected.n_number_neg_with_garbage_at_end" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_with_garbage_at_end" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1687351495" result="Passed" start-time="2022-08-11T22:34:30.1592241Z" end-time="2022-08-11T22:34:30.1592869Z" duration="0.000063" asserts="1">
                    <output><![CDATA[File: 'n_number_neg_with_garbage_at_end'
JSON: '[-1x]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1147" name="rejected.n_number_real_garbage_after_e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_garbage_after_e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1773265" result="Passed" start-time="2022-08-11T22:34:30.1592941Z" end-time="2022-08-11T22:34:30.1593557Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_number_real_garbage_after_e'
JSON: '[1ea]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1e' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1148" name="rejected.n_number_real_without_fractional_part" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_without_fractional_part" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="821337936" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1593630Z" end-time="2022-08-11T22:34:30.1595957Z" duration="0.000233" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_real_without_fractional_part'
JSON: '[1.]'
Expected: 'False'
Parsed: '[1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1149" name="rejected.n_number_real_with_invalid_utf8_after_e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_with_invalid_utf8_after_e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2005523078" result="Passed" start-time="2022-08-11T22:34:30.1596081Z" end-time="2022-08-11T22:34:30.1597330Z" duration="0.000125" asserts="1">
                    <output><![CDATA[File: 'n_number_real_with_invalid_utf8_after_e'
JSON: '[1e�]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1e' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1150" name="rejected.n_number_starting_with_dot" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_starting_with_dot" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="6328587" result="Passed" start-time="2022-08-11T22:34:30.1597403Z" end-time="2022-08-11T22:34:30.1597973Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_number_starting_with_dot'
JSON: '[.123]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '.' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1151" name="rejected.n_number_U+FF11_fullwidth_digit_one" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_U+FF11_fullwidth_digit_one" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1156588721" result="Passed" start-time="2022-08-11T22:34:30.1598043Z" end-time="2022-08-11T22:34:30.1598610Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_number_U+FF11_fullwidth_digit_one'
JSON: '[１]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '１' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1152" name="rejected.n_number_with_alpha" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_alpha" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="38184970" result="Passed" start-time="2022-08-11T22:34:30.1598680Z" end-time="2022-08-11T22:34:30.1599241Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_with_alpha'
JSON: '[1.2a-3]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1153" name="rejected.n_number_with_alpha_char" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_alpha_char" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1069944288" result="Passed" start-time="2022-08-11T22:34:30.1599311Z" end-time="2022-08-11T22:34:30.1599875Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_with_alpha_char'
JSON: '[1.8011670033376514H-308]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 19)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1154" name="rejected.n_number_with_leading_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_leading_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="876964109" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1599945Z" end-time="2022-08-11T22:34:30.1601928Z" duration="0.000198" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_with_leading_zero'
JSON: '[012]'
Expected: 'False'
Parsed: '[12]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1155" name="rejected.n_object_bad_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_bad_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1651994332" result="Passed" start-time="2022-08-11T22:34:30.1602009Z" end-time="2022-08-11T22:34:30.1602671Z" duration="0.000066" asserts="1">
                    <output><![CDATA[File: 'n_object_bad_value'
JSON: '["x", truth]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got 't' (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1156" name="rejected.n_object_bracket_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_bracket_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="808136308" result="Passed" start-time="2022-08-11T22:34:30.1602743Z" end-time="2022-08-11T22:34:30.1603332Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_object_bracket_key'
JSON: '{[: "x"}
'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '[' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1157" name="rejected.n_object_comma_instead_of_colon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_comma_instead_of_colon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1510428467" result="Passed" start-time="2022-08-11T22:34:30.1603597Z" end-time="2022-08-11T22:34:30.1604228Z" duration="0.000063" asserts="1">
                    <output><![CDATA[File: 'n_object_comma_instead_of_colon'
JSON: '{"x", null}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got ',' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1158" name="rejected.n_object_double_colon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_double_colon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="835120413" result="Passed" start-time="2022-08-11T22:34:30.1604301Z" end-time="2022-08-11T22:34:30.1604874Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_double_colon'
JSON: '{"x"::"b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ':' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1159" name="rejected.n_object_emoji" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_emoji" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1631407819" result="Passed" start-time="2022-08-11T22:34:30.1604944Z" end-time="2022-08-11T22:34:30.1605590Z" duration="0.000065" asserts="1">
                    <output><![CDATA[File: 'n_object_emoji'
JSON: '{🇨🇭}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '\ud83c' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1160" name="rejected.n_object_garbage_at_end" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_garbage_at_end" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1631027329" result="Passed" start-time="2022-08-11T22:34:30.1605701Z" end-time="2022-08-11T22:34:30.1606429Z" duration="0.000073" asserts="1">
                    <output><![CDATA[File: 'n_object_garbage_at_end'
JSON: '{"a":"a" 123}'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in object (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1161" name="rejected.n_object_key_with_single_quotes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_key_with_single_quotes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="946866006" result="Passed" start-time="2022-08-11T22:34:30.1606501Z" end-time="2022-08-11T22:34:30.1607346Z" duration="0.000085" asserts="1">
                    <output><![CDATA[File: 'n_object_key_with_single_quotes'
JSON: '{key: 'value'}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got 'k' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1162" name="rejected.n_object_lone_continuation_byte_in_key_and_trailing_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_lone_continuation_byte_in_key_and_trailing_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="487276028" result="Passed" start-time="2022-08-11T22:34:30.1607422Z" end-time="2022-08-11T22:34:30.1608128Z" duration="0.000071" asserts="1">
                    <output><![CDATA[File: 'n_object_lone_continuation_byte_in_key_and_trailing_comma'
JSON: '{"�":"0",}'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an object (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1163" name="rejected.n_object_missing_colon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_colon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="715246679" result="Passed" start-time="2022-08-11T22:34:30.1608207Z" end-time="2022-08-11T22:34:30.1609185Z" duration="0.000098" asserts="1">
                    <output><![CDATA[File: 'n_object_missing_colon'
JSON: '{"a" b}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got 'b' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1164" name="rejected.n_object_missing_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1088751391" result="Passed" start-time="2022-08-11T22:34:30.1609254Z" end-time="2022-08-11T22:34:30.1609807Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_object_missing_key'
JSON: '{:"b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ':' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1165" name="rejected.n_object_missing_semicolon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_semicolon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1701893280" result="Passed" start-time="2022-08-11T22:34:30.1609873Z" end-time="2022-08-11T22:34:30.1610432Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_object_missing_semicolon'
JSON: '{"a" "b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got '"' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1166" name="rejected.n_object_missing_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1044537812" result="Passed" start-time="2022-08-11T22:34:30.1610501Z" end-time="2022-08-11T22:34:30.1611072Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_object_missing_value'
JSON: '{"a":'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1167" name="rejected.n_object_no-colon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_no-colon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1143465540" result="Passed" start-time="2022-08-11T22:34:30.1611141Z" end-time="2022-08-11T22:34:30.1611706Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_object_no-colon'
JSON: '{"a"'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got end of stream (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1168" name="rejected.n_object_non_string_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_non_string_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1021470980" result="Passed" start-time="2022-08-11T22:34:30.1611775Z" end-time="2022-08-11T22:34:30.1612318Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_object_non_string_key'
JSON: '{1:1}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '1' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1169" name="rejected.n_object_non_string_key_but_huge_number_instead" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_non_string_key_but_huge_number_instead" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="318213319" result="Passed" start-time="2022-08-11T22:34:30.1612388Z" end-time="2022-08-11T22:34:30.1612940Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_object_non_string_key_but_huge_number_instead'
JSON: '{9999E9999:1}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '9' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1170" name="rejected.n_object_repeated_null_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_repeated_null_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1741378573" result="Passed" start-time="2022-08-11T22:34:30.1613007Z" end-time="2022-08-11T22:34:30.1613553Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_object_repeated_null_null'
JSON: '{null:null,null:null}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got 'n' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1171" name="rejected.n_object_several_trailing_commas" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_several_trailing_commas" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1456521211" result="Passed" start-time="2022-08-11T22:34:30.1613622Z" end-time="2022-08-11T22:34:30.1614202Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_several_trailing_commas'
JSON: '{"id":0,,,,,}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ',' (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1172" name="rejected.n_object_single_quote" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_single_quote" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="825969468" result="Passed" start-time="2022-08-11T22:34:30.1614268Z" end-time="2022-08-11T22:34:30.1614824Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_object_single_quote'
JSON: '{'a':0}'
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1173" name="rejected.n_object_trailing_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="43161901" result="Passed" start-time="2022-08-11T22:34:30.1614893Z" end-time="2022-08-11T22:34:30.1615449Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comma'
JSON: '{"id":0,}'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an object (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1174" name="rejected.n_object_trailing_comment" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="768111887" result="Passed" start-time="2022-08-11T22:34:30.1615515Z" end-time="2022-08-11T22:34:30.1616043Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comment'
JSON: '{"a":"b"}/**/'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1175" name="rejected.n_object_trailing_comment_open" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_open" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="71608907" result="Passed" start-time="2022-08-11T22:34:30.1616222Z" end-time="2022-08-11T22:34:30.1617163Z" duration="0.000094" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comment_open'
JSON: '{"a":"b"}/**//'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1176" name="rejected.n_object_trailing_comment_slash_open" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_slash_open" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1754137224" result="Passed" start-time="2022-08-11T22:34:30.1617230Z" end-time="2022-08-11T22:34:30.1617752Z" duration="0.000052" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comment_slash_open'
JSON: '{"a":"b"}//'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1177" name="rejected.n_object_trailing_comment_slash_open_incomplete" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_slash_open_incomplete" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2050656724" result="Passed" start-time="2022-08-11T22:34:30.1617818Z" end-time="2022-08-11T22:34:30.1618344Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comment_slash_open_incomplete'
JSON: '{"a":"b"}/'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1178" name="rejected.n_object_two_commas_in_a_row" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_two_commas_in_a_row" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1499465959" result="Passed" start-time="2022-08-11T22:34:30.1618410Z" end-time="2022-08-11T22:34:30.1618968Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_object_two_commas_in_a_row'
JSON: '{"a":"b",,"c":"d"}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ',' (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1179" name="rejected.n_object_unquoted_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_unquoted_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1171332291" result="Passed" start-time="2022-08-11T22:34:30.1619038Z" end-time="2022-08-11T22:34:30.1619587Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_object_unquoted_key'
JSON: '{a: "b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got 'a' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1180" name="rejected.n_object_unterminated-value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_unterminated-value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1857063083" result="Passed" start-time="2022-08-11T22:34:30.1619657Z" end-time="2022-08-11T22:34:30.1620245Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_object_unterminated-value'
JSON: '{"a":"a'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 7)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1181" name="rejected.n_object_with_single_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_with_single_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1658095710" result="Passed" start-time="2022-08-11T22:34:30.1620315Z" end-time="2022-08-11T22:34:30.1620891Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_with_single_string'
JSON: '{ "foo" : "bar", "a" }'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got '}' (at position 21)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1182" name="rejected.n_object_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2136151538" result="Passed" start-time="2022-08-11T22:34:30.1620961Z" end-time="2022-08-11T22:34:30.1621489Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_object_with_trailing_garbage'
JSON: '{"a":"b"}#'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1183" name="rejected.n_single_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_single_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2051465840" result="Passed" start-time="2022-08-11T22:34:30.1621555Z" end-time="2022-08-11T22:34:30.1622087Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_single_space'
JSON: ' '
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1184" name="rejected.n_string_1_surrogate_then_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2110590016" result="Passed" start-time="2022-08-11T22:34:30.1622159Z" end-time="2022-08-11T22:34:30.1622736Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_string_1_surrogate_then_escape'
JSON: '["\uD800\"]'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1185" name="rejected.n_string_1_surrogate_then_escape_u" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="966200059" result="Passed" start-time="2022-08-11T22:34:30.1622805Z" end-time="2022-08-11T22:34:30.1634515Z" duration="0.001171" asserts="1">
                    <output><![CDATA[File: 'n_string_1_surrogate_then_escape_u'
JSON: '["\uD800\u"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD800\u': Invalid pattern '\uD800\u' at offset 8. Insufficient hexadecimal digits. (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1186" name="rejected.n_string_1_surrogate_then_escape_u1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="230701867" result="Passed" start-time="2022-08-11T22:34:30.1634630Z" end-time="2022-08-11T22:34:30.1635647Z" duration="0.000102" asserts="1">
                    <output><![CDATA[File: 'n_string_1_surrogate_then_escape_u1'
JSON: '["\uD800\u1"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD800\u1': Invalid pattern '\uD800\u1' at offset 8. Insufficient hexadecimal digits. (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1187" name="rejected.n_string_1_surrogate_then_escape_u1x" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u1x" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1367337961" result="Passed" start-time="2022-08-11T22:34:30.1635725Z" end-time="2022-08-11T22:34:30.1636842Z" duration="0.000112" asserts="1">
                    <output><![CDATA[File: 'n_string_1_surrogate_then_escape_u1x'
JSON: '["\uD800\u1x"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD800\u1x': Invalid pattern '\uD800\u1x' at offset 8. Insufficient hexadecimal digits. (at position 13)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1188" name="rejected.n_string_accentuated_char_no_quotes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_accentuated_char_no_quotes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="983717978" result="Passed" start-time="2022-08-11T22:34:30.1636915Z" end-time="2022-08-11T22:34:30.1637512Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_string_accentuated_char_no_quotes'
JSON: '[é]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'é' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1189" name="rejected.n_string_backslash_00" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_backslash_00" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1749841139" result="Passed" start-time="2022-08-11T22:34:30.1637582Z" end-time="2022-08-11T22:34:30.1638179Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_string_backslash_00'
JSON: '["\\u0000"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x0) (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1190" name="rejected.n_string_escaped_backslash_bad" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_backslash_bad" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="165139791" result="Passed" start-time="2022-08-11T22:34:30.1638249Z" end-time="2022-08-11T22:34:30.1638844Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_string_escaped_backslash_bad'
JSON: '["\\\"]'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 7)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1191" name="rejected.n_string_escaped_ctrl_char_tab" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_ctrl_char_tab" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1617703897" result="Passed" start-time="2022-08-11T22:34:30.1638922Z" end-time="2022-08-11T22:34:30.1639496Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_string_escaped_ctrl_char_tab'
JSON: '["\	"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x9) (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1192" name="rejected.n_string_escaped_emoji" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_emoji" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="357418577" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1639562Z" end-time="2022-08-11T22:34:30.1642255Z" duration="0.000269" asserts="0">
                    <reason>
                      <message><![CDATA[Because why no?]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_string_escaped_emoji'
JSON: '["\🌀"]'
Expected: 'False'
Parsed: '["🌀"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1193" name="rejected.n_string_escape_x" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escape_x" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="936040117" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1642339Z" end-time="2022-08-11T22:34:30.1644356Z" duration="0.000202" asserts="0">
                    <reason>
                      <message><![CDATA[Should be correct, no?]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_string_escape_x'
JSON: '["\x00"]'
Expected: 'False'
Parsed: '["\u0000"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1194" name="rejected.n_string_incomplete_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="71242754" result="Passed" start-time="2022-08-11T22:34:30.1644440Z" end-time="2022-08-11T22:34:30.1645116Z" duration="0.000068" asserts="1">
                    <output><![CDATA[File: 'n_string_incomplete_escape'
JSON: '["\"]'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1195" name="rejected.n_string_incomplete_escaped_character" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_escaped_character" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2101636903" result="Passed" start-time="2022-08-11T22:34:30.1645192Z" end-time="2022-08-11T22:34:30.1646070Z" duration="0.000088" asserts="1">
                    <output><![CDATA[File: 'n_string_incomplete_escaped_character'
JSON: '["\u00A"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\u00A': Invalid pattern '\u00A' at offset 2. Insufficient hexadecimal digits. (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1196" name="rejected.n_string_incomplete_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="92151146" result="Passed" start-time="2022-08-11T22:34:30.1646255Z" end-time="2022-08-11T22:34:30.1647214Z" duration="0.000096" asserts="1">
                    <output><![CDATA[File: 'n_string_incomplete_surrogate'
JSON: '["\uD834\uDd"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD834\uDd': Invalid pattern '\uD834\uDd' at offset 8. Insufficient hexadecimal digits. (at position 13)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1197" name="rejected.n_string_incomplete_surrogate_escape_invalid" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_surrogate_escape_invalid" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="944810235" result="Passed" start-time="2022-08-11T22:34:30.1647287Z" end-time="2022-08-11T22:34:30.1648105Z" duration="0.000082" asserts="1">
                    <output><![CDATA[File: 'n_string_incomplete_surrogate_escape_invalid'
JSON: '["\uD800\uD800\x"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD800\uD800\x': Invalid pattern '\uD800\uD800\x' at offset 14. Insufficient hexadecimal digits. (at position 17)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1198" name="rejected.n_string_invalid-utf-8-in-escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid-utf-8-in-escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1329189098" result="Passed" start-time="2022-08-11T22:34:30.1648177Z" end-time="2022-08-11T22:34:30.1648983Z" duration="0.000081" asserts="1">
                    <output><![CDATA[File: 'n_string_invalid-utf-8-in-escape'
JSON: '["\u�"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\u�': Invalid pattern '\u�' at offset 2. Insufficient hexadecimal digits. (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1199" name="rejected.n_string_invalid_backslash_esc" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_backslash_esc" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1539109095" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1649165Z" end-time="2022-08-11T22:34:30.1651528Z" duration="0.000237" asserts="0">
                    <reason>
                      <message><![CDATA[Should be correct, no?]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_string_invalid_backslash_esc'
JSON: '["\a"]'
Expected: 'False'
Parsed: '["\u0007"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1200" name="rejected.n_string_invalid_unicode_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_unicode_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2066464079" result="Passed" start-time="2022-08-11T22:34:30.1651613Z" end-time="2022-08-11T22:34:30.1652506Z" duration="0.000089" asserts="1">
                    <output><![CDATA[File: 'n_string_invalid_unicode_escape'
JSON: '["\uqqqq"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uqqqq': Invalid pattern '\uqqqq' at offset 3. Insufficient hexadecimal digits. (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1201" name="rejected.n_string_invalid_utf8_after_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_utf8_after_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="543885955" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1652579Z" end-time="2022-08-11T22:34:30.1654595Z" duration="0.000202" asserts="0">
                    <reason>
                      <message><![CDATA[Because why no?]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_string_invalid_utf8_after_escape'
JSON: '["\�"]'
Expected: 'False'
Parsed: '["�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1202" name="rejected.n_string_leading_uescaped_thinspace" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_leading_uescaped_thinspace" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1127785932" result="Passed" start-time="2022-08-11T22:34:30.1654683Z" end-time="2022-08-11T22:34:30.1655311Z" duration="0.000063" asserts="1">
                    <output><![CDATA[File: 'n_string_leading_uescaped_thinspace'
JSON: '[\u0020"asd"]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1203" name="rejected.n_string_no_quotes_with_bad_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_no_quotes_with_bad_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="503124617" result="Passed" start-time="2022-08-11T22:34:30.1655386Z" end-time="2022-08-11T22:34:30.1655969Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_string_no_quotes_with_bad_escape'
JSON: '[\n]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1204" name="rejected.n_string_single_doublequote" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_doublequote" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="264144505" result="Passed" start-time="2022-08-11T22:34:30.1656038Z" end-time="2022-08-11T22:34:30.1657149Z" duration="0.000111" asserts="1">
                    <output><![CDATA[File: 'n_string_single_doublequote'
JSON: '"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1205" name="rejected.n_string_single_quote" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_quote" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="697291023" result="Passed" start-time="2022-08-11T22:34:30.1657218Z" end-time="2022-08-11T22:34:30.1657795Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_string_single_quote'
JSON: '['single quote']'
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1206" name="rejected.n_string_single_string_no_double_quotes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_string_no_double_quotes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="330619253" result="Passed" start-time="2022-08-11T22:34:30.1657864Z" end-time="2022-08-11T22:34:30.1658393Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_string_single_string_no_double_quotes'
JSON: 'abc'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'a' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1207" name="rejected.n_string_start_escape_unclosed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_start_escape_unclosed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2142506716" result="Passed" start-time="2022-08-11T22:34:30.1658462Z" end-time="2022-08-11T22:34:30.1659048Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_string_start_escape_unclosed'
JSON: '["\'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1208" name="rejected.n_string_unescaped_ctrl_char" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_ctrl_char" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="301832401" result="Passed" start-time="2022-08-11T22:34:30.1659117Z" end-time="2022-08-11T22:34:30.1659697Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_string_unescaped_ctrl_char'
JSON: '["a\u0000a"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x0) (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1209" name="rejected.n_string_unescaped_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="805355202" result="Passed" start-time="2022-08-11T22:34:30.1659766Z" end-time="2022-08-11T22:34:30.1660331Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_string_unescaped_newline'
JSON: '["new
line"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0xA) (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1210" name="rejected.n_string_unescaped_tab" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_tab" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2045340755" result="Passed" start-time="2022-08-11T22:34:30.1660400Z" end-time="2022-08-11T22:34:30.1660962Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_string_unescaped_tab'
JSON: '["	"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x9) (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1211" name="rejected.n_string_unicode_CapitalU" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unicode_CapitalU" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="904963231" result="Passed" start-time="2022-08-11T22:34:30.1661031Z" end-time="2022-08-11T22:34:30.1661985Z" duration="0.000096" asserts="1">
                    <output><![CDATA[File: 'n_string_unicode_CapitalU'
JSON: '"\UA66D"'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\UA66D': Invalid pattern '\UA66D' at offset 2. Unrecognized escape sequence \\U. (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1212" name="rejected.n_string_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="10962508" result="Passed" start-time="2022-08-11T22:34:30.1662060Z" end-time="2022-08-11T22:34:30.1662604Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_string_with_trailing_garbage'
JSON: '""x'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1213" name="rejected.n_structure_100000_opening_arrays" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_100000_opening_arrays" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1811271769" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1662676Z" end-time="2022-08-11T22:34:30.1664620Z" duration="0.000195" asserts="0">
                    <reason>
                      <message><![CDATA[Causes stackoverflow, but we don't actually care]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_structure_100000_opening_arrays'
]]></output>
                  </test-case>
                  <test-case id="0-1214" name="rejected.n_structure_angle_bracket__" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_angle_bracket__" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1921828383" result="Passed" start-time="2022-08-11T22:34:30.1664705Z" end-time="2022-08-11T22:34:30.1665287Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_structure_angle_bracket_.'
JSON: '<.>'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '<' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1215" name="rejected.n_structure_angle_bracket_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_angle_bracket_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2120415266" result="Passed" start-time="2022-08-11T22:34:30.1665360Z" end-time="2022-08-11T22:34:30.1665930Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_structure_angle_bracket_null'
JSON: '[<null>]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '<' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1216" name="rejected.n_structure_array_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="958198115" result="Passed" start-time="2022-08-11T22:34:30.1665997Z" end-time="2022-08-11T22:34:30.1666727Z" duration="0.000073" asserts="1">
                    <output><![CDATA[File: 'n_structure_array_trailing_garbage'
JSON: '[1]x'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1217" name="rejected.n_structure_array_with_extra_array_close" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_with_extra_array_close" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="583293835" result="Passed" start-time="2022-08-11T22:34:30.1666800Z" end-time="2022-08-11T22:34:30.1667373Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_structure_array_with_extra_array_close'
JSON: '[1]]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1218" name="rejected.n_structure_array_with_unclosed_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_with_unclosed_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="752140310" result="Passed" start-time="2022-08-11T22:34:30.1667446Z" end-time="2022-08-11T22:34:30.1668086Z" duration="0.000064" asserts="1">
                    <output><![CDATA[File: 'n_structure_array_with_unclosed_string'
JSON: '["asd]'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1219" name="rejected.n_structure_ascii-unicode-identifier" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_ascii-unicode-identifier" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="122551332" result="Passed" start-time="2022-08-11T22:34:30.1668155Z" end-time="2022-08-11T22:34:30.1668699Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_structure_ascii-unicode-identifier'
JSON: 'aå'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'a' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1220" name="rejected.n_structure_capitalized_True" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_capitalized_True" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1471191413" result="Passed" start-time="2022-08-11T22:34:30.1668768Z" end-time="2022-08-11T22:34:30.1669357Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_capitalized_True'
JSON: '[True]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'T' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1221" name="rejected.n_structure_close_unopened_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_close_unopened_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1824683498" result="Passed" start-time="2022-08-11T22:34:30.1669429Z" end-time="2022-08-11T22:34:30.1670033Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_structure_close_unopened_array'
JSON: '1]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1222" name="rejected.n_structure_comma_instead_of_closing_brace" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_comma_instead_of_closing_brace" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="159747562" result="Passed" start-time="2022-08-11T22:34:30.1670102Z" end-time="2022-08-11T22:34:30.1670727Z" duration="0.000063" asserts="1">
                    <output><![CDATA[File: 'n_structure_comma_instead_of_closing_brace'
JSON: '{"x": true,'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1223" name="rejected.n_structure_double_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_double_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1419113488" result="Passed" start-time="2022-08-11T22:34:30.1670800Z" end-time="2022-08-11T22:34:30.1671355Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_structure_double_array'
JSON: '[][]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1224" name="rejected.n_structure_end_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_end_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="153073528" result="Passed" start-time="2022-08-11T22:34:30.1671425Z" end-time="2022-08-11T22:34:30.1671965Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_structure_end_array'
JSON: ']'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ']' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1225" name="rejected.n_structure_incomplete_UTF8_BOM" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_incomplete_UTF8_BOM" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="123674676" result="Passed" start-time="2022-08-11T22:34:30.1672037Z" end-time="2022-08-11T22:34:30.1672602Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_structure_incomplete_UTF8_BOM'
JSON: '�{}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '�' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1226" name="rejected.n_structure_lone-invalid-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_lone-invalid-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1099102634" result="Passed" start-time="2022-08-11T22:34:30.1672801Z" end-time="2022-08-11T22:34:30.1673794Z" duration="0.000100" asserts="1">
                    <output><![CDATA[File: 'n_structure_lone-invalid-utf-8'
JSON: ''
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1227" name="rejected.n_structure_lone-open-bracket" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_lone-open-bracket" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2037412998" result="Passed" start-time="2022-08-11T22:34:30.1673864Z" end-time="2022-08-11T22:34:30.1674452Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_lone-open-bracket'
JSON: '['
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1228" name="rejected.n_structure_no_data" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_no_data" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2119402794" result="Passed" start-time="2022-08-11T22:34:30.1674522Z" end-time="2022-08-11T22:34:30.1675059Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_structure_no_data'
JSON: ''
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1229" name="rejected.n_structure_null-byte-outside-string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_null-byte-outside-string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="813958631" result="Passed" start-time="2022-08-11T22:34:30.1675128Z" end-time="2022-08-11T22:34:30.1675720Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_null-byte-outside-string'
JSON: '[\u0000]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\u0000' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1230" name="rejected.n_structure_number_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_number_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2126941408" result="Passed" start-time="2022-08-11T22:34:30.1675790Z" end-time="2022-08-11T22:34:30.1676583Z" duration="0.000079" asserts="1">
                    <output><![CDATA[File: 'n_structure_number_with_trailing_garbage'
JSON: '2@'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1231" name="rejected.n_structure_object_followed_by_closing_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_followed_by_closing_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="809326989" result="Passed" start-time="2022-08-11T22:34:30.1676653Z" end-time="2022-08-11T22:34:30.1677229Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_structure_object_followed_by_closing_object'
JSON: '{}}'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1232" name="rejected.n_structure_object_unclosed_no_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_unclosed_no_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="721467626" result="Passed" start-time="2022-08-11T22:34:30.1677299Z" end-time="2022-08-11T22:34:30.1677888Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_object_unclosed_no_value'
JSON: '{"":'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1233" name="rejected.n_structure_object_with_comment" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_with_comment" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2107840511" result="Passed" start-time="2022-08-11T22:34:30.1678011Z" end-time="2022-08-11T22:34:30.1678585Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_structure_object_with_comment'
JSON: '{"a":/*comment*/"b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '/' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1234" name="rejected.n_structure_object_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1252351859" result="Passed" start-time="2022-08-11T22:34:30.1678654Z" end-time="2022-08-11T22:34:30.1679231Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_structure_object_with_trailing_garbage'
JSON: '{"a": true} "x"'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1235" name="rejected.n_structure_open_array_apostrophe" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_apostrophe" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1313177128" result="Passed" start-time="2022-08-11T22:34:30.1679303Z" end-time="2022-08-11T22:34:30.1679916Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_apostrophe'
JSON: '[''
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1236" name="rejected.n_structure_open_array_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="530309778" result="Passed" start-time="2022-08-11T22:34:30.1679986Z" end-time="2022-08-11T22:34:30.1680577Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_comma'
JSON: '[,'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1237" name="rejected.n_structure_open_array_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1633026921" result="Skipped" label="Ignored" start-time="2022-08-11T22:34:30.1680647Z" end-time="2022-08-11T22:34:30.1682814Z" duration="0.000217" asserts="0">
                    <reason>
                      <message><![CDATA[Causes stackoverflow, but we don't actually care]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_structure_open_array_object'
]]></output>
                  </test-case>
                  <test-case id="0-1238" name="rejected.n_structure_open_array_open_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_open_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1787321335" result="Passed" start-time="2022-08-11T22:34:30.1682899Z" end-time="2022-08-11T22:34:30.1683557Z" duration="0.000066" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_open_object'
JSON: '[{'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1239" name="rejected.n_structure_open_array_open_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_open_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1413298993" result="Passed" start-time="2022-08-11T22:34:30.1683632Z" end-time="2022-08-11T22:34:30.1684284Z" duration="0.000065" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_open_string'
JSON: '["a'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1240" name="rejected.n_structure_open_array_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="635580806" result="Passed" start-time="2022-08-11T22:34:30.1684357Z" end-time="2022-08-11T22:34:30.1684972Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_string'
JSON: '["a"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1241" name="rejected.n_structure_open_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="235678798" result="Passed" start-time="2022-08-11T22:34:30.1685042Z" end-time="2022-08-11T22:34:30.1685649Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object'
JSON: '{'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1242" name="rejected.n_structure_open_object_close_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_close_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1065505560" result="Passed" start-time="2022-08-11T22:34:30.1685721Z" end-time="2022-08-11T22:34:30.1686560Z" duration="0.000084" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_close_array'
JSON: '{]'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ']' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1243" name="rejected.n_structure_open_object_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="178362776" result="Passed" start-time="2022-08-11T22:34:30.1686633Z" end-time="2022-08-11T22:34:30.1687469Z" duration="0.000084" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_comma'
JSON: '{,'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ',' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1244" name="rejected.n_structure_open_object_open_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_open_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1851984031" result="Passed" start-time="2022-08-11T22:34:30.1687538Z" end-time="2022-08-11T22:34:30.1688136Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_open_array'
JSON: '{['
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '[' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1245" name="rejected.n_structure_open_object_open_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_open_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1407660207" result="Passed" start-time="2022-08-11T22:34:30.1688205Z" end-time="2022-08-11T22:34:30.1688818Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_open_string'
JSON: '{"a'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1246" name="rejected.n_structure_open_object_string_with_apostrophes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_string_with_apostrophes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1606741389" result="Passed" start-time="2022-08-11T22:34:30.1688888Z" end-time="2022-08-11T22:34:30.1689488Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_string_with_apostrophes'
JSON: '{'a''
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1247" name="rejected.n_structure_open_open" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_open" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="693630455" result="Passed" start-time="2022-08-11T22:34:30.1689558Z" end-time="2022-08-11T22:34:30.1690195Z" duration="0.000064" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_open'
JSON: '["\{["\{["\{["\{'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1248" name="rejected.n_structure_single_eacute" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_single_eacute" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1161695381" result="Passed" start-time="2022-08-11T22:34:30.1690264Z" end-time="2022-08-11T22:34:30.1690817Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_structure_single_eacute'
JSON: ''
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1249" name="rejected.n_structure_single_star" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_single_star" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="98311135" result="Passed" start-time="2022-08-11T22:34:30.1690889Z" end-time="2022-08-11T22:34:30.1691460Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_structure_single_star'
JSON: '*'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '*' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1250" name="rejected.n_structure_trailing_#" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_trailing_#" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1143438788" result="Passed" start-time="2022-08-11T22:34:30.1691529Z" end-time="2022-08-11T22:34:30.1692103Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_structure_trailing_#'
JSON: '{"a":"b"}#{}'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1251" name="rejected.n_structure_U+2060_word_joined" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_U+2060_word_joined" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1656340958" result="Passed" start-time="2022-08-11T22:34:30.1692229Z" end-time="2022-08-11T22:34:30.1692833Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_structure_U+2060_word_joined'
JSON: '[⁠]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '⁠' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1252" name="rejected.n_structure_uescaped_LF_before_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_uescaped_LF_before_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="192669925" result="Passed" start-time="2022-08-11T22:34:30.1692903Z" end-time="2022-08-11T22:34:30.1693497Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_structure_uescaped_LF_before_string'
JSON: '[\u000A""]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1253" name="rejected.n_structure_unclosed_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1206637766" result="Passed" start-time="2022-08-11T22:34:30.1693570Z" end-time="2022-08-11T22:34:30.1694137Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_array'
JSON: '[1'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1254" name="rejected.n_structure_unclosed_array_partial_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_partial_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="67917682" result="Passed" start-time="2022-08-11T22:34:30.1694210Z" end-time="2022-08-11T22:34:30.1694853Z" duration="0.000064" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_array_partial_null'
JSON: '[ false, nul'
Expected: 'False'
Exception: 'Parsing falied: Expected 'l' but got end of stream (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1255" name="rejected.n_structure_unclosed_array_unfinished_false" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_unfinished_false" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="241780581" result="Passed" start-time="2022-08-11T22:34:30.1694925Z" end-time="2022-08-11T22:34:30.1695544Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_array_unfinished_false'
JSON: '[ true, fals'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got end of stream (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1256" name="rejected.n_structure_unclosed_array_unfinished_true" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_unfinished_true" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="384138393" result="Passed" start-time="2022-08-11T22:34:30.1695613Z" end-time="2022-08-11T22:34:30.1696386Z" duration="0.000078" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_array_unfinished_true'
JSON: '[ false, tru'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got end of stream (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1257" name="rejected.n_structure_unclosed_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1856156091" result="Passed" start-time="2022-08-11T22:34:30.1696567Z" end-time="2022-08-11T22:34:30.1697180Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_object'
JSON: '{"asd":"asd"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1258" name="rejected.n_structure_unicode-identifier" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unicode-identifier" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="350051089" result="Passed" start-time="2022-08-11T22:34:30.1697249Z" end-time="2022-08-11T22:34:30.1697790Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_structure_unicode-identifier'
JSON: 'å'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'å' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1259" name="rejected.n_structure_UTF8_BOM_no_data" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_UTF8_BOM_no_data" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="140469829" result="Passed" start-time="2022-08-11T22:34:30.1697856Z" end-time="2022-08-11T22:34:30.1698433Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_structure_UTF8_BOM_no_data'
JSON: ''
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1260" name="rejected.n_structure_whitespace_formfeed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_whitespace_formfeed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1745672036" result="Passed" start-time="2022-08-11T22:34:30.1698502Z" end-time="2022-08-11T22:34:30.1699094Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_whitespace_formfeed'
JSON: '[\u000c]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\u000c' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1261" name="rejected.n_structure_whitespace_U+2060_word_joiner" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_whitespace_U+2060_word_joiner" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="440689902" result="Passed" start-time="2022-08-11T22:34:30.1699166Z" end-time="2022-08-11T22:34:30.1699758Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_whitespace_U+2060_word_joiner'
JSON: '[⁠]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '⁠' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1262" name="accepted.y_array_arraysWithSpaces" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_arraysWithSpaces" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="23103922" result="Passed" start-time="2022-08-11T22:34:30.1699827Z" end-time="2022-08-11T22:34:30.1700163Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_array_arraysWithSpaces'
JSON: '[[]   ]'
Expected: 'True'
Parsed: '[[]]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1263" name="accepted.y_array_empty-string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_empty-string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1635357417" result="Passed" start-time="2022-08-11T22:34:30.1700256Z" end-time="2022-08-11T22:34:30.1700585Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_array_empty-string'
JSON: '[""]'
Expected: 'True'
Parsed: '[""]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1264" name="accepted.y_array_empty" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_empty" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="825897441" result="Passed" start-time="2022-08-11T22:34:30.1700688Z" end-time="2022-08-11T22:34:30.1701002Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_array_empty'
JSON: '[]'
Expected: 'True'
Parsed: '[]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1265" name="accepted.y_array_ending_with_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_ending_with_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1236013766" result="Passed" start-time="2022-08-11T22:34:30.1701068Z" end-time="2022-08-11T22:34:30.1701421Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_array_ending_with_newline'
JSON: '["a"]'
Expected: 'True'
Parsed: '["a"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1266" name="accepted.y_array_false" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_false" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="183495605" result="Passed" start-time="2022-08-11T22:34:30.1701485Z" end-time="2022-08-11T22:34:30.1701808Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_array_false'
JSON: '[false]'
Expected: 'True'
Parsed: '[false]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1267" name="accepted.y_array_heterogeneous" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_heterogeneous" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="50605644" result="Passed" start-time="2022-08-11T22:34:30.1701871Z" end-time="2022-08-11T22:34:30.1702267Z" duration="0.000040" asserts="1">
                    <output><![CDATA[File: 'y_array_heterogeneous'
JSON: '[null, 1, "1", {}]'
Expected: 'True'
Parsed: '[null,1,"1",{}]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1268" name="accepted.y_array_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="558919910" result="Passed" start-time="2022-08-11T22:34:30.1702333Z" end-time="2022-08-11T22:34:30.1702680Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_array_null'
JSON: '[null]'
Expected: 'True'
Parsed: '[null]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1269" name="accepted.y_array_with_1_and_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_1_and_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="608651255" result="Passed" start-time="2022-08-11T22:34:30.1702744Z" end-time="2022-08-11T22:34:30.1703067Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_array_with_1_and_newline'
JSON: '[1
]'
Expected: 'True'
Parsed: '[1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1270" name="accepted.y_array_with_leading_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_leading_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1590105488" result="Passed" start-time="2022-08-11T22:34:30.1703130Z" end-time="2022-08-11T22:34:30.1703480Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_array_with_leading_space'
JSON: ' [1]'
Expected: 'True'
Parsed: '[1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1271" name="accepted.y_array_with_several_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_several_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1472654841" result="Passed" start-time="2022-08-11T22:34:30.1703544Z" end-time="2022-08-11T22:34:30.1704024Z" duration="0.000048" asserts="1">
                    <output><![CDATA[File: 'y_array_with_several_null'
JSON: '[1,null,null,null,2]'
Expected: 'True'
Parsed: '[1,null,null,null,2]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1272" name="accepted.y_array_with_trailing_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_trailing_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="943456147" result="Passed" start-time="2022-08-11T22:34:30.1704090Z" end-time="2022-08-11T22:34:30.1704422Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_array_with_trailing_space'
JSON: '[2] '
Expected: 'True'
Parsed: '[2]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1273" name="accepted.y_number" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1486324964" result="Passed" start-time="2022-08-11T22:34:30.1704485Z" end-time="2022-08-11T22:34:30.1705279Z" duration="0.000079" asserts="1">
                    <output><![CDATA[File: 'y_number'
JSON: '[123e65]'
Expected: 'True'
Parsed: '[1.23e+67]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1274" name="accepted.y_number_0e+1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_0e+1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1634454173" result="Passed" start-time="2022-08-11T22:34:30.1705358Z" end-time="2022-08-11T22:34:30.1705768Z" duration="0.000041" asserts="1">
                    <output><![CDATA[File: 'y_number_0e+1'
JSON: '[0e+1]'
Expected: 'True'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1275" name="accepted.y_number_0e1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_0e1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1235512615" result="Passed" start-time="2022-08-11T22:34:30.1705838Z" end-time="2022-08-11T22:34:30.1706201Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_number_0e1'
JSON: '[0e1]'
Expected: 'True'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1276" name="accepted.y_number_after_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_after_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="759177938" result="Passed" start-time="2022-08-11T22:34:30.1706270Z" end-time="2022-08-11T22:34:30.1706648Z" duration="0.000038" asserts="1">
                    <output><![CDATA[File: 'y_number_after_space'
JSON: '[ 4]'
Expected: 'True'
Parsed: '[4]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1277" name="accepted.y_number_double_close_to_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_double_close_to_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2128868433" result="Passed" start-time="2022-08-11T22:34:30.1706717Z" end-time="2022-08-11T22:34:30.1707122Z" duration="0.000040" asserts="1">
                    <output><![CDATA[File: 'y_number_double_close_to_zero'
JSON: '[-0.000000000000000000000000000000000000000000000000000000000000000000000000000001]
'
Expected: 'True'
Parsed: '[0.0000000000000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1278" name="accepted.y_number_int_with_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_int_with_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1714613104" result="Passed" start-time="2022-08-11T22:34:30.1707188Z" end-time="2022-08-11T22:34:30.1707532Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_number_int_with_exp'
JSON: '[20e1]'
Expected: 'True'
Parsed: '[200]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1279" name="accepted.y_number_minus_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_minus_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="892896968" result="Passed" start-time="2022-08-11T22:34:30.1707602Z" end-time="2022-08-11T22:34:30.1707937Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_number_minus_zero'
JSON: '[-0]'
Expected: 'True'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1280" name="accepted.y_number_negative_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="664416934" result="Passed" start-time="2022-08-11T22:34:30.1708000Z" end-time="2022-08-11T22:34:30.1708380Z" duration="0.000038" asserts="1">
                    <output><![CDATA[File: 'y_number_negative_int'
JSON: '[-123]'
Expected: 'True'
Parsed: '[-123]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1281" name="accepted.y_number_negative_one" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_one" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="405472179" result="Passed" start-time="2022-08-11T22:34:30.1708450Z" end-time="2022-08-11T22:34:30.1708827Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_number_negative_one'
JSON: '[-1]'
Expected: 'True'
Parsed: '[-1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1282" name="accepted.y_number_negative_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="875717617" result="Passed" start-time="2022-08-11T22:34:30.1708891Z" end-time="2022-08-11T22:34:30.1709223Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_number_negative_zero'
JSON: '[-0]'
Expected: 'True'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1283" name="accepted.y_number_real_capital_e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2021091659" result="Passed" start-time="2022-08-11T22:34:30.1709286Z" end-time="2022-08-11T22:34:30.1709660Z" duration="0.000038" asserts="1">
                    <output><![CDATA[File: 'y_number_real_capital_e'
JSON: '[1E22]'
Expected: 'True'
Parsed: '[10000000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1284" name="accepted.y_number_real_capital_e_neg_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e_neg_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1818003490" result="Passed" start-time="2022-08-11T22:34:30.1709727Z" end-time="2022-08-11T22:34:30.1710101Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_number_real_capital_e_neg_exp'
JSON: '[1E-2]'
Expected: 'True'
Parsed: '[0.01]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1285" name="accepted.y_number_real_capital_e_pos_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e_pos_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="470600450" result="Passed" start-time="2022-08-11T22:34:30.1710168Z" end-time="2022-08-11T22:34:30.1792524Z" duration="0.008236" asserts="1">
                    <output><![CDATA[File: 'y_number_real_capital_e_pos_exp'
JSON: '[1E+2]'
Expected: 'True'
Parsed: '[100]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1286" name="accepted.y_number_real_exponent" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_exponent" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="616657064" result="Passed" start-time="2022-08-11T22:34:30.1792729Z" end-time="2022-08-11T22:34:30.1794266Z" duration="0.000154" asserts="1">
                    <output><![CDATA[File: 'y_number_real_exponent'
JSON: '[123e45]'
Expected: 'True'
Parsed: '[1.23e+47]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1287" name="accepted.y_number_real_fraction_exponent" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_fraction_exponent" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1662313507" result="Passed" start-time="2022-08-11T22:34:30.1794350Z" end-time="2022-08-11T22:34:30.1795169Z" duration="0.000082" asserts="1">
                    <output><![CDATA[File: 'y_number_real_fraction_exponent'
JSON: '[123.456e78]'
Expected: 'True'
Parsed: '[1.23456e+80]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1288" name="accepted.y_number_real_neg_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_neg_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2039922829" result="Passed" start-time="2022-08-11T22:34:30.1795250Z" end-time="2022-08-11T22:34:30.1795652Z" duration="0.000040" asserts="1">
                    <output><![CDATA[File: 'y_number_real_neg_exp'
JSON: '[1e-2]'
Expected: 'True'
Parsed: '[0.01]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1289" name="accepted.y_number_real_pos_exponent" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_pos_exponent" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1010571278" result="Passed" start-time="2022-08-11T22:34:30.1795724Z" end-time="2022-08-11T22:34:30.1796080Z" duration="0.000036" asserts="1">
                    <output><![CDATA[File: 'y_number_real_pos_exponent'
JSON: '[1e+2]'
Expected: 'True'
Parsed: '[100]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1290" name="accepted.y_number_simple_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_simple_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="929038735" result="Passed" start-time="2022-08-11T22:34:30.1796156Z" end-time="2022-08-11T22:34:30.1796533Z" duration="0.000038" asserts="1">
                    <output><![CDATA[File: 'y_number_simple_int'
JSON: '[123]'
Expected: 'True'
Parsed: '[123]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1291" name="accepted.y_number_simple_real" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_simple_real" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="821637334" result="Passed" start-time="2022-08-11T22:34:30.1803910Z" end-time="2022-08-11T22:34:30.1804849Z" duration="0.000094" asserts="1">
                    <output><![CDATA[File: 'y_number_simple_real'
JSON: '[123.456789]'
Expected: 'True'
Parsed: '[123.456789]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1292" name="accepted.y_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1282975832" result="Passed" start-time="2022-08-11T22:34:30.1805522Z" end-time="2022-08-11T22:34:30.1809585Z" duration="0.000406" asserts="1">
                    <output><![CDATA[File: 'y_object'
JSON: '{"asd":"sdf", "dfg":"fgh"}'
Expected: 'True'
Parsed: '{"asd":"sdf","dfg":"fgh"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1293" name="accepted.y_object_basic" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_basic" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1646851506" result="Passed" start-time="2022-08-11T22:34:30.1810494Z" end-time="2022-08-11T22:34:30.1811231Z" duration="0.000074" asserts="1">
                    <output><![CDATA[File: 'y_object_basic'
JSON: '{"asd":"sdf"}'
Expected: 'True'
Parsed: '{"asd":"sdf"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1294" name="accepted.y_object_duplicated_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_duplicated_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1815110604" result="Passed" start-time="2022-08-11T22:34:30.1811708Z" end-time="2022-08-11T22:34:30.1813295Z" duration="0.000159" asserts="1">
                    <output><![CDATA[File: 'y_object_duplicated_key'
JSON: '{"a":"b","a":"c"}'
Expected: 'True'
Parsed: '{"a":"c"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1295" name="accepted.y_object_duplicated_key_and_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_duplicated_key_and_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="194890904" result="Passed" start-time="2022-08-11T22:34:30.1813395Z" end-time="2022-08-11T22:34:30.1814424Z" duration="0.000103" asserts="1">
                    <output><![CDATA[File: 'y_object_duplicated_key_and_value'
JSON: '{"a":"b","a":"b"}'
Expected: 'True'
Parsed: '{"a":"b"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1296" name="accepted.y_object_empty" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_empty" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="212574876" result="Passed" start-time="2022-08-11T22:34:30.1814509Z" end-time="2022-08-11T22:34:30.1814883Z" duration="0.000038" asserts="1">
                    <output><![CDATA[File: 'y_object_empty'
JSON: '{}'
Expected: 'True'
Parsed: '{}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1297" name="accepted.y_object_empty_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_empty_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1577631790" result="Passed" start-time="2022-08-11T22:34:30.1814956Z" end-time="2022-08-11T22:34:30.1815590Z" duration="0.000063" asserts="1">
                    <output><![CDATA[File: 'y_object_empty_key'
JSON: '{"":0}'
Expected: 'True'
Parsed: '{"":0}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1298" name="accepted.y_object_escaped_null_in_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_escaped_null_in_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1499948982" result="Passed" start-time="2022-08-11T22:34:30.1815665Z" end-time="2022-08-11T22:34:30.1816073Z" duration="0.000041" asserts="1">
                    <output><![CDATA[File: 'y_object_escaped_null_in_key'
JSON: '{"foo\u0000bar": 42}'
Expected: 'True'
Parsed: '{"foo\u0000bar":42}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1299" name="accepted.y_object_extreme_numbers" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_extreme_numbers" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="615970265" result="Passed" start-time="2022-08-11T22:34:30.1816151Z" end-time="2022-08-11T22:34:30.1817848Z" duration="0.000169" asserts="1">
                    <output><![CDATA[File: 'y_object_extreme_numbers'
JSON: '{ "min": -1.0e+28, "max": 1.0e+28 }'
Expected: 'True'
Parsed: '{"min":-10000000000000000000000000000,"max":10000000000000000000000000000}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1300" name="accepted.y_object_long_strings" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_long_strings" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1224164602" result="Passed" start-time="2022-08-11T22:34:30.1817944Z" end-time="2022-08-11T22:34:30.1818409Z" duration="0.000047" asserts="1">
                    <output><![CDATA[File: 'y_object_long_strings'
JSON: '{"x":[{"id": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}], "id": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}'
Expected: 'True'
Parsed: '{"x":[{"id":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}],"id":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1301" name="accepted.y_object_simple" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_simple" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1556135745" result="Passed" start-time="2022-08-11T22:34:30.1818488Z" end-time="2022-08-11T22:34:30.1818859Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_object_simple'
JSON: '{"a":[]}'
Expected: 'True'
Parsed: '{"a":[]}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1302" name="accepted.y_object_string_unicode" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_string_unicode" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="134710545" result="Passed" start-time="2022-08-11T22:34:30.1818928Z" end-time="2022-08-11T22:34:30.1821229Z" duration="0.000230" asserts="1">
                    <output><![CDATA[File: 'y_object_string_unicode'
JSON: '{"title":"\u041f\u043e\u043b\u0442\u043e\u0440\u0430 \u0417\u0435\u043c\u043b\u0435\u043a\u043e\u043f\u0430" }'
Expected: 'True'
Parsed: '{"title":"Полтора Землекопа"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1303" name="accepted.y_object_with_newlines" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_with_newlines" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="553044126" result="Passed" start-time="2022-08-11T22:34:30.1821316Z" end-time="2022-08-11T22:34:30.1822038Z" duration="0.000072" asserts="1">
                    <output><![CDATA[File: 'y_object_with_newlines'
JSON: '{
"a": "b"
}'
Expected: 'True'
Parsed: '{"a":"b"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1304" name="accepted.y_string_1_2_3_bytes_UTF-8_sequences" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_1_2_3_bytes_UTF-8_sequences" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="655689294" result="Passed" start-time="2022-08-11T22:34:30.1822131Z" end-time="2022-08-11T22:34:30.1822605Z" duration="0.000047" asserts="1">
                    <output><![CDATA[File: 'y_string_1_2_3_bytes_UTF-8_sequences'
JSON: '["\u0060\u012a\u12AB"]'
Expected: 'True'
Parsed: '["`Īካ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1305" name="accepted.y_string_accepted_surrogate_pair" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_accepted_surrogate_pair" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1818267594" result="Passed" start-time="2022-08-11T22:34:30.1822681Z" end-time="2022-08-11T22:34:30.1824099Z" duration="0.000142" asserts="1">
                    <output><![CDATA[File: 'y_string_accepted_surrogate_pair'
JSON: '["\uD801\udc37"]'
Expected: 'True'
Parsed: '["𐐷"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1306" name="accepted.y_string_accepted_surrogate_pairs" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_accepted_surrogate_pairs" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="712884811" result="Passed" start-time="2022-08-11T22:34:30.1824196Z" end-time="2022-08-11T22:34:30.1824682Z" duration="0.000049" asserts="1">
                    <output><![CDATA[File: 'y_string_accepted_surrogate_pairs'
JSON: '["\ud83d\ude39\ud83d\udc8d"]'
Expected: 'True'
Parsed: '["😹💍"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1307" name="accepted.y_string_allowed_escapes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_allowed_escapes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="853828608" result="Passed" start-time="2022-08-11T22:34:30.1825026Z" end-time="2022-08-11T22:34:30.1827245Z" duration="0.000222" asserts="1">
                    <output><![CDATA[File: 'y_string_allowed_escapes'
JSON: '["\"\\\/\b\f\n\r\t"]'
Expected: 'True'
Parsed: '[""\/\u0008\u000c

	"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1308" name="accepted.y_string_backslash_and_u_escaped_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_backslash_and_u_escaped_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1719667240" result="Passed" start-time="2022-08-11T22:34:30.1827338Z" end-time="2022-08-11T22:34:30.1828147Z" duration="0.000081" asserts="1">
                    <output><![CDATA[File: 'y_string_backslash_and_u_escaped_zero'
JSON: '["\\u0000"]'
Expected: 'True'
Parsed: '["\u0000"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1309" name="accepted.y_string_backslash_doublequotes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_backslash_doublequotes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="979888714" result="Passed" start-time="2022-08-11T22:34:30.1828238Z" end-time="2022-08-11T22:34:30.1829684Z" duration="0.000145" asserts="1">
                    <output><![CDATA[File: 'y_string_backslash_doublequotes'
JSON: '["\""]'
Expected: 'True'
Parsed: '["""]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1310" name="accepted.y_string_comments" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_comments" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1630086290" result="Passed" start-time="2022-08-11T22:34:30.1829778Z" end-time="2022-08-11T22:34:30.1830245Z" duration="0.000047" asserts="1">
                    <output><![CDATA[File: 'y_string_comments'
JSON: '["a/*b*/c/*d//e"]'
Expected: 'True'
Parsed: '["a/*b*/c/*d//e"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1311" name="accepted.y_string_double_escape_a" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_double_escape_a" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="402753607" result="Passed" start-time="2022-08-11T22:34:30.1830321Z" end-time="2022-08-11T22:34:30.1830722Z" duration="0.000064" asserts="1">
                    <output><![CDATA[File: 'y_string_double_escape_a'
JSON: '["\\a"]'
Expected: 'True'
Parsed: '["\a"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1312" name="accepted.y_string_double_escape_n" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_double_escape_n" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="141542987" result="Passed" start-time="2022-08-11T22:34:30.1831079Z" end-time="2022-08-11T22:34:30.1833038Z" duration="0.000196" asserts="1">
                    <output><![CDATA[File: 'y_string_double_escape_n'
JSON: '["\\n"]'
Expected: 'True'
Parsed: '["\n"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1313" name="accepted.y_string_escaped_control_character" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_escaped_control_character" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1604637768" result="Passed" start-time="2022-08-11T22:34:30.1833143Z" end-time="2022-08-11T22:34:30.1833898Z" duration="0.000076" asserts="1">
                    <output><![CDATA[File: 'y_string_escaped_control_character'
JSON: '["\u0012"]'
Expected: 'True'
Parsed: '["\u0012"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1314" name="accepted.y_string_escaped_noncharacter" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_escaped_noncharacter" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1623536542" result="Passed" start-time="2022-08-11T22:34:30.1833983Z" end-time="2022-08-11T22:34:30.1834414Z" duration="0.000043" asserts="1">
                    <output><![CDATA[File: 'y_string_escaped_noncharacter'
JSON: '["\uFFFF"]'
Expected: 'True'
Parsed: '["\uffff"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1315" name="accepted.y_string_in_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_in_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1340199857" result="Passed" start-time="2022-08-11T22:34:30.1834487Z" end-time="2022-08-11T22:34:30.1835893Z" duration="0.000141" asserts="1">
                    <output><![CDATA[File: 'y_string_in_array'
JSON: '["asd"]'
Expected: 'True'
Parsed: '["asd"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1316" name="accepted.y_string_in_array_with_leading_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_in_array_with_leading_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1712455932" result="Passed" start-time="2022-08-11T22:34:30.1835984Z" end-time="2022-08-11T22:34:30.1836957Z" duration="0.000097" asserts="1">
                    <output><![CDATA[File: 'y_string_in_array_with_leading_space'
JSON: '[ "asd"]'
Expected: 'True'
Parsed: '["asd"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1317" name="accepted.y_string_last_surrogates_1_and_2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_last_surrogates_1_and_2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="149495910" result="Passed" start-time="2022-08-11T22:34:30.1837872Z" end-time="2022-08-11T22:34:30.1839100Z" duration="0.000123" asserts="1">
                    <output><![CDATA[File: 'y_string_last_surrogates_1_and_2'
JSON: '["\uDBFF\uDFFF"]'
Expected: 'True'
Parsed: '["􏿿"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1318" name="accepted.y_string_nbsp_uescaped" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nbsp_uescaped" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1964837574" result="Passed" start-time="2022-08-11T22:34:30.1839194Z" end-time="2022-08-11T22:34:30.1839867Z" duration="0.000068" asserts="1">
                    <output><![CDATA[File: 'y_string_nbsp_uescaped'
JSON: '["new\u00A0line"]'
Expected: 'True'
Parsed: '["new line"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1319" name="accepted.y_string_nonCharacterInUTF-8_U+10FFFF" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nonCharacterInUTF-8_U+10FFFF" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="355296991" result="Passed" start-time="2022-08-11T22:34:30.1839958Z" end-time="2022-08-11T22:34:30.1840353Z" duration="0.000040" asserts="1">
                    <output><![CDATA[File: 'y_string_nonCharacterInUTF-8_U+10FFFF'
JSON: '["􏿿"]'
Expected: 'True'
Parsed: '["􏿿"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1320" name="accepted.y_string_nonCharacterInUTF-8_U+FFFF" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nonCharacterInUTF-8_U+FFFF" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="619356702" result="Passed" start-time="2022-08-11T22:34:30.1840425Z" end-time="2022-08-11T22:34:30.1840779Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_string_nonCharacterInUTF-8_U+FFFF'
JSON: '["\uffff"]'
Expected: 'True'
Parsed: '["\uffff"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1321" name="accepted.y_string_null_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_null_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="668665745" result="Passed" start-time="2022-08-11T22:34:30.1840848Z" end-time="2022-08-11T22:34:30.1841195Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_string_null_escape'
JSON: '["\u0000"]'
Expected: 'True'
Parsed: '["\u0000"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1322" name="accepted.y_string_one-byte-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_one-byte-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="158166462" result="Passed" start-time="2022-08-11T22:34:30.1841262Z" end-time="2022-08-11T22:34:30.1841606Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_one-byte-utf-8'
JSON: '["\u002c"]'
Expected: 'True'
Parsed: '[","]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1323" name="accepted.y_string_pi" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_pi" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1695832279" result="Passed" start-time="2022-08-11T22:34:30.1841672Z" end-time="2022-08-11T22:34:30.1842001Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_pi'
JSON: '["π"]'
Expected: 'True'
Parsed: '["π"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1324" name="accepted.y_string_reservedCharacterInUTF-8_U+1BFFF" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_reservedCharacterInUTF-8_U+1BFFF" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1827096167" result="Passed" start-time="2022-08-11T22:34:30.1842065Z" end-time="2022-08-11T22:34:30.1842385Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_reservedCharacterInUTF-8_U+1BFFF'
JSON: '["𛿿"]'
Expected: 'True'
Parsed: '["𛿿"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1325" name="accepted.y_string_simple_ascii" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_simple_ascii" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="768468154" result="Passed" start-time="2022-08-11T22:34:30.1842451Z" end-time="2022-08-11T22:34:30.1842771Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_simple_ascii'
JSON: '["asd "]'
Expected: 'True'
Parsed: '["asd "]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1326" name="accepted.y_string_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="189679009" result="Passed" start-time="2022-08-11T22:34:30.1842834Z" end-time="2022-08-11T22:34:30.1843136Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_string_space'
JSON: '" "'
Expected: 'True'
Parsed: '" "'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1327" name="accepted.y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1444088288" result="Passed" start-time="2022-08-11T22:34:30.1843203Z" end-time="2022-08-11T22:34:30.1843535Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF'
JSON: '["\uD834\uDd1e"]'
Expected: 'True'
Parsed: '["𝄞"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1328" name="accepted.y_string_three-byte-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_three-byte-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1818698007" result="Passed" start-time="2022-08-11T22:34:30.1843598Z" end-time="2022-08-11T22:34:30.1843936Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_three-byte-utf-8'
JSON: '["\u0821"]'
Expected: 'True'
Parsed: '["ࠡ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1329" name="accepted.y_string_two-byte-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_two-byte-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1439563269" result="Passed" start-time="2022-08-11T22:34:30.1844000Z" end-time="2022-08-11T22:34:30.1844326Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_two-byte-utf-8'
JSON: '["\u0123"]'
Expected: 'True'
Parsed: '["ģ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1330" name="accepted.y_string_u+2028_line_sep" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_u+2028_line_sep" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1022937739" result="Passed" start-time="2022-08-11T22:34:30.1844389Z" end-time="2022-08-11T22:34:30.1844712Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_u+2028_line_sep'
JSON: '[" "]'
Expected: 'True'
Parsed: '[" "]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1331" name="accepted.y_string_u+2029_par_sep" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_u+2029_par_sep" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1329029795" result="Passed" start-time="2022-08-11T22:34:30.1844775Z" end-time="2022-08-11T22:34:30.1845095Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_u+2029_par_sep'
JSON: '[" "]'
Expected: 'True'
Parsed: '[" "]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1332" name="accepted.y_string_uEscape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_uEscape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="628919451" result="Passed" start-time="2022-08-11T22:34:30.1845159Z" end-time="2022-08-11T22:34:30.1845491Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_uEscape'
JSON: '["\u0061\u30af\u30EA\u30b9"]'
Expected: 'True'
Parsed: '["aクリス"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1333" name="accepted.y_string_uescaped_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_uescaped_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1098642839" result="Passed" start-time="2022-08-11T22:34:30.1845557Z" end-time="2022-08-11T22:34:30.1845889Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_uescaped_newline'
JSON: '["new\u000Aline"]'
Expected: 'True'
Parsed: '["new
line"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1334" name="accepted.y_string_unescaped_char_delete" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unescaped_char_delete" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1816216013" result="Passed" start-time="2022-08-11T22:34:30.1845956Z" end-time="2022-08-11T22:34:30.1846357Z" duration="0.000040" asserts="1">
                    <output><![CDATA[File: 'y_string_unescaped_char_delete'
JSON: '["\u007f"]'
Expected: 'True'
Parsed: '["\u007f"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1335" name="accepted.y_string_unicode" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1255764836" result="Passed" start-time="2022-08-11T22:34:30.1846427Z" end-time="2022-08-11T22:34:30.1846765Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode'
JSON: '["\uA66D"]'
Expected: 'True'
Parsed: '["ꙭ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1336" name="accepted.y_string_unicodeEscapedBackslash" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicodeEscapedBackslash" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="270761634" result="Passed" start-time="2022-08-11T22:34:30.1846828Z" end-time="2022-08-11T22:34:30.1847163Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_unicodeEscapedBackslash'
JSON: '["\u005C"]'
Expected: 'True'
Parsed: '["\"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1337" name="accepted.y_string_unicode_2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="322673491" result="Passed" start-time="2022-08-11T22:34:30.1847230Z" end-time="2022-08-11T22:34:30.1847553Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_2'
JSON: '["⍂㈴⍂"]'
Expected: 'True'
Parsed: '["⍂㈴⍂"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1338" name="accepted.y_string_unicode_escaped_double_quote" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_escaped_double_quote" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1365402365" result="Passed" start-time="2022-08-11T22:34:30.1847616Z" end-time="2022-08-11T22:34:30.1847939Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_escaped_double_quote'
JSON: '["\u0022"]'
Expected: 'True'
Parsed: '["""]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1339" name="accepted.y_string_unicode_U+10FFFE_nonchar" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+10FFFE_nonchar" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2147219543" result="Passed" start-time="2022-08-11T22:34:30.1848002Z" end-time="2022-08-11T22:34:30.1848331Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+10FFFE_nonchar'
JSON: '["\uDBFF\uDFFE"]'
Expected: 'True'
Parsed: '["􏿾"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1340" name="accepted.y_string_unicode_U+1FFFE_nonchar" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+1FFFE_nonchar" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1905199286" result="Passed" start-time="2022-08-11T22:34:30.1848395Z" end-time="2022-08-11T22:34:30.1848724Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+1FFFE_nonchar'
JSON: '["\uD83F\uDFFE"]'
Expected: 'True'
Parsed: '["🿾"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1341" name="accepted.y_string_unicode_U+200B_ZERO_WIDTH_SPACE" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+200B_ZERO_WIDTH_SPACE" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1910312103" result="Passed" start-time="2022-08-11T22:34:30.1848790Z" end-time="2022-08-11T22:34:30.1849116Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+200B_ZERO_WIDTH_SPACE'
JSON: '["\u200B"]'
Expected: 'True'
Parsed: '["​"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1342" name="accepted.y_string_unicode_U+2064_invisible_plus" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+2064_invisible_plus" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2090129914" result="Passed" start-time="2022-08-11T22:34:30.1849180Z" end-time="2022-08-11T22:34:30.1849509Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+2064_invisible_plus'
JSON: '["\u2064"]'
Expected: 'True'
Parsed: '["⁤"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1343" name="accepted.y_string_unicode_U+FDD0_nonchar" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+FDD0_nonchar" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1060034115" result="Passed" start-time="2022-08-11T22:34:30.1849575Z" end-time="2022-08-11T22:34:30.1849907Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+FDD0_nonchar'
JSON: '["\uFDD0"]'
Expected: 'True'
Parsed: '["﷐"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1344" name="accepted.y_string_unicode_U+FFFE_nonchar" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+FFFE_nonchar" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1527968635" result="Passed" start-time="2022-08-11T22:34:30.1849971Z" end-time="2022-08-11T22:34:30.1850291Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+FFFE_nonchar'
JSON: '["\uFFFE"]'
Expected: 'True'
Parsed: '["\ufffe"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1345" name="accepted.y_string_utf8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_utf8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="526285128" result="Passed" start-time="2022-08-11T22:34:30.1850354Z" end-time="2022-08-11T22:34:30.1850674Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_utf8'
JSON: '["€𝄞"]'
Expected: 'True'
Parsed: '["€𝄞"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1346" name="accepted.y_string_with_del_character" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_with_del_character" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="680094347" result="Passed" start-time="2022-08-11T22:34:30.1850737Z" end-time="2022-08-11T22:34:30.1851051Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_string_with_del_character'
JSON: '["a\u007fa"]'
Expected: 'True'
Parsed: '["a\u007fa"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1347" name="accepted.y_structure_lonely_false" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_false" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1825821711" result="Passed" start-time="2022-08-11T22:34:30.1851124Z" end-time="2022-08-11T22:34:30.1851435Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_false'
JSON: 'false'
Expected: 'True'
Parsed: 'false'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1348" name="accepted.y_structure_lonely_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="23314964" result="Passed" start-time="2022-08-11T22:34:30.1851498Z" end-time="2022-08-11T22:34:30.1851833Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_int'
JSON: '42'
Expected: 'True'
Parsed: '42'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1349" name="accepted.y_structure_lonely_negative_real" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_negative_real" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="474910747" result="Passed" start-time="2022-08-11T22:34:30.1851900Z" end-time="2022-08-11T22:34:30.1852238Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_negative_real'
JSON: '-0.1'
Expected: 'True'
Parsed: '-0.1'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1350" name="accepted.y_structure_lonely_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="629918619" result="Passed" start-time="2022-08-11T22:34:30.1852304Z" end-time="2022-08-11T22:34:30.1852615Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_null'
JSON: 'null'
Expected: 'True'
Parsed: 'null'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1351" name="accepted.y_structure_lonely_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="63078966" result="Passed" start-time="2022-08-11T22:34:30.1852678Z" end-time="2022-08-11T22:34:30.1852983Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_string'
JSON: '"asd"'
Expected: 'True'
Parsed: '"asd"'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1352" name="accepted.y_structure_lonely_true" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_true" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1760277863" result="Passed" start-time="2022-08-11T22:34:30.1853053Z" end-time="2022-08-11T22:34:30.1853358Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_true'
JSON: 'true'
Expected: 'True'
Parsed: 'true'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1353" name="accepted.y_structure_string_empty" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_string_empty" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1144651991" result="Passed" start-time="2022-08-11T22:34:30.1853424Z" end-time="2022-08-11T22:34:30.1853735Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_string_empty'
JSON: '""'
Expected: 'True'
Parsed: '""'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1354" name="accepted.y_structure_trailing_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_trailing_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2144097210" result="Passed" start-time="2022-08-11T22:34:30.1853795Z" end-time="2022-08-11T22:34:30.1854121Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_structure_trailing_newline'
JSON: '["a"]
'
Expected: 'True'
Parsed: '["a"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1355" name="accepted.y_structure_true_in_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_true_in_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="555498857" result="Passed" start-time="2022-08-11T22:34:30.1854188Z" end-time="2022-08-11T22:34:30.1854499Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_true_in_array'
JSON: '[true]'
Expected: 'True'
Parsed: '[true]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1356" name="accepted.y_structure_whitespace_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_whitespace_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1397969283" result="Passed" start-time="2022-08-11T22:34:30.1854562Z" end-time="2022-08-11T22:34:30.1854870Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_whitespace_array'
JSON: ' [] '
Expected: 'True'
Parsed: '[]'
Result: 'True'
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>