<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="0" name="Jsonata.Net.Native.JsonParser.TestSuite.dll" fullname="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonParser.TestSuite\bin\Debug\net5.0\Jsonata.Net.Native.JsonParser.TestSuite.dll" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" total="354" passed="298" failed="0" inconclusive="0" skipped="56" asserts="298" engine-version="3.12.0.0" clr-version="5.0.17" start-time="2022-08-11 21:40:15Z" end-time="2022-08-11 21:40:15Z" duration="0.239627">
  <command-line><![CDATA[F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonParser.TestSuite\bin\Debug\net5.0\testhost.dll --port 61982 --endpoint 127.0.0.1:061982 --role client --parentprocessid 24736 --telemetryoptedin false]]></command-line>
  <filter>
    <or>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail10</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail11</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail12</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail13</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail14</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail15</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail16</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail17</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail18</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail19</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail20</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail21</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail22</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail23</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail24</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail25</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail26</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail27</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail28</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail29</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail30</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail31</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail32</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail33</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail4</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail5</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail6</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail7</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail9</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_double_huge_neg_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_huge_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_neg_int_huge_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_pos_double_huge_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_neg_overflow</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_pos_overflow</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_underflow</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_too_big_neg_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_too_big_pos_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_very_big_negative_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_object_key_lone_2nd_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_1st_surrogate_but_2nd_missing</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_1st_valid_surrogate_2nd_invalid</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogates_escape_valid</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogate_and_escape_valid</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogate_pair</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_lonely_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_inverted_surrogates_U+1D11E</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_iso_latin_1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_lone_second_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_lone_utf8_continuation_byte</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_not_in_unicode_range</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_2_bytes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_6_bytes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_6_bytes_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_truncated-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF-16LE_with_BOM</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF-8_invalid_sequence</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_utf16BE_no_BOM</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_utf16LE_no_BOM</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF8_surrogate_U+D800</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_structure_500_nested_arrays</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_structure_UTF-8_BOM_empty_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_1_true_without_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_a_invalid_utf8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_colon_instead_of_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_comma_after_close</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_comma_and_number</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_double_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_double_extra_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_extra_close</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_extra_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_incomplete</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_incomplete_invalid_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_inner_array_no_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_invalid_utf8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_items_separated_by_semicolon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_just_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_just_minus</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_missing_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_newlines_unclosed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_number_and_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_number_and_several_commas</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_spaces_vertical_tab_formfeed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_star_inside</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_trailing_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_with_new_lines</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_with_object_inside</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_false</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_true</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_multidigit_number_then_00</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_++</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_+1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_+Inf</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-01</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-1_0_</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-2_</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-NaN</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number__-1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number__2e-3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_1_2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_3e+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_3e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_e1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0e+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_capital_E+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_capital_E</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e-</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1eE2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_000</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e+3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e-3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e3</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_9_e+</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_expression</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_hex_1_digit</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_hex_2_digits</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_Inf</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_infinity</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid+-</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-negative-real</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-bigger-int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-exponent</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_infinity</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_sign_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_space_1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_NaN</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_int_starting_with_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_real_without_int_part</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_with_garbage_at_end</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_garbage_after_e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_without_fractional_part</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_with_invalid_utf8_after_e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_starting_with_dot</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_U+FF11_fullwidth_digit_one</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_alpha</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_alpha_char</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_leading_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_bad_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_bracket_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_comma_instead_of_colon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_double_colon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_emoji</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_garbage_at_end</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_key_with_single_quotes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_lone_continuation_byte_in_key_and_trailing_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_colon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_semicolon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_no-colon</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_non_string_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_non_string_key_but_huge_number_instead</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_repeated_null_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_several_trailing_commas</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_single_quote</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_open</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_slash_open</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_slash_open_incomplete</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_two_commas_in_a_row</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_unquoted_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_unterminated-value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_with_single_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_single_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u1x</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_accentuated_char_no_quotes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_backslash_00</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_backslash_bad</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_ctrl_char_tab</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_emoji</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escape_x</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_escaped_character</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_surrogate</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_surrogate_escape_invalid</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid-utf-8-in-escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_backslash_esc</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_unicode_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_utf8_after_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_leading_uescaped_thinspace</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_no_quotes_with_bad_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_doublequote</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_quote</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_string_no_double_quotes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_start_escape_unclosed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_ctrl_char</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_tab</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unicode_CapitalU</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_100000_opening_arrays</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_angle_bracket__</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_angle_bracket_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_with_extra_array_close</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_with_unclosed_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_ascii-unicode-identifier</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_capitalized_True</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_close_unopened_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_comma_instead_of_closing_brace</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_double_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_end_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_incomplete_UTF8_BOM</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_lone-invalid-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_lone-open-bracket</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_no_data</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_null-byte-outside-string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_number_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_followed_by_closing_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_unclosed_no_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_with_comment</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_with_trailing_garbage</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_apostrophe</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_open_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_open_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_close_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_comma</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_open_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_open_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_string_with_apostrophes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_open</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_single_eacute</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_single_star</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_trailing_#</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_U+2060_word_joined</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_uescaped_LF_before_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_partial_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_unfinished_false</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_unfinished_true</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unicode-identifier</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_UTF8_BOM_no_data</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_whitespace_formfeed</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_whitespace_U+2060_word_joiner</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_arraysWithSpaces</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_empty-string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_empty</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_ending_with_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_false</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_heterogeneous</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_1_and_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_leading_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_several_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_trailing_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_0e+1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_0e1</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_after_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_double_close_to_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_int_with_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_minus_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_one</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e_neg_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e_pos_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_exponent</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_fraction_exponent</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_neg_exp</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_pos_exponent</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_simple_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_simple_real</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_basic</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_duplicated_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_duplicated_key_and_value</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_empty</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_empty_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_escaped_null_in_key</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_extreme_numbers</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_long_strings</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_simple</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_string_unicode</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_with_newlines</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_1_2_3_bytes_UTF-8_sequences</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_accepted_surrogate_pair</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_accepted_surrogate_pairs</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_allowed_escapes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_backslash_and_u_escaped_zero</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_backslash_doublequotes</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_comments</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_double_escape_a</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_double_escape_n</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_escaped_control_character</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_escaped_noncharacter</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_in_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_in_array_with_leading_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_last_surrogates_1_and_2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nbsp_uescaped</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nonCharacterInUTF-8_U+10FFFF</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nonCharacterInUTF-8_U+FFFF</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_null_escape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_one-byte-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_pi</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_reservedCharacterInUTF-8_U+1BFFF</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_simple_ascii</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_space</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_three-byte-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_two-byte-utf-8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_u+2028_line_sep</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_u+2029_par_sep</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_uEscape</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_uescaped_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unescaped_char_delete</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicodeEscapedBackslash</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_2</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_escaped_double_quote</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+10FFFE_nonchar</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+1FFFE_nonchar</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+200B_ZERO_WIDTH_SPACE</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+2064_invisible_plus</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+FDD0_nonchar</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+FFFE_nonchar</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_utf8</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_with_del_character</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_false</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_int</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_negative_real</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_null</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_string</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_true</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_string_empty</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_trailing_newline</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_true_in_array</test>
      <test>Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_whitespace_array</test>
    </or>
  </filter>
  <test-suite type="Assembly" id="0-1358" name="Jsonata.Net.Native.JsonParser.TestSuite.dll" fullname="F:/Projects/_NuGet_External/jsonata.net.native/src/Jsonata.Net.Native.JsonParser.TestSuite/bin/Debug/net5.0/Jsonata.Net.Native.JsonParser.TestSuite.dll" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.3858112Z" end-time="2022-08-11T21:40:15.4897703Z" duration="0.103916" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
    <environment framework-version="3.13.2.0" clr-version="5.0.17" os-version="Microsoft Windows 6.3.9600" platform="Win32NT" cwd="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonParser.TestSuite\bin\Debug\net5.0" machine-name="ABC-BARG" user="barg_ma" user-domain="ABC" culture="ru-RU" uiculture="ru-RU" os-architecture="x64" />
    <settings>
      <setting name="SynchronousEvents" value="False" />
      <setting name="RandomSeed" value="2092356551" />
      <setting name="SkipNonTestAssemblies" value="True" />
      <setting name="ProcessModel" value="InProcess" />
      <setting name="DomainUsage" value="Single" />
      <setting name="DefaultTestNamePattern" value="{m}{a}" />
      <setting name="WorkDirectory" value="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonParser.TestSuite\bin\Debug\net5.0" />
      <setting name="NumberOfTestWorkers" value="4" />
    </settings>
    <properties>
      <property name="_PID" value="23928" />
      <property name="_APPDOMAIN" value="testhost" />
    </properties>
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="TestSuite" id="0-1359" name="Jsonata" fullname="Jsonata" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.3903390Z" end-time="2022-08-11T21:40:15.4897652Z" duration="0.099426" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="0-1360" name="Net" fullname="Jsonata.Net" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.3905799Z" end-time="2022-08-11T21:40:15.4897377Z" duration="0.099158" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestSuite" id="0-1361" name="Native" fullname="Jsonata.Net.Native" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.3905899Z" end-time="2022-08-11T21:40:15.4888669Z" duration="0.098278" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-suite type="TestSuite" id="0-1362" name="JsonParser" fullname="Jsonata.Net.Native.JsonParser" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.3905938Z" end-time="2022-08-11T21:40:15.4888635Z" duration="0.098270" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <test-suite type="TestSuite" id="0-1363" name="TestSuite" fullname="Jsonata.Net.Native.JsonParser.TestSuite" runstate="Runnable" testcasecount="354" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.3905971Z" end-time="2022-08-11T21:40:15.4888590Z" duration="0.098263" total="354" passed="298" failed="0" warnings="0" inconclusive="0" skipped="56" asserts="298">
              <reason>
                <message><![CDATA[One or more child tests were ignored]]></message>
              </reason>
              <test-suite type="TestFixture" id="0-1000" name="JSONchecker" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" testcasecount="36" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.3915918Z" end-time="2022-08-11T21:40:15.4457860Z" duration="0.054195" total="36" passed="31" failed="0" warnings="0" inconclusive="0" skipped="5" asserts="31">
                <reason>
                  <message><![CDATA[One or more child tests were ignored]]></message>
                </reason>
                <test-suite type="ParameterizedMethod" id="0-1037" name="Test" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" testcasecount="36" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.3939053Z" end-time="2022-08-11T21:40:15.4446570Z" duration="0.050752" total="36" passed="31" failed="0" warnings="0" inconclusive="0" skipped="5" asserts="31">
                  <reason>
                    <message><![CDATA[One or more child tests were ignored]]></message>
                  </reason>
                  <test-case id="0-1001" name="fail.fail1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="2119120145" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.3939379Z" end-time="2022-08-11T21:40:15.4231230Z" duration="0.029276" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem at all]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail1'
JSON: '"A JSON payload should be an object or array, not a string."'
Expected: 'False'
Parsed: '"A JSON payload should be an object or array, not a string."'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1002" name="fail.fail10" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail10" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1573837630" result="Passed" start-time="2022-08-11T21:40:15.4249278Z" end-time="2022-08-11T21:40:15.4356392Z" duration="0.010712" asserts="1">
                    <output><![CDATA[File: 'fail10'
JSON: '{"Extra value after close": true} "misplaced quoted value"'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 34)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1003" name="fail.fail11" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail11" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1332055464" result="Passed" start-time="2022-08-11T21:40:15.4356666Z" end-time="2022-08-11T21:40:15.4363181Z" duration="0.000651" asserts="1">
                    <output><![CDATA[File: 'fail11'
JSON: '{"Illegal expression": 1 + 2}'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in object (at position 25)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1004" name="fail.fail12" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail12" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1852121845" result="Passed" start-time="2022-08-11T21:40:15.4363323Z" end-time="2022-08-11T21:40:15.4364168Z" duration="0.000085" asserts="1">
                    <output><![CDATA[File: 'fail12'
JSON: '{"Illegal invocation": alert()}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'a' (at position 23)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1005" name="fail.fail13" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail13" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="2118213386" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4364246Z" end-time="2022-08-11T21:40:15.4375594Z" duration="0.001135" asserts="0">
                    <reason>
                      <message><![CDATA[Let's allow that too]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail13'
JSON: '{"Numbers cannot have leading zeroes": 013}'
Expected: 'False'
Parsed: '{"Numbers cannot have leading zeroes":13}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1006" name="fail.fail14" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail14" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1455634289" result="Passed" start-time="2022-08-11T21:40:15.4375781Z" end-time="2022-08-11T21:40:15.4376753Z" duration="0.000097" asserts="1">
                    <output><![CDATA[File: 'fail14'
JSON: '{"Numbers cannot be hex": 0x14}'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in object (at position 27)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1007" name="fail.fail15" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail15" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="2002549821" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4376832Z" end-time="2022-08-11T21:40:15.4392393Z" duration="0.001556" asserts="0">
                    <reason>
                      <message><![CDATA[Maybe not that illegal?]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail15'
JSON: '["Illegal backslash escape: \x15"]'
Expected: 'False'
Parsed: '["Illegal backslash escape: \u0015"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1008" name="fail.fail16" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail16" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="344740581" result="Passed" start-time="2022-08-11T21:40:15.4392592Z" end-time="2022-08-11T21:40:15.4393625Z" duration="0.000104" asserts="1">
                    <output><![CDATA[File: 'fail16'
JSON: '[\naked]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1009" name="fail.fail17" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail17" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="571039772" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4393706Z" end-time="2022-08-11T21:40:15.4395925Z" duration="0.000222" asserts="0">
                    <reason>
                      <message><![CDATA[Maybe not that illegal?]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail17'
JSON: '["Illegal backslash escape: \017"]'
Expected: 'False'
Parsed: '["Illegal backslash escape: \u000f"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1010" name="fail.fail18" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail18" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1069498687" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4396013Z" end-time="2022-08-11T21:40:15.4399098Z" duration="0.000309" asserts="0">
                    <reason>
                      <message><![CDATA[Not too deep!]]></message>
                    </reason>
                    <output><![CDATA[File: 'fail18'
JSON: '[[[[[[[[[[[[[[[[[[[["Too deep"]]]]]]]]]]]]]]]]]]]]'
Expected: 'False'
Parsed: '[[[[[[[[[[[[[[[[[[[["Too deep"]]]]]]]]]]]]]]]]]]]]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1011" name="fail.fail19" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail19" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1560134519" result="Passed" start-time="2022-08-11T21:40:15.4399203Z" end-time="2022-08-11T21:40:15.4400079Z" duration="0.000088" asserts="1">
                    <output><![CDATA[File: 'fail19'
JSON: '{"Missing colon" null}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got 'n' (at position 17)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1012" name="fail.fail2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="36282841" result="Passed" start-time="2022-08-11T21:40:15.4400157Z" end-time="2022-08-11T21:40:15.4405767Z" duration="0.000561" asserts="1">
                    <output><![CDATA[File: 'fail2'
JSON: '["Unclosed array"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 17)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1013" name="fail.fail20" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail20" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="135771423" result="Passed" start-time="2022-08-11T21:40:15.4406050Z" end-time="2022-08-11T21:40:15.4407370Z" duration="0.000132" asserts="1">
                    <output><![CDATA[File: 'fail20'
JSON: '{"Double colon":: null}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ':' (at position 16)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1014" name="fail.fail21" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail21" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="7762136" result="Passed" start-time="2022-08-11T21:40:15.4407463Z" end-time="2022-08-11T21:40:15.4409133Z" duration="0.000167" asserts="1">
                    <output><![CDATA[File: 'fail21'
JSON: '{"Comma instead of colon", null}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got ',' (at position 25)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1015" name="fail.fail22" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail22" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1361153777" result="Passed" start-time="2022-08-11T21:40:15.4409597Z" end-time="2022-08-11T21:40:15.4411922Z" duration="0.000232" asserts="1">
                    <output><![CDATA[File: 'fail22'
JSON: '["Colon instead of comma": false]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 25)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1016" name="fail.fail23" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail23" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1035914225" result="Passed" start-time="2022-08-11T21:40:15.4412036Z" end-time="2022-08-11T21:40:15.4413226Z" duration="0.000119" asserts="1">
                    <output><![CDATA[File: 'fail23'
JSON: '["Bad value", truth]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got 't' (at position 17)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1017" name="fail.fail24" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail24" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1328788814" result="Passed" start-time="2022-08-11T21:40:15.4413304Z" end-time="2022-08-11T21:40:15.4414551Z" duration="0.000125" asserts="1">
                    <output><![CDATA[File: 'fail24'
JSON: '['single quote']'
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1018" name="fail.fail25" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail25" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="707012195" result="Passed" start-time="2022-08-11T21:40:15.4414630Z" end-time="2022-08-11T21:40:15.4415837Z" duration="0.000120" asserts="1">
                    <output><![CDATA[File: 'fail25'
JSON: '["	tab	character	in	string	"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x9) (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1019" name="fail.fail26" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail26" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="440059489" result="Passed" start-time="2022-08-11T21:40:15.4415919Z" end-time="2022-08-11T21:40:15.4416574Z" duration="0.000066" asserts="1">
                    <output><![CDATA[File: 'fail26'
JSON: '["tab\	character\	in\	string\	"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x9) (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1020" name="fail.fail27" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail27" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="400713860" result="Passed" start-time="2022-08-11T21:40:15.4416646Z" end-time="2022-08-11T21:40:15.4417259Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'fail27'
JSON: '["line
break"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0xA) (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1021" name="fail.fail28" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail28" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1612116321" result="Passed" start-time="2022-08-11T21:40:15.4417331Z" end-time="2022-08-11T21:40:15.4417920Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'fail28'
JSON: '["line\
break"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0xA) (at position 7)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1022" name="fail.fail29" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail29" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1784132518" result="Passed" start-time="2022-08-11T21:40:15.4417989Z" end-time="2022-08-11T21:40:15.4418807Z" duration="0.000082" asserts="1">
                    <output><![CDATA[File: 'fail29'
JSON: '[0e]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1023" name="fail.fail3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="289819937" result="Passed" start-time="2022-08-11T21:40:15.4418880Z" end-time="2022-08-11T21:40:15.4419758Z" duration="0.000088" asserts="1">
                    <output><![CDATA[File: 'fail3'
JSON: '{unquoted_key: "keys must be quoted"}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got 'u' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1024" name="fail.fail30" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail30" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="197904371" result="Passed" start-time="2022-08-11T21:40:15.4419828Z" end-time="2022-08-11T21:40:15.4420661Z" duration="0.000083" asserts="1">
                    <output><![CDATA[File: 'fail30'
JSON: '[0e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e+' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1025" name="fail.fail31" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail31" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="166926198" result="Passed" start-time="2022-08-11T21:40:15.4420733Z" end-time="2022-08-11T21:40:15.4421352Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'fail31'
JSON: '[0e+-1]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e+-1' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1026" name="fail.fail32" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail32" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="93091422" result="Passed" start-time="2022-08-11T21:40:15.4421425Z" end-time="2022-08-11T21:40:15.4422028Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'fail32'
JSON: '{"Comma instead if closing brace": true,'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 40)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1027" name="fail.fail33" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail33" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="54198838" result="Passed" start-time="2022-08-11T21:40:15.4422243Z" end-time="2022-08-11T21:40:15.4422810Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'fail33'
JSON: '["mismatch"}'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1028" name="fail.fail4" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail4" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="233682753" result="Passed" start-time="2022-08-11T21:40:15.4422883Z" end-time="2022-08-11T21:40:15.4423963Z" duration="0.000108" asserts="1">
                    <output><![CDATA[File: 'fail4'
JSON: '["extra comma",]'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an array (at position 15)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1029" name="fail.fail5" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail5" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="780111458" result="Passed" start-time="2022-08-11T21:40:15.4424039Z" end-time="2022-08-11T21:40:15.4424658Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'fail5'
JSON: '["double extra comma",,]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 22)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1030" name="fail.fail6" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail6" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1624997306" result="Passed" start-time="2022-08-11T21:40:15.4424727Z" end-time="2022-08-11T21:40:15.4425298Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'fail6'
JSON: '[   , "<-- missing value"]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1031" name="fail.fail7" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail7" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1573429293" result="Passed" start-time="2022-08-11T21:40:15.4425370Z" end-time="2022-08-11T21:40:15.4425916Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'fail7'
JSON: '["Comma after the close"],'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 25)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1032" name="fail.fail8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="320954525" result="Passed" start-time="2022-08-11T21:40:15.4425986Z" end-time="2022-08-11T21:40:15.4426523Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'fail8'
JSON: '["Extra close"]]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 15)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1033" name="fail.fail9" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.fail.fail9" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="389487584" result="Passed" start-time="2022-08-11T21:40:15.4426596Z" end-time="2022-08-11T21:40:15.4427178Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'fail9'
JSON: '{"Extra comma": true,}'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an object (at position 21)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1034" name="pass.pass1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="110408751" result="Passed" start-time="2022-08-11T21:40:15.4427290Z" end-time="2022-08-11T21:40:15.4436443Z" duration="0.000916" asserts="1">
                    <output><![CDATA[File: 'pass1'
JSON: '[
    "JSON Test Pattern pass1",
    {"object with 1 member":["array with 1 element"]},
    {},
    [],
    -42,
    true,
    false,
    null,
    {
        "integer": 1234567890,
        "real": -9876.543210,
        "e": 0.123456789e-12,
        "E": 1.234567890E+34,
        "":  23456789012E66,
        "zero": 0,
        "one": 1,
        "space": " ",
        "quote": "\"",
        "backslash": "\\",
        "controls": "\b\f\n\r\t",
        "slash": "/ & \/",
        "alpha": "abcdefghijklmnopqrstuvwyz",
        "ALPHA": "ABCDEFGHIJKLMNOPQRSTUVWYZ",
        "digit": "0123456789",
        "0123456789": "digit",
        "special": "`1~!@#$%^&*()_+-={':[,]}|;.</>?",
        "hex": "\u0123\u4567\u89AB\uCDEF\uabcd\uef4A",
        "true": true,
        "false": false,
        "null": null,
        "array":[  ],
        "object":{  },
        "address": "50 St. James Street",
        "url": "http://www.JSON.org/",
        "comment": "// /* <!-- --",
        "# -- --> */": " ",
        " s p a c e d " :[1,2 , 3

,

4 , 5        ,          6           ,7        ],"compact":[1,2,3,4,5,6,7],
        "jsontext": "{\"object with 1 member\":[\"array with 1 element\"]}",
        "quotes": "&#34; \u0022 %22 0x22 034 &#x22;",
        "\/\\\"\uCAFE\uBABE\uAB98\uFCDE\ubcda\uef4A\b\f\n\r\t`1~!@#$%^&*()_+-=[]{}|;:',./<>?"
: "A key can be any string"
    },
    0.5 ,98.6
,
99.44
,

1066,
1e1,
0.1e1,
1e-1,
1e00,2e+00,2e-00
,"rosebud"]'
Expected: 'True'
Parsed: '["JSON Test Pattern pass1",{"object with 1 member":["array with 1 element"]},{},[],-42,true,false,null,{"integer":1234567890,"real":-9876.543210,"e":0.000000000000123456789,"E":1.23456789e+34,"":2.3456789012e+76,"zero":0,"one":1,"space":" ","quote":""","backslash":"\","controls":"\u0008\u000c

	","slash":"/ & /","alpha":"abcdefghijklmnopqrstuvwyz","ALPHA":"ABCDEFGHIJKLMNOPQRSTUVWYZ","digit":"0123456789","0123456789":"digit","special":"`1~!@#$%^&*()_+-={':[,]}|;.</>?","hex":"ģ䕧覫췯ꯍ","true":true,"false":false,"null":null,"array":[],"object":{},"address":"50 St. James Street","url":"http://www.JSON.org/","comment":"// /* <!-- --","# -- --> */":" "," s p a c e d ":[1,2,3,4,5,6,7],"compact":[1,2,3,4,5,6,7],"jsontext":"{"object with 1 member":["array with 1 element"]}","quotes":"&#34; " %22 0x22 034 &#x22;","/\"쫾몾ꮘﳞ볚\u0008\u000c

	`1~!@#$%^&*()_+-=[]{}|;:',./<>?":"A key can be any string"},0.5,98.6,99.44,1066,10,1,0.1,1,2,2,"rosebud"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1035" name="pass.pass2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="1867443773" result="Passed" start-time="2022-08-11T21:40:15.4436539Z" end-time="2022-08-11T21:40:15.4437028Z" duration="0.000049" asserts="1">
                    <output><![CDATA[File: 'pass2'
JSON: '[[[[[[[[[[[[[[[[[[["Not too deep"]]]]]]]]]]]]]]]]]]]'
Expected: 'True'
Parsed: '[[[[[[[[[[[[[[[[[[["Not too deep"]]]]]]]]]]]]]]]]]]]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1036" name="pass.pass3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker.pass.pass3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONchecker" runstate="Runnable" seed="83277113" result="Passed" start-time="2022-08-11T21:40:15.4437101Z" end-time="2022-08-11T21:40:15.4437520Z" duration="0.000042" asserts="1">
                    <output><![CDATA[File: 'pass3'
JSON: '{
    "JSON Test Pattern pass3": {
        "The outermost value": "must be an object or array.",
        "In this test": "It is an object."
    }
}
'
Expected: 'True'
Parsed: '{"JSON Test Pattern pass3":{"The outermost value":"must be an object or array.","In this test":"It is an object."}}'
Result: 'True'
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestFixture" id="0-1038" name="JSONTestSuite" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" testcasecount="318" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.4469715Z" end-time="2022-08-11T21:40:15.4888530Z" duration="0.041881" total="318" passed="267" failed="0" warnings="0" inconclusive="0" skipped="51" asserts="267">
                <reason>
                  <message><![CDATA[One or more child tests were ignored]]></message>
                </reason>
                <test-suite type="ParameterizedMethod" id="0-1357" name="Test" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" testcasecount="318" result="Skipped" label="Ignored" site="Child" start-time="2022-08-11T21:40:15.4470841Z" end-time="2022-08-11T21:40:15.4888336Z" duration="0.041750" total="318" passed="267" failed="0" warnings="0" inconclusive="0" skipped="51" asserts="267">
                  <reason>
                    <message><![CDATA[One or more child tests were ignored]]></message>
                  </reason>
                  <test-case id="0-1039" name="ambigous.i_number_double_huge_neg_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_double_huge_neg_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="971206311" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4470977Z" end-time="2022-08-11T21:40:15.4481168Z" duration="0.001019" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_double_huge_neg_exp'
JSON: '[123.456e-789]'
Expected: ''
Parsed: '[0.0000000000000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1040" name="ambigous.i_number_huge_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_huge_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="117393207" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4481337Z" end-time="2022-08-11T21:40:15.4485092Z" duration="0.000376" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_huge_exp'
JSON: '[0.4e00669999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999969999999006]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1041" name="ambigous.i_number_neg_int_huge_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_neg_int_huge_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="824450940" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4485189Z" end-time="2022-08-11T21:40:15.4487459Z" duration="0.000227" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_neg_int_huge_exp'
JSON: '[-1e+9999]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1042" name="ambigous.i_number_pos_double_huge_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_pos_double_huge_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="57107472" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4487552Z" end-time="2022-08-11T21:40:15.4489756Z" duration="0.000220" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_pos_double_huge_exp'
JSON: '[1.5e+9999]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1043" name="ambigous.i_number_real_neg_overflow" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_neg_overflow" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1156906162" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4489844Z" end-time="2022-08-11T21:40:15.4492065Z" duration="0.000222" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_real_neg_overflow'
JSON: '[-123123e100000]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1044" name="ambigous.i_number_real_pos_overflow" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_pos_overflow" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1206885275" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4492156Z" end-time="2022-08-11T21:40:15.4495150Z" duration="0.000300" asserts="0">
                    <reason>
                      <message><![CDATA[Skipping ambigous test with integer overflows]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_real_pos_overflow'
JSON: '[123123e100000]'
Expected: ''
]]></output>
                  </test-case>
                  <test-case id="0-1045" name="ambigous.i_number_real_underflow" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_real_underflow" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1684628497" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4495238Z" end-time="2022-08-11T21:40:15.4497879Z" duration="0.000264" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_real_underflow'
JSON: '[123e-10000000]'
Expected: ''
Parsed: '[0.0000000000000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1046" name="ambigous.i_number_too_big_neg_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_too_big_neg_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1029300542" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4498124Z" end-time="2022-08-11T21:40:15.4500886Z" duration="0.000276" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_too_big_neg_int'
JSON: '[-123123123123123123123123123123]'
Expected: ''
Exception: 'Parsing falied: Failed to parse an integer: '-123123123123123123123123123123' (at position 32)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1047" name="ambigous.i_number_too_big_pos_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_too_big_pos_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="153006815" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4500971Z" end-time="2022-08-11T21:40:15.4502984Z" duration="0.000201" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_too_big_pos_int'
JSON: '[100000000000000000000]'
Expected: ''
Parsed: '[100000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1048" name="ambigous.i_number_very_big_negative_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_number_very_big_negative_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="441493335" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4503072Z" end-time="2022-08-11T21:40:15.4505221Z" duration="0.000215" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_number_very_big_negative_int'
JSON: '[-237462374673276894279832749832423479823246327846]'
Expected: ''
Exception: 'Parsing falied: Failed to parse an integer: '-237462374673276894279832749832423479823246327846' (at position 50)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1049" name="ambigous.i_object_key_lone_2nd_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_object_key_lone_2nd_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="192049341" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4505305Z" end-time="2022-08-11T21:40:15.4507301Z" duration="0.000199" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_object_key_lone_2nd_surrogate'
JSON: '{"\uDFAA":0}'
Expected: ''
Parsed: '{"\udfaa":0}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1050" name="ambigous.i_string_1st_surrogate_but_2nd_missing" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_1st_surrogate_but_2nd_missing" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="571087008" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4507403Z" end-time="2022-08-11T21:40:15.4509411Z" duration="0.000201" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_1st_surrogate_but_2nd_missing'
JSON: '["\uDADA"]'
Expected: ''
Parsed: '["\udada"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1051" name="ambigous.i_string_1st_valid_surrogate_2nd_invalid" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_1st_valid_surrogate_2nd_invalid" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="469733424" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4509498Z" end-time="2022-08-11T21:40:15.4511473Z" duration="0.000198" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_1st_valid_surrogate_2nd_invalid'
JSON: '["\uD888\u1234"]'
Expected: ''
Parsed: '["\ud888ሴ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1052" name="ambigous.i_string_incomplete_surrogates_escape_valid" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogates_escape_valid" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1478359200" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4511569Z" end-time="2022-08-11T21:40:15.4513543Z" duration="0.000197" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_incomplete_surrogates_escape_valid'
JSON: '["\uD800\uD800\n"]'
Expected: ''
Parsed: '["\ud800\ud800
"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1053" name="ambigous.i_string_incomplete_surrogate_and_escape_valid" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogate_and_escape_valid" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1366017875" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4513628Z" end-time="2022-08-11T21:40:15.4515732Z" duration="0.000211" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_incomplete_surrogate_and_escape_valid'
JSON: '["\uD800\n"]'
Expected: ''
Parsed: '["\ud800
"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1054" name="ambigous.i_string_incomplete_surrogate_pair" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_incomplete_surrogate_pair" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="218557428" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4515823Z" end-time="2022-08-11T21:40:15.4517748Z" duration="0.000193" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_incomplete_surrogate_pair'
JSON: '["\uDd1ea"]'
Expected: ''
Parsed: '["\udd1ea"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1055" name="ambigous.i_string_invalid_lonely_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_lonely_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="541144173" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4517833Z" end-time="2022-08-11T21:40:15.4519762Z" duration="0.000193" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_invalid_lonely_surrogate'
JSON: '["\ud800"]'
Expected: ''
Parsed: '["\ud800"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1056" name="ambigous.i_string_invalid_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="386154947" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4519846Z" end-time="2022-08-11T21:40:15.4522147Z" duration="0.000230" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_invalid_surrogate'
JSON: '["\ud800abc"]'
Expected: ''
Parsed: '["\ud800abc"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1057" name="ambigous.i_string_invalid_utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_invalid_utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="169972148" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4522231Z" end-time="2022-08-11T21:40:15.4524136Z" duration="0.000191" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_invalid_utf-8'
JSON: '["�"]'
Expected: ''
Parsed: '["�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1058" name="ambigous.i_string_inverted_surrogates_U+1D11E" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_inverted_surrogates_U+1D11E" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1218670033" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4524221Z" end-time="2022-08-11T21:40:15.4526207Z" duration="0.000198" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_inverted_surrogates_U+1D11E'
JSON: '["\uDd1e\uD834"]'
Expected: ''
Parsed: '["\udd1e\ud834"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1059" name="ambigous.i_string_iso_latin_1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_iso_latin_1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1890971212" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4526307Z" end-time="2022-08-11T21:40:15.4528208Z" duration="0.000190" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_iso_latin_1'
JSON: '["�"]'
Expected: ''
Parsed: '["�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1060" name="ambigous.i_string_lone_second_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_lone_second_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="862081463" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4528293Z" end-time="2022-08-11T21:40:15.4530210Z" duration="0.000192" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_lone_second_surrogate'
JSON: '["\uDFAA"]'
Expected: ''
Parsed: '["\udfaa"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1061" name="ambigous.i_string_lone_utf8_continuation_byte" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_lone_utf8_continuation_byte" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1820613388" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4530294Z" end-time="2022-08-11T21:40:15.4532259Z" duration="0.000197" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_lone_utf8_continuation_byte'
JSON: '["�"]'
Expected: ''
Parsed: '["�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1062" name="ambigous.i_string_not_in_unicode_range" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_not_in_unicode_range" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="861703438" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4532347Z" end-time="2022-08-11T21:40:15.4534267Z" duration="0.000192" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_not_in_unicode_range'
JSON: '["����"]'
Expected: ''
Parsed: '["����"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1063" name="ambigous.i_string_overlong_sequence_2_bytes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_2_bytes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="381198812" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4534351Z" end-time="2022-08-11T21:40:15.4536477Z" duration="0.000213" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_overlong_sequence_2_bytes'
JSON: '["��"]'
Expected: ''
Parsed: '["��"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1064" name="ambigous.i_string_overlong_sequence_6_bytes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_6_bytes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1185033648" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4536561Z" end-time="2022-08-11T21:40:15.4538677Z" duration="0.000212" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_overlong_sequence_6_bytes'
JSON: '["������"]'
Expected: ''
Parsed: '["������"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1065" name="ambigous.i_string_overlong_sequence_6_bytes_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_overlong_sequence_6_bytes_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="851303336" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4538762Z" end-time="2022-08-11T21:40:15.4540657Z" duration="0.000190" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_overlong_sequence_6_bytes_null'
JSON: '["������"]'
Expected: ''
Parsed: '["������"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1066" name="ambigous.i_string_truncated-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_truncated-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1039285910" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4540742Z" end-time="2022-08-11T21:40:15.4542933Z" duration="0.000219" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_truncated-utf-8'
JSON: '["��"]'
Expected: ''
Parsed: '["��"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1067" name="ambigous.i_string_UTF-16LE_with_BOM" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF-16LE_with_BOM" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="604909465" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4543021Z" end-time="2022-08-11T21:40:15.4544923Z" duration="0.000190" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_UTF-16LE_with_BOM'
JSON: '["é"]'
Expected: ''
Parsed: '["é"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1068" name="ambigous.i_string_UTF-8_invalid_sequence" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF-8_invalid_sequence" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2127630642" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4545004Z" end-time="2022-08-11T21:40:15.4546918Z" duration="0.000191" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_UTF-8_invalid_sequence'
JSON: '["日ш�"]'
Expected: ''
Parsed: '["日ш�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1069" name="ambigous.i_string_utf16BE_no_BOM" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_utf16BE_no_BOM" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="846571636" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4547003Z" end-time="2022-08-11T21:40:15.4549049Z" duration="0.000205" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_utf16BE_no_BOM'
JSON: '\u0000[\u0000"\u0000�\u0000"\u0000]'
Expected: ''
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\u0000' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1070" name="ambigous.i_string_utf16LE_no_BOM" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_utf16LE_no_BOM" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="612520693" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4549134Z" end-time="2022-08-11T21:40:15.4551202Z" duration="0.000207" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_utf16LE_no_BOM'
JSON: '[\u0000"\u0000�\u0000"\u0000]\u0000'
Expected: ''
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\u0000' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1071" name="ambigous.i_string_UTF8_surrogate_U+D800" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_string_UTF8_surrogate_U+D800" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1905400679" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4551286Z" end-time="2022-08-11T21:40:15.4553464Z" duration="0.000218" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_string_UTF8_surrogate_U+D800'
JSON: '["���"]'
Expected: ''
Parsed: '["���"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1072" name="ambigous.i_structure_500_nested_arrays" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_structure_500_nested_arrays" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="188073101" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4553560Z" end-time="2022-08-11T21:40:15.4557454Z" duration="0.000389" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_structure_500_nested_arrays'

Expected: ''
Parsed
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1073" name="ambigous.i_structure_UTF-8_BOM_empty_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.ambigous.i_structure_UTF-8_BOM_empty_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1474810811" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4557542Z" end-time="2022-08-11T21:40:15.4559459Z" duration="0.000192" asserts="0">
                    <reason>
                      <message><![CDATA[This is an ambigous test]]></message>
                    </reason>
                    <output><![CDATA[File: 'i_structure_UTF-8_BOM_empty_object'
JSON: '{}'
Expected: ''
Parsed: '{}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1074" name="rejected.n_array_1_true_without_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_1_true_without_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1594556036" result="Passed" start-time="2022-08-11T21:40:15.4559543Z" end-time="2022-08-11T21:40:15.4560540Z" duration="0.000099" asserts="1">
                    <output><![CDATA[File: 'n_array_1_true_without_comma'
JSON: '[1 true]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1075" name="rejected.n_array_a_invalid_utf8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_a_invalid_utf8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="415214005" result="Passed" start-time="2022-08-11T21:40:15.4560618Z" end-time="2022-08-11T21:40:15.4561222Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_array_a_invalid_utf8'
JSON: '[a�]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'a' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1076" name="rejected.n_array_colon_instead_of_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_colon_instead_of_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="771041290" result="Passed" start-time="2022-08-11T21:40:15.4561300Z" end-time="2022-08-11T21:40:15.4562146Z" duration="0.000085" asserts="1">
                    <output><![CDATA[File: 'n_array_colon_instead_of_comma'
JSON: '["": 1]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1077" name="rejected.n_array_comma_after_close" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_comma_after_close" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="82730868" result="Passed" start-time="2022-08-11T21:40:15.4562218Z" end-time="2022-08-11T21:40:15.4563033Z" duration="0.000082" asserts="1">
                    <output><![CDATA[File: 'n_array_comma_after_close'
JSON: '[""],'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1078" name="rejected.n_array_comma_and_number" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_comma_and_number" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1920973800" result="Passed" start-time="2022-08-11T21:40:15.4563102Z" end-time="2022-08-11T21:40:15.4563667Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_comma_and_number'
JSON: '[,1]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1079" name="rejected.n_array_double_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_double_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1263669829" result="Passed" start-time="2022-08-11T21:40:15.4563736Z" end-time="2022-08-11T21:40:15.4564310Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_array_double_comma'
JSON: '[1,,2]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1080" name="rejected.n_array_double_extra_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_double_extra_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1763464468" result="Passed" start-time="2022-08-11T21:40:15.4564379Z" end-time="2022-08-11T21:40:15.4564944Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_double_extra_comma'
JSON: '["x",,]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1081" name="rejected.n_array_extra_close" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_extra_close" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1517265006" result="Passed" start-time="2022-08-11T21:40:15.4565019Z" end-time="2022-08-11T21:40:15.4565548Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_array_extra_close'
JSON: '["x"]]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1082" name="rejected.n_array_extra_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_extra_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="507698574" result="Passed" start-time="2022-08-11T21:40:15.4565614Z" end-time="2022-08-11T21:40:15.4566169Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_extra_comma'
JSON: '["",]'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an array (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1083" name="rejected.n_array_incomplete" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_incomplete" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="470000794" result="Passed" start-time="2022-08-11T21:40:15.4566239Z" end-time="2022-08-11T21:40:15.4566806Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_incomplete'
JSON: '["x"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1084" name="rejected.n_array_incomplete_invalid_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_incomplete_invalid_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="127337881" result="Passed" start-time="2022-08-11T21:40:15.4566873Z" end-time="2022-08-11T21:40:15.4567440Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_incomplete_invalid_value'
JSON: '[x'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'x' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1085" name="rejected.n_array_inner_array_no_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_inner_array_no_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1314963916" result="Passed" start-time="2022-08-11T21:40:15.4567507Z" end-time="2022-08-11T21:40:15.4568059Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_inner_array_no_comma'
JSON: '[3[4]]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1086" name="rejected.n_array_invalid_utf8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_invalid_utf8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2127371114" result="Passed" start-time="2022-08-11T21:40:15.4568135Z" end-time="2022-08-11T21:40:15.4568690Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_invalid_utf8'
JSON: '[�]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '�' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1087" name="rejected.n_array_items_separated_by_semicolon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_items_separated_by_semicolon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="716643417" result="Passed" start-time="2022-08-11T21:40:15.4568757Z" end-time="2022-08-11T21:40:15.4569312Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_items_separated_by_semicolon'
JSON: '[1:2]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1088" name="rejected.n_array_just_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_just_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="690724998" result="Passed" start-time="2022-08-11T21:40:15.4569378Z" end-time="2022-08-11T21:40:15.4569934Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_just_comma'
JSON: '[,]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1089" name="rejected.n_array_just_minus" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_just_minus" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="360543830" result="Passed" start-time="2022-08-11T21:40:15.4570000Z" end-time="2022-08-11T21:40:15.4570604Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_array_just_minus'
JSON: '[-]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1090" name="rejected.n_array_missing_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_missing_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="723561619" result="Passed" start-time="2022-08-11T21:40:15.4570673Z" end-time="2022-08-11T21:40:15.4571226Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_missing_value'
JSON: '[   , ""]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1091" name="rejected.n_array_newlines_unclosed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_newlines_unclosed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1233182777" result="Passed" start-time="2022-08-11T21:40:15.4571301Z" end-time="2022-08-11T21:40:15.4572044Z" duration="0.000075" asserts="1">
                    <output><![CDATA[File: 'n_array_newlines_unclosed'
JSON: '["a",
4
,1,'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1092" name="rejected.n_array_number_and_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_number_and_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="133141617" result="Passed" start-time="2022-08-11T21:40:15.4572116Z" end-time="2022-08-11T21:40:15.4572693Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_array_number_and_comma'
JSON: '[1,]'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1093" name="rejected.n_array_number_and_several_commas" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_number_and_several_commas" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="714164362" result="Passed" start-time="2022-08-11T21:40:15.4572765Z" end-time="2022-08-11T21:40:15.4573457Z" duration="0.000069" asserts="1">
                    <output><![CDATA[File: 'n_array_number_and_several_commas'
JSON: '[1,,]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1094" name="rejected.n_array_spaces_vertical_tab_formfeed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_spaces_vertical_tab_formfeed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="109124848" result="Passed" start-time="2022-08-11T21:40:15.4573526Z" end-time="2022-08-11T21:40:15.4574115Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_array_spaces_vertical_tab_formfeed'
JSON: '["\u000ba"\f]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0xB) (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1095" name="rejected.n_array_star_inside" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_star_inside" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="444263466" result="Passed" start-time="2022-08-11T21:40:15.4574184Z" end-time="2022-08-11T21:40:15.4574740Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_star_inside'
JSON: '[*]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '*' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1096" name="rejected.n_array_unclosed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2110231149" result="Passed" start-time="2022-08-11T21:40:15.4574806Z" end-time="2022-08-11T21:40:15.4575361Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_array_unclosed'
JSON: '[""'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1097" name="rejected.n_array_unclosed_trailing_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_trailing_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1823392307" result="Passed" start-time="2022-08-11T21:40:15.4575431Z" end-time="2022-08-11T21:40:15.4575998Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_unclosed_trailing_comma'
JSON: '[1,'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1098" name="rejected.n_array_unclosed_with_new_lines" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_with_new_lines" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2119356161" result="Passed" start-time="2022-08-11T21:40:15.4576065Z" end-time="2022-08-11T21:40:15.4576635Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_array_unclosed_with_new_lines'
JSON: '[1,
1
,1'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1099" name="rejected.n_array_unclosed_with_object_inside" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_array_unclosed_with_object_inside" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="355581939" result="Passed" start-time="2022-08-11T21:40:15.4576705Z" end-time="2022-08-11T21:40:15.4577266Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_array_unclosed_with_object_inside'
JSON: '[{}'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1100" name="rejected.n_incomplete_false" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_false" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="645342587" result="Passed" start-time="2022-08-11T21:40:15.4577333Z" end-time="2022-08-11T21:40:15.4577924Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_incomplete_false'
JSON: '[fals]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got ']' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1101" name="rejected.n_incomplete_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="424391077" result="Passed" start-time="2022-08-11T21:40:15.4577994Z" end-time="2022-08-11T21:40:15.4578567Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_incomplete_null'
JSON: '[nul]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'l' but got ']' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1102" name="rejected.n_incomplete_true" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_incomplete_true" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="172859820" result="Passed" start-time="2022-08-11T21:40:15.4578640Z" end-time="2022-08-11T21:40:15.4579219Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_incomplete_true'
JSON: '[tru]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got ']' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1103" name="rejected.n_multidigit_number_then_00" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_multidigit_number_then_00" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1742405346" result="Passed" start-time="2022-08-11T21:40:15.4579289Z" end-time="2022-08-11T21:40:15.4579811Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_multidigit_number_then_00'
JSON: '123\u0000'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1104" name="rejected.n_number_++" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_++" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1727012295" result="Passed" start-time="2022-08-11T21:40:15.4579880Z" end-time="2022-08-11T21:40:15.4580436Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_++'
JSON: '[++1234]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '+' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1105" name="rejected.n_number_+1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_+1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="813169976" result="Passed" start-time="2022-08-11T21:40:15.4580505Z" end-time="2022-08-11T21:40:15.4581058Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_number_+1'
JSON: '[+1]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '+' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1106" name="rejected.n_number_+Inf" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_+Inf" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="281660323" result="Passed" start-time="2022-08-11T21:40:15.4581127Z" end-time="2022-08-11T21:40:15.4581698Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_number_+Inf'
JSON: '[+Inf]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '+' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1107" name="rejected.n_number_-01" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-01" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="3548389" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4581773Z" end-time="2022-08-11T21:40:15.4584034Z" duration="0.000226" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_-01'
JSON: '[-01]'
Expected: 'False'
Parsed: '[-1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1108" name="rejected.n_number_-1_0_" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-1_0_" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1918945486" result="Passed" start-time="2022-08-11T21:40:15.4584122Z" end-time="2022-08-11T21:40:15.4584804Z" duration="0.000068" asserts="1">
                    <output><![CDATA[File: 'n_number_-1.0.'
JSON: '[-1.0.]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '-1.0.' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1109" name="rejected.n_number_-2_" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-2_" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1950827070" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4584879Z" end-time="2022-08-11T21:40:15.4586896Z" duration="0.000202" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_-2.'
JSON: '[-2.]'
Expected: 'False'
Parsed: '[-2]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1110" name="rejected.n_number_-NaN" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_-NaN" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1917586530" result="Passed" start-time="2022-08-11T21:40:15.4586983Z" end-time="2022-08-11T21:40:15.4587651Z" duration="0.000067" asserts="1">
                    <output><![CDATA[File: 'n_number_-NaN'
JSON: '[-NaN]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1111" name="rejected.n_number__-1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number__-1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="303424079" result="Passed" start-time="2022-08-11T21:40:15.4587723Z" end-time="2022-08-11T21:40:15.4588315Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_.-1'
JSON: '[.-1]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '.' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1112" name="rejected.n_number__2e-3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number__2e-3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="396481995" result="Passed" start-time="2022-08-11T21:40:15.4588384Z" end-time="2022-08-11T21:40:15.4588955Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_number_.2e-3'
JSON: '[.2e-3]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '.' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1113" name="rejected.n_number_0_1_2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_1_2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2102483851" result="Passed" start-time="2022-08-11T21:40:15.4589024Z" end-time="2022-08-11T21:40:15.4589619Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_number_0.1.2'
JSON: '[0.1.2]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0.1.2' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1114" name="rejected.n_number_0_3e+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_3e+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="127506744" result="Passed" start-time="2022-08-11T21:40:15.4589691Z" end-time="2022-08-11T21:40:15.4590286Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_number_0.3e+'
JSON: '[0.3e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0.3e+' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1115" name="rejected.n_number_0_3e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_3e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1492300104" result="Passed" start-time="2022-08-11T21:40:15.4590355Z" end-time="2022-08-11T21:40:15.4590953Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_number_0.3e'
JSON: '[0.3e]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0.3e' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1116" name="rejected.n_number_0_e1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_e1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1312914814" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4591022Z" end-time="2022-08-11T21:40:15.4593093Z" duration="0.000207" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_0.e1'
JSON: '[0.e1]'
Expected: 'False'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1117" name="rejected.n_number_0e+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0e+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="391702644" result="Passed" start-time="2022-08-11T21:40:15.4593178Z" end-time="2022-08-11T21:40:15.4593836Z" duration="0.000066" asserts="1">
                    <output><![CDATA[File: 'n_number_0e+'
JSON: '[0e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e+' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1118" name="rejected.n_number_0e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="253860931" result="Passed" start-time="2022-08-11T21:40:15.4593908Z" end-time="2022-08-11T21:40:15.4594518Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_number_0e'
JSON: '[0e]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1119" name="rejected.n_number_0_capital_E+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_capital_E+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2017553379" result="Passed" start-time="2022-08-11T21:40:15.4594588Z" end-time="2022-08-11T21:40:15.4595182Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_0_capital_E+'
JSON: '[0E+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0E+' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1120" name="rejected.n_number_0_capital_E" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_0_capital_E" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="871415869" result="Passed" start-time="2022-08-11T21:40:15.4595357Z" end-time="2022-08-11T21:40:15.4596067Z" duration="0.000071" asserts="1">
                    <output><![CDATA[File: 'n_number_0_capital_E'
JSON: '[0E]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0E' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1121" name="rejected.n_number_1_0e+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="322642493" result="Passed" start-time="2022-08-11T21:40:15.4596136Z" end-time="2022-08-11T21:40:15.4596725Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_1.0e+'
JSON: '[1.0e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1.0e+' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1122" name="rejected.n_number_1_0e-" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e-" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2061668114" result="Passed" start-time="2022-08-11T21:40:15.4596794Z" end-time="2022-08-11T21:40:15.4597495Z" duration="0.000070" asserts="1">
                    <output><![CDATA[File: 'n_number_1.0e-'
JSON: '[1.0e-]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1.0e-' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1123" name="rejected.n_number_1_0e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_0e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1767086812" result="Passed" start-time="2022-08-11T21:40:15.4597685Z" end-time="2022-08-11T21:40:15.4598276Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_1.0e'
JSON: '[1.0e]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1.0e' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1124" name="rejected.n_number_1eE2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1eE2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="123010017" result="Passed" start-time="2022-08-11T21:40:15.4598343Z" end-time="2022-08-11T21:40:15.4598925Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_1eE2'
JSON: '[1eE2]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1eE2' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1125" name="rejected.n_number_1_000" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_1_000" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1526821563" result="Passed" start-time="2022-08-11T21:40:15.4598995Z" end-time="2022-08-11T21:40:15.4599550Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_1_000'
JSON: '[1 000.0]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1126" name="rejected.n_number_2_e+3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e+3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1772259062" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4599620Z" end-time="2022-08-11T21:40:15.4601703Z" duration="0.000209" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_2.e+3'
JSON: '[2.e+3]'
Expected: 'False'
Parsed: '[2000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1127" name="rejected.n_number_2_e-3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e-3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1621392386" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4601787Z" end-time="2022-08-11T21:40:15.4604003Z" duration="0.000221" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_2.e-3'
JSON: '[2.e-3]'
Expected: 'False'
Parsed: '[0.002]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1128" name="rejected.n_number_2_e3" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_2_e3" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1365685963" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4604084Z" end-time="2022-08-11T21:40:15.4606056Z" duration="0.000197" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_2.e3'
JSON: '[2.e3]'
Expected: 'False'
Parsed: '[2000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1129" name="rejected.n_number_9_e+" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_9_e+" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1150292570" result="Passed" start-time="2022-08-11T21:40:15.4606140Z" end-time="2022-08-11T21:40:15.4606813Z" duration="0.000068" asserts="1">
                    <output><![CDATA[File: 'n_number_9.e+'
JSON: '[9.e+]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '9.e+' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1130" name="rejected.n_number_expression" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_expression" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="452466503" result="Passed" start-time="2022-08-11T21:40:15.4606889Z" end-time="2022-08-11T21:40:15.4607526Z" duration="0.000064" asserts="1">
                    <output><![CDATA[File: 'n_number_expression'
JSON: '[1+2]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '1+2' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1131" name="rejected.n_number_hex_1_digit" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_hex_1_digit" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1095132630" result="Passed" start-time="2022-08-11T21:40:15.4607598Z" end-time="2022-08-11T21:40:15.4608172Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_hex_1_digit'
JSON: '[0x1]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1132" name="rejected.n_number_hex_2_digits" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_hex_2_digits" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="110858354" result="Passed" start-time="2022-08-11T21:40:15.4608241Z" end-time="2022-08-11T21:40:15.4608806Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_number_hex_2_digits'
JSON: '[0x42]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1133" name="rejected.n_number_Inf" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_Inf" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1565391861" result="Passed" start-time="2022-08-11T21:40:15.4608878Z" end-time="2022-08-11T21:40:15.4609437Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_Inf'
JSON: '[Inf]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'I' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1134" name="rejected.n_number_infinity" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_infinity" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="618327242" result="Passed" start-time="2022-08-11T21:40:15.4609506Z" end-time="2022-08-11T21:40:15.4610324Z" duration="0.000082" asserts="1">
                    <output><![CDATA[File: 'n_number_infinity'
JSON: '[Infinity]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'I' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1135" name="rejected.n_number_invalid+-" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid+-" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1339073391" result="Passed" start-time="2022-08-11T21:40:15.4610732Z" end-time="2022-08-11T21:40:15.4611655Z" duration="0.000093" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid+-'
JSON: '[0e+-1]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '0e+-1' (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1136" name="rejected.n_number_invalid-negative-real" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-negative-real" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1344405186" result="Passed" start-time="2022-08-11T21:40:15.4611734Z" end-time="2022-08-11T21:40:15.4612313Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid-negative-real'
JSON: '[-123.123foo]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1137" name="rejected.n_number_invalid-utf-8-in-bigger-int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-bigger-int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="912776875" result="Passed" start-time="2022-08-11T21:40:15.4612488Z" end-time="2022-08-11T21:40:15.4613156Z" duration="0.000067" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid-utf-8-in-bigger-int'
JSON: '[123�]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1138" name="rejected.n_number_invalid-utf-8-in-exponent" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-exponent" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="890472146" result="Passed" start-time="2022-08-11T21:40:15.4613231Z" end-time="2022-08-11T21:40:15.4613789Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid-utf-8-in-exponent'
JSON: '[1e1�]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1139" name="rejected.n_number_invalid-utf-8-in-int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_invalid-utf-8-in-int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1461651552" result="Passed" start-time="2022-08-11T21:40:15.4613856Z" end-time="2022-08-11T21:40:15.4614411Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_invalid-utf-8-in-int'
JSON: '[0�]
'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1140" name="rejected.n_number_minus_infinity" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_infinity" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1033303593" result="Passed" start-time="2022-08-11T21:40:15.4614481Z" end-time="2022-08-11T21:40:15.4615066Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_number_minus_infinity'
JSON: '[-Infinity]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1141" name="rejected.n_number_minus_sign_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_sign_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2123822725" result="Passed" start-time="2022-08-11T21:40:15.4615136Z" end-time="2022-08-11T21:40:15.4615718Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_minus_sign_with_trailing_garbage'
JSON: '[-foo]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1142" name="rejected.n_number_minus_space_1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_minus_space_1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="945181578" result="Passed" start-time="2022-08-11T21:40:15.4615788Z" end-time="2022-08-11T21:40:15.4616367Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_minus_space_1'
JSON: '[- 1]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse an integer: '-' (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1143" name="rejected.n_number_NaN" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_NaN" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="887381575" result="Passed" start-time="2022-08-11T21:40:15.4616437Z" end-time="2022-08-11T21:40:15.4616995Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_number_NaN'
JSON: '[NaN]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'N' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1144" name="rejected.n_number_neg_int_starting_with_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_int_starting_with_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="590440947" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4617065Z" end-time="2022-08-11T21:40:15.4619163Z" duration="0.000210" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_neg_int_starting_with_zero'
JSON: '[-012]'
Expected: 'False'
Parsed: '[-12]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1145" name="rejected.n_number_neg_real_without_int_part" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_real_without_int_part" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="420137540" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4619256Z" end-time="2022-08-11T21:40:15.4621557Z" duration="0.000230" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_neg_real_without_int_part'
JSON: '[-.123]'
Expected: 'False'
Parsed: '[-0.123]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1146" name="rejected.n_number_neg_with_garbage_at_end" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_neg_with_garbage_at_end" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="836700782" result="Passed" start-time="2022-08-11T21:40:15.4621668Z" end-time="2022-08-11T21:40:15.4622547Z" duration="0.000088" asserts="1">
                    <output><![CDATA[File: 'n_number_neg_with_garbage_at_end'
JSON: '[-1x]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1147" name="rejected.n_number_real_garbage_after_e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_garbage_after_e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="178141413" result="Passed" start-time="2022-08-11T21:40:15.4622625Z" end-time="2022-08-11T21:40:15.4624645Z" duration="0.000202" asserts="1">
                    <output><![CDATA[File: 'n_number_real_garbage_after_e'
JSON: '[1ea]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1e' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1148" name="rejected.n_number_real_without_fractional_part" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_without_fractional_part" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="586657618" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4624726Z" end-time="2022-08-11T21:40:15.4627014Z" duration="0.000229" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_real_without_fractional_part'
JSON: '[1.]'
Expected: 'False'
Parsed: '[1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1149" name="rejected.n_number_real_with_invalid_utf8_after_e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_real_with_invalid_utf8_after_e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="764308391" result="Passed" start-time="2022-08-11T21:40:15.4627105Z" end-time="2022-08-11T21:40:15.4627787Z" duration="0.000069" asserts="1">
                    <output><![CDATA[File: 'n_number_real_with_invalid_utf8_after_e'
JSON: '[1e�]'
Expected: 'False'
Exception: 'Parsing falied: Failed to parse a number: '1e' (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1150" name="rejected.n_number_starting_with_dot" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_starting_with_dot" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1278832299" result="Passed" start-time="2022-08-11T21:40:15.4627863Z" end-time="2022-08-11T21:40:15.4628460Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_number_starting_with_dot'
JSON: '[.123]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '.' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1151" name="rejected.n_number_U+FF11_fullwidth_digit_one" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_U+FF11_fullwidth_digit_one" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1718528505" result="Passed" start-time="2022-08-11T21:40:15.4628530Z" end-time="2022-08-11T21:40:15.4629103Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_number_U+FF11_fullwidth_digit_one'
JSON: '[１]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '１' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1152" name="rejected.n_number_with_alpha" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_alpha" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1569531376" result="Passed" start-time="2022-08-11T21:40:15.4629315Z" end-time="2022-08-11T21:40:15.4630510Z" duration="0.000120" asserts="1">
                    <output><![CDATA[File: 'n_number_with_alpha'
JSON: '[1.2a-3]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1153" name="rejected.n_number_with_alpha_char" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_alpha_char" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="101802782" result="Passed" start-time="2022-08-11T21:40:15.4630788Z" end-time="2022-08-11T21:40:15.4631518Z" duration="0.000073" asserts="1">
                    <output><![CDATA[File: 'n_number_with_alpha_char'
JSON: '[1.8011670033376514H-308]'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 19)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1154" name="rejected.n_number_with_leading_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_number_with_leading_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1631649717" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4631597Z" end-time="2022-08-11T21:40:15.4633939Z" duration="0.000234" asserts="0">
                    <reason>
                      <message><![CDATA[Not a problem to have such number]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_number_with_leading_zero'
JSON: '[012]'
Expected: 'False'
Parsed: '[12]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1155" name="rejected.n_object_bad_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_bad_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="322700094" result="Passed" start-time="2022-08-11T21:40:15.4634033Z" end-time="2022-08-11T21:40:15.4634748Z" duration="0.000072" asserts="1">
                    <output><![CDATA[File: 'n_object_bad_value'
JSON: '["x", truth]'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got 't' (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1156" name="rejected.n_object_bracket_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_bracket_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="510206610" result="Passed" start-time="2022-08-11T21:40:15.4634824Z" end-time="2022-08-11T21:40:15.4635446Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_object_bracket_key'
JSON: '{[: "x"}
'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '[' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1157" name="rejected.n_object_comma_instead_of_colon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_comma_instead_of_colon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="553256655" result="Passed" start-time="2022-08-11T21:40:15.4635518Z" end-time="2022-08-11T21:40:15.4636113Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_object_comma_instead_of_colon'
JSON: '{"x", null}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got ',' (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1158" name="rejected.n_object_double_colon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_double_colon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1619395329" result="Passed" start-time="2022-08-11T21:40:15.4636185Z" end-time="2022-08-11T21:40:15.4636780Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_object_double_colon'
JSON: '{"x"::"b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ':' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1159" name="rejected.n_object_emoji" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_emoji" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="200190732" result="Passed" start-time="2022-08-11T21:40:15.4636849Z" end-time="2022-08-11T21:40:15.4637426Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_emoji'
JSON: '{🇨🇭}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '\ud83c' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1160" name="rejected.n_object_garbage_at_end" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_garbage_at_end" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1188394561" result="Passed" start-time="2022-08-11T21:40:15.4637495Z" end-time="2022-08-11T21:40:15.4638060Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_object_garbage_at_end'
JSON: '{"a":"a" 123}'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in object (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1161" name="rejected.n_object_key_with_single_quotes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_key_with_single_quotes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="807751584" result="Passed" start-time="2022-08-11T21:40:15.4638129Z" end-time="2022-08-11T21:40:15.4638703Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_object_key_with_single_quotes'
JSON: '{key: 'value'}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got 'k' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1162" name="rejected.n_object_lone_continuation_byte_in_key_and_trailing_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_lone_continuation_byte_in_key_and_trailing_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="785346073" result="Passed" start-time="2022-08-11T21:40:15.4638769Z" end-time="2022-08-11T21:40:15.4639346Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_lone_continuation_byte_in_key_and_trailing_comma'
JSON: '{"�":"0",}'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an object (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1163" name="rejected.n_object_missing_colon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_colon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="768652916" result="Passed" start-time="2022-08-11T21:40:15.4639415Z" end-time="2022-08-11T21:40:15.4639995Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_missing_colon'
JSON: '{"a" b}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got 'b' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1164" name="rejected.n_object_missing_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1498360567" result="Passed" start-time="2022-08-11T21:40:15.4640061Z" end-time="2022-08-11T21:40:15.4640629Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_object_missing_key'
JSON: '{:"b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ':' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1165" name="rejected.n_object_missing_semicolon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_semicolon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="822453900" result="Passed" start-time="2022-08-11T21:40:15.4640698Z" end-time="2022-08-11T21:40:15.4641269Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_object_missing_semicolon'
JSON: '{"a" "b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got '"' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1166" name="rejected.n_object_missing_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_missing_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="192565725" result="Passed" start-time="2022-08-11T21:40:15.4641335Z" end-time="2022-08-11T21:40:15.4641945Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_object_missing_value'
JSON: '{"a":'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1167" name="rejected.n_object_no-colon" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_no-colon" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="978573781" result="Passed" start-time="2022-08-11T21:40:15.4642011Z" end-time="2022-08-11T21:40:15.4642591Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_no-colon'
JSON: '{"a"'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got end of stream (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1168" name="rejected.n_object_non_string_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_non_string_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1484156609" result="Passed" start-time="2022-08-11T21:40:15.4642660Z" end-time="2022-08-11T21:40:15.4643225Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_object_non_string_key'
JSON: '{1:1}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '1' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1169" name="rejected.n_object_non_string_key_but_huge_number_instead" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_non_string_key_but_huge_number_instead" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="935917000" result="Passed" start-time="2022-08-11T21:40:15.4643291Z" end-time="2022-08-11T21:40:15.4643859Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_object_non_string_key_but_huge_number_instead'
JSON: '{9999E9999:1}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '9' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1170" name="rejected.n_object_repeated_null_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_repeated_null_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="147894918" result="Passed" start-time="2022-08-11T21:40:15.4643925Z" end-time="2022-08-11T21:40:15.4644487Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_object_repeated_null_null'
JSON: '{null:null,null:null}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got 'n' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1171" name="rejected.n_object_several_trailing_commas" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_several_trailing_commas" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="400137939" result="Passed" start-time="2022-08-11T21:40:15.4644562Z" end-time="2022-08-11T21:40:15.4645142Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_several_trailing_commas'
JSON: '{"id":0,,,,,}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ',' (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1172" name="rejected.n_object_single_quote" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_single_quote" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1648714145" result="Passed" start-time="2022-08-11T21:40:15.4645214Z" end-time="2022-08-11T21:40:15.4645782Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_object_single_quote'
JSON: '{'a':0}'
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1173" name="rejected.n_object_trailing_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="939693026" result="Passed" start-time="2022-08-11T21:40:15.4645851Z" end-time="2022-08-11T21:40:15.4646416Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comma'
JSON: '{"id":0,}'
Expected: 'False'
Exception: 'Parsing falied: Trailing comma in an object (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1174" name="rejected.n_object_trailing_comment" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="984249786" result="Passed" start-time="2022-08-11T21:40:15.4646485Z" end-time="2022-08-11T21:40:15.4647031Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comment'
JSON: '{"a":"b"}/**/'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1175" name="rejected.n_object_trailing_comment_open" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_open" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="895076791" result="Passed" start-time="2022-08-11T21:40:15.4647101Z" end-time="2022-08-11T21:40:15.4647629Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comment_open'
JSON: '{"a":"b"}/**//'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1176" name="rejected.n_object_trailing_comment_slash_open" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_slash_open" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1524944562" result="Passed" start-time="2022-08-11T21:40:15.4647705Z" end-time="2022-08-11T21:40:15.4648230Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comment_slash_open'
JSON: '{"a":"b"}//'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1177" name="rejected.n_object_trailing_comment_slash_open_incomplete" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_trailing_comment_slash_open_incomplete" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1174286539" result="Passed" start-time="2022-08-11T21:40:15.4648299Z" end-time="2022-08-11T21:40:15.4648837Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_object_trailing_comment_slash_open_incomplete'
JSON: '{"a":"b"}/'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1178" name="rejected.n_object_two_commas_in_a_row" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_two_commas_in_a_row" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1176645865" result="Passed" start-time="2022-08-11T21:40:15.4648906Z" end-time="2022-08-11T21:40:15.4649486Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_object_two_commas_in_a_row'
JSON: '{"a":"b",,"c":"d"}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ',' (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1179" name="rejected.n_object_unquoted_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_unquoted_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1850356124" result="Passed" start-time="2022-08-11T21:40:15.4649555Z" end-time="2022-08-11T21:40:15.4650117Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_object_unquoted_key'
JSON: '{a: "b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got 'a' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1180" name="rejected.n_object_unterminated-value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_unterminated-value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="690120781" result="Passed" start-time="2022-08-11T21:40:15.4650186Z" end-time="2022-08-11T21:40:15.4650790Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_object_unterminated-value'
JSON: '{"a":"a'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 7)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1181" name="rejected.n_object_with_single_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_with_single_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1594117649" result="Passed" start-time="2022-08-11T21:40:15.4650856Z" end-time="2022-08-11T21:40:15.4651454Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_object_with_single_string'
JSON: '{ "foo" : "bar", "a" }'
Expected: 'False'
Exception: 'Parsing falied: Expected ':' but got '}' (at position 21)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1182" name="rejected.n_object_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_object_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1034734768" result="Passed" start-time="2022-08-11T21:40:15.4651529Z" end-time="2022-08-11T21:40:15.4652061Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_object_with_trailing_garbage'
JSON: '{"a":"b"}#'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1183" name="rejected.n_single_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_single_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="601377572" result="Passed" start-time="2022-08-11T21:40:15.4652127Z" end-time="2022-08-11T21:40:15.4652676Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_single_space'
JSON: ' '
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1184" name="rejected.n_string_1_surrogate_then_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2018943918" result="Passed" start-time="2022-08-11T21:40:15.4652746Z" end-time="2022-08-11T21:40:15.4653341Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_string_1_surrogate_then_escape'
JSON: '["\uD800\"]'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1185" name="rejected.n_string_1_surrogate_then_escape_u" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="881421645" result="Passed" start-time="2022-08-11T21:40:15.4653410Z" end-time="2022-08-11T21:40:15.4663997Z" duration="0.001059" asserts="1">
                    <output><![CDATA[File: 'n_string_1_surrogate_then_escape_u'
JSON: '["\uD800\u"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD800\u': Invalid pattern '\uD800\u' at offset 8. Insufficient hexadecimal digits. (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1186" name="rejected.n_string_1_surrogate_then_escape_u1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1673084901" result="Passed" start-time="2022-08-11T21:40:15.4664105Z" end-time="2022-08-11T21:40:15.4665113Z" duration="0.000101" asserts="1">
                    <output><![CDATA[File: 'n_string_1_surrogate_then_escape_u1'
JSON: '["\uD800\u1"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD800\u1': Invalid pattern '\uD800\u1' at offset 8. Insufficient hexadecimal digits. (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1187" name="rejected.n_string_1_surrogate_then_escape_u1x" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_1_surrogate_then_escape_u1x" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="9055572" result="Passed" start-time="2022-08-11T21:40:15.4665192Z" end-time="2022-08-11T21:40:15.4666079Z" duration="0.000089" asserts="1">
                    <output><![CDATA[File: 'n_string_1_surrogate_then_escape_u1x'
JSON: '["\uD800\u1x"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD800\u1x': Invalid pattern '\uD800\u1x' at offset 8. Insufficient hexadecimal digits. (at position 13)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1188" name="rejected.n_string_accentuated_char_no_quotes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_accentuated_char_no_quotes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2081225791" result="Passed" start-time="2022-08-11T21:40:15.4666155Z" end-time="2022-08-11T21:40:15.4666759Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_string_accentuated_char_no_quotes'
JSON: '[é]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'é' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1189" name="rejected.n_string_backslash_00" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_backslash_00" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="295627148" result="Passed" start-time="2022-08-11T21:40:15.4666831Z" end-time="2022-08-11T21:40:15.4667447Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_string_backslash_00'
JSON: '["\\u0000"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x0) (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1190" name="rejected.n_string_escaped_backslash_bad" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_backslash_bad" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="828866781" result="Passed" start-time="2022-08-11T21:40:15.4667519Z" end-time="2022-08-11T21:40:15.4668129Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_string_escaped_backslash_bad'
JSON: '["\\\"]'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 7)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1191" name="rejected.n_string_escaped_ctrl_char_tab" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_ctrl_char_tab" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="791148531" result="Passed" start-time="2022-08-11T21:40:15.4668199Z" end-time="2022-08-11T21:40:15.4668793Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_string_escaped_ctrl_char_tab'
JSON: '["\	"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x9) (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1192" name="rejected.n_string_escaped_emoji" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escaped_emoji" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1440865193" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4668866Z" end-time="2022-08-11T21:40:15.4671392Z" duration="0.000253" asserts="0">
                    <reason>
                      <message><![CDATA[Because why no?]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_string_escaped_emoji'
JSON: '["\🌀"]'
Expected: 'False'
Parsed: '["🌀"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1193" name="rejected.n_string_escape_x" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_escape_x" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="690281414" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4671598Z" end-time="2022-08-11T21:40:15.4676551Z" duration="0.000496" asserts="0">
                    <reason>
                      <message><![CDATA[Should be correct, no?]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_string_escape_x'
JSON: '["\x00"]'
Expected: 'False'
Parsed: '["\u0000"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1194" name="rejected.n_string_incomplete_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="273256991" result="Passed" start-time="2022-08-11T21:40:15.4676651Z" end-time="2022-08-11T21:40:15.4677388Z" duration="0.000074" asserts="1">
                    <output><![CDATA[File: 'n_string_incomplete_escape'
JSON: '["\"]'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1195" name="rejected.n_string_incomplete_escaped_character" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_escaped_character" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="225552009" result="Passed" start-time="2022-08-11T21:40:15.4677466Z" end-time="2022-08-11T21:40:15.4678402Z" duration="0.000094" asserts="1">
                    <output><![CDATA[File: 'n_string_incomplete_escaped_character'
JSON: '["\u00A"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\u00A': Invalid pattern '\u00A' at offset 2. Insufficient hexadecimal digits. (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1196" name="rejected.n_string_incomplete_surrogate" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_surrogate" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1338476652" result="Passed" start-time="2022-08-11T21:40:15.4678483Z" end-time="2022-08-11T21:40:15.4679736Z" duration="0.000126" asserts="1">
                    <output><![CDATA[File: 'n_string_incomplete_surrogate'
JSON: '["\uD834\uDd"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD834\uDd': Invalid pattern '\uD834\uDd' at offset 8. Insufficient hexadecimal digits. (at position 13)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1197" name="rejected.n_string_incomplete_surrogate_escape_invalid" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_incomplete_surrogate_escape_invalid" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="176528662" result="Passed" start-time="2022-08-11T21:40:15.4679809Z" end-time="2022-08-11T21:40:15.4680654Z" duration="0.000085" asserts="1">
                    <output><![CDATA[File: 'n_string_incomplete_surrogate_escape_invalid'
JSON: '["\uD800\uD800\x"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uD800\uD800\x': Invalid pattern '\uD800\uD800\x' at offset 14. Insufficient hexadecimal digits. (at position 17)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1198" name="rejected.n_string_invalid-utf-8-in-escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid-utf-8-in-escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1536504655" result="Passed" start-time="2022-08-11T21:40:15.4680726Z" end-time="2022-08-11T21:40:15.4681666Z" duration="0.000094" asserts="1">
                    <output><![CDATA[File: 'n_string_invalid-utf-8-in-escape'
JSON: '["\u�"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\u�': Invalid pattern '\u�' at offset 2. Insufficient hexadecimal digits. (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1199" name="rejected.n_string_invalid_backslash_esc" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_backslash_esc" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1915470694" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4681741Z" end-time="2022-08-11T21:40:15.4683981Z" duration="0.000224" asserts="0">
                    <reason>
                      <message><![CDATA[Should be correct, no?]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_string_invalid_backslash_esc'
JSON: '["\a"]'
Expected: 'False'
Parsed: '["\u0007"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1200" name="rejected.n_string_invalid_unicode_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_unicode_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="227571815" result="Passed" start-time="2022-08-11T21:40:15.4684075Z" end-time="2022-08-11T21:40:15.4684975Z" duration="0.000090" asserts="1">
                    <output><![CDATA[File: 'n_string_invalid_unicode_escape'
JSON: '["\uqqqq"]'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\uqqqq': Invalid pattern '\uqqqq' at offset 3. Insufficient hexadecimal digits. (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1201" name="rejected.n_string_invalid_utf8_after_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_invalid_utf8_after_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2005610648" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4685056Z" end-time="2022-08-11T21:40:15.4687145Z" duration="0.000209" asserts="0">
                    <reason>
                      <message><![CDATA[Because why no?]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_string_invalid_utf8_after_escape'
JSON: '["\�"]'
Expected: 'False'
Parsed: '["�"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1202" name="rejected.n_string_leading_uescaped_thinspace" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_leading_uescaped_thinspace" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="841468451" result="Passed" start-time="2022-08-11T21:40:15.4687230Z" end-time="2022-08-11T21:40:15.4687882Z" duration="0.000065" asserts="1">
                    <output><![CDATA[File: 'n_string_leading_uescaped_thinspace'
JSON: '[\u0020"asd"]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1203" name="rejected.n_string_no_quotes_with_bad_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_no_quotes_with_bad_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1798224265" result="Passed" start-time="2022-08-11T21:40:15.4687954Z" end-time="2022-08-11T21:40:15.4688552Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_string_no_quotes_with_bad_escape'
JSON: '[\n]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1204" name="rejected.n_string_single_doublequote" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_doublequote" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="616413473" result="Passed" start-time="2022-08-11T21:40:15.4688624Z" end-time="2022-08-11T21:40:15.4689201Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_string_single_doublequote'
JSON: '"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1205" name="rejected.n_string_single_quote" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_quote" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="878694360" result="Passed" start-time="2022-08-11T21:40:15.4689270Z" end-time="2022-08-11T21:40:15.4689859Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_string_single_quote'
JSON: '['single quote']'
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1206" name="rejected.n_string_single_string_no_double_quotes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_single_string_no_double_quotes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="69814360" result="Passed" start-time="2022-08-11T21:40:15.4689931Z" end-time="2022-08-11T21:40:15.4690475Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_string_single_string_no_double_quotes'
JSON: 'abc'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'a' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1207" name="rejected.n_string_start_escape_unclosed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_start_escape_unclosed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="629838350" result="Passed" start-time="2022-08-11T21:40:15.4690544Z" end-time="2022-08-11T21:40:15.4691145Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_string_start_escape_unclosed'
JSON: '["\'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1208" name="rejected.n_string_unescaped_ctrl_char" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_ctrl_char" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1265036643" result="Passed" start-time="2022-08-11T21:40:15.4691214Z" end-time="2022-08-11T21:40:15.4691827Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_string_unescaped_ctrl_char'
JSON: '["a\u0000a"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x0) (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1209" name="rejected.n_string_unescaped_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="736572926" result="Passed" start-time="2022-08-11T21:40:15.4691896Z" end-time="2022-08-11T21:40:15.4692594Z" duration="0.000070" asserts="1">
                    <output><![CDATA[File: 'n_string_unescaped_newline'
JSON: '["new
line"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0xA) (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1210" name="rejected.n_string_unescaped_tab" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unescaped_tab" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="945239179" result="Passed" start-time="2022-08-11T21:40:15.4692666Z" end-time="2022-08-11T21:40:15.4693363Z" duration="0.000070" asserts="1">
                    <output><![CDATA[File: 'n_string_unescaped_tab'
JSON: '["	"]'
Expected: 'False'
Exception: 'Parsing falied: Settings forbid using unescaped control chars (0x9) (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1211" name="rejected.n_string_unicode_CapitalU" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_unicode_CapitalU" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1483403718" result="Passed" start-time="2022-08-11T21:40:15.4693433Z" end-time="2022-08-11T21:40:15.4694698Z" duration="0.000127" asserts="1">
                    <output><![CDATA[File: 'n_string_unicode_CapitalU'
JSON: '"\UA66D"'
Expected: 'False'
Exception: 'Parsing falied: Failed to unescape sequence '\UA66D': Invalid pattern '\UA66D' at offset 2. Unrecognized escape sequence \\U. (at position 8)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1212" name="rejected.n_string_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_string_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1524094437" result="Passed" start-time="2022-08-11T21:40:15.4694773Z" end-time="2022-08-11T21:40:15.4695335Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_string_with_trailing_garbage'
JSON: '""x'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1213" name="rejected.n_structure_100000_opening_arrays" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_100000_opening_arrays" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1916522852" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4695407Z" end-time="2022-08-11T21:40:15.4697671Z" duration="0.000226" asserts="0">
                    <reason>
                      <message><![CDATA[Causes stackoverflow, but we don't actually care]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_structure_100000_opening_arrays'
]]></output>
                  </test-case>
                  <test-case id="0-1214" name="rejected.n_structure_angle_bracket__" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_angle_bracket__" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1657553598" result="Passed" start-time="2022-08-11T21:40:15.4697756Z" end-time="2022-08-11T21:40:15.4698368Z" duration="0.000062" asserts="1">
                    <output><![CDATA[File: 'n_structure_angle_bracket_.'
JSON: '<.>'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '<' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1215" name="rejected.n_structure_angle_bracket_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_angle_bracket_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1741760559" result="Passed" start-time="2022-08-11T21:40:15.4698444Z" end-time="2022-08-11T21:40:15.4699030Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_angle_bracket_null'
JSON: '[<null>]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '<' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1216" name="rejected.n_structure_array_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1920500463" result="Passed" start-time="2022-08-11T21:40:15.4699099Z" end-time="2022-08-11T21:40:15.4699661Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_structure_array_trailing_garbage'
JSON: '[1]x'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1217" name="rejected.n_structure_array_with_extra_array_close" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_with_extra_array_close" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="183968501" result="Passed" start-time="2022-08-11T21:40:15.4699730Z" end-time="2022-08-11T21:40:15.4700273Z" duration="0.000054" asserts="1">
                    <output><![CDATA[File: 'n_structure_array_with_extra_array_close'
JSON: '[1]]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1218" name="rejected.n_structure_array_with_unclosed_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_array_with_unclosed_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="897192645" result="Passed" start-time="2022-08-11T21:40:15.4700343Z" end-time="2022-08-11T21:40:15.4700953Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_structure_array_with_unclosed_string'
JSON: '["asd]'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1219" name="rejected.n_structure_ascii-unicode-identifier" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_ascii-unicode-identifier" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="616938922" result="Passed" start-time="2022-08-11T21:40:15.4701019Z" end-time="2022-08-11T21:40:15.4701571Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_structure_ascii-unicode-identifier'
JSON: 'aå'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'a' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1220" name="rejected.n_structure_capitalized_True" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_capitalized_True" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1296852646" result="Passed" start-time="2022-08-11T21:40:15.4701641Z" end-time="2022-08-11T21:40:15.4702205Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_structure_capitalized_True'
JSON: '[True]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'T' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1221" name="rejected.n_structure_close_unopened_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_close_unopened_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="183510153" result="Passed" start-time="2022-08-11T21:40:15.4702272Z" end-time="2022-08-11T21:40:15.4702830Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_structure_close_unopened_array'
JSON: '1]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1222" name="rejected.n_structure_comma_instead_of_closing_brace" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_comma_instead_of_closing_brace" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1044831637" result="Passed" start-time="2022-08-11T21:40:15.4702903Z" end-time="2022-08-11T21:40:15.4703573Z" duration="0.000067" asserts="1">
                    <output><![CDATA[File: 'n_structure_comma_instead_of_closing_brace'
JSON: '{"x": true,'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 11)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1223" name="rejected.n_structure_double_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_double_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1188529461" result="Passed" start-time="2022-08-11T21:40:15.4703645Z" end-time="2022-08-11T21:40:15.4704204Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_structure_double_array'
JSON: '[][]'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1224" name="rejected.n_structure_end_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_end_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="107050219" result="Passed" start-time="2022-08-11T21:40:15.4704276Z" end-time="2022-08-11T21:40:15.4704844Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_structure_end_array'
JSON: ']'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ']' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1225" name="rejected.n_structure_incomplete_UTF8_BOM" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_incomplete_UTF8_BOM" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1504230034" result="Passed" start-time="2022-08-11T21:40:15.4704913Z" end-time="2022-08-11T21:40:15.4705444Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_structure_incomplete_UTF8_BOM'
JSON: '�{}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '�' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1226" name="rejected.n_structure_lone-invalid-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_lone-invalid-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1106756393" result="Passed" start-time="2022-08-11T21:40:15.4705550Z" end-time="2022-08-11T21:40:15.4706096Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_structure_lone-invalid-utf-8'
JSON: ''
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1227" name="rejected.n_structure_lone-open-bracket" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_lone-open-bracket" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="958432731" result="Passed" start-time="2022-08-11T21:40:15.4706166Z" end-time="2022-08-11T21:40:15.4706763Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_structure_lone-open-bracket'
JSON: '['
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1228" name="rejected.n_structure_no_data" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_no_data" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="666436035" result="Passed" start-time="2022-08-11T21:40:15.4706833Z" end-time="2022-08-11T21:40:15.4707434Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_structure_no_data'
JSON: ''
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1229" name="rejected.n_structure_null-byte-outside-string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_null-byte-outside-string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="758697777" result="Passed" start-time="2022-08-11T21:40:15.4707503Z" end-time="2022-08-11T21:40:15.4708101Z" duration="0.000060" asserts="1">
                    <output><![CDATA[File: 'n_structure_null-byte-outside-string'
JSON: '[\u0000]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\u0000' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1230" name="rejected.n_structure_number_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_number_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1704083786" result="Passed" start-time="2022-08-11T21:40:15.4708170Z" end-time="2022-08-11T21:40:15.4708695Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_structure_number_with_trailing_garbage'
JSON: '2@'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1231" name="rejected.n_structure_object_followed_by_closing_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_followed_by_closing_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1348415900" result="Passed" start-time="2022-08-11T21:40:15.4708768Z" end-time="2022-08-11T21:40:15.4709323Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_structure_object_followed_by_closing_object'
JSON: '{}}'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1232" name="rejected.n_structure_object_unclosed_no_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_unclosed_no_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1785265531" result="Passed" start-time="2022-08-11T21:40:15.4709393Z" end-time="2022-08-11T21:40:15.4710009Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_structure_object_unclosed_no_value'
JSON: '{"":'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1233" name="rejected.n_structure_object_with_comment" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_with_comment" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1408658818" result="Passed" start-time="2022-08-11T21:40:15.4710078Z" end-time="2022-08-11T21:40:15.4710733Z" duration="0.000066" asserts="1">
                    <output><![CDATA[File: 'n_structure_object_with_comment'
JSON: '{"a":/*comment*/"b"}'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '/' (at position 5)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1234" name="rejected.n_structure_object_with_trailing_garbage" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_object_with_trailing_garbage" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1622784309" result="Passed" start-time="2022-08-11T21:40:15.4710803Z" end-time="2022-08-11T21:40:15.4711346Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_structure_object_with_trailing_garbage'
JSON: '{"a": true} "x"'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1235" name="rejected.n_structure_open_array_apostrophe" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_apostrophe" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="831993780" result="Passed" start-time="2022-08-11T21:40:15.4711461Z" end-time="2022-08-11T21:40:15.4713202Z" duration="0.000174" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_apostrophe'
JSON: '[''
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1236" name="rejected.n_structure_open_array_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="752649198" result="Passed" start-time="2022-08-11T21:40:15.4713293Z" end-time="2022-08-11T21:40:15.4714537Z" duration="0.000124" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_comma'
JSON: '[,'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer ',' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1237" name="rejected.n_structure_open_array_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1383994150" result="Skipped" label="Ignored" start-time="2022-08-11T21:40:15.4714766Z" end-time="2022-08-11T21:40:15.4717226Z" duration="0.000246" asserts="0">
                    <reason>
                      <message><![CDATA[Causes stackoverflow, but we don't actually care]]></message>
                    </reason>
                    <output><![CDATA[File: 'n_structure_open_array_object'
]]></output>
                  </test-case>
                  <test-case id="0-1238" name="rejected.n_structure_open_array_open_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_open_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2132447746" result="Passed" start-time="2022-08-11T21:40:15.4717311Z" end-time="2022-08-11T21:40:15.4718023Z" duration="0.000072" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_open_object'
JSON: '[{'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1239" name="rejected.n_structure_open_array_open_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_open_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1140249558" result="Passed" start-time="2022-08-11T21:40:15.4718099Z" end-time="2022-08-11T21:40:15.4718745Z" duration="0.000065" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_open_string'
JSON: '["a'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1240" name="rejected.n_structure_open_array_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_array_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="811607285" result="Passed" start-time="2022-08-11T21:40:15.4718817Z" end-time="2022-08-11T21:40:15.4719394Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_array_string'
JSON: '["a"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 4)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1241" name="rejected.n_structure_open_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1043246551" result="Passed" start-time="2022-08-11T21:40:15.4719463Z" end-time="2022-08-11T21:40:15.4720076Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object'
JSON: '{'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1242" name="rejected.n_structure_open_object_close_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_close_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="891502576" result="Passed" start-time="2022-08-11T21:40:15.4720149Z" end-time="2022-08-11T21:40:15.4720740Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_close_array'
JSON: '{]'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ']' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1243" name="rejected.n_structure_open_object_comma" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_comma" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1344652865" result="Passed" start-time="2022-08-11T21:40:15.4720810Z" end-time="2022-08-11T21:40:15.4721392Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_comma'
JSON: '{,'
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got ',' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1244" name="rejected.n_structure_open_object_open_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_open_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1497871616" result="Passed" start-time="2022-08-11T21:40:15.4721498Z" end-time="2022-08-11T21:40:15.4722089Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_open_array'
JSON: '{['
Expected: 'False'
Exception: 'Parsing falied: Expected string start, but got '[' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1245" name="rejected.n_structure_open_object_open_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_open_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1492946710" result="Passed" start-time="2022-08-11T21:40:15.4722159Z" end-time="2022-08-11T21:40:15.4722720Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_open_string'
JSON: '{"a'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 3)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1246" name="rejected.n_structure_open_object_string_with_apostrophes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_object_string_with_apostrophes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1414537741" result="Passed" start-time="2022-08-11T21:40:15.4722787Z" end-time="2022-08-11T21:40:15.4723375Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_object_string_with_apostrophes'
JSON: '{'a''
Expected: 'False'
Exception: 'Parsing falied: Single-quote strings are disabled in settings (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1247" name="rejected.n_structure_open_open" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_open_open" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1671825988" result="Passed" start-time="2022-08-11T21:40:15.4723445Z" end-time="2022-08-11T21:40:15.4724076Z" duration="0.000063" asserts="1">
                    <output><![CDATA[File: 'n_structure_open_open'
JSON: '["\{["\{["\{["\{'
Expected: 'False'
Exception: 'Parsing falied: Missing comma in array (at position 6)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1248" name="rejected.n_structure_single_eacute" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_single_eacute" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1180211463" result="Passed" start-time="2022-08-11T21:40:15.4724145Z" end-time="2022-08-11T21:40:15.4724719Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_structure_single_eacute'
JSON: ''
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1249" name="rejected.n_structure_single_star" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_single_star" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="678980079" result="Passed" start-time="2022-08-11T21:40:15.4724785Z" end-time="2022-08-11T21:40:15.4725338Z" duration="0.000055" asserts="1">
                    <output><![CDATA[File: 'n_structure_single_star'
JSON: '*'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '*' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1250" name="rejected.n_structure_trailing_#" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_trailing_#" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="452535193" result="Passed" start-time="2022-08-11T21:40:15.4725404Z" end-time="2022-08-11T21:40:15.4725929Z" duration="0.000053" asserts="1">
                    <output><![CDATA[File: 'n_structure_trailing_#'
JSON: '{"a":"b"}#{}'
Expected: 'False'
Exception: 'Parsing falied: Unexpected continuation of data (at position 9)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1251" name="rejected.n_structure_U+2060_word_joined" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_U+2060_word_joined" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1154508151" result="Passed" start-time="2022-08-11T21:40:15.4726053Z" end-time="2022-08-11T21:40:15.4726639Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_U+2060_word_joined'
JSON: '[⁠]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '⁠' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1252" name="rejected.n_structure_uescaped_LF_before_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_uescaped_LF_before_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1426819664" result="Passed" start-time="2022-08-11T21:40:15.4726705Z" end-time="2022-08-11T21:40:15.4727282Z" duration="0.000058" asserts="1">
                    <output><![CDATA[File: 'n_structure_uescaped_LF_before_string'
JSON: '[\u000A""]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1253" name="rejected.n_structure_unclosed_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="919565733" result="Passed" start-time="2022-08-11T21:40:15.4727348Z" end-time="2022-08-11T21:40:15.4727943Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_array'
JSON: '[1'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 2)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1254" name="rejected.n_structure_unclosed_array_partial_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_partial_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="618618048" result="Passed" start-time="2022-08-11T21:40:15.4728009Z" end-time="2022-08-11T21:40:15.4728619Z" duration="0.000061" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_array_partial_null'
JSON: '[ false, nul'
Expected: 'False'
Exception: 'Parsing falied: Expected 'l' but got end of stream (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1255" name="rejected.n_structure_unclosed_array_unfinished_false" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_unfinished_false" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="44061662" result="Passed" start-time="2022-08-11T21:40:15.4728688Z" end-time="2022-08-11T21:40:15.4729262Z" duration="0.000057" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_array_unfinished_false'
JSON: '[ true, fals'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got end of stream (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1256" name="rejected.n_structure_unclosed_array_unfinished_true" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_array_unfinished_true" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="960779011" result="Passed" start-time="2022-08-11T21:40:15.4729380Z" end-time="2022-08-11T21:40:15.4730080Z" duration="0.000070" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_array_unfinished_true'
JSON: '[ false, tru'
Expected: 'False'
Exception: 'Parsing falied: Expected 'e' but got end of stream (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1257" name="rejected.n_structure_unclosed_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unclosed_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1800422637" result="Passed" start-time="2022-08-11T21:40:15.4730149Z" end-time="2022-08-11T21:40:15.4731103Z" duration="0.000095" asserts="1">
                    <output><![CDATA[File: 'n_structure_unclosed_object'
JSON: '{"asd":"asd"'
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 12)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1258" name="rejected.n_structure_unicode-identifier" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_unicode-identifier" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1691174046" result="Passed" start-time="2022-08-11T21:40:15.4731170Z" end-time="2022-08-11T21:40:15.4731891Z" duration="0.000072" asserts="1">
                    <output><![CDATA[File: 'n_structure_unicode-identifier'
JSON: 'å'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer 'å' (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1259" name="rejected.n_structure_UTF8_BOM_no_data" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_UTF8_BOM_no_data" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1259667086" result="Passed" start-time="2022-08-11T21:40:15.4731961Z" end-time="2022-08-11T21:40:15.4733108Z" duration="0.000115" asserts="1">
                    <output><![CDATA[File: 'n_structure_UTF8_BOM_no_data'
JSON: ''
Expected: 'False'
Exception: 'Parsing falied: Expected some char, but got end of stream (at position 0)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1260" name="rejected.n_structure_whitespace_formfeed" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_whitespace_formfeed" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1919421614" result="Passed" start-time="2022-08-11T21:40:15.4733183Z" end-time="2022-08-11T21:40:15.4733874Z" duration="0.000069" asserts="1">
                    <output><![CDATA[File: 'n_structure_whitespace_formfeed'
JSON: '[\u000c]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '\u000c' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1261" name="rejected.n_structure_whitespace_U+2060_word_joiner" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.rejected.n_structure_whitespace_U+2060_word_joiner" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1258865276" result="Passed" start-time="2022-08-11T21:40:15.4734056Z" end-time="2022-08-11T21:40:15.4734940Z" duration="0.000088" asserts="1">
                    <output><![CDATA[File: 'n_structure_whitespace_U+2060_word_joiner'
JSON: '[⁠]'
Expected: 'False'
Exception: 'Parsing falied: Expected a token start, got unexpected characer '⁠' (at position 1)'
Result: 'False'
]]></output>
                  </test-case>
                  <test-case id="0-1262" name="accepted.y_array_arraysWithSpaces" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_arraysWithSpaces" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2110885962" result="Passed" start-time="2022-08-11T21:40:15.4735007Z" end-time="2022-08-11T21:40:15.4735372Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_array_arraysWithSpaces'
JSON: '[[]   ]'
Expected: 'True'
Parsed: '[[]]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1263" name="accepted.y_array_empty-string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_empty-string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="506338866" result="Passed" start-time="2022-08-11T21:40:15.4735435Z" end-time="2022-08-11T21:40:15.4735752Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_array_empty-string'
JSON: '[""]'
Expected: 'True'
Parsed: '[""]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1264" name="accepted.y_array_empty" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_empty" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1179972787" result="Passed" start-time="2022-08-11T21:40:15.4735858Z" end-time="2022-08-11T21:40:15.4736187Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_array_empty'
JSON: '[]'
Expected: 'True'
Parsed: '[]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1265" name="accepted.y_array_ending_with_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_ending_with_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1744306926" result="Passed" start-time="2022-08-11T21:40:15.4736247Z" end-time="2022-08-11T21:40:15.4736549Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_array_ending_with_newline'
JSON: '["a"]'
Expected: 'True'
Parsed: '["a"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1266" name="accepted.y_array_false" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_false" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1845621834" result="Passed" start-time="2022-08-11T21:40:15.4736609Z" end-time="2022-08-11T21:40:15.4736945Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_array_false'
JSON: '[false]'
Expected: 'True'
Parsed: '[false]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1267" name="accepted.y_array_heterogeneous" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_heterogeneous" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="115435619" result="Passed" start-time="2022-08-11T21:40:15.4737008Z" end-time="2022-08-11T21:40:15.4737391Z" duration="0.000039" asserts="1">
                    <output><![CDATA[File: 'y_array_heterogeneous'
JSON: '[null, 1, "1", {}]'
Expected: 'True'
Parsed: '[null,1,"1",{}]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1268" name="accepted.y_array_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="293738543" result="Passed" start-time="2022-08-11T21:40:15.4737458Z" end-time="2022-08-11T21:40:15.4737871Z" duration="0.000041" asserts="1">
                    <output><![CDATA[File: 'y_array_null'
JSON: '[null]'
Expected: 'True'
Parsed: '[null]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1269" name="accepted.y_array_with_1_and_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_1_and_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="825559818" result="Passed" start-time="2022-08-11T21:40:15.4737932Z" end-time="2022-08-11T21:40:15.4738384Z" duration="0.000046" asserts="1">
                    <output><![CDATA[File: 'y_array_with_1_and_newline'
JSON: '[1
]'
Expected: 'True'
Parsed: '[1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1270" name="accepted.y_array_with_leading_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_leading_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="989111361" result="Passed" start-time="2022-08-11T21:40:15.4738448Z" end-time="2022-08-11T21:40:15.4738750Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_array_with_leading_space'
JSON: ' [1]'
Expected: 'True'
Parsed: '[1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1271" name="accepted.y_array_with_several_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_several_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="536506313" result="Passed" start-time="2022-08-11T21:40:15.4738813Z" end-time="2022-08-11T21:40:15.4739163Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_array_with_several_null'
JSON: '[1,null,null,null,2]'
Expected: 'True'
Parsed: '[1,null,null,null,2]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1272" name="accepted.y_array_with_trailing_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_array_with_trailing_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="199004402" result="Passed" start-time="2022-08-11T21:40:15.4739230Z" end-time="2022-08-11T21:40:15.4739568Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_array_with_trailing_space'
JSON: '[2] '
Expected: 'True'
Parsed: '[2]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1273" name="accepted.y_number" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1904426734" result="Passed" start-time="2022-08-11T21:40:15.4739628Z" end-time="2022-08-11T21:40:15.4740603Z" duration="0.000098" asserts="1">
                    <output><![CDATA[File: 'y_number'
JSON: '[123e65]'
Expected: 'True'
Parsed: '[1.23e+67]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1274" name="accepted.y_number_0e+1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_0e+1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1952815284" result="Passed" start-time="2022-08-11T21:40:15.4740676Z" end-time="2022-08-11T21:40:15.4741083Z" duration="0.000041" asserts="1">
                    <output><![CDATA[File: 'y_number_0e+1'
JSON: '[0e+1]'
Expected: 'True'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1275" name="accepted.y_number_0e1" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_0e1" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="253606095" result="Passed" start-time="2022-08-11T21:40:15.4741150Z" end-time="2022-08-11T21:40:15.4741527Z" duration="0.000038" asserts="1">
                    <output><![CDATA[File: 'y_number_0e1'
JSON: '[0e1]'
Expected: 'True'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1276" name="accepted.y_number_after_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_after_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1439491224" result="Passed" start-time="2022-08-11T21:40:15.4741590Z" end-time="2022-08-11T21:40:15.4741907Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_number_after_space'
JSON: '[ 4]'
Expected: 'True'
Parsed: '[4]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1277" name="accepted.y_number_double_close_to_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_double_close_to_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1847662419" result="Passed" start-time="2022-08-11T21:40:15.4741971Z" end-time="2022-08-11T21:40:15.4742342Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_number_double_close_to_zero'
JSON: '[-0.000000000000000000000000000000000000000000000000000000000000000000000000000001]
'
Expected: 'True'
Parsed: '[0.0000000000000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1278" name="accepted.y_number_int_with_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_int_with_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1838141492" result="Passed" start-time="2022-08-11T21:40:15.4742402Z" end-time="2022-08-11T21:40:15.4742749Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_number_int_with_exp'
JSON: '[20e1]'
Expected: 'True'
Parsed: '[200]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1279" name="accepted.y_number_minus_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_minus_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="761587156" result="Passed" start-time="2022-08-11T21:40:15.4742810Z" end-time="2022-08-11T21:40:15.4743112Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_number_minus_zero'
JSON: '[-0]'
Expected: 'True'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1280" name="accepted.y_number_negative_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="89692293" result="Passed" start-time="2022-08-11T21:40:15.4743172Z" end-time="2022-08-11T21:40:15.4743537Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_number_negative_int'
JSON: '[-123]'
Expected: 'True'
Parsed: '[-123]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1281" name="accepted.y_number_negative_one" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_one" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1582414052" result="Passed" start-time="2022-08-11T21:40:15.4743601Z" end-time="2022-08-11T21:40:15.4743939Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_number_negative_one'
JSON: '[-1]'
Expected: 'True'
Parsed: '[-1]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1282" name="accepted.y_number_negative_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_negative_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1925704915" result="Passed" start-time="2022-08-11T21:40:15.4744002Z" end-time="2022-08-11T21:40:15.4744307Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_number_negative_zero'
JSON: '[-0]'
Expected: 'True'
Parsed: '[0]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1283" name="accepted.y_number_real_capital_e" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2134939603" result="Passed" start-time="2022-08-11T21:40:15.4744368Z" end-time="2022-08-11T21:40:15.4744715Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_number_real_capital_e'
JSON: '[1E22]'
Expected: 'True'
Parsed: '[10000000000000000000000]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1284" name="accepted.y_number_real_capital_e_neg_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e_neg_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="306162584" result="Passed" start-time="2022-08-11T21:40:15.4744778Z" end-time="2022-08-11T21:40:15.4745092Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_number_real_capital_e_neg_exp'
JSON: '[1E-2]'
Expected: 'True'
Parsed: '[0.01]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1285" name="accepted.y_number_real_capital_e_pos_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_capital_e_pos_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="549575635" result="Passed" start-time="2022-08-11T21:40:15.4745183Z" end-time="2022-08-11T21:40:15.4745497Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_number_real_capital_e_pos_exp'
JSON: '[1E+2]'
Expected: 'True'
Parsed: '[100]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1286" name="accepted.y_number_real_exponent" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_exponent" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2069079883" result="Passed" start-time="2022-08-11T21:40:15.4745557Z" end-time="2022-08-11T21:40:15.4746230Z" duration="0.000067" asserts="1">
                    <output><![CDATA[File: 'y_number_real_exponent'
JSON: '[123e45]'
Expected: 'True'
Parsed: '[1.23e+47]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1287" name="accepted.y_number_real_fraction_exponent" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_fraction_exponent" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="865699798" result="Passed" start-time="2022-08-11T21:40:15.4746299Z" end-time="2022-08-11T21:40:15.4746967Z" duration="0.000067" asserts="1">
                    <output><![CDATA[File: 'y_number_real_fraction_exponent'
JSON: '[123.456e78]'
Expected: 'True'
Parsed: '[1.23456e+80]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1288" name="accepted.y_number_real_neg_exp" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_neg_exp" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="790040770" result="Passed" start-time="2022-08-11T21:40:15.4747036Z" end-time="2022-08-11T21:40:15.4747383Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_number_real_neg_exp'
JSON: '[1e-2]'
Expected: 'True'
Parsed: '[0.01]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1289" name="accepted.y_number_real_pos_exponent" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_real_pos_exponent" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1578722647" result="Passed" start-time="2022-08-11T21:40:15.4747444Z" end-time="2022-08-11T21:40:15.4747797Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_number_real_pos_exponent'
JSON: '[1e+2]'
Expected: 'True'
Parsed: '[100]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1290" name="accepted.y_number_simple_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_simple_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2018698416" result="Passed" start-time="2022-08-11T21:40:15.4747860Z" end-time="2022-08-11T21:40:15.4748174Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_number_simple_int'
JSON: '[123]'
Expected: 'True'
Parsed: '[123]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1291" name="accepted.y_number_simple_real" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_number_simple_real" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1099710208" result="Passed" start-time="2022-08-11T21:40:15.4748231Z" end-time="2022-08-11T21:40:15.4748585Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_number_simple_real'
JSON: '[123.456789]'
Expected: 'True'
Parsed: '[123.456789]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1292" name="accepted.y_object" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1840303751" result="Passed" start-time="2022-08-11T21:40:15.4748648Z" end-time="2022-08-11T21:40:15.4749047Z" duration="0.000040" asserts="1">
                    <output><![CDATA[File: 'y_object'
JSON: '{"asd":"sdf", "dfg":"fgh"}'
Expected: 'True'
Parsed: '{"asd":"sdf","dfg":"fgh"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1293" name="accepted.y_object_basic" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_basic" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="872780660" result="Passed" start-time="2022-08-11T21:40:15.4749113Z" end-time="2022-08-11T21:40:15.4749436Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_object_basic'
JSON: '{"asd":"sdf"}'
Expected: 'True'
Parsed: '{"asd":"sdf"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1294" name="accepted.y_object_duplicated_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_duplicated_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1368311591" result="Passed" start-time="2022-08-11T21:40:15.4749499Z" end-time="2022-08-11T21:40:15.4750000Z" duration="0.000050" asserts="1">
                    <output><![CDATA[File: 'y_object_duplicated_key'
JSON: '{"a":"b","a":"c"}'
Expected: 'True'
Parsed: '{"a":"c"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1295" name="accepted.y_object_duplicated_key_and_value" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_duplicated_key_and_value" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1700225656" result="Passed" start-time="2022-08-11T21:40:15.4750070Z" end-time="2022-08-11T21:40:15.4750556Z" duration="0.000049" asserts="1">
                    <output><![CDATA[File: 'y_object_duplicated_key_and_value'
JSON: '{"a":"b","a":"b"}'
Expected: 'True'
Parsed: '{"a":"b"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1296" name="accepted.y_object_empty" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_empty" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1079844236" result="Passed" start-time="2022-08-11T21:40:15.4750622Z" end-time="2022-08-11T21:40:15.4751033Z" duration="0.000041" asserts="1">
                    <output><![CDATA[File: 'y_object_empty'
JSON: '{}'
Expected: 'True'
Parsed: '{}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1297" name="accepted.y_object_empty_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_empty_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="385163710" result="Passed" start-time="2022-08-11T21:40:15.4751090Z" end-time="2022-08-11T21:40:15.4751440Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_object_empty_key'
JSON: '{"":0}'
Expected: 'True'
Parsed: '{"":0}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1298" name="accepted.y_object_escaped_null_in_key" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_escaped_null_in_key" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="164680078" result="Passed" start-time="2022-08-11T21:40:15.4751667Z" end-time="2022-08-11T21:40:15.4752177Z" duration="0.000051" asserts="1">
                    <output><![CDATA[File: 'y_object_escaped_null_in_key'
JSON: '{"foo\u0000bar": 42}'
Expected: 'True'
Parsed: '{"foo\u0000bar":42}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1299" name="accepted.y_object_extreme_numbers" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_extreme_numbers" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1901048337" result="Passed" start-time="2022-08-11T21:40:15.4752243Z" end-time="2022-08-11T21:40:15.4752874Z" duration="0.000063" asserts="1">
                    <output><![CDATA[File: 'y_object_extreme_numbers'
JSON: '{ "min": -1.0e+28, "max": 1.0e+28 }'
Expected: 'True'
Parsed: '{"min":-10000000000000000000000000000,"max":10000000000000000000000000000}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1300" name="accepted.y_object_long_strings" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_long_strings" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1794808523" result="Passed" start-time="2022-08-11T21:40:15.4752941Z" end-time="2022-08-11T21:40:15.4753336Z" duration="0.000040" asserts="1">
                    <output><![CDATA[File: 'y_object_long_strings'
JSON: '{"x":[{"id": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}], "id": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}'
Expected: 'True'
Parsed: '{"x":[{"id":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}],"id":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1301" name="accepted.y_object_simple" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_simple" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1299102122" result="Passed" start-time="2022-08-11T21:40:15.4753399Z" end-time="2022-08-11T21:40:15.4753707Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_object_simple'
JSON: '{"a":[]}'
Expected: 'True'
Parsed: '{"a":[]}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1302" name="accepted.y_object_string_unicode" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_string_unicode" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1378087445" result="Passed" start-time="2022-08-11T21:40:15.4753768Z" end-time="2022-08-11T21:40:15.4754160Z" duration="0.000040" asserts="1">
                    <output><![CDATA[File: 'y_object_string_unicode'
JSON: '{"title":"\u041f\u043e\u043b\u0442\u043e\u0440\u0430 \u0417\u0435\u043c\u043b\u0435\u043a\u043e\u043f\u0430" }'
Expected: 'True'
Parsed: '{"title":"Полтора Землекопа"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1303" name="accepted.y_object_with_newlines" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_object_with_newlines" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="354651645" result="Passed" start-time="2022-08-11T21:40:15.4754224Z" end-time="2022-08-11T21:40:15.4754595Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_object_with_newlines'
JSON: '{
"a": "b"
}'
Expected: 'True'
Parsed: '{"a":"b"}'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1304" name="accepted.y_string_1_2_3_bytes_UTF-8_sequences" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_1_2_3_bytes_UTF-8_sequences" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1837352365" result="Passed" start-time="2022-08-11T21:40:15.4754658Z" end-time="2022-08-11T21:40:15.4754975Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_1_2_3_bytes_UTF-8_sequences'
JSON: '["\u0060\u012a\u12AB"]'
Expected: 'True'
Parsed: '["`Īካ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1305" name="accepted.y_string_accepted_surrogate_pair" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_accepted_surrogate_pair" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2063512527" result="Passed" start-time="2022-08-11T21:40:15.4755069Z" end-time="2022-08-11T21:40:15.4755386Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_accepted_surrogate_pair'
JSON: '["\uD801\udc37"]'
Expected: 'True'
Parsed: '["𐐷"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1306" name="accepted.y_string_accepted_surrogate_pairs" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_accepted_surrogate_pairs" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="955503749" result="Passed" start-time="2022-08-11T21:40:15.4755446Z" end-time="2022-08-11T21:40:15.4755793Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_accepted_surrogate_pairs'
JSON: '["\ud83d\ude39\ud83d\udc8d"]'
Expected: 'True'
Parsed: '["😹💍"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1307" name="accepted.y_string_allowed_escapes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_allowed_escapes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1669876577" result="Passed" start-time="2022-08-11T21:40:15.4755857Z" end-time="2022-08-11T21:40:15.4756171Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_string_allowed_escapes'
JSON: '["\"\\\/\b\f\n\r\t"]'
Expected: 'True'
Parsed: '[""\/\u0008\u000c

	"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1308" name="accepted.y_string_backslash_and_u_escaped_zero" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_backslash_and_u_escaped_zero" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1114234096" result="Passed" start-time="2022-08-11T21:40:15.4756261Z" end-time="2022-08-11T21:40:15.4756575Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_string_backslash_and_u_escaped_zero'
JSON: '["\\u0000"]'
Expected: 'True'
Parsed: '["\u0000"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1309" name="accepted.y_string_backslash_doublequotes" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_backslash_doublequotes" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="365011953" result="Passed" start-time="2022-08-11T21:40:15.4756639Z" end-time="2022-08-11T21:40:15.4756980Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_backslash_doublequotes'
JSON: '["\""]'
Expected: 'True'
Parsed: '["""]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1310" name="accepted.y_string_comments" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_comments" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="752054085" result="Passed" start-time="2022-08-11T21:40:15.4757040Z" end-time="2022-08-11T21:40:15.4757339Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_string_comments'
JSON: '["a/*b*/c/*d//e"]'
Expected: 'True'
Parsed: '["a/*b*/c/*d//e"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1311" name="accepted.y_string_double_escape_a" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_double_escape_a" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1260600239" result="Passed" start-time="2022-08-11T21:40:15.4757399Z" end-time="2022-08-11T21:40:15.4757755Z" duration="0.000036" asserts="1">
                    <output><![CDATA[File: 'y_string_double_escape_a'
JSON: '["\\a"]'
Expected: 'True'
Parsed: '["\a"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1312" name="accepted.y_string_double_escape_n" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_double_escape_n" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2109764792" result="Passed" start-time="2022-08-11T21:40:15.4757816Z" end-time="2022-08-11T21:40:15.4758151Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_double_escape_n'
JSON: '["\\n"]'
Expected: 'True'
Parsed: '["\n"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1313" name="accepted.y_string_escaped_control_character" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_escaped_control_character" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="929586890" result="Passed" start-time="2022-08-11T21:40:15.4758214Z" end-time="2022-08-11T21:40:15.4758519Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_string_escaped_control_character'
JSON: '["\u0012"]'
Expected: 'True'
Parsed: '["\u0012"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1314" name="accepted.y_string_escaped_noncharacter" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_escaped_noncharacter" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1169974793" result="Passed" start-time="2022-08-11T21:40:15.4758580Z" end-time="2022-08-11T21:40:15.4758921Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_escaped_noncharacter'
JSON: '["\uFFFF"]'
Expected: 'True'
Parsed: '["\uffff"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1315" name="accepted.y_string_in_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_in_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="337007562" result="Passed" start-time="2022-08-11T21:40:15.4758981Z" end-time="2022-08-11T21:40:15.4759331Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_string_in_array'
JSON: '["asd"]'
Expected: 'True'
Parsed: '["asd"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1316" name="accepted.y_string_in_array_with_leading_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_in_array_with_leading_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1480644008" result="Passed" start-time="2022-08-11T21:40:15.4759392Z" end-time="2022-08-11T21:40:15.4759690Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_string_in_array_with_leading_space'
JSON: '[ "asd"]'
Expected: 'True'
Parsed: '["asd"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1317" name="accepted.y_string_last_surrogates_1_and_2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_last_surrogates_1_and_2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2123430006" result="Passed" start-time="2022-08-11T21:40:15.4759751Z" end-time="2022-08-11T21:40:15.4760089Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_last_surrogates_1_and_2'
JSON: '["\uDBFF\uDFFF"]'
Expected: 'True'
Parsed: '["􏿿"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1318" name="accepted.y_string_nbsp_uescaped" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nbsp_uescaped" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="200176282" result="Passed" start-time="2022-08-11T21:40:15.4760149Z" end-time="2022-08-11T21:40:15.4760490Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_nbsp_uescaped'
JSON: '["new\u00A0line"]'
Expected: 'True'
Parsed: '["new line"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1319" name="accepted.y_string_nonCharacterInUTF-8_U+10FFFF" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nonCharacterInUTF-8_U+10FFFF" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="630397152" result="Passed" start-time="2022-08-11T21:40:15.4760551Z" end-time="2022-08-11T21:40:15.4760847Z" duration="0.000030" asserts="1">
                    <output><![CDATA[File: 'y_string_nonCharacterInUTF-8_U+10FFFF'
JSON: '["􏿿"]'
Expected: 'True'
Parsed: '["􏿿"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1320" name="accepted.y_string_nonCharacterInUTF-8_U+FFFF" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_nonCharacterInUTF-8_U+FFFF" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1822710690" result="Passed" start-time="2022-08-11T21:40:15.4760907Z" end-time="2022-08-11T21:40:15.4761254Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_string_nonCharacterInUTF-8_U+FFFF'
JSON: '["\uffff"]'
Expected: 'True'
Parsed: '["\uffff"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1321" name="accepted.y_string_null_escape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_null_escape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="979922036" result="Passed" start-time="2022-08-11T21:40:15.4761315Z" end-time="2022-08-11T21:40:15.4761837Z" duration="0.000052" asserts="1">
                    <output><![CDATA[File: 'y_string_null_escape'
JSON: '["\u0000"]'
Expected: 'True'
Parsed: '["\u0000"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1322" name="accepted.y_string_one-byte-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_one-byte-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1472878496" result="Passed" start-time="2022-08-11T21:40:15.4761900Z" end-time="2022-08-11T21:40:15.4762489Z" duration="0.000059" asserts="1">
                    <output><![CDATA[File: 'y_string_one-byte-utf-8'
JSON: '["\u002c"]'
Expected: 'True'
Parsed: '[","]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1323" name="accepted.y_string_pi" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_pi" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="862499543" result="Passed" start-time="2022-08-11T21:40:15.4762549Z" end-time="2022-08-11T21:40:15.4763008Z" duration="0.000046" asserts="1">
                    <output><![CDATA[File: 'y_string_pi'
JSON: '["π"]'
Expected: 'True'
Parsed: '["π"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1324" name="accepted.y_string_reservedCharacterInUTF-8_U+1BFFF" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_reservedCharacterInUTF-8_U+1BFFF" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="954345049" result="Passed" start-time="2022-08-11T21:40:15.4763068Z" end-time="2022-08-11T21:40:15.4763361Z" duration="0.000029" asserts="1">
                    <output><![CDATA[File: 'y_string_reservedCharacterInUTF-8_U+1BFFF'
JSON: '["𛿿"]'
Expected: 'True'
Parsed: '["𛿿"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1325" name="accepted.y_string_simple_ascii" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_simple_ascii" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2036884800" result="Passed" start-time="2022-08-11T21:40:15.4763419Z" end-time="2022-08-11T21:40:15.4763748Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_string_simple_ascii'
JSON: '["asd "]'
Expected: 'True'
Parsed: '["asd "]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1326" name="accepted.y_string_space" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_space" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="843686209" result="Passed" start-time="2022-08-11T21:40:15.4763808Z" end-time="2022-08-11T21:40:15.4764128Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_space'
JSON: '" "'
Expected: 'True'
Parsed: '" "'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1327" name="accepted.y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1473707389" result="Passed" start-time="2022-08-11T21:40:15.4764188Z" end-time="2022-08-11T21:40:15.4845507Z" duration="0.008132" asserts="1">
                    <output><![CDATA[File: 'y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF'
JSON: '["\uD834\uDd1e"]'
Expected: 'True'
Parsed: '["𝄞"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1328" name="accepted.y_string_three-byte-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_three-byte-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="536115143" result="Passed" start-time="2022-08-11T21:40:15.4845767Z" end-time="2022-08-11T21:40:15.4846923Z" duration="0.000116" asserts="1">
                    <output><![CDATA[File: 'y_string_three-byte-utf-8'
JSON: '["\u0821"]'
Expected: 'True'
Parsed: '["ࠡ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1329" name="accepted.y_string_two-byte-utf-8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_two-byte-utf-8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="252589628" result="Passed" start-time="2022-08-11T21:40:15.4847010Z" end-time="2022-08-11T21:40:15.4847397Z" duration="0.000038" asserts="1">
                    <output><![CDATA[File: 'y_string_two-byte-utf-8'
JSON: '["\u0123"]'
Expected: 'True'
Parsed: '["ģ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1330" name="accepted.y_string_u+2028_line_sep" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_u+2028_line_sep" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1321245506" result="Passed" start-time="2022-08-11T21:40:15.4847466Z" end-time="2022-08-11T21:40:15.4847819Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_string_u+2028_line_sep'
JSON: '[" "]'
Expected: 'True'
Parsed: '[" "]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1331" name="accepted.y_string_u+2029_par_sep" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_u+2029_par_sep" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1054327514" result="Passed" start-time="2022-08-11T21:40:15.4847886Z" end-time="2022-08-11T21:40:15.4849157Z" duration="0.000127" asserts="1">
                    <output><![CDATA[File: 'y_string_u+2029_par_sep'
JSON: '[" "]'
Expected: 'True'
Parsed: '[" "]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1332" name="accepted.y_string_uEscape" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_uEscape" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1682982341" result="Passed" start-time="2022-08-11T21:40:15.4849259Z" end-time="2022-08-11T21:40:15.4858192Z" duration="0.000893" asserts="1">
                    <output><![CDATA[File: 'y_string_uEscape'
JSON: '["\u0061\u30af\u30EA\u30b9"]'
Expected: 'True'
Parsed: '["aクリス"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1333" name="accepted.y_string_uescaped_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_uescaped_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="2084576802" result="Passed" start-time="2022-08-11T21:40:15.4861977Z" end-time="2022-08-11T21:40:15.4862786Z" duration="0.000081" asserts="1">
                    <output><![CDATA[File: 'y_string_uescaped_newline'
JSON: '["new\u000Aline"]'
Expected: 'True'
Parsed: '["new
line"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1334" name="accepted.y_string_unescaped_char_delete" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unescaped_char_delete" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1114262280" result="Passed" start-time="2022-08-11T21:40:15.4862865Z" end-time="2022-08-11T21:40:15.4863239Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_string_unescaped_char_delete'
JSON: '["\u007f"]'
Expected: 'True'
Parsed: '["\u007f"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1335" name="accepted.y_string_unicode" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="938073818" result="Passed" start-time="2022-08-11T21:40:15.4877475Z" end-time="2022-08-11T21:40:15.4878444Z" duration="0.000096" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode'
JSON: '["\uA66D"]'
Expected: 'True'
Parsed: '["ꙭ"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1336" name="accepted.y_string_unicodeEscapedBackslash" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicodeEscapedBackslash" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="204326607" result="Passed" start-time="2022-08-11T21:40:15.4878529Z" end-time="2022-08-11T21:40:15.4879081Z" duration="0.000056" asserts="1">
                    <output><![CDATA[File: 'y_string_unicodeEscapedBackslash'
JSON: '["\u005C"]'
Expected: 'True'
Parsed: '["\"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1337" name="accepted.y_string_unicode_2" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_2" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1571053270" result="Passed" start-time="2022-08-11T21:40:15.4879193Z" end-time="2022-08-11T21:40:15.4879899Z" duration="0.000071" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_2'
JSON: '["⍂㈴⍂"]'
Expected: 'True'
Parsed: '["⍂㈴⍂"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1338" name="accepted.y_string_unicode_escaped_double_quote" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_escaped_double_quote" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="297587238" result="Passed" start-time="2022-08-11T21:40:15.4879978Z" end-time="2022-08-11T21:40:15.4880358Z" duration="0.000038" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_escaped_double_quote'
JSON: '["\u0022"]'
Expected: 'True'
Parsed: '["""]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1339" name="accepted.y_string_unicode_U+10FFFE_nonchar" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+10FFFE_nonchar" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="390133704" result="Passed" start-time="2022-08-11T21:40:15.4880427Z" end-time="2022-08-11T21:40:15.4880787Z" duration="0.000036" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+10FFFE_nonchar'
JSON: '["\uDBFF\uDFFE"]'
Expected: 'True'
Parsed: '["􏿾"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1340" name="accepted.y_string_unicode_U+1FFFE_nonchar" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+1FFFE_nonchar" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1741555533" result="Passed" start-time="2022-08-11T21:40:15.4880853Z" end-time="2022-08-11T21:40:15.4881194Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+1FFFE_nonchar'
JSON: '["\uD83F\uDFFE"]'
Expected: 'True'
Parsed: '["🿾"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1341" name="accepted.y_string_unicode_U+200B_ZERO_WIDTH_SPACE" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+200B_ZERO_WIDTH_SPACE" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="399203306" result="Passed" start-time="2022-08-11T21:40:15.4881258Z" end-time="2022-08-11T21:40:15.4881719Z" duration="0.000046" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+200B_ZERO_WIDTH_SPACE'
JSON: '["\u200B"]'
Expected: 'True'
Parsed: '["​"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1342" name="accepted.y_string_unicode_U+2064_invisible_plus" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+2064_invisible_plus" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1898949349" result="Passed" start-time="2022-08-11T21:40:15.4881789Z" end-time="2022-08-11T21:40:15.4882151Z" duration="0.000037" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+2064_invisible_plus'
JSON: '["\u2064"]'
Expected: 'True'
Parsed: '["⁤"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1343" name="accepted.y_string_unicode_U+FDD0_nonchar" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+FDD0_nonchar" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="425028817" result="Passed" start-time="2022-08-11T21:40:15.4882218Z" end-time="2022-08-11T21:40:15.4882553Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+FDD0_nonchar'
JSON: '["\uFDD0"]'
Expected: 'True'
Parsed: '["﷐"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1344" name="accepted.y_string_unicode_U+FFFE_nonchar" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_unicode_U+FFFE_nonchar" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="826668562" result="Passed" start-time="2022-08-11T21:40:15.4882616Z" end-time="2022-08-11T21:40:15.4882954Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_string_unicode_U+FFFE_nonchar'
JSON: '["\uFFFE"]'
Expected: 'True'
Parsed: '["\ufffe"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1345" name="accepted.y_string_utf8" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_utf8" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="758098177" result="Passed" start-time="2022-08-11T21:40:15.4883017Z" end-time="2022-08-11T21:40:15.4883334Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_utf8'
JSON: '["€𝄞"]'
Expected: 'True'
Parsed: '["€𝄞"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1346" name="accepted.y_string_with_del_character" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_string_with_del_character" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1137429063" result="Passed" start-time="2022-08-11T21:40:15.4883404Z" end-time="2022-08-11T21:40:15.4883721Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_string_with_del_character'
JSON: '["a\u007fa"]'
Expected: 'True'
Parsed: '["a\u007fa"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1347" name="accepted.y_structure_lonely_false" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_false" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="910716861" result="Passed" start-time="2022-08-11T21:40:15.4883784Z" end-time="2022-08-11T21:40:15.4884107Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_false'
JSON: 'false'
Expected: 'True'
Parsed: 'false'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1348" name="accepted.y_structure_lonely_int" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_int" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1850289514" result="Passed" start-time="2022-08-11T21:40:15.4884171Z" end-time="2022-08-11T21:40:15.4884500Z" duration="0.000033" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_int'
JSON: '42'
Expected: 'True'
Parsed: '42'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1349" name="accepted.y_structure_lonely_negative_real" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_negative_real" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1031304029" result="Passed" start-time="2022-08-11T21:40:15.4884566Z" end-time="2022-08-11T21:40:15.4884910Z" duration="0.000035" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_negative_real'
JSON: '-0.1'
Expected: 'True'
Parsed: '-0.1'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1350" name="accepted.y_structure_lonely_null" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_null" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="219581648" result="Passed" start-time="2022-08-11T21:40:15.4884974Z" end-time="2022-08-11T21:40:15.4885288Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_null'
JSON: 'null'
Expected: 'True'
Parsed: 'null'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1351" name="accepted.y_structure_lonely_string" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_string" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1103897877" result="Passed" start-time="2022-08-11T21:40:15.4885351Z" end-time="2022-08-11T21:40:15.4885659Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_string'
JSON: '"asd"'
Expected: 'True'
Parsed: '"asd"'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1352" name="accepted.y_structure_lonely_true" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_lonely_true" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="184987428" result="Passed" start-time="2022-08-11T21:40:15.4885719Z" end-time="2022-08-11T21:40:15.4886030Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_lonely_true'
JSON: 'true'
Expected: 'True'
Parsed: 'true'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1353" name="accepted.y_structure_string_empty" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_string_empty" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1681766573" result="Passed" start-time="2022-08-11T21:40:15.4886094Z" end-time="2022-08-11T21:40:15.4886401Z" duration="0.000031" asserts="1">
                    <output><![CDATA[File: 'y_structure_string_empty'
JSON: '""'
Expected: 'True'
Parsed: '""'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1354" name="accepted.y_structure_trailing_newline" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_trailing_newline" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="78337647" result="Passed" start-time="2022-08-11T21:40:15.4886468Z" end-time="2022-08-11T21:40:15.4886785Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_structure_trailing_newline'
JSON: '["a"]
'
Expected: 'True'
Parsed: '["a"]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1355" name="accepted.y_structure_true_in_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_true_in_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="814886487" result="Passed" start-time="2022-08-11T21:40:15.4886848Z" end-time="2022-08-11T21:40:15.4887168Z" duration="0.000032" asserts="1">
                    <output><![CDATA[File: 'y_structure_true_in_array'
JSON: '[true]'
Expected: 'True'
Parsed: '[true]'
Result: 'True'
]]></output>
                  </test-case>
                  <test-case id="0-1356" name="accepted.y_structure_whitespace_array" fullname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite.accepted.y_structure_whitespace_array" methodname="Test" classname="Jsonata.Net.Native.JsonParser.TestSuite.JSONTestSuite" runstate="Runnable" seed="1973707273" result="Passed" start-time="2022-08-11T21:40:15.4887352Z" end-time="2022-08-11T21:40:15.4887693Z" duration="0.000034" asserts="1">
                    <output><![CDATA[File: 'y_structure_whitespace_array'
JSON: ' [] '
Expected: 'True'
Parsed: '[]'
Result: 'True'
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>