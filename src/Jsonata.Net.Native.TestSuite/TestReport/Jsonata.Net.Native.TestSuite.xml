<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="0" name="Jsonata.Net.Native.TestSuite.dll" fullname="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Debug\net5.0\Jsonata.Net.Native.TestSuite.dll" runstate="Runnable" testcasecount="1611" result="Failed" total="1611" passed="1197" failed="240" inconclusive="0" skipped="174" asserts="1106" engine-version="3.12.0.0" clr-version="5.0.17" start-time="2022-08-11 21:23:24Z" end-time="2022-08-11 21:23:33Z" duration="9.588520">
  <command-line><![CDATA[F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Debug\net5.0\testhost.dll --port 61532 --endpoint 127.0.0.1:061532 --role client --parentprocessid 24736 --telemetryoptedin false]]></command-line>
  <filter>
    <or>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.closures.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.closures.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case034a</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case039</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case040</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case041</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case042</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case043</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case044</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case045</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.large[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.large[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[62]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[63]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[64]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[65]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[62]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[63]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[64]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[65]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[66]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[67]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[68]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[69]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.matchers.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.matchers.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case039</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case040</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case041</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case042</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case043</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case044</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case045</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case046</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case047</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case048</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case049</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case050</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case051</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case052</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case053</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case054</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case055</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case056</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case057</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case058</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case059</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case060</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case061</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case062</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case063</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case064</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case065</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case066</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case067</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case068</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case069</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case070</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case071</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case072</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case073</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case074</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case075</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case076</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case077</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case078</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case079</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case080</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case081</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case082</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case083</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case084</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case085</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case086</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case087</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case088</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case089</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case090</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case091</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case092</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case093</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case094</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case095</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case096</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case097</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case098</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case099</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case100</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case101</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case102</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case103</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case009</test>
    </or>
  </filter>
  <test-suite type="Assembly" id="0-2613" name="Jsonata.Net.Native.TestSuite.dll" fullname="F:/Projects/_NuGet_External/jsonata.net.native/src/Jsonata.Net.Native.TestSuite/bin/Debug/net5.0/Jsonata.Net.Native.TestSuite.dll" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-08-11T21:23:24.2351784Z" end-time="2022-08-11T21:23:33.6786553Z" duration="9.443491" total="1611" passed="1197" failed="240" warnings="0" inconclusive="0" skipped="174" asserts="1106">
    <environment framework-version="3.13.2.0" clr-version="5.0.17" os-version="Microsoft Windows 6.3.9600" platform="Win32NT" cwd="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Debug\net5.0" machine-name="ABC-BARG" user="barg_ma" user-domain="ABC" culture="ru-RU" uiculture="ru-RU" os-architecture="x64" />
    <settings>
      <setting name="SynchronousEvents" value="False" />
      <setting name="RandomSeed" value="1694588135" />
      <setting name="SkipNonTestAssemblies" value="True" />
      <setting name="ProcessModel" value="InProcess" />
      <setting name="DomainUsage" value="Single" />
      <setting name="DefaultTestNamePattern" value="{m}{a}" />
      <setting name="WorkDirectory" value="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Debug\net5.0" />
      <setting name="NumberOfTestWorkers" value="4" />
    </settings>
    <properties>
      <property name="_PID" value="15768" />
      <property name="_APPDOMAIN" value="testhost" />
    </properties>
    <failure>
      <message><![CDATA[One or more child tests had errors]]></message>
    </failure>
    <test-suite type="TestSuite" id="0-2614" name="Jsonata" fullname="Jsonata" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-08-11T21:23:24.2391547Z" end-time="2022-08-11T21:23:33.6786381Z" duration="9.439543" total="1611" passed="1197" failed="240" warnings="0" inconclusive="0" skipped="174" asserts="1106">
      <failure>
        <message><![CDATA[One or more child tests had errors]]></message>
      </failure>
      <test-suite type="TestSuite" id="0-2615" name="Net" fullname="Jsonata.Net" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-08-11T21:23:24.2393796Z" end-time="2022-08-11T21:23:33.6786221Z" duration="9.439302" total="1611" passed="1197" failed="240" warnings="0" inconclusive="0" skipped="174" asserts="1106">
        <failure>
          <message><![CDATA[One or more child tests had errors]]></message>
        </failure>
        <test-suite type="TestSuite" id="0-2616" name="Native" fullname="Jsonata.Net.Native" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-08-11T21:23:24.2394001Z" end-time="2022-08-11T21:23:33.6785826Z" duration="9.439243" total="1611" passed="1197" failed="240" warnings="0" inconclusive="0" skipped="174" asserts="1106">
          <failure>
            <message><![CDATA[One or more child tests had errors]]></message>
          </failure>
          <test-suite type="TestSuite" id="0-2617" name="TestSuite" fullname="Jsonata.Net.Native.TestSuite" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-08-11T21:23:24.2394037Z" end-time="2022-08-11T21:23:33.6785307Z" duration="9.439187" total="1611" passed="1197" failed="240" warnings="0" inconclusive="0" skipped="174" asserts="1106">
            <failure>
              <message><![CDATA[One or more child tests had errors]]></message>
            </failure>
            <test-suite type="TestFixture" id="0-1000" name="Tests" fullname="Jsonata.Net.Native.TestSuite.Tests" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-08-11T21:23:24.2404403Z" end-time="2022-08-11T21:23:33.6783855Z" duration="9.438005" total="1611" passed="1197" failed="240" warnings="0" inconclusive="0" skipped="174" asserts="1106">
              <failure>
                <message><![CDATA[One or more child tests had errors]]></message>
              </failure>
              <output><![CDATA[Loaded 27 datasets
]]></output>
              <test-suite type="ParameterizedMethod" id="0-2612" name="Test" fullname="Jsonata.Net.Native.TestSuite.Tests.Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-08-11T21:23:24.2554899Z" end-time="2022-08-11T21:23:33.6759696Z" duration="9.420539" total="1611" passed="1197" failed="240" warnings="0" inconclusive="0" skipped="174" asserts="1105">
                <failure>
                  <message><![CDATA[One or more child tests had errors]]></message>
                </failure>
                <test-case id="0-1001" name="array-constructor.array-sequences[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="711519379" result="Passed" start-time="2022-08-11T21:23:24.2555593Z" end-time="2022-08-11T21:23:24.2869293Z" duration="0.031455" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1002" name="array-constructor.array-sequences[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="915761705" result="Passed" start-time="2022-08-11T21:23:24.2885585Z" end-time="2022-08-11T21:23:24.2886689Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600]]'
Expected: '[[3,1578381600]]'
]]></output>
                </test-case>
                <test-case id="0-1003" name="array-constructor.array-sequences[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="601654022" result="Passed" start-time="2022-08-11T21:23:24.2886813Z" end-time="2022-08-11T21:23:24.2887538Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [3,1578381600]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[3,1578381600]'
Expected: '[3,1578381600]'
]]></output>
                </test-case>
                <test-case id="0-1004" name="array-constructor.array-sequences[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2123128568" result="Passed" start-time="2022-08-11T21:23:24.2887613Z" end-time="2022-08-11T21:23:24.2900103Z" duration="0.001249" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'singleArray';&#xA; result: [{&quot;foo&quot;:&quot;bar&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'singleArray'
Result: '[{"foo":"bar"}]'
Expected: '[{"foo":"bar"}]'
]]></output>
                </test-case>
                <test-case id="0-1005" name="array-constructor.array-sequences[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1003833029" result="Passed" start-time="2022-08-11T21:23:24.2900199Z" end-time="2022-08-11T21:23:24.2900987Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'singleArray[]';&#xA; result: [{&quot;foo&quot;:&quot;bar&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'singleArray[]'
Result: '[{"foo":"bar"}]'
Expected: '[{"foo":"bar"}]'
]]></output>
                </test-case>
                <test-case id="0-1006" name="array-constructor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1467285426" result="Passed" start-time="2022-08-11T21:23:24.2901068Z" end-time="2022-08-11T21:23:24.2905322Z" duration="0.000425" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-1007" name="array-constructor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="975257626" result="Passed" start-time="2022-08-11T21:23:24.2905409Z" end-time="2022-08-11T21:23:24.2913454Z" duration="0.000804" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1]';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '[1]'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1008" name="array-constructor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1969142139" result="Passed" start-time="2022-08-11T21:23:24.2913542Z" end-time="2022-08-11T21:23:24.2914423Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2]';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2]'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1009" name="array-constructor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1565488302" result="Passed" start-time="2022-08-11T21:23:24.2914502Z" end-time="2022-08-11T21:23:24.2915305Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2,3]';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2,3]'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1010" name="array-constructor.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="644551062" result="Passed" start-time="2022-08-11T21:23:24.2915377Z" end-time="2022-08-11T21:23:24.2916174Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]]';&#xA; result: [1,2,[3,4]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]]'
Result: '[1,2,[3,4]]'
Expected: '[1,2,[3,4]]'
]]></output>
                </test-case>
                <test-case id="0-1011" name="array-constructor.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1600435695" result="Passed" start-time="2022-08-11T21:23:24.2916244Z" end-time="2022-08-11T21:23:24.2928249Z" duration="0.001200" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, &quot;two&quot;, [&quot;three&quot;, 4]]';&#xA; result: [1,&quot;two&quot;,[&quot;three&quot;,4]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, "two", ["three", 4]]'
Result: '[1,"two",["three",4]]'
Expected: '[1,"two",["three",4]]'
]]></output>
                </test-case>
                <test-case id="0-1012" name="array-constructor.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2119349060" result="Passed" start-time="2022-08-11T21:23:24.2928355Z" end-time="2022-08-11T21:23:24.2930733Z" duration="0.000238" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, $two, [&quot;three&quot;, $four]]';&#xA; result: [1,2,[&quot;three&quot;,&quot;four&quot;]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, $two, ["three", $four]]'
Result: '[1,2,["three","four"]]'
Expected: '[1,2,["three","four"]]'
]]></output>
                </test-case>
                <test-case id="0-1013" name="array-constructor.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1863804067" result="Passed" start-time="2022-08-11T21:23:24.2930824Z" end-time="2022-08-11T21:23:24.2932789Z" duration="0.000197" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;foo.bar&quot;, foo.bar, [&quot;foo.baz&quot;, foo.blah.baz]]';&#xA; result: [&quot;foo.bar&quot;,42,[&quot;foo.baz&quot;,{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]]" />
                  </properties>
                  <output><![CDATA[Expr is '["foo.bar", foo.bar, ["foo.baz", foo.blah.baz]]'
Result: '["foo.bar",42,["foo.baz",{"fud":"hello"},{"fud":"world"}]]'
Expected: '["foo.bar",42,["foo.baz",{"fud":"hello"},{"fud":"world"}]]'
]]></output>
                </test-case>
                <test-case id="0-1014" name="array-constructor.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2045809634" result="Passed" start-time="2022-08-11T21:23:24.2932877Z" end-time="2022-08-11T21:23:24.2946588Z" duration="0.001371" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3][0]';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3][0]'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1015" name="array-constructor.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1443284806" result="Passed" start-time="2022-08-11T21:23:24.2946681Z" end-time="2022-08-11T21:23:24.2951825Z" duration="0.000514" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]][-1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]][-1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-1016" name="array-constructor.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="864143521" result="Passed" start-time="2022-08-11T21:23:24.2951952Z" end-time="2022-08-11T21:23:24.2953645Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]][-1][-1]';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]][-1][-1]'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1017" name="array-constructor.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1102236687" result="Passed" start-time="2022-08-11T21:23:24.2953739Z" end-time="2022-08-11T21:23:24.2955915Z" duration="0.000218" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.[fud, fud]';&#xA; result: [[&quot;hello&quot;,&quot;hello&quot;],[&quot;world&quot;,&quot;world&quot;]]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.[fud, fud]'
Result: '[["hello","hello"],["world","world"]]'
Expected: '[["hello","hello"],["world","world"]]'
]]></output>
                </test-case>
                <test-case id="0-1018" name="array-constructor.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1494698676" result="Passed" start-time="2022-08-11T21:23:24.2956278Z" end-time="2022-08-11T21:23:24.2957551Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.[[fud, fud]]';&#xA; result: [[[&quot;hello&quot;,&quot;hello&quot;]],[[&quot;world&quot;,&quot;world&quot;]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.[[fud, fud]]'
Result: '[[["hello","hello"]],[["world","world"]]]'
Expected: '[[["hello","hello"]],[["world","world"]]]'
]]></output>
                </test-case>
                <test-case id="0-1019" name="array-constructor.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="827071879" result="Passed" start-time="2022-08-11T21:23:24.2957651Z" end-time="2022-08-11T21:23:24.2958671Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.[baz].fud';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.[baz].fud'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1020" name="array-constructor.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="116550681" result="Passed" start-time="2022-08-11T21:23:24.2958768Z" end-time="2022-08-11T21:23:24.2961639Z" duration="0.000287" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.[baz, buz].fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.[baz, buz].fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1021" name="array-constructor.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="139960921" result="Passed" start-time="2022-08-11T21:23:24.2961841Z" end-time="2022-08-11T21:23:24.2967803Z" duration="0.000596" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[Address, Other.&quot;Alternative.Address&quot;].City';&#xA; result: [&quot;Winchester&quot;,&quot;London&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[Address, Other."Alternative.Address"].City'
Result: '["Winchester","London"]'
Expected: '["Winchester","London"]'
]]></output>
                </test-case>
                <test-case id="0-1022" name="array-constructor.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="966214885" result="Passed" start-time="2022-08-11T21:23:24.2968075Z" end-time="2022-08-11T21:23:24.2974203Z" duration="0.000618" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[Address, Other.`Alternative.Address`].City';&#xA; result: [&quot;Winchester&quot;,&quot;London&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[Address, Other.`Alternative.Address`].City'
Result: '["Winchester","London"]'
Expected: '["Winchester","London"]'
]]></output>
                </test-case>
                <test-case id="0-1023" name="array-constructor.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1871584173" result="Passed" start-time="2022-08-11T21:23:24.2974444Z" end-time="2022-08-11T21:23:24.3037237Z" duration="0.006280" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0,1,2,3,4,5,6,7,8,9][$ % 2 = 0]';&#xA; result: [0,2,4,6,8]" />
                  </properties>
                  <output><![CDATA[Expr is '[0,1,2,3,4,5,6,7,8,9][$ % 2 = 0]'
Result: '[0,2,4,6,8]'
Expected: '[0,2,4,6,8]'
]]></output>
                </test-case>
                <test-case id="0-1024" name="array-constructor.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2125640201" result="Passed" start-time="2022-08-11T21:23:24.3037415Z" end-time="2022-08-11T21:23:24.3039788Z" duration="0.000237" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1025" name="array-constructor.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="98532915" result="Passed" start-time="2022-08-11T21:23:24.3040135Z" end-time="2022-08-11T21:23:24.3041032Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1026" name="array-constructor.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1550101144" result="Passed" start-time="2022-08-11T21:23:24.3041107Z" end-time="2022-08-11T21:23:24.3042849Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1027" name="blocks.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="35276222" result="Passed" start-time="2022-08-11T21:23:24.3043093Z" end-time="2022-08-11T21:23:24.3054534Z" duration="0.001144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1028" name="blocks.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="24731001" result="Passed" start-time="2022-08-11T21:23:24.3054815Z" end-time="2022-08-11T21:23:24.3056741Z" duration="0.000193" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(1; 2; 3)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(1; 2; 3)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1029" name="blocks.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1830350467" result="Passed" start-time="2022-08-11T21:23:24.3056943Z" end-time="2022-08-11T21:23:24.3057825Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(1; 2; 3;)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(1; 2; 3;)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1030" name="blocks.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1778703055" result="Passed" start-time="2022-08-11T21:23:24.3057900Z" end-time="2022-08-11T21:23:24.3069694Z" duration="0.001180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a:=1; $b:=2; $c:=($a:=4; $a+$b); $a+$c)';&#xA; result: 7" />
                  </properties>
                  <output><![CDATA[Expr is '($a:=1; $b:=2; $c:=($a:=4; $a+$b); $a+$c)'
Result: '7'
Expected: '7'
]]></output>
                </test-case>
                <test-case id="0-1031" name="blocks.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1641587985" result="Passed" start-time="2022-08-11T21:23:24.3070069Z" end-time="2022-08-11T21:23:24.3094339Z" duration="0.002427" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.($var1 := Price ; $var2:=Quantity; $var1 * $var2)';&#xA; result: [68.9,21.67,137.8,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.($var1 := Price ; $var2:=Quantity; $var1 * $var2)'
Result: '[68.9,21.67,137.8,107.99]'
Expected: '[68.9,21.67,137.8,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1032" name="blocks.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1770814208" result="Passed" start-time="2022-08-11T21:23:24.3094702Z" end-time="2022-08-11T21:23:24.3174082Z" duration="0.007938" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $func := function($arg) {$arg.Account.Order[0].OrderID};  $func($))';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $func := function($arg) {$arg.Account.Order[0].OrderID};  $func($))'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1033" name="blocks.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="84036359" result="Passed" start-time="2022-08-11T21:23:24.3174616Z" end-time="2022-08-11T21:23:24.3177369Z" duration="0.000276" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $func := function($arg) {$arg.Account.Order[0]};  $func($).OrderID)';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $func := function($arg) {$arg.Account.Order[0]};  $func($).OrderID)'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1034" name="boolean-expresssions.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1031157262" result="Passed" start-time="2022-08-11T21:23:24.3177828Z" end-time="2022-08-11T21:23:24.3185930Z" duration="0.000810" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1035" name="boolean-expresssions.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="617059463" result="Passed" start-time="2022-08-11T21:23:24.3186039Z" end-time="2022-08-11T21:23:24.3187431Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1036" name="boolean-expresssions.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="58712757" result="Passed" start-time="2022-08-11T21:23:24.3187509Z" end-time="2022-08-11T21:23:24.3201700Z" duration="0.001419" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false or false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1037" name="boolean-expresssions.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="894221037" result="Passed" start-time="2022-08-11T21:23:24.3201993Z" end-time="2022-08-11T21:23:24.3204311Z" duration="0.000232" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'false or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1038" name="boolean-expresssions.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1740984704" result="Passed" start-time="2022-08-11T21:23:24.3204405Z" end-time="2022-08-11T21:23:24.3205392Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or false';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or false'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1039" name="boolean-expresssions.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1438691320" result="Passed" start-time="2022-08-11T21:23:24.3205467Z" end-time="2022-08-11T21:23:24.3207653Z" duration="0.000219" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1040" name="boolean-expresssions.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2083299086" result="Passed" start-time="2022-08-11T21:23:24.3207741Z" end-time="2022-08-11T21:23:24.3208867Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1041" name="boolean-expresssions.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="191264228" result="Passed" start-time="2022-08-11T21:23:24.3208978Z" end-time="2022-08-11T21:23:24.3210898Z" duration="0.000192" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and true';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and true'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1042" name="boolean-expresssions.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="557153386" result="Passed" start-time="2022-08-11T21:23:24.3210980Z" end-time="2022-08-11T21:23:24.3211873Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'true and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1043" name="boolean-expresssions.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1925859646" result="Passed" start-time="2022-08-11T21:23:24.3211955Z" end-time="2022-08-11T21:23:24.3214035Z" duration="0.000208" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true and true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1044" name="boolean-expresssions.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="469835996" result="Passed" start-time="2022-08-11T21:23:24.3214276Z" end-time="2022-08-11T21:23:24.3256112Z" duration="0.004184" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(false)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$not(false)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1045" name="boolean-expresssions.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="692977850" result="Passed" start-time="2022-08-11T21:23:24.3256281Z" end-time="2022-08-11T21:23:24.3259070Z" duration="0.000279" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(true)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$not(true)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1046" name="boolean-expresssions.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117350407" result="Passed" start-time="2022-08-11T21:23:24.3259318Z" end-time="2022-08-11T21:23:24.3272700Z" duration="0.001338" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and=1 and or=2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and=1 and or=2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1047" name="boolean-expresssions.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1836478278" result="Passed" start-time="2022-08-11T21:23:24.3273569Z" end-time="2022-08-11T21:23:24.3279100Z" duration="0.000553" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and&gt;1 or or&lt;=2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and>1 or or<=2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1048" name="boolean-expresssions.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="158576382" result="Passed" start-time="2022-08-11T21:23:24.3279211Z" end-time="2022-08-11T21:23:24.3280585Z" duration="0.000138" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and&gt;1 or or!=2';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'and>1 or or!=2'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1049" name="boolean-expresssions.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="25270021" result="Passed" start-time="2022-08-11T21:23:24.3281013Z" end-time="2022-08-11T21:23:24.3282707Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and and and';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and and and'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1050" name="boolean-expresssions.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1485169632" result="Passed" start-time="2022-08-11T21:23:24.3282804Z" end-time="2022-08-11T21:23:24.3286003Z" duration="0.000320" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[].content.origin.$lowercase(name)';&#xA; result: [&quot;fakeintegrationname&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$[].content.origin.$lowercase(name)'
Result: '["fakeintegrationname"]'
Expected: '["fakeintegrationname"]'
]]></output>
                </test-case>
                <test-case id="0-1051" name="boolean-expresssions.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="881537959" result="Passed" start-time="2022-08-11T21:23:24.3286100Z" end-time="2022-08-11T21:23:24.3287440Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or foo';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or foo'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1052" name="boolean-expresssions.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1072186425" result="Passed" start-time="2022-08-11T21:23:24.3287522Z" end-time="2022-08-11T21:23:24.3288322Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1053" name="boolean-expresssions.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1943326633" result="Passed" start-time="2022-08-11T21:23:24.3288397Z" end-time="2022-08-11T21:23:24.3290031Z" duration="0.000163" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false or foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1054" name="boolean-expresssions.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="640136923" result="Passed" start-time="2022-08-11T21:23:24.3290134Z" end-time="2022-08-11T21:23:24.3291293Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1055" name="boolean-expresssions.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="721221323" result="Passed" start-time="2022-08-11T21:23:24.3291372Z" end-time="2022-08-11T21:23:24.3292383Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1056" name="boolean-expresssions.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1892788141" result="Passed" start-time="2022-08-11T21:23:24.3292467Z" end-time="2022-08-11T21:23:24.3293717Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'true and foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1057" name="boolean-expresssions.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1191661179" result="Passed" start-time="2022-08-11T21:23:24.3293904Z" end-time="2022-08-11T21:23:24.3294870Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and true';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and true'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1058" name="boolean-expresssions.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="623497468" result="Passed" start-time="2022-08-11T21:23:24.3294943Z" end-time="2022-08-11T21:23:24.3296733Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1059" name="boolean-expresssions.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2024595653" result="Passed" start-time="2022-08-11T21:23:24.3296962Z" end-time="2022-08-11T21:23:24.3298082Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1060" name="boolean-expresssions.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1601215532" result="Passed" start-time="2022-08-11T21:23:24.3298266Z" end-time="2022-08-11T21:23:24.3299356Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1061" name="boolean-expresssions.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1432009204" result="Passed" start-time="2022-08-11T21:23:24.3299450Z" end-time="2022-08-11T21:23:24.3301276Z" duration="0.000183" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$not(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1062" name="boolean-expresssions.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="950526625" result="Passed" start-time="2022-08-11T21:23:24.3301711Z" end-time="2022-08-11T21:23:24.3313946Z" duration="0.001224" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo = '' or $number(foo) = 0';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Description: 'will not evaluate rhs (which would error) because lhs is true'
Expr is 'foo = '' or $number(foo) = 0'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1063" name="boolean-expresssions.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="138791672" result="Passed" start-time="2022-08-11T21:23:24.3314302Z" end-time="2022-08-11T21:23:24.3318443Z" duration="0.000414" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$type(data) = 'number' and data &gt; 10';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Description: 'will not evaluate rhs (which would error) because lhs is false'
Expr is '$type(data) = 'number' and data > 10'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1064" name="boolean-expresssions.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1934268894" result="Passed" start-time="2022-08-11T21:23:24.3318673Z" end-time="2022-08-11T21:23:24.3633254Z" duration="0.031458" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$type(age) = 'number' or $number(age) &gt; 0';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Description: 'throws error on right side of boolean expression (for CC of a catch)'
Expr is '$type(age) = 'number' or $number(age) > 0'
]]></output>
                </test-case>
                <test-case id="0-1065" name="closures.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.closures.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1150446724" result="Passed" start-time="2022-08-11T21:23:24.3635228Z" end-time="2022-08-11T21:23:24.3682262Z" duration="0.004704" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(  $AccName := function() { $.&quot;Account Name&quot; };  Order[OrderID = &quot;order104&quot;].Product{    &quot;Account&quot;: $AccName(),    &quot;SKU-&quot; &amp; $string(ProductID): $.&quot;Product Name&quot;  } )';&#xA; result: {&quot;Account&quot;:&quot;Firefly&quot;,&quot;SKU-858383&quot;:&quot;Bowler Hat&quot;,&quot;SKU-345664&quot;:&quot;Cloak&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(  $AccName := function() { $."Account Name" };  Order[OrderID = "order104"].Product{    "Account": $AccName(),    "SKU-" & $string(ProductID): $."Product Name"  } )'
Result: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
Expected: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
]]></output>
                </test-case>
                <test-case id="0-1066" name="closures.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.closures.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1977105134" result="Passed" start-time="2022-08-11T21:23:24.3700046Z" end-time="2022-08-11T21:23:24.3704682Z" duration="0.000470" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(  $AccName := function() { `Account Name` };  Order[OrderID = &quot;order104&quot;].Product{    &quot;Account&quot;: $AccName(),    &quot;SKU-&quot; &amp; $string(ProductID): `Product Name`  } )';&#xA; result: {&quot;Account&quot;:&quot;Firefly&quot;,&quot;SKU-858383&quot;:&quot;Bowler Hat&quot;,&quot;SKU-345664&quot;:&quot;Cloak&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(  $AccName := function() { `Account Name` };  Order[OrderID = "order104"].Product{    "Account": $AccName(),    "SKU-" & $string(ProductID): `Product Name`  } )'
Result: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
Expected: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
]]></output>
                </test-case>
                <test-case id="0-1067" name="comments.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2035312701" result="Passed" start-time="2022-08-11T21:23:24.3712556Z" end-time="2022-08-11T21:23:24.3713815Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '/* header comment */&#xA;1 + 1&#xA;';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '/* header comment */
1 + 1
'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1068" name="comments.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="832646805" result="Passed" start-time="2022-08-11T21:23:24.3714156Z" end-time="2022-08-11T21:23:24.3721368Z" duration="0.000721" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)&#xA;';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)
'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-1069" name="comments.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1428750171" result="Passed" start-time="2022-08-11T21:23:24.3724809Z" end-time="2022-08-11T21:23:24.3735284Z" duration="0.001048" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)&#xA;/* trailing comment - no closing tag should trigger an error&#xA;';&#xA; result: error S0106" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0106]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)
/* trailing comment - no closing tag should trigger an error
'
]]></output>
                </test-case>
                <test-case id="0-1070" name="comments.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1384572049" result="Passed" start-time="2022-08-11T21:23:24.3735577Z" end-time="2022-08-11T21:23:24.3760922Z" duration="0.002535" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '/* An expression to return the square root of a number without using the $sqrt function */&#xA;/* Pointless, but demonstrates capability */&#xA;&#xA;(&#xA;  /**&#xA;   * Implements the square root function&#xA;   * Uses the Newton-Raphson method&#xA;   */&#xA;  $my_sqrt := function($n) {(&#xA;&#xA;    $good_enough := function($guess) {&#xA;      $abs($guess * $guess - $n) &lt; 0.000000000001&#xA;    };&#xA;    $improve_guess := function($guess) {&#xA;      ($guess + $n / $guess) / 2&#xA;    };&#xA;&#xA;    /* Iterate using a tail-recursive function until convergence */&#xA;    $sqrt_iter := function($guess) {&#xA;      $good_enough($guess) ? $guess : $sqrt_iter($improve_guess($guess))&#xA;    };&#xA;    $n &gt;= 0 ? $sqrt_iter(1) : &quot;no complex numbers today&quot;&#xA;  )};&#xA;  $my_sqrt($$)&#xA;)&#xA;';&#xA; result: 16" />
                  </properties>
                  <output><![CDATA[Expr is '/* An expression to return the square root of a number without using the $sqrt function */
/* Pointless, but demonstrates capability */

(
  /**
   * Implements the square root function
   * Uses the Newton-Raphson method
   */
  $my_sqrt := function($n) {(

    $good_enough := function($guess) {
      $abs($guess * $guess - $n) < 0.000000000001
    };
    $improve_guess := function($guess) {
      ($guess + $n / $guess) / 2
    };

    /* Iterate using a tail-recursive function until convergence */
    $sqrt_iter := function($guess) {
      $good_enough($guess) ? $guess : $sqrt_iter($improve_guess($guess))
    };
    $n >= 0 ? $sqrt_iter(1) : "no complex numbers today"
  )};
  $my_sqrt($$)
)
'
Result: '16'
Expected: '16'
]]></output>
                </test-case>
                <test-case id="0-1071" name="comparison-operators.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2117406131" result="Passed" start-time="2022-08-11T21:23:24.3761320Z" end-time="2022-08-11T21:23:24.3768553Z" duration="0.000723" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3&gt;-3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '3>-3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1072" name="comparison-operators.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1508735630" result="Passed" start-time="2022-08-11T21:23:24.3768885Z" end-time="2022-08-11T21:23:24.3769993Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3&gt;3';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '3>3'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1073" name="comparison-operators.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="56007356" result="Passed" start-time="2022-08-11T21:23:24.3770180Z" end-time="2022-08-11T21:23:24.3774563Z" duration="0.000438" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3=3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '3=3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1074" name="comparison-operators.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="891256440" result="Passed" start-time="2022-08-11T21:23:24.3774920Z" end-time="2022-08-11T21:23:24.3776525Z" duration="0.000161" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;3&quot;=&quot;3&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"3"="3"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1075" name="comparison-operators.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2072770100" result="Passed" start-time="2022-08-11T21:23:24.3776616Z" end-time="2022-08-11T21:23:24.3777398Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;3&quot;=3';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"3"=3'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1076" name="comparison-operators.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1730291182" result="Passed" start-time="2022-08-11T21:23:24.3777476Z" end-time="2022-08-11T21:23:24.3778666Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; = &quot;hello&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" = "hello"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1077" name="comparison-operators.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1187838886" result="Passed" start-time="2022-08-11T21:23:24.3778744Z" end-time="2022-08-11T21:23:24.3788144Z" duration="0.000940" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; != &quot;world&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" != "world"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1078" name="comparison-operators.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1401748177" result="Passed" start-time="2022-08-11T21:23:24.3799374Z" end-time="2022-08-11T21:23:24.3807277Z" duration="0.000790" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; &lt; &quot;world&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" < "world"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1079" name="comparison-operators.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1432662351" result="Passed" start-time="2022-08-11T21:23:24.3812074Z" end-time="2022-08-11T21:23:24.3823273Z" duration="0.001120" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;32&quot; &lt; 42';&#xA; result: error T2009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2009]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"32" < 42'
]]></output>
                </test-case>
                <test-case id="0-1080" name="comparison-operators.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2128666155" result="Passed" start-time="2022-08-11T21:23:24.3823940Z" end-time="2022-08-11T21:23:24.3856066Z" duration="0.003213" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'null &lt;= &quot;world&quot;';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'null <= "world"'
]]></output>
                </test-case>
                <test-case id="0-1081" name="comparison-operators.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1861106513" result="Passed" start-time="2022-08-11T21:23:24.3856263Z" end-time="2022-08-11T21:23:24.3861889Z" duration="0.000563" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '3 &gt;= true';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010]]></message>
                  </reason>
                  <output><![CDATA[Expr is '3 >= true'
]]></output>
                </test-case>
                <test-case id="0-1082" name="comparison-operators.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2024183487" result="Passed" start-time="2022-08-11T21:23:24.3862034Z" end-time="2022-08-11T21:23:24.3863109Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar &gt; bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar > bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1083" name="comparison-operators.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2146944627" result="Passed" start-time="2022-08-11T21:23:24.3863396Z" end-time="2022-08-11T21:23:24.3867411Z" duration="0.000401" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar &gt;= bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar >= bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1084" name="comparison-operators.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="345180835" result="Passed" start-time="2022-08-11T21:23:24.3867869Z" end-time="2022-08-11T21:23:24.3869059Z" duration="0.000123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar&lt;bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar<bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1085" name="comparison-operators.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="897165096" result="Passed" start-time="2022-08-11T21:23:24.3869382Z" end-time="2022-08-11T21:23:24.3870312Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar&lt;=bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar<=bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1086" name="comparison-operators.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="569401560" result="Passed" start-time="2022-08-11T21:23:24.3870484Z" end-time="2022-08-11T21:23:24.3872431Z" duration="0.000195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar&gt;foo.bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'bar>foo.bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1087" name="comparison-operators.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1974971222" result="Passed" start-time="2022-08-11T21:23:24.3872518Z" end-time="2022-08-11T21:23:24.3873575Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar &lt; foo.bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar < foo.bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1088" name="comparison-operators.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1591383083" result="Passed" start-time="2022-08-11T21:23:24.3873662Z" end-time="2022-08-11T21:23:24.3875398Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar = bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar = bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1089" name="comparison-operators.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="309935939" result="Passed" start-time="2022-08-11T21:23:24.3875486Z" end-time="2022-08-11T21:23:24.3876539Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar!= bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar!= bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1090" name="comparison-operators.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="871754969" result="Passed" start-time="2022-08-11T21:23:24.3877792Z" end-time="2022-08-11T21:23:24.3879256Z" duration="0.000146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar = foo.bar + 56';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'bar = foo.bar + 56'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1091" name="comparison-operators.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1014535225" result="Passed" start-time="2022-08-11T21:23:24.3896312Z" end-time="2022-08-11T21:23:24.3900266Z" duration="0.000332" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar !=foo.bar + 56';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar !=foo.bar + 56'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1092" name="comparison-operators.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="270723569" result="Passed" start-time="2022-08-11T21:23:24.3918375Z" end-time="2022-08-11T21:23:24.3922777Z" duration="0.000440" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[fud = &quot;hello&quot;]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[fud = "hello"]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1093" name="comparison-operators.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1863872698" result="Passed" start-time="2022-08-11T21:23:24.3927450Z" end-time="2022-08-11T21:23:24.3929493Z" duration="0.000205" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[fud != &quot;world&quot;]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[fud != "world"]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1094" name="comparison-operators.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1984959435" result="Passed" start-time="2022-08-11T21:23:24.3930052Z" end-time="2022-08-11T21:23:24.3932781Z" duration="0.000273" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[Price &gt; 30].Price';&#xA; result: [34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[Price > 30].Price'
Result: '[34.45,34.45,107.99]'
Expected: '[34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1095" name="comparison-operators.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="651289882" result="Passed" start-time="2022-08-11T21:23:24.3932907Z" end-time="2022-08-11T21:23:24.3934251Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price[$&lt;=35]';&#xA; result: [34.45,21.67,34.45]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price[$<=35]'
Result: '[34.45,21.67,34.45]'
Expected: '[34.45,21.67,34.45]'
]]></output>
                </test-case>
                <test-case id="0-1096" name="comparison-operators.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1388221250" result="Passed" start-time="2022-08-11T21:23:24.3935609Z" end-time="2022-08-11T21:23:24.3943672Z" duration="0.000806" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false &gt; 1';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false > 1'
]]></output>
                </test-case>
                <test-case id="0-1097" name="comparison-operators.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="418361714" result="Passed" start-time="2022-08-11T21:23:24.3943817Z" end-time="2022-08-11T21:23:24.3953872Z" duration="0.001006" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false &gt; $x';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false > $x'
]]></output>
                </test-case>
                <test-case id="0-1098" name="comparison-operators.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2139074399" result="Passed" start-time="2022-08-11T21:23:24.3963134Z" end-time="2022-08-11T21:23:24.3965220Z" duration="0.000209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3 &gt; $x';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '3 > $x'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1099" name="comparison-operators.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1466872919" result="Passed" start-time="2022-08-11T21:23:24.3965443Z" end-time="2022-08-11T21:23:24.3967197Z" duration="0.000175" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$x &lt;= 'hello'';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$x <= 'hello''
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1100" name="comparison-operators.deep-equals[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="863356363" result="Passed" start-time="2022-08-11T21:23:24.3967299Z" end-time="2022-08-11T21:23:24.3974073Z" duration="0.000677" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [1, 2, 3, 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [1, 2, 3, 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1101" name="comparison-operators.deep-equals[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="229521353" result="Passed" start-time="2022-08-11T21:23:24.3974209Z" end-time="2022-08-11T21:23:24.3975694Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2] != [1, 2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2] != [1, 2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1102" name="comparison-operators.deep-equals[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1003831473" result="Passed" start-time="2022-08-11T21:23:24.3975788Z" end-time="2022-08-11T21:23:24.3978167Z" duration="0.000238" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,[3],4] = [1, 2, [3], 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,[3],4] = [1, 2, [3], 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1103" name="comparison-operators.deep-equals[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="877309858" result="Passed" start-time="2022-08-11T21:23:24.3978460Z" end-time="2022-08-11T21:23:24.4004856Z" duration="0.002640" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [1, 2, [3], 4]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [1, 2, [3], 4]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1104" name="comparison-operators.deep-equals[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="788181619" result="Passed" start-time="2022-08-11T21:23:24.4005125Z" end-time="2022-08-11T21:23:24.4074114Z" duration="0.006899" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [2, 3, 4]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [2, 3, 4]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1105" name="comparison-operators.deep-equals[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1515247148" result="Passed" start-time="2022-08-11T21:23:24.4075023Z" end-time="2022-08-11T21:23:24.4078250Z" duration="0.000322" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'data = [1, 2, 3, 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'data = [1, 2, 3, 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1106" name="comparison-operators.deep-equals[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1520285976" result="Passed" start-time="2022-08-11T21:23:24.4078751Z" end-time="2022-08-11T21:23:24.4086162Z" duration="0.000741" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'data[2] = 3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'data[2] = 3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1107" name="comparison-operators.deep-equals[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1016179069" result="Passed" start-time="2022-08-11T21:23:24.4087873Z" end-time="2022-08-11T21:23:24.4096293Z" duration="0.000842" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2 } = { 'two': 2, 'one': 1 }';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2 } = { 'two': 2, 'one': 1 }'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1108" name="comparison-operators.deep-equals[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1052070193" result="Passed" start-time="2022-08-11T21:23:24.4096640Z" end-time="2022-08-11T21:23:24.4098197Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2 } = { 'too': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2 } = { 'too': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1109" name="comparison-operators.deep-equals[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="714850470" result="Passed" start-time="2022-08-11T21:23:24.4098388Z" end-time="2022-08-11T21:23:24.4103058Z" duration="0.000467" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 3 } = { 'two': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 3 } = { 'two': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1110" name="comparison-operators.deep-equals[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1138413788" result="Passed" start-time="2022-08-11T21:23:24.4103384Z" end-time="2022-08-11T21:23:24.4104398Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2, 'three': 3 } = { 'two': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2, 'three': 3 } = { 'two': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1111" name="comparison-operators.deep-equals[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="704949255" result="Passed" start-time="2022-08-11T21:23:24.4104485Z" end-time="2022-08-11T21:23:24.4105841Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'two = 2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'two = 2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1112" name="comparison-operators.deep-equals[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1937396649" result="Passed" start-time="2022-08-11T21:23:24.4105925Z" end-time="2022-08-11T21:23:24.4121059Z" duration="0.001514" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'one + one = two';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'one + one = two'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1113" name="comparison-operators.deep-equals[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1338318764" result="Passed" start-time="2022-08-11T21:23:24.4124470Z" end-time="2022-08-11T21:23:24.4126743Z" duration="0.000227" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = null';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'null = null'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1114" name="comparison-operators.deep-equals[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2043413145" result="Passed" start-time="2022-08-11T21:23:24.4130163Z" end-time="2022-08-11T21:23:24.4131265Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null != null';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null != null'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1115" name="comparison-operators.deep-equals[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1887592666" result="Passed" start-time="2022-08-11T21:23:24.4131389Z" end-time="2022-08-11T21:23:24.4132174Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = nothing';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null = nothing'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1116" name="comparison-operators.deep-equals[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1555309364" result="Passed" start-time="2022-08-11T21:23:24.4132255Z" end-time="2022-08-11T21:23:24.4132898Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing = nothing';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing = nothing'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1117" name="comparison-operators.deep-equals[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="951065645" result="Passed" start-time="2022-08-11T21:23:24.4132971Z" end-time="2022-08-11T21:23:24.4134263Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Description = Account.Order[1].Product[0].Description';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Description = Account.Order[1].Product[0].Description'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1118" name="comparison-operators.deep-equals[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1941094484" result="Passed" start-time="2022-08-11T21:23:24.4134347Z" end-time="2022-08-11T21:23:24.4135443Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0] = Account.Order[1].Product[0]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0] = Account.Order[1].Product[0]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1119" name="conditionals.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1037103798" result="Passed" start-time="2022-08-11T21:23:24.4135525Z" end-time="2022-08-11T21:23:24.4136288Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: &quot;Red&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: '"Red"'
Expected: '"Red"'
]]></output>
                </test-case>
                <test-case id="0-1120" name="conditionals.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="581045164" result="Passed" start-time="2022-08-11T21:23:24.4136364Z" end-time="2022-08-11T21:23:24.4137273Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: &quot;White&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: '"White"'
Expected: '"White"'
]]></output>
                </test-case>
                <test-case id="0-1121" name="conditionals.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2133912" result="Passed" start-time="2022-08-11T21:23:24.4137369Z" end-time="2022-08-11T21:23:24.4138148Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1122" name="conditionals.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="443929618" result="Passed" start-time="2022-08-11T21:23:24.4138226Z" end-time="2022-08-11T21:23:24.4142444Z" duration="0.000422" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: &quot;Red&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: '"Red"'
Expected: '"Red"'
]]></output>
                </test-case>
                <test-case id="0-1123" name="conditionals.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="522710866" result="Passed" start-time="2022-08-11T21:23:24.4142540Z" end-time="2022-08-11T21:23:24.4143482Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: &quot;White&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: '"White"'
Expected: '"White"'
]]></output>
                </test-case>
                <test-case id="0-1124" name="conditionals.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="556995202" result="Passed" start-time="2022-08-11T21:23:24.4143570Z" end-time="2022-08-11T21:23:24.4144330Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1125" name="conditionals.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="370036824" result="Passed" start-time="2022-08-11T21:23:24.4144406Z" end-time="2022-08-11T21:23:24.4145447Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot;)';&#xA; result: &quot;Cheap&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap")'
Result: '"Cheap"'
Expected: '"Cheap"'
]]></output>
                </test-case>
                <test-case id="0-1126" name="conditionals.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1846682562" result="Passed" start-time="2022-08-11T21:23:24.4145532Z" end-time="2022-08-11T21:23:24.4149085Z" duration="0.000356" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot; : &quot;Expensive&quot;)';&#xA; result: [&quot;Expensive&quot;,&quot;Cheap&quot;,&quot;Expensive&quot;,&quot;Expensive&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap" : "Expensive")'
Result: '["Expensive","Cheap","Expensive","Expensive"]'
Expected: '["Expensive","Cheap","Expensive","Expensive"]'
]]></output>
                </test-case>
                <test-case id="0-1127" name="conditionals.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1792346579" result="Passed" start-time="2022-08-11T21:23:24.4149175Z" end-time="2022-08-11T21:23:24.4150612Z" duration="0.000144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot; : Price &lt; 100 ? &quot;Expensive&quot; : &quot;Rip off&quot;)';&#xA; result: [&quot;Expensive&quot;,&quot;Cheap&quot;,&quot;Expensive&quot;,&quot;Rip off&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap" : Price < 100 ? "Expensive" : "Rip off")'
Result: '["Expensive","Cheap","Expensive","Rip off"]'
Expected: '["Expensive","Cheap","Expensive","Rip off"]'
]]></output>
                </test-case>
                <test-case id="0-1128" name="context.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="218531568" result="Passed" start-time="2022-08-11T21:23:24.4150700Z" end-time="2022-08-11T21:23:24.4151847Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number()';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$number()'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-1129" name="context.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="239966558" result="Passed" start-time="2022-08-11T21:23:24.4151928Z" end-time="2022-08-11T21:23:24.4182487Z" duration="0.003056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..5].$string()';&#xA; result: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..5].$string()'
Result: '["1","2","3","4","5"]'
Expected: '["1","2","3","4","5"]'
]]></output>
                </test-case>
                <test-case id="0-1130" name="context.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="684548850" result="Passed" start-time="2022-08-11T21:23:24.4190024Z" end-time="2022-08-11T21:23:24.4193991Z" duration="0.000397" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..5].(&quot;Item &quot; &amp; $string())';&#xA; result: [&quot;Item 1&quot;,&quot;Item 2&quot;,&quot;Item 3&quot;,&quot;Item 4&quot;,&quot;Item 5&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..5].("Item " & $string())'
Result: '["Item 1","Item 2","Item 3","Item 4","Item 5"]'
Expected: '["Item 1","Item 2","Item 3","Item 4","Item 5"]'
]]></output>
                </test-case>
                <test-case id="0-1131" name="context.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1311929468" result="Passed" start-time="2022-08-11T21:23:24.4201450Z" end-time="2022-08-11T21:23:24.4212683Z" duration="0.001123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.&quot;Product Name&quot;.$uppercase().$substringBefore(&quot; &quot;)';&#xA; result: [&quot;BOWLER&quot;,&quot;TRILBY&quot;,&quot;BOWLER&quot;,&quot;CLOAK&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product."Product Name".$uppercase().$substringBefore(" ")'
Result: '["BOWLER","TRILBY","BOWLER","CLOAK"]'
Expected: '["BOWLER","TRILBY","BOWLER","CLOAK"]'
]]></output>
                </test-case>
                <test-case id="0-1132" name="descendent-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1196248134" result="Passed" start-time="2022-08-11T21:23:24.4217839Z" end-time="2022-08-11T21:23:24.4232875Z" duration="0.001503" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.blah';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.blah'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-1133" name="descendent-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2082358905" result="Passed" start-time="2022-08-11T21:23:24.4237240Z" end-time="2022-08-11T21:23:24.4239090Z" duration="0.000185" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-1134" name="descendent-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="569305988" result="Passed" start-time="2022-08-11T21:23:24.4240563Z" end-time="2022-08-11T21:23:24.4241686Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1135" name="descendent-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1899144802" result="Passed" start-time="2022-08-11T21:23:24.4244113Z" end-time="2022-08-11T21:23:24.4245179Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo".**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1136" name="descendent-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="857275040" result="Passed" start-time="2022-08-11T21:23:24.4246610Z" end-time="2022-08-11T21:23:24.4248575Z" duration="0.000197" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1137" name="descendent-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1146873629" result="Passed" start-time="2022-08-11T21:23:24.4250984Z" end-time="2022-08-11T21:23:24.4252225Z" duration="0.000124" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.**.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo".**."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1138" name="descendent-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1358763008" result="Passed" start-time="2022-08-11T21:23:24.4252451Z" end-time="2022-08-11T21:23:24.4323811Z" duration="0.007136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1139" name="descendent-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="977417334" result="Passed" start-time="2022-08-11T21:23:24.4329891Z" end-time="2022-08-11T21:23:24.4332529Z" duration="0.000264" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.*.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.*.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1140" name="descendent-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1524362767" result="Passed" start-time="2022-08-11T21:23:24.4332689Z" end-time="2022-08-11T21:23:24.4335928Z" duration="0.000324" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.**.Colour';&#xA; result: [&quot;Purple&quot;,&quot;Orange&quot;,&quot;Purple&quot;,&quot;Black&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.**.Colour'
Result: '["Purple","Orange","Purple","Black"]'
Expected: '["Purple","Orange","Purple","Black"]'
]]></output>
                </test-case>
                <test-case id="0-1141" name="descendent-operator.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1700706138" result="Passed" start-time="2022-08-11T21:23:24.4337263Z" end-time="2022-08-11T21:23:24.4340088Z" duration="0.000283" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.fud[0]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.fud[0]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1142" name="descendent-operator.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="922901029" result="Passed" start-time="2022-08-11T21:23:24.4344094Z" end-time="2022-08-11T21:23:24.4345899Z" duration="0.000181" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.**.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.**.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1143" name="descendent-operator.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="876532613" result="Passed" start-time="2022-08-11T21:23:24.4346026Z" end-time="2022-08-11T21:23:24.4347134Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(**.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(**.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1144" name="descendent-operator.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1319005798" result="Passed" start-time="2022-08-11T21:23:24.4350083Z" end-time="2022-08-11T21:23:24.4353280Z" duration="0.000319" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**.Price';&#xA; result: [34.45,21.67,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '**.Price'
Result: '[34.45,21.67,34.45,107.99]'
Expected: '[34.45,21.67,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1145" name="descendent-operator.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="166805714" result="Passed" start-time="2022-08-11T21:23:24.4353425Z" end-time="2022-08-11T21:23:24.4358638Z" duration="0.000522" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**.Price[0]';&#xA; result: [34.45,21.67,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '**.Price[0]'
Result: '[34.45,21.67,34.45,107.99]'
Expected: '[34.45,21.67,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1146" name="descendent-operator.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1224622223" result="Passed" start-time="2022-08-11T21:23:24.4358901Z" end-time="2022-08-11T21:23:24.4360664Z" duration="0.000177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(**.Price)[0]';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is '(**.Price)[0]'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1147" name="descendent-operator.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1079888452" result="Passed" start-time="2022-08-11T21:23:24.4361300Z" end-time="2022-08-11T21:23:24.4369083Z" duration="0.000778" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.blah.**';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.blah.**'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1148" name="descendent-operator.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1967943200" result="Passed" start-time="2022-08-11T21:23:24.4371878Z" end-time="2022-08-11T21:23:24.4373795Z" duration="0.000191" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '**'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1149" name="encoding.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="97366769" result="Passed" start-time="2022-08-11T21:23:24.4386024Z" end-time="2022-08-11T21:23:24.4391479Z" duration="0.000545" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64encode(&quot;hello:world&quot;)';&#xA; result: &quot;aGVsbG86d29ybGQ=&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$base64encode("hello:world")'
Result: '"aGVsbG86d29ybGQ="'
Expected: '"aGVsbG86d29ybGQ="'
]]></output>
                </test-case>
                <test-case id="0-1150" name="encoding.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1243464165" result="Passed" start-time="2022-08-11T21:23:24.4391642Z" end-time="2022-08-11T21:23:24.4394800Z" duration="0.000316" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64encode()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$base64encode()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1151" name="encoding.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="437155605" result="Passed" start-time="2022-08-11T21:23:24.4395606Z" end-time="2022-08-11T21:23:24.4404001Z" duration="0.000840" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64decode(&quot;aGVsbG86d29ybGQ=&quot;)';&#xA; result: &quot;hello:world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$base64decode("aGVsbG86d29ybGQ=")'
Result: '"hello:world"'
Expected: '"hello:world"'
]]></output>
                </test-case>
                <test-case id="0-1152" name="encoding.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="624750877" result="Passed" start-time="2022-08-11T21:23:24.4418702Z" end-time="2022-08-11T21:23:24.4422895Z" duration="0.000420" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64decode()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$base64decode()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1153" name="errors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1101970601" result="Passed" start-time="2022-08-11T21:23:24.4434203Z" end-time="2022-08-11T21:23:24.4445249Z" duration="0.001105" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;s&quot; - 1';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"s" - 1'
]]></output>
                </test-case>
                <test-case id="0-1154" name="errors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="885827755" result="Passed" start-time="2022-08-11T21:23:24.4445451Z" end-time="2022-08-11T21:23:24.4459826Z" duration="0.001438" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1 + null';&#xA; result: error T2002" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2002]]></message>
                  </reason>
                  <output><![CDATA[Expr is '1 + null'
]]></output>
                </test-case>
                <test-case id="0-1155" name="errors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="861222451" result="Passed" start-time="2022-08-11T21:23:24.4459980Z" end-time="2022-08-11T21:23:24.4478545Z" duration="0.001857" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;no closing quote';&#xA; result: error S0101" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0101]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"no closing quote'
]]></output>
                </test-case>
                <test-case id="0-1156" name="errors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1933075382" result="Passed" start-time="2022-08-11T21:23:24.4489539Z" end-time="2022-08-11T21:23:24.4498351Z" duration="0.000881" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '`no closing backtick';&#xA; result: error S0105" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0105]]></message>
                  </reason>
                  <output><![CDATA[Expr is '`no closing backtick'
]]></output>
                </test-case>
                <test-case id="0-1157" name="errors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="481120607" result="Passed" start-time="2022-08-11T21:23:24.4498535Z" end-time="2022-08-11T21:23:24.4509143Z" duration="0.001061" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '- &quot;s&quot;';&#xA; result: error D1002" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1002]]></message>
                  </reason>
                  <output><![CDATA[Expr is '- "s"'
]]></output>
                </test-case>
                <test-case id="0-1158" name="errors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="320314656" result="Passed" start-time="2022-08-11T21:23:24.4509758Z" end-time="2022-08-11T21:23:24.4521238Z" duration="0.001148" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'unknown(function)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'unknown(function)'
]]></output>
                </test-case>
                <test-case id="0-1159" name="errors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="418144795" result="Passed" start-time="2022-08-11T21:23:24.4521401Z" end-time="2022-08-11T21:23:24.4525380Z" duration="0.000398" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'sum(Account.Order.OrderID)';&#xA; result: error T1005" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1005]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'sum(Account.Order.OrderID)'
]]></output>
                </test-case>
                <test-case id="0-1160" name="errors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1816048233" result="Passed" start-time="2022-08-11T21:23:24.4525510Z" end-time="2022-08-11T21:23:24.4530081Z" duration="0.000457" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2)';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0202]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2)'
]]></output>
                </test-case>
                <test-case id="0-1161" name="errors.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1875423044" result="Passed" start-time="2022-08-11T21:23:24.4530205Z" end-time="2022-08-11T21:23:24.4533900Z" duration="0.000370" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1:2]';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0202]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1:2]'
]]></output>
                </test-case>
                <test-case id="0-1162" name="errors.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="797647501" result="Passed" start-time="2022-08-11T21:23:24.4538057Z" end-time="2022-08-11T21:23:24.4564555Z" duration="0.002650" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;foo&quot;, &quot;o, &quot;rr&quot;)';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0202]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("foo", "o, "rr")'
]]></output>
                </test-case>
                <test-case id="0-1163" name="errors.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="812103635" result="Passed" start-time="2022-08-11T21:23:24.4576442Z" end-time="2022-08-11T21:23:24.4610735Z" duration="0.003430" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1!2]';&#xA; result: error S0204" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0204]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1!2]'
]]></output>
                </test-case>
                <test-case id="0-1164" name="errors.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="30301620" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:24.4619915Z" end-time="2022-08-11T21:23:24.4708980Z" duration="0.008906" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '@ bar';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '@ bar'
]]></output>
                </test-case>
                <test-case id="0-1165" name="errors.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1973967967" result="Passed" start-time="2022-08-11T21:23:24.4710906Z" end-time="2022-08-11T21:23:24.4719793Z" duration="0.000889" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2(blah)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2(blah)'
]]></output>
                </test-case>
                <test-case id="0-1166" name="errors.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1656184768" result="Passed" start-time="2022-08-11T21:23:24.4719983Z" end-time="2022-08-11T21:23:24.4730702Z" duration="0.001053" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2()'
]]></output>
                </test-case>
                <test-case id="0-1167" name="errors.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2002521391" result="Passed" start-time="2022-08-11T21:23:24.4730947Z" end-time="2022-08-11T21:23:24.4750128Z" duration="0.001918" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '3(?)';&#xA; result: error T1008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1008]]></message>
                  </reason>
                  <output><![CDATA[Expr is '3(?)'
]]></output>
                </test-case>
                <test-case id="0-1168" name="errors.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="769012776" result="Passed" start-time="2022-08-11T21:23:24.4750324Z" end-time="2022-08-11T21:23:24.4757062Z" duration="0.000674" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1=';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0207]]></message>
                  </reason>
                  <output><![CDATA[Expr is '1='
]]></output>
                </test-case>
                <test-case id="0-1169" name="errors.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="144268343" result="Passed" start-time="2022-08-11T21:23:24.4757225Z" end-time="2022-08-11T21:23:24.4764059Z" duration="0.000684" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'function(x){$x}(3)';&#xA; result: error S0208" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0208]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'function(x){$x}(3)'
]]></output>
                </test-case>
                <test-case id="0-1170" name="errors.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1030317626" result="Passed" start-time="2022-08-11T21:23:24.4764340Z" end-time="2022-08-11T21:23:24.4770175Z" duration="0.000584" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'x:=1';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'x:=1'
]]></output>
                </test-case>
                <test-case id="0-1171" name="errors.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="408435735" result="Passed" start-time="2022-08-11T21:23:24.4770332Z" end-time="2022-08-11T21:23:24.4776925Z" duration="0.000660" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2:=1';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2:=1'
]]></output>
                </test-case>
                <test-case id="0-1172" name="errors.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1739786284" result="Passed" start-time="2022-08-11T21:23:24.4777076Z" end-time="2022-08-11T21:23:24.4787898Z" duration="0.001082" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$foo()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$foo()'
]]></output>
                </test-case>
                <test-case id="0-1173" name="errors.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="963677150" result="Passed" start-time="2022-08-11T21:23:24.4788070Z" end-time="2022-08-11T21:23:24.4903397Z" duration="0.011533" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '55=&gt;5';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0211]]></message>
                  </reason>
                  <output><![CDATA[Expr is '55=>5'
]]></output>
                </test-case>
                <test-case id="0-1174" name="errors.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1660224678" result="Passed" start-time="2022-08-11T21:23:24.4904756Z" end-time="2022-08-11T21:23:24.4915665Z" duration="0.001091" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Ssum(:)';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0211]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Ssum(:)'
]]></output>
                </test-case>
                <test-case id="0-1175" name="errors.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1027822673" result="Passed" start-time="2022-08-11T21:23:24.4921730Z" end-time="2022-08-11T21:23:24.4930632Z" duration="0.000890" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3]{&quot;num&quot;: $}[true]';&#xA; result: error S0209" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0209]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2,3]{"num": $}[true]'
]]></output>
                </test-case>
                <test-case id="0-1176" name="errors.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1226716530" result="Passed" start-time="2022-08-11T21:23:24.4930843Z" end-time="2022-08-11T21:23:24.4938242Z" duration="0.000740" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3]{&quot;num&quot;: $}{&quot;num&quot;: $}';&#xA; result: error S0210" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0210]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2,3]{"num": $}{"num": $}'
]]></output>
                </test-case>
                <test-case id="0-1177" name="errors.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1714880652" result="Passed" start-time="2022-08-11T21:23:24.4938490Z" end-time="2022-08-11T21:23:24.4947737Z" duration="0.000925" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product;';&#xA; result: error S0201" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0201]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order[0].Product;'
]]></output>
                </test-case>
                <test-case id="0-1178" name="errors.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1351188715" result="Passed" start-time="2022-08-11T21:23:24.4948150Z" end-time="2022-08-11T21:23:24.4956745Z" duration="0.000860" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $A := function(){$min(2, 3)}; $A() )';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '( $A := function(){$min(2, 3)}; $A() )'
]]></output>
                </test-case>
                <test-case id="0-1179" name="errors.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="390189488" result="Passed" start-time="2022-08-11T21:23:24.4957300Z" end-time="2022-08-11T21:23:24.4962157Z" duration="0.000486" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $B := function(){''}; $A := function(){2 + $B()}; $A() )';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '( $B := function(){''}; $A := function(){2 + $B()}; $A() )'
]]></output>
                </test-case>
                <test-case id="0-1180" name="fields.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1292898248" result="Passed" start-time="2022-08-11T21:23:24.4962308Z" end-time="2022-08-11T21:23:24.4966897Z" duration="0.000459" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-1181" name="fields.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="766794110" result="Passed" start-time="2022-08-11T21:23:24.4967207Z" end-time="2022-08-11T21:23:24.4968548Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-1182" name="fields.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1971887026" result="Passed" start-time="2022-08-11T21:23:24.4968925Z" end-time="2022-08-11T21:23:24.4971080Z" duration="0.000216" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-1183" name="fields.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="121164799" result="Passed" start-time="2022-08-11T21:23:24.4971183Z" end-time="2022-08-11T21:23:24.4972258Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-1184" name="fields.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1143986040" result="Passed" start-time="2022-08-11T21:23:24.4973082Z" end-time="2022-08-11T21:23:24.4974289Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1185" name="fields.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="247393245" result="Passed" start-time="2022-08-11T21:23:24.4974419Z" end-time="2022-08-11T21:23:24.4976375Z" duration="0.000195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Other.Misc';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'Other.Misc'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1186" name="fields.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="687178591" result="Passed" start-time="2022-08-11T21:23:24.4977091Z" end-time="2022-08-11T21:23:24.4977882Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-1187" name="fields.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="94277533" result="Passed" start-time="2022-08-11T21:23:24.4977966Z" end-time="2022-08-11T21:23:24.4980610Z" duration="0.000264" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1188" name="flattening.array-inputs[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1196531150" result="Passed" start-time="2022-08-11T21:23:24.4983258Z" end-time="2022-08-11T21:23:24.4985748Z" duration="0.000249" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone';&#xA; result: [{&quot;number&quot;:0},{&quot;number&quot;:1},{&quot;number&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is 'phone'
Result: '[{"number":0},{"number":1},{"number":2}]'
Expected: '[{"number":0},{"number":1},{"number":2}]'
]]></output>
                </test-case>
                <test-case id="0-1189" name="flattening.array-inputs[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1855567184" result="Passed" start-time="2022-08-11T21:23:24.4986099Z" end-time="2022-08-11T21:23:24.4987300Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0]';&#xA; result: {&quot;number&quot;:0}" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0]'
Result: '{"number":0}'
Expected: '{"number":0}'
]]></output>
                </test-case>
                <test-case id="0-1190" name="flattening.array-inputs[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2113553067" result="Passed" start-time="2022-08-11T21:23:24.4987442Z" end-time="2022-08-11T21:23:24.4989277Z" duration="0.000184" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0][]';&#xA; result: [{&quot;number&quot;:0}]" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0][]'
Result: '[{"number":0}]'
Expected: '[{"number":0}]'
]]></output>
                </test-case>
                <test-case id="0-1191" name="flattening.array-inputs[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="376154433" result="Passed" start-time="2022-08-11T21:23:24.5019537Z" end-time="2022-08-11T21:23:24.5028424Z" duration="0.000889" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0].number';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0].number'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1192" name="flattening.array-inputs[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="826558973" result="Passed" start-time="2022-08-11T21:23:24.5033885Z" end-time="2022-08-11T21:23:24.5037109Z" duration="0.000323" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(phone)[0].number';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '(phone)[0].number'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1193" name="flattening.array-inputs[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="940618213" result="Passed" start-time="2022-08-11T21:23:24.5037893Z" end-time="2022-08-11T21:23:24.5041697Z" duration="0.000380" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.phone[0].number';&#xA; result: [0,1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$.phone[0].number'
Result: '[0,1,2]'
Expected: '[0,1,2]'
]]></output>
                </test-case>
                <test-case id="0-1194" name="flattening.array-inputs[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1308852748" result="Passed" start-time="2022-08-11T21:23:24.5045162Z" end-time="2022-08-11T21:23:24.5047230Z" duration="0.000207" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'Hello':'World'}';&#xA; result: {&quot;Hello&quot;:&quot;World&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '{'Hello':'World'}'
Result: '{"Hello":"World"}'
Expected: '{"Hello":"World"}'
]]></output>
                </test-case>
                <test-case id="0-1195" name="flattening.array-inputs[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1796423370" result="Passed" start-time="2022-08-11T21:23:24.5047348Z" end-time="2022-08-11T21:23:24.5048411Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.{'Hello':'World'}';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$.{'Hello':'World'}'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1196" name="flattening.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="903058637" result="Passed" start-time="2022-08-11T21:23:24.5048510Z" end-time="2022-08-11T21:23:24.5053693Z" duration="0.000518" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.[Product.Price]';&#xA; result: [[34.45,21.67],[34.45,107.99]]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.[Product.Price]'
Result: '[[34.45,21.67],[34.45,107.99]]'
Expected: '[[34.45,21.67],[34.45,107.99]]'
]]></output>
                </test-case>
                <test-case id="0-1197" name="flattening.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="110797394" result="Passed" start-time="2022-08-11T21:23:24.5053820Z" end-time="2022-08-11T21:23:24.5058010Z" duration="0.000419" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.nest0';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$.nest0'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1198" name="flattening.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="846230993" result="Passed" start-time="2022-08-11T21:23:24.5062140Z" end-time="2022-08-11T21:23:24.5064126Z" duration="0.000199" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1199" name="flattening.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1492521478" result="Passed" start-time="2022-08-11T21:23:24.5064244Z" end-time="2022-08-11T21:23:24.5079939Z" duration="0.001569" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]';&#xA; result: {&quot;nest0&quot;:[1,2]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]'
Result: '{"nest0":[1,2]}'
Expected: '{"nest0":[1,2]}'
]]></output>
                </test-case>
                <test-case id="0-1200" name="flattening.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="658104593" result="Passed" start-time="2022-08-11T21:23:24.5080087Z" end-time="2022-08-11T21:23:24.5081234Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1]';&#xA; result: {&quot;nest0&quot;:[3,4]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[1]'
Result: '{"nest0":[3,4]}'
Expected: '{"nest0":[3,4]}'
]]></output>
                </test-case>
                <test-case id="0-1201" name="flattening.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1369584479" result="Passed" start-time="2022-08-11T21:23:24.5081328Z" end-time="2022-08-11T21:23:24.5082158Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[-1]';&#xA; result: {&quot;nest0&quot;:[3,4]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[-1]'
Result: '{"nest0":[3,4]}'
Expected: '{"nest0":[3,4]}'
]]></output>
                </test-case>
                <test-case id="0-1202" name="flattening.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="310875676" result="Passed" start-time="2022-08-11T21:23:24.5082396Z" end-time="2022-08-11T21:23:24.5083226Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0].nest0';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$[0].nest0'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1203" name="flattening.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1823674857" result="Passed" start-time="2022-08-11T21:23:24.5083308Z" end-time="2022-08-11T21:23:24.5084014Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1].nest0';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[1].nest0'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-1204" name="flattening.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1214532790" result="Passed" start-time="2022-08-11T21:23:24.5084087Z" end-time="2022-08-11T21:23:24.5084766Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0].nest0[0]';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$[0].nest0[0]'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1205" name="flattening.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="835028430" result="Passed" start-time="2022-08-11T21:23:24.5084838Z" end-time="2022-08-11T21:23:24.5085970Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.[nest3]]]';&#xA; result: [[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.[nest3]]]'
Result: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
Expected: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
]]></output>
                </test-case>
                <test-case id="0-1206" name="flattening.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="844852968" result="Passed" start-time="2022-08-11T21:23:24.5086043Z" end-time="2022-08-11T21:23:24.5087105Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.[nest3]]';&#xA; result: [[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.[nest3]]'
Result: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
Expected: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1207" name="flattening.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1808557374" result="Passed" start-time="2022-08-11T21:23:24.5087178Z" end-time="2022-08-11T21:23:24.5088216Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.[nest3]]';&#xA; result: [[[1],[2],[3],[4]],[[5],[6],[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.[nest3]]'
Result: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
Expected: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1208" name="flattening.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1589229570" result="Passed" start-time="2022-08-11T21:23:24.5088298Z" end-time="2022-08-11T21:23:24.5089321Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.nest3]]';&#xA; result: [[[1,2],[3,4]],[[5,6],[7,8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.nest3]]'
Result: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
Expected: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
]]></output>
                </test-case>
                <test-case id="0-1209" name="flattening.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2005488729" result="Passed" start-time="2022-08-11T21:23:24.5089397Z" end-time="2022-08-11T21:23:24.5116924Z" duration="0.002753" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.nest3]';&#xA; result: [[1,2,3,4],[5,6,7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.nest3]'
Result: '[[1,2,3,4],[5,6,7,8]]'
Expected: '[[1,2,3,4],[5,6,7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1210" name="flattening.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1781989568" result="Passed" start-time="2022-08-11T21:23:24.5124900Z" end-time="2022-08-11T21:23:24.5128646Z" duration="0.000375" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.nest3]';&#xA; result: [[1,2],[3,4],[5,6],[7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.nest3]'
Result: '[[1,2],[3,4],[5,6],[7,8]]'
Expected: '[[1,2],[3,4],[5,6],[7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1211" name="flattening.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="218194730" result="Passed" start-time="2022-08-11T21:23:24.5133602Z" end-time="2022-08-11T21:23:24.5136869Z" duration="0.000327" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.[nest3]';&#xA; result: [[1],[2],[3],[4],[5],[6],[7],[8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.[nest3]'
Result: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
Expected: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
]]></output>
                </test-case>
                <test-case id="0-1212" name="flattening.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1277415539" result="Passed" start-time="2022-08-11T21:23:24.5140093Z" end-time="2022-08-11T21:23:24.5147830Z" duration="0.000774" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.nest3';&#xA; result: [1,2,3,4,5,6,7,8]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.nest3'
Result: '[1,2,3,4,5,6,7,8]'
Expected: '[1,2,3,4,5,6,7,8]'
]]></output>
                </test-case>
                <test-case id="0-1213" name="flattening.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2077608815" result="Passed" start-time="2022-08-11T21:23:24.5159403Z" end-time="2022-08-11T21:23:24.5164191Z" duration="0.000479" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.[nest3]]]';&#xA; result: [[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.[nest3]]]'
Result: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
Expected: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
]]></output>
                </test-case>
                <test-case id="0-1214" name="flattening.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1272730194" result="Passed" start-time="2022-08-11T21:23:24.5164342Z" end-time="2022-08-11T21:23:24.5167647Z" duration="0.000331" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.[nest3]]';&#xA; result: [[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.[nest3]]'
Result: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
Expected: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1215" name="flattening.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1049254123" result="Passed" start-time="2022-08-11T21:23:24.5168456Z" end-time="2022-08-11T21:23:24.5172269Z" duration="0.000381" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.[nest3]]';&#xA; result: [[[1],[2],[3],[4]],[[5],[6],[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.[nest3]]'
Result: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
Expected: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1216" name="flattening.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2051019665" result="Passed" start-time="2022-08-11T21:23:24.5172405Z" end-time="2022-08-11T21:23:24.5175574Z" duration="0.000317" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.nest3]]';&#xA; result: [[[1,2],[3,4]],[[5,6],[7,8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.nest3]]'
Result: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
Expected: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
]]></output>
                </test-case>
                <test-case id="0-1217" name="flattening.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="676482702" result="Passed" start-time="2022-08-11T21:23:24.5189790Z" end-time="2022-08-11T21:23:24.5193557Z" duration="0.000376" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.nest3]';&#xA; result: [[1,2,3,4],[5,6,7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.nest3]'
Result: '[[1,2,3,4],[5,6,7,8]]'
Expected: '[[1,2,3,4],[5,6,7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1218" name="flattening.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1815601242" result="Passed" start-time="2022-08-11T21:23:24.5227793Z" end-time="2022-08-11T21:23:24.5233501Z" duration="0.000571" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.nest3]';&#xA; result: [[1,2],[3,4],[5,6],[7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.nest3]'
Result: '[[1,2],[3,4],[5,6],[7,8]]'
Expected: '[[1,2],[3,4],[5,6],[7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1219" name="flattening.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1930392022" result="Passed" start-time="2022-08-11T21:23:24.5235479Z" end-time="2022-08-11T21:23:24.5240985Z" duration="0.000550" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.[nest3]';&#xA; result: [[1],[2],[3],[4],[5],[6],[7],[8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.[nest3]'
Result: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
Expected: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
]]></output>
                </test-case>
                <test-case id="0-1220" name="flattening.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1286789376" result="Passed" start-time="2022-08-11T21:23:24.5241465Z" end-time="2022-08-11T21:23:24.5242515Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.nest3';&#xA; result: [1,2,3,4,5,6,7,8]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.nest3'
Result: '[1,2,3,4,5,6,7,8]'
Expected: '[1,2,3,4,5,6,7,8]'
]]></output>
                </test-case>
                <test-case id="0-1221" name="flattening.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1561907235" result="Passed" start-time="2022-08-11T21:23:24.5242618Z" end-time="2022-08-11T21:23:24.5245751Z" duration="0.000314" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: 1 }.a';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": 1 }.a'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1222" name="flattening.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="805990241" result="Passed" start-time="2022-08-11T21:23:24.5246476Z" end-time="2022-08-11T21:23:24.5257325Z" duration="0.001085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1223" name="flattening.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1060929239" result="Passed" start-time="2022-08-11T21:23:24.5258451Z" end-time="2022-08-11T21:23:24.5260896Z" duration="0.000245" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: [1] }.a';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": [1] }.a'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1224" name="flattening.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="178198923" result="Passed" start-time="2022-08-11T21:23:24.5261427Z" end-time="2022-08-11T21:23:24.5265240Z" duration="0.000381" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1225" name="flattening.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="654163193" result="Passed" start-time="2022-08-11T21:23:24.5265581Z" end-time="2022-08-11T21:23:24.5268029Z" duration="0.000245" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: [[1]] }.a';&#xA; result: [[1]]" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": [[1]] }.a'
Result: '[[1]]'
Expected: '[[1]]'
]]></output>
                </test-case>
                <test-case id="0-1226" name="flattening.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1729360409" result="Passed" start-time="2022-08-11T21:23:24.5268760Z" end-time="2022-08-11T21:23:24.5271510Z" duration="0.000275" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [[1]]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[[1]]'
Expected: '[[1]]'
]]></output>
                </test-case>
                <test-case id="0-1227" name="flattening.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="799168071" result="Passed" start-time="2022-08-11T21:23:24.5271618Z" end-time="2022-08-11T21:23:24.5272865Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[{&quot;a&quot;:[1,2]}, {&quot;a&quot;:[3]}].a';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[{"a":[1,2]}, {"a":[3]}].a'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1228" name="flattening.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1802308049" result="Passed" start-time="2022-08-11T21:23:24.5273067Z" end-time="2022-08-11T21:23:24.5274169Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1229" name="flattening.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2011284955" result="Passed" start-time="2022-08-11T21:23:24.5274260Z" end-time="2022-08-11T21:23:24.5276071Z" duration="0.000185" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[{&quot;a&quot;:[{&quot;b&quot;:[1]}, {&quot;b&quot;:[2]}]}, {&quot;a&quot;:[{&quot;b&quot;:[3]}, {&quot;b&quot;:[4]}]}].a[0].b';&#xA; result: [1,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[{"a":[{"b":[1]}, {"b":[2]}]}, {"a":[{"b":[3]}, {"b":[4]}]}].a[0].b'
Result: '[1,3]'
Expected: '[1,3]'
]]></output>
                </test-case>
                <test-case id="0-1230" name="flattening.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="124764036" result="Passed" start-time="2022-08-11T21:23:24.5276273Z" end-time="2022-08-11T21:23:24.5277402Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a[0].b';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is 'a[0].b'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1231" name="flattening.case034a" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case034a" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1115919136" result="Passed" start-time="2022-08-11T21:23:24.5277499Z" end-time="2022-08-11T21:23:24.5279410Z" duration="0.000191" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.a[0].b';&#xA; result: [1,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$.a[0].b'
Result: '[1,3]'
Expected: '[1,3]'
]]></output>
                </test-case>
                <test-case id="0-1232" name="flattening.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="868649659" result="Passed" start-time="2022-08-11T21:23:24.5279500Z" end-time="2022-08-11T21:23:24.5282115Z" duration="0.000262" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a.b[0]';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is 'a.b[0]'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1233" name="flattening.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2006150884" result="Passed" start-time="2022-08-11T21:23:24.5282299Z" end-time="2022-08-11T21:23:24.5283579Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;mobile&quot;].number';&#xA; result: &quot;077 7700 1234&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="mobile"].number'
Result: '"077 7700 1234"'
Expected: '"077 7700 1234"'
]]></output>
                </test-case>
                <test-case id="0-1234" name="flattening.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1879568542" result="Passed" start-time="2022-08-11T21:23:24.5284339Z" end-time="2022-08-11T21:23:24.5287892Z" duration="0.000355" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;mobile&quot;][].number';&#xA; result: [&quot;077 7700 1234&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="mobile"][].number'
Result: '["077 7700 1234"]'
Expected: '["077 7700 1234"]'
]]></output>
                </test-case>
                <test-case id="0-1235" name="flattening.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2070797416" result="Passed" start-time="2022-08-11T21:23:24.5287995Z" end-time="2022-08-11T21:23:24.5288922Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[][type=&quot;mobile&quot;].number';&#xA; result: [&quot;077 7700 1234&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[][type="mobile"].number'
Result: '["077 7700 1234"]'
Expected: '["077 7700 1234"]'
]]></output>
                </test-case>
                <test-case id="0-1236" name="flattening.case039" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case039" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="455918434" result="Passed" start-time="2022-08-11T21:23:24.5289009Z" end-time="2022-08-11T21:23:24.5289879Z" duration="0.000087" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;office&quot;][].number';&#xA; result: [&quot;01962 001234&quot;,&quot;01962 001235&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="office"][].number'
Result: '["01962 001234","01962 001235"]'
Expected: '["01962 001234","01962 001235"]'
]]></output>
                </test-case>
                <test-case id="0-1237" name="flattening.case040" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case040" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="148212169" result="Passed" start-time="2022-08-11T21:23:24.5289954Z" end-time="2022-08-11T21:23:24.5294343Z" duration="0.000439" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: number}';&#xA; result: {&quot;home&quot;:&quot;0203 544 1234&quot;,&quot;office&quot;:[&quot;01962 001234&quot;,&quot;01962 001235&quot;],&quot;mobile&quot;:&quot;077 7700 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: number}'
Result: '{"home":"0203 544 1234","office":["01962 001234","01962 001235"],"mobile":"077 7700 1234"}'
Expected: '{"home":"0203 544 1234","office":["01962 001234","01962 001235"],"mobile":"077 7700 1234"}'
]]></output>
                </test-case>
                <test-case id="0-1238" name="flattening.case041" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case041" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1054115656" result="Passed" start-time="2022-08-11T21:23:24.5294512Z" end-time="2022-08-11T21:23:24.5295877Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: number[]}';&#xA; result: {&quot;home&quot;:[&quot;0203 544 1234&quot;],&quot;office&quot;:[&quot;01962 001234&quot;,&quot;01962 001235&quot;],&quot;mobile&quot;:[&quot;077 7700 1234&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: number[]}'
Result: '{"home":["0203 544 1234"],"office":["01962 001234","01962 001235"],"mobile":["077 7700 1234"]}'
Expected: '{"home":["0203 544 1234"],"office":["01962 001234","01962 001235"],"mobile":["077 7700 1234"]}'
]]></output>
                </test-case>
                <test-case id="0-1239" name="flattening.case042" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case042" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="308957610" result="Passed" start-time="2022-08-11T21:23:24.5296016Z" end-time="2022-08-11T21:23:24.5296994Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[type='command'][]';&#xA; result: [{&quot;type&quot;:&quot;command&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$[type='command'][]'
Result: '[{"type":"command"}]'
Expected: '[{"type":"command"}]'
]]></output>
                </test-case>
                <test-case id="0-1240" name="flattening.case043" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case043" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1550023924" result="Passed" start-time="2022-08-11T21:23:24.5308761Z" end-time="2022-08-11T21:23:24.5311263Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[][type='command']';&#xA; result: [{&quot;type&quot;:&quot;command&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$[][type='command']'
Result: '[{"type":"command"}]'
Expected: '[{"type":"command"}]'
]]></output>
                </test-case>
                <test-case id="0-1241" name="flattening.case044" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case044" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1026104864" result="Passed" start-time="2022-08-11T21:23:24.5318022Z" end-time="2022-08-11T21:23:24.5336566Z" duration="0.001854" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter($, function($e) { $e != 0 })[]';&#xA; result: [5]" />
                  </properties>
                  <output><![CDATA[Expr is '$filter($, function($e) { $e != 0 })[]'
Result: '[5]'
Expected: '[5]'
]]></output>
                </test-case>
                <test-case id="0-1242" name="flattening.case045" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case045" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="652531610" result="Passed" start-time="2022-08-11T21:23:24.5337985Z" end-time="2022-08-11T21:23:24.5348079Z" duration="0.001010" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.tags[title='example'][]';&#xA; result: [{&quot;title&quot;:&quot;example&quot;,&quot;description&quot;:&quot;Hello&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$.tags[title='example'][]'
Result: '[{"title":"example","description":"Hello"}]'
Expected: '[{"title":"example","description":"Hello"}]'
]]></output>
                </test-case>
                <test-case id="0-1243" name="flattening.large[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.large[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1338526068" result="Passed" start-time="2022-08-11T21:23:24.5353623Z" end-time="2022-08-11T21:23:26.4124213Z" duration="1.877071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $data := { 'number': [1..2e5].$string() }; $values := $data.number; $count($values) )';&#xA; result: 200000" />
                  </properties>
                  <output><![CDATA[Expr is '( $data := { 'number': [1..2e5].$string() }; $values := $data.number; $count($values) )'
Result: '200000'
Expected: '200000'
]]></output>
                </test-case>
                <test-case id="0-1244" name="flattening.large[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.large[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="73577616" result="Passed" start-time="2022-08-11T21:23:26.4124485Z" end-time="2022-08-11T21:23:28.2694980Z" duration="1.857062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $data := { 'number': [1..2e5].$string() }; $values := $lookup($data, 'number'); $count($values) )';&#xA; result: 200000" />
                  </properties>
                  <output><![CDATA[Expr is '( $data := { 'number': [1..2e5].$string() }; $values := $lookup($data, 'number'); $count($values) )'
Result: '200000'
Expected: '200000'
]]></output>
                </test-case>
                <test-case id="0-1245" name="flattening.sequence-of-arrays[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1895358337" result="Passed" start-time="2022-08-11T21:23:28.2695559Z" end-time="2022-08-11T21:23:28.2697280Z" duration="0.000172" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1246" name="flattening.sequence-of-arrays[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1246222541" result="Passed" start-time="2022-08-11T21:23:28.2697383Z" end-time="2022-08-11T21:23:28.2698155Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [3,1578381600]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[3,1578381600]'
Expected: '[3,1578381600]'
]]></output>
                </test-case>
                <test-case id="0-1247" name="flattening.sequence-of-arrays[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="896433805" result="Passed" start-time="2022-08-11T21:23:28.2698246Z" end-time="2022-08-11T21:23:28.2699058Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1248" name="flattening.sequence-of-arrays[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1815371666" result="Passed" start-time="2022-08-11T21:23:28.2699139Z" end-time="2022-08-11T21:23:28.2699933Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600]]'
Expected: '[[3,1578381600]]'
]]></output>
                </test-case>
                <test-case id="0-1249" name="function-abs.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="259598625" result="Passed" start-time="2022-08-11T21:23:28.2700462Z" end-time="2022-08-11T21:23:28.2702366Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(3.7)';&#xA; result: 3.7" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(3.7)'
Result: '3.7'
Expected: '3.7'
]]></output>
                </test-case>
                <test-case id="0-1250" name="function-abs.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1892887352" result="Passed" start-time="2022-08-11T21:23:28.2705255Z" end-time="2022-08-11T21:23:28.2708881Z" duration="0.000362" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(-3.7)';&#xA; result: 3.7" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(-3.7)'
Result: '3.7'
Expected: '3.7'
]]></output>
                </test-case>
                <test-case id="0-1251" name="function-abs.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="226575935" result="Passed" start-time="2022-08-11T21:23:28.2712322Z" end-time="2022-08-11T21:23:28.2718680Z" duration="0.000636" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1252" name="function-abs.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="442679799" result="Passed" start-time="2022-08-11T21:23:28.2724457Z" end-time="2022-08-11T21:23:28.2726788Z" duration="0.000233" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1253" name="function-append.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1063322618" result="Passed" start-time="2022-08-11T21:23:28.2727065Z" end-time="2022-08-11T21:23:28.2735276Z" duration="0.000821" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append([1,2], [3,4])';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append([1,2], [3,4])'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1254" name="function-append.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="205732102" result="Passed" start-time="2022-08-11T21:23:28.2755140Z" end-time="2022-08-11T21:23:28.2768109Z" duration="0.001297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1, [3,4])';&#xA; result: [1,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1, [3,4])'
Result: '[1,3,4]'
Expected: '[1,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1255" name="function-append.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1243681005" result="Passed" start-time="2022-08-11T21:23:28.2775118Z" end-time="2022-08-11T21:23:28.2779402Z" duration="0.000428" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1,2)';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1,2)'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1256" name="function-append.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="563594238" result="Passed" start-time="2022-08-11T21:23:28.2783890Z" end-time="2022-08-11T21:23:28.2791443Z" duration="0.000755" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1,notexist)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1,notexist)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1257" name="function-append.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1397430084" result="Passed" start-time="2022-08-11T21:23:28.2792904Z" end-time="2022-08-11T21:23:28.2794384Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(notexist, [2,3,4])';&#xA; result: [2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(notexist, [2,3,4])'
Result: '[2,3,4]'
Expected: '[2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1258" name="function-append.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1645475934" result="Passed" start-time="2022-08-11T21:23:28.2794516Z" end-time="2022-08-11T21:23:28.2796083Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($append($data.a, [2]); $data.a)';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '($append($data.a, [2]); $data.a)'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1259" name="function-applications.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="560369597" result="Passed" start-time="2022-08-11T21:23:28.2798610Z" end-time="2022-08-11T21:23:28.2813238Z" duration="0.001463" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].OrderID ~&gt; $uppercase()';&#xA; result: &quot;ORDER103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].OrderID ~> $uppercase()'
Result: '"ORDER103"'
Expected: '"ORDER103"'
]]></output>
                </test-case>
                <test-case id="0-1260" name="function-applications.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1253151668" result="Passed" start-time="2022-08-11T21:23:28.2814141Z" end-time="2022-08-11T21:23:28.2822416Z" duration="0.000827" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].OrderID ~&gt; $uppercase() ~&gt; $lowercase()';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].OrderID ~> $uppercase() ~> $lowercase()'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1261" name="function-applications.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="45684897" result="Passed" start-time="2022-08-11T21:23:28.2824051Z" end-time="2022-08-11T21:23:28.2830548Z" duration="0.000650" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.OrderID ~&gt; $join()';&#xA; result: &quot;order103order104&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.OrderID ~> $join()'
Result: '"order103order104"'
Expected: '"order103order104"'
]]></output>
                </test-case>
                <test-case id="0-1262" name="function-applications.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="6249325" result="Passed" start-time="2022-08-11T21:23:28.2831755Z" end-time="2022-08-11T21:23:28.2833832Z" duration="0.000208" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.OrderID ~&gt; $join(&quot;, &quot;)';&#xA; result: &quot;order103, order104&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.OrderID ~> $join(", ")'
Result: '"order103, order104"'
Expected: '"order103, order104"'
]]></output>
                </test-case>
                <test-case id="0-1263" name="function-applications.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1725428262" result="Passed" start-time="2022-08-11T21:23:28.2834415Z" end-time="2022-08-11T21:23:28.2853197Z" duration="0.001879" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price * Quantity) ~&gt; $sum()';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price * Quantity) ~> $sum()'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1264" name="function-applications.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1880724693" result="Passed" start-time="2022-08-11T21:23:28.2853529Z" end-time="2022-08-11T21:23:28.2940414Z" duration="0.008689" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $uppertrim := $trim ~&gt; $uppercase;  $uppertrim(&quot;   Hello    World   &quot;) )';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $uppertrim := $trim ~> $uppercase;  $uppertrim("   Hello    World   ") )'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-1265" name="function-applications.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="666070432" result="Passed" start-time="2022-08-11T21:23:28.2940773Z" end-time="2022-08-11T21:23:28.2943810Z" duration="0.000304" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;john@example.com&quot; ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: &quot;example&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"john@example.com" ~> $substringAfter("@") ~> $substringBefore(".") '
Result: '"example"'
Expected: '"example"'
]]></output>
                </test-case>
                <test-case id="0-1266" name="function-applications.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1497028718" result="Passed" start-time="2022-08-11T21:23:28.2944082Z" end-time="2022-08-11T21:23:28.2945235Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;&quot; ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"" ~> $substringAfter("@") ~> $substringBefore(".") '
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1267" name="function-applications.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1418748302" result="Passed" start-time="2022-08-11T21:23:28.2945326Z" end-time="2022-08-11T21:23:28.2946880Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo ~> $substringAfter("@") ~> $substringBefore(".") '
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1268" name="function-applications.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="198040273" result="Passed" start-time="2022-08-11T21:23:28.2947146Z" end-time="2022-08-11T21:23:28.2975057Z" duration="0.002791" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $domain := $substringAfter(?,&quot;@&quot;) ~&gt; $substringBefore(?,&quot;.&quot;); $domain(&quot;john@example.com&quot;) )';&#xA; result: &quot;example&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $domain := $substringAfter(?,"@") ~> $substringBefore(?,"."); $domain("john@example.com") )'
Result: '"example"'
Expected: '"example"'
]]></output>
                </test-case>
                <test-case id="0-1269" name="function-applications.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1349416425" result="Passed" start-time="2022-08-11T21:23:28.2975417Z" end-time="2022-08-11T21:23:28.2983546Z" duration="0.000813" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $square := function($x){$x*$x}; [1..5] ~&gt; $map($square) ) ';&#xA; result: [1,4,9,16,25]" />
                  </properties>
                  <output><![CDATA[Expr is '( $square := function($x){$x*$x}; [1..5] ~> $map($square) ) '
Result: '[1,4,9,16,25]'
Expected: '[1,4,9,16,25]'
]]></output>
                </test-case>
                <test-case id="0-1270" name="function-applications.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="593335689" result="Passed" start-time="2022-08-11T21:23:28.2983968Z" end-time="2022-08-11T21:23:28.2991307Z" duration="0.000734" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $square := function($x){$x*$x}; [1..5] ~&gt; $map($square) ~&gt; $sum() ) ';&#xA; result: 55" />
                  </properties>
                  <output><![CDATA[Expr is '( $square := function($x){$x*$x}; [1..5] ~> $map($square) ~> $sum() ) '
Result: '55'
Expected: '55'
]]></output>
                </test-case>
                <test-case id="0-1271" name="function-applications.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1902807496" result="Passed" start-time="2022-08-11T21:23:28.2991621Z" end-time="2022-08-11T21:23:28.2995726Z" duration="0.000411" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($betweenBackets := $substringAfter(?, &quot;(&quot;) ~&gt; $substringBefore(?, &quot;)&quot;);$betweenBackets(&quot;test(foo)bar&quot;)) ';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($betweenBackets := $substringAfter(?, "(") ~> $substringBefore(?, ")");$betweenBackets("test(foo)bar")) '
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1272" name="function-applications.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1769850693" result="Passed" start-time="2022-08-11T21:23:28.2996236Z" end-time="2022-08-11T21:23:28.3011734Z" duration="0.001550" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){$g($f($x))}};$instructions := [$sum, $square];$sumsq := $instructions ~&gt; $reduce($chain);[1..5] ~&gt; $sumsq()) ';&#xA; result: 225" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){$g($f($x))}};$instructions := [$sum, $square];$sumsq := $instructions ~> $reduce($chain);[1..5] ~> $sumsq()) '
Result: '225'
Expected: '225'
]]></output>
                </test-case>
                <test-case id="0-1273" name="function-applications.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1506643632" result="Passed" start-time="2022-08-11T21:23:28.3012057Z" end-time="2022-08-11T21:23:28.3015978Z" duration="0.000392" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){ $x ~&gt; $f ~&gt; $g }};$instructions := [$sum, $square, $string];$sumsq := $instructions ~&gt; $reduce($chain);[1..5] ~&gt; $sumsq()) ';&#xA; result: &quot;225&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){ $x ~> $f ~> $g }};$instructions := [$sum, $square, $string];$sumsq := $instructions ~> $reduce($chain);[1..5] ~> $sumsq()) '
Result: '"225"'
Expected: '"225"'
]]></output>
                </test-case>
                <test-case id="0-1274" name="function-applications.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="380368098" result="Passed" start-time="2022-08-11T21:23:28.3018837Z" end-time="2022-08-11T21:23:28.3020567Z" duration="0.000173" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$instructions := $sum ~&gt; $square;[1..5] ~&gt; $instructions())  ';&#xA; result: 225" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$instructions := $sum ~> $square;[1..5] ~> $instructions())  '
Result: '225'
Expected: '225'
]]></output>
                </test-case>
                <test-case id="0-1275" name="function-applications.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="260684512" result="Passed" start-time="2022-08-11T21:23:28.3023275Z" end-time="2022-08-11T21:23:28.3025183Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$sum_of_squares := $map(?, $square) ~&gt; $sum;[1..5] ~&gt; $sum_of_squares())  ';&#xA; result: 55" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$sum_of_squares := $map(?, $square) ~> $sum;[1..5] ~> $sum_of_squares())  '
Result: '55'
Expected: '55'
]]></output>
                </test-case>
                <test-case id="0-1276" name="function-applications.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="909375625" result="Passed" start-time="2022-08-11T21:23:28.3025543Z" end-time="2022-08-11T21:23:28.3027263Z" duration="0.000172" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($times := λ($x, $y) { $x * $y };$product := $reduce(?, $times);$square := function($x){$x*$x};$product_of_squares := $map(?, $square) ~&gt; $product;[1..5] ~&gt; $product_of_squares())';&#xA; result: 14400" />
                  </properties>
                  <output><![CDATA[Expr is '($times := λ($x, $y) { $x * $y };$product := $reduce(?, $times);$square := function($x){$x*$x};$product_of_squares := $map(?, $square) ~> $product;[1..5] ~> $product_of_squares())'
Result: '14400'
Expected: '14400'
]]></output>
                </test-case>
                <test-case id="0-1277" name="function-applications.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1614947820" result="Passed" start-time="2022-08-11T21:23:28.3027372Z" end-time="2022-08-11T21:23:28.3029443Z" duration="0.000207" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};[1..5] ~&gt; $map($square) ~&gt; $reduce(λ($x, $y) { $x * $y });)';&#xA; result: 14400" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};[1..5] ~> $map($square) ~> $reduce(λ($x, $y) { $x * $y });)'
Result: '14400'
Expected: '14400'
]]></output>
                </test-case>
                <test-case id="0-1278" name="function-applications.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="987351623" result="Passed" start-time="2022-08-11T21:23:28.3029561Z" end-time="2022-08-11T21:23:28.3042755Z" duration="0.001320" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($prices := Account.Order.Product.Price;$quantities := Account.Order.Product.Quantity;$product := λ($arr) { $arr[0] * $arr[1] };$zip($prices, $quantities) ~&gt; $map($product) ~&gt; $sum())';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is '($prices := Account.Order.Product.Price;$quantities := Account.Order.Product.Quantity;$product := λ($arr) { $arr[0] * $arr[1] };$zip($prices, $quantities) ~> $map($product) ~> $sum())'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1279" name="function-applications.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="430324233" result="Passed" start-time="2022-08-11T21:23:28.3043081Z" end-time="2022-08-11T21:23:28.3053411Z" duration="0.001033" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '42 ~&gt; &quot;hello&quot;';&#xA; result: error T2006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '42 ~> "hello"'
]]></output>
                </test-case>
                <test-case id="0-1280" name="function-applications.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1555424299" result="Passed" start-time="2022-08-11T21:23:28.3055223Z" end-time="2022-08-11T21:23:28.3132586Z" duration="0.007737" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$.&quot;Product Name&quot; ~&gt; /hat/i].ProductID';&#xA; result: [858383,858236,858383]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$."Product Name" ~> /hat/i].ProductID'
Result: '[858383,858236,858383]'
Expected: '[858383,858236,858383]'
]]></output>
                </test-case>
                <test-case id="0-1281" name="function-assert.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="832926604" result="Passed" start-time="2022-08-11T21:23:28.3133374Z" end-time="2022-08-11T21:23:28.3149008Z" duration="0.001564" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$assert(Account.Order[0].Product[0].Price &lt; 34, 'Too Expensive')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$assert(Account.Order[0].Product[0].Price < 34, 'Too Expensive')'
]]></output>
                </test-case>
                <test-case id="0-1282" name="function-assert.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1131280052" result="Passed" start-time="2022-08-11T21:23:28.3149349Z" end-time="2022-08-11T21:23:28.3151076Z" duration="0.000173" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$assert(Account.Order[0].Product[0].Price &lt; 35, 'Too Expensive')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$assert(Account.Order[0].Product[0].Price < 35, 'Too Expensive')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1283" name="function-assert.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1542709424" result="Passed" start-time="2022-08-11T21:23:28.3151178Z" end-time="2022-08-11T21:23:28.3156150Z" duration="0.000497" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($assert(Account.Order[0].Product[0].Price &lt; 35, 'Too Expensive'); Account.Order[0].Product[0].Price)';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is '($assert(Account.Order[0].Product[0].Price < 35, 'Too Expensive'); Account.Order[0].Product[0].Price)'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1284" name="function-assert.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="118397603" result="Passed" start-time="2022-08-11T21:23:28.3161215Z" end-time="2022-08-11T21:23:28.3167598Z" duration="0.000638" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '($assert(Account.Order[0].Product[0].Price &lt; 34, 'Too Expensive'); Account.Order[0].Product[0].Price)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '($assert(Account.Order[0].Product[0].Price < 34, 'Too Expensive'); Account.Order[0].Product[0].Price)'
]]></output>
                </test-case>
                <test-case id="0-1285" name="function-assert.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2045671748" result="Passed" start-time="2022-08-11T21:23:28.3167866Z" end-time="2022-08-11T21:23:28.3174677Z" duration="0.000681" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$assert(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$assert(null)'
]]></output>
                </test-case>
                <test-case id="0-1286" name="function-assert.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="673239337" result="Passed" start-time="2022-08-11T21:23:28.3174846Z" end-time="2022-08-11T21:23:28.3182217Z" duration="0.000737" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$assert(5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$assert(5)'
]]></output>
                </test-case>
                <test-case id="0-1287" name="function-assert.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1952810688" result="Passed" start-time="2022-08-11T21:23:28.3182371Z" end-time="2022-08-11T21:23:28.3188792Z" duration="0.000642" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$assert(false)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$assert(false)'
]]></output>
                </test-case>
                <test-case id="0-1288" name="function-assert.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1800418782" result="Passed" start-time="2022-08-11T21:23:28.3188946Z" end-time="2022-08-11T21:23:28.3191008Z" duration="0.000206" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$assert(true)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$assert(true)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1289" name="function-average.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="635887537" result="Passed" start-time="2022-08-11T21:23:28.3191207Z" end-time="2022-08-11T21:23:28.3228739Z" duration="0.003753" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(Account.Order.Product.(Price * Quantity))';&#xA; result: 84.09" />
                  </properties>
                  <output><![CDATA[Expr is '$average(Account.Order.Product.(Price * Quantity))'
Result: '84.09'
Expected: '84.09'
]]></output>
                </test-case>
                <test-case id="0-1290" name="function-average.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1507203178" result="Passed" start-time="2022-08-11T21:23:28.3229140Z" end-time="2022-08-11T21:23:28.3231447Z" duration="0.000231" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$average(Product.(Price * Quantity))';&#xA; result: [45.285000000000004,122.89500000000001]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$average(Product.(Price * Quantity))'
Result: '[45.285,122.895]'
Expected: '[45.285000000000004,122.89500000000001]'
]]></output>
                </test-case>
                <test-case id="0-1291" name="function-average.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1205971997" result="Passed" start-time="2022-08-11T21:23:28.3231561Z" end-time="2022-08-11T21:23:28.3236524Z" duration="0.000496" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $average(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 45.285&quot;,&quot;order104: 122.895&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $average(Product.(Price*Quantity)))'
Result: '["order103: 45.285","order104: 122.895"]'
Expected: '["order103: 45.285","order104: 122.895"]'
]]></output>
                </test-case>
                <test-case id="0-1292" name="function-average.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="650219882" result="Passed" start-time="2022-08-11T21:23:28.3239075Z" end-time="2022-08-11T21:23:28.3239947Z" duration="0.000087" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$average([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1293" name="function-average.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="493746059" result="Passed" start-time="2022-08-11T21:23:28.3240152Z" end-time="2022-08-11T21:23:28.3241085Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2,3])';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$average([1,2,3])'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1294" name="function-average.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1203289589" result="Passed" start-time="2022-08-11T21:23:28.3241173Z" end-time="2022-08-11T21:23:28.3248134Z" duration="0.000696" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1295" name="function-average.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1504339027" result="Passed" start-time="2022-08-11T21:23:28.3248487Z" end-time="2022-08-11T21:23:28.3258382Z" duration="0.000990" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1296" name="function-average.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1019855539" result="Passed" start-time="2022-08-11T21:23:28.3263140Z" end-time="2022-08-11T21:23:28.3264236Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$average(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1297" name="function-average.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1074586995" result="Passed" start-time="2022-08-11T21:23:28.3264359Z" end-time="2022-08-11T21:23:28.3270674Z" duration="0.000632" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([],[])'
]]></output>
                </test-case>
                <test-case id="0-1298" name="function-average.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1605285022" result="Passed" start-time="2022-08-11T21:23:28.3271236Z" end-time="2022-08-11T21:23:28.3280295Z" duration="0.000906" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1299" name="function-average.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1554990831" result="Passed" start-time="2022-08-11T21:23:28.3280947Z" end-time="2022-08-11T21:23:28.3286166Z" duration="0.000523" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1300" name="function-average.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="398329619" result="Passed" start-time="2022-08-11T21:23:28.3286821Z" end-time="2022-08-11T21:23:28.3298562Z" duration="0.001174" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1301" name="function-average.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1974957886" result="Passed" start-time="2022-08-11T21:23:28.3300355Z" end-time="2022-08-11T21:23:28.3304207Z" duration="0.000385" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$average(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1302" name="function-boolean.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="698393532" result="Passed" start-time="2022-08-11T21:23:28.3304452Z" end-time="2022-08-11T21:23:28.3305578Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(&quot;Hello World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean("Hello World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1303" name="function-boolean.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="465955241" result="Passed" start-time="2022-08-11T21:23:28.3305665Z" end-time="2022-08-11T21:23:28.3310592Z" duration="0.000493" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(&quot;&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean("")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1304" name="function-boolean.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1813746583" result="Passed" start-time="2022-08-11T21:23:28.3310737Z" end-time="2022-08-11T21:23:28.3311688Z" duration="0.000095" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(true)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(true)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1305" name="function-boolean.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2137563503" result="Passed" start-time="2022-08-11T21:23:28.3311772Z" end-time="2022-08-11T21:23:28.3323720Z" duration="0.001195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(false)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(false)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1306" name="function-boolean.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="604208889" result="Passed" start-time="2022-08-11T21:23:28.3325746Z" end-time="2022-08-11T21:23:28.3330259Z" duration="0.000451" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(0)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(0)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1307" name="function-boolean.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1083519814" result="Passed" start-time="2022-08-11T21:23:28.3330422Z" end-time="2022-08-11T21:23:28.3331445Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(10)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(10)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1308" name="function-boolean.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="682954520" result="Passed" start-time="2022-08-11T21:23:28.3331526Z" end-time="2022-08-11T21:23:28.3332360Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(-0.5)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(-0.5)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1309" name="function-boolean.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2092531237" result="Passed" start-time="2022-08-11T21:23:28.3332453Z" end-time="2022-08-11T21:23:28.3333223Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(null)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(null)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1310" name="function-boolean.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="334305380" result="Passed" start-time="2022-08-11T21:23:28.3337362Z" end-time="2022-08-11T21:23:28.3338693Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1311" name="function-boolean.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1096130065" result="Passed" start-time="2022-08-11T21:23:28.3338792Z" end-time="2022-08-11T21:23:28.3339822Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([0])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([0])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1312" name="function-boolean.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="410078461" result="Passed" start-time="2022-08-11T21:23:28.3339912Z" end-time="2022-08-11T21:23:28.3341687Z" duration="0.000178" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([1])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([1])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1313" name="function-boolean.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1215151701" result="Passed" start-time="2022-08-11T21:23:28.3341799Z" end-time="2022-08-11T21:23:28.3344099Z" duration="0.000230" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([1,2,3])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([1,2,3])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1314" name="function-boolean.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1152428945" result="Passed" start-time="2022-08-11T21:23:28.3344392Z" end-time="2022-08-11T21:23:28.3345261Z" duration="0.000087" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([0,0])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([0,0])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1315" name="function-boolean.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="420225064" result="Passed" start-time="2022-08-11T21:23:28.3345343Z" end-time="2022-08-11T21:23:28.3346104Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[]])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[]])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1316" name="function-boolean.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1061888492" result="Passed" start-time="2022-08-11T21:23:28.3346182Z" end-time="2022-08-11T21:23:28.3347824Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[null]])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[null]])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1317" name="function-boolean.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="611023548" result="Passed" start-time="2022-08-11T21:23:28.3347930Z" end-time="2022-08-11T21:23:28.3402943Z" duration="0.005502" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[[true]]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[[true]]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1318" name="function-boolean.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1607030659" result="Passed" start-time="2022-08-11T21:23:28.3407903Z" end-time="2022-08-11T21:23:28.3411229Z" duration="0.000333" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean({})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean({})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1319" name="function-boolean.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1982536592" result="Passed" start-time="2022-08-11T21:23:28.3411332Z" end-time="2022-08-11T21:23:28.3412250Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean({"hello":"world"})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1320" name="function-boolean.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2140314742" result="Passed" start-time="2022-08-11T21:23:28.3412506Z" end-time="2022-08-11T21:23:28.3414643Z" duration="0.000214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1321" name="function-boolean.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1691701677" result="Passed" start-time="2022-08-11T21:23:28.3414840Z" end-time="2022-08-11T21:23:28.3430353Z" duration="0.001552" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account.Order.Product.Price)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account.Order.Product.Price)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1322" name="function-boolean.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1765813167" result="Passed" start-time="2022-08-11T21:23:28.3441985Z" end-time="2022-08-11T21:23:28.3444831Z" duration="0.000285" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account.blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account.blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1323" name="function-boolean.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1709636383" result="Passed" start-time="2022-08-11T21:23:28.3449049Z" end-time="2022-08-11T21:23:28.3451551Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean($boolean)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean($boolean)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1324" name="function-boolean.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1989696894" result="Passed" start-time="2022-08-11T21:23:28.3451693Z" end-time="2022-08-11T21:23:28.3452744Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(function(){true})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(function(){true})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1325" name="function-boolean.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1534847339" result="Passed" start-time="2022-08-11T21:23:28.3452828Z" end-time="2022-08-11T21:23:28.3467810Z" duration="0.001499" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$boolean(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$boolean(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1326" name="function-ceil.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1252587614" result="Passed" start-time="2022-08-11T21:23:28.3474934Z" end-time="2022-08-11T21:23:28.3482472Z" duration="0.000754" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(3.7)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(3.7)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1327" name="function-ceil.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1276104634" result="Passed" start-time="2022-08-11T21:23:28.3482656Z" end-time="2022-08-11T21:23:28.3486109Z" duration="0.000346" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(-3.7)';&#xA; result: -3" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(-3.7)'
Result: '-3'
Expected: '-3'
]]></output>
                </test-case>
                <test-case id="0-1328" name="function-ceil.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="303354043" result="Passed" start-time="2022-08-11T21:23:28.3486819Z" end-time="2022-08-11T21:23:28.3487700Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1329" name="function-ceil.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1023512718" result="Passed" start-time="2022-08-11T21:23:28.3489173Z" end-time="2022-08-11T21:23:28.3491525Z" duration="0.000235" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1330" name="function-contains.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1388312620" result="Passed" start-time="2022-08-11T21:23:28.3492301Z" end-time="2022-08-11T21:23:28.3498658Z" duration="0.000636" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;lo&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "lo")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1331" name="function-contains.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1982272277" result="Passed" start-time="2022-08-11T21:23:28.3498824Z" end-time="2022-08-11T21:23:28.3499856Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1332" name="function-contains.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="9662798" result="Passed" start-time="2022-08-11T21:23:28.3499950Z" end-time="2022-08-11T21:23:28.3505224Z" duration="0.000528" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;world&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "world")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1333" name="function-contains.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1579844439" result="Passed" start-time="2022-08-11T21:23:28.3505450Z" end-time="2022-08-11T21:23:28.3506334Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;Word&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "Word")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1334" name="function-contains.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="31994614" result="Passed" start-time="2022-08-11T21:23:28.3506419Z" end-time="2022-08-11T21:23:28.3511282Z" duration="0.000487" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(nothing, &quot;World&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$contains(nothing, "World")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1335" name="function-contains.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1727950060" result="Passed" start-time="2022-08-11T21:23:28.3511524Z" end-time="2022-08-11T21:23:28.3523466Z" duration="0.001194" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$contains(23, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$contains(23, 3)'
]]></output>
                </test-case>
                <test-case id="0-1336" name="function-contains.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="134533072" result="Passed" start-time="2022-08-11T21:23:28.3530140Z" end-time="2022-08-11T21:23:28.3543238Z" duration="0.001310" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;23&quot;, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$contains("23", 3)'
]]></output>
                </test-case>
                <test-case id="0-1337" name="function-count.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="665324811" result="Passed" start-time="2022-08-11T21:23:28.3548642Z" end-time="2022-08-11T21:23:28.3552050Z" duration="0.000341" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order.Product.(Price * Quantity))';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order.Product.(Price * Quantity))'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1338" name="function-count.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1876446488" result="Passed" start-time="2022-08-11T21:23:28.3552340Z" end-time="2022-08-11T21:23:28.3563252Z" duration="0.001092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$count(Product.(Price * Quantity))';&#xA; result: [2,2]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$count(Product.(Price * Quantity))'
Result: '[2,2]'
Expected: '[2,2]'
]]></output>
                </test-case>
                <test-case id="0-1339" name="function-count.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="128317747" result="Passed" start-time="2022-08-11T21:23:28.3568572Z" end-time="2022-08-11T21:23:28.3571736Z" duration="0.000316" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $count(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 2&quot;,&quot;order104: 2&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $count(Product.(Price*Quantity)))'
Result: '["order103: 2","order104: 2"]'
Expected: '["order103: 2","order104: 2"]'
]]></output>
                </test-case>
                <test-case id="0-1340" name="function-count.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1441462859" result="Passed" start-time="2022-08-11T21:23:28.3574887Z" end-time="2022-08-11T21:23:28.3575895Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([])';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$count([])'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1341" name="function-count.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1737203170" result="Passed" start-time="2022-08-11T21:23:28.3576034Z" end-time="2022-08-11T21:23:28.3576720Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count([1,2,3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1342" name="function-count.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1269856168" result="Passed" start-time="2022-08-11T21:23:28.3576798Z" end-time="2022-08-11T21:23:28.3581067Z" duration="0.000427" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count(["1","2","3"])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1343" name="function-count.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1855371192" result="Passed" start-time="2022-08-11T21:23:28.3581196Z" end-time="2022-08-11T21:23:28.3581870Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count(["1","2",3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1344" name="function-count.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="301582157" result="Passed" start-time="2022-08-11T21:23:28.3581948Z" end-time="2022-08-11T21:23:28.3585724Z" duration="0.000378" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$count(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1345" name="function-count.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="411073113" result="Passed" start-time="2022-08-11T21:23:28.3585836Z" end-time="2022-08-11T21:23:28.3599650Z" duration="0.001382" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([],[])'
]]></output>
                </test-case>
                <test-case id="0-1346" name="function-count.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="795893536" result="Passed" start-time="2022-08-11T21:23:28.3603604Z" end-time="2022-08-11T21:23:28.3610212Z" duration="0.000661" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1347" name="function-count.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1582551828" result="Passed" start-time="2022-08-11T21:23:28.3610372Z" end-time="2022-08-11T21:23:28.3618236Z" duration="0.000787" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1348" name="function-count.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1488800761" result="Passed" start-time="2022-08-11T21:23:28.3623437Z" end-time="2022-08-11T21:23:28.3632415Z" duration="0.000898" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1349" name="function-count.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="783064525" result="Passed" start-time="2022-08-11T21:23:28.3632641Z" end-time="2022-08-11T21:23:28.3633921Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(undefined)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$count(undefined)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1350" name="function-count.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="442450535" result="Passed" start-time="2022-08-11T21:23:28.3634027Z" end-time="2022-08-11T21:23:28.3638567Z" duration="0.000454" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3,4]) / 2';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$count([1,2,3,4]) / 2'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1351" name="function-decodeUrl.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="408831991" result="Passed" start-time="2022-08-11T21:23:28.3639841Z" end-time="2022-08-11T21:23:28.3646035Z" duration="0.000619" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl(&quot;https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B&quot;)';&#xA; result: &quot;https://mozilla.org/?x=шеллы&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrl("https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B")'
Result: '"https://mozilla.org/?x=шеллы"'
Expected: '"https://mozilla.org/?x=шеллы"'
]]></output>
                </test-case>
                <test-case id="0-1352" name="function-decodeUrl.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1615039983" result="Passed" start-time="2022-08-11T21:23:28.3646231Z" end-time="2022-08-11T21:23:28.3652721Z" duration="0.000649" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrl(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1353" name="function-decodeUrl.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1770232077" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.3653274Z" end-time="2022-08-11T21:23:28.3670484Z" duration="0.001721" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl('%E0%A4%A')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURI throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decodeUrl('%E0%A4%A')'
Result: '"%E0%A4%A"'
]]></output>
                </test-case>
                <test-case id="0-1354" name="function-decodeUrlComponent.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1562159736" result="Passed" start-time="2022-08-11T21:23:28.3676684Z" end-time="2022-08-11T21:23:28.3679733Z" duration="0.000305" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent(&quot;%3Fx%3Dtest&quot;)';&#xA; result: &quot;?x=test&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrlComponent("%3Fx%3Dtest")'
Result: '"?x=test"'
Expected: '"?x=test"'
]]></output>
                </test-case>
                <test-case id="0-1355" name="function-decodeUrlComponent.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="854111589" result="Passed" start-time="2022-08-11T21:23:28.3679905Z" end-time="2022-08-11T21:23:28.3681242Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrlComponent(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1356" name="function-decodeUrlComponent.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="209144719" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.3681348Z" end-time="2022-08-11T21:23:28.3689933Z" duration="0.000859" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent('%E0%A4%A')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURIComponent throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decodeUrlComponent('%E0%A4%A')'
Result: '"%E0%A4%A"'
]]></output>
                </test-case>
                <test-case id="0-1357" name="function-distinct.distinct[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1136240796" result="Passed" start-time="2022-08-11T21:23:28.3690392Z" end-time="2022-08-11T21:23:28.3713450Z" duration="0.002306" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct([1,2,3,4])';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct([1,2,3,4])'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1358" name="function-distinct.distinct[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="623741994" result="Passed" start-time="2022-08-11T21:23:28.3713718Z" end-time="2022-08-11T21:23:28.3720486Z" duration="0.000677" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1359" name="function-distinct.distinct[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="278899244" result="Passed" start-time="2022-08-11T21:23:28.3725422Z" end-time="2022-08-11T21:23:28.3726497Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1360" name="function-distinct.distinct[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="884975889" result="Passed" start-time="2022-08-11T21:23:28.3726862Z" end-time="2022-08-11T21:23:28.3728311Z" duration="0.000145" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(null)';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(null)'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1361" name="function-distinct.distinct[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1475587902" result="Passed" start-time="2022-08-11T21:23:28.3728425Z" end-time="2022-08-11T21:23:28.3731619Z" duration="0.000319" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct('hello')';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct('hello')'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1362" name="function-distinct.distinct[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="780165771" result="Passed" start-time="2022-08-11T21:23:28.3731897Z" end-time="2022-08-11T21:23:28.3733080Z" duration="0.000118" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.SKU)';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.SKU)'
Result: '["0406654608","0406634348","040657863","0406654603"]'
Expected: '["0406654608","0406634348","040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-1363" name="function-distinct.distinct[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1806925449" result="Passed" start-time="2022-08-11T21:23:28.3733162Z" end-time="2022-08-11T21:23:28.3746710Z" duration="0.001355" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.`Product Name`)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.`Product Name`)'
Result: '["Bowler Hat","Trilby hat","Cloak"]'
Expected: '["Bowler Hat","Trilby hat","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-1364" name="function-distinct.distinct[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="704218617" result="Passed" start-time="2022-08-11T21:23:28.3746846Z" end-time="2022-08-11T21:23:28.3748639Z" duration="0.000180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.Description)';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.Description)'
Result: '[{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2}]'
Expected: '[{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2}]'
]]></output>
                </test-case>
                <test-case id="0-1365" name="function-each.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="499516750" result="Passed" start-time="2022-08-11T21:23:28.3749354Z" end-time="2022-08-11T21:23:28.3757752Z" duration="0.000840" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(Address, λ($v, $k) {$k &amp; &quot;: &quot; &amp; $v})';&#xA; result: [&quot;Street: Hursley Park&quot;,&quot;City: Winchester&quot;,&quot;Postcode: SO21 2JN&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each(Address, λ($v, $k) {$k & ": " & $v})'
Result: '["Street: Hursley Park","City: Winchester","Postcode: SO21 2JN"]'
Expected: '["Street: Hursley Park","City: Winchester","Postcode: SO21 2JN"]'
]]></output>
                </test-case>
                <test-case id="0-1366" name="function-each.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1086467267" result="Passed" start-time="2022-08-11T21:23:28.3760049Z" end-time="2022-08-11T21:23:28.3761538Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each({'a': 'hello', 'b': 'world'}, $uppercase)';&#xA; result: [&quot;HELLO&quot;,&quot;WORLD&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each({'a': 'hello', 'b': 'world'}, $uppercase)'
Result: '["HELLO","WORLD"]'
Expected: '["HELLO","WORLD"]'
]]></output>
                </test-case>
                <test-case id="0-1367" name="function-each.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="977717669" result="Passed" start-time="2022-08-11T21:23:28.3764091Z" end-time="2022-08-11T21:23:28.3768170Z" duration="0.000408" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(function($v, $k) {$k[$v&gt;2]})';&#xA; result: [&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each(function($v, $k) {$k[$v>2]})'
Result: '["c","d"]'
Expected: '["c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1368" name="function-encodeUrl.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1183157087" result="Passed" start-time="2022-08-11T21:23:28.3771080Z" end-time="2022-08-11T21:23:28.3779861Z" duration="0.000878" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl(&quot;https://mozilla.org/?x=шеллы&quot;)';&#xA; result: &quot;https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrl("https://mozilla.org/?x=шеллы")'
Result: '"https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B"'
Expected: '"https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B"'
]]></output>
                </test-case>
                <test-case id="0-1369" name="function-encodeUrl.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1571962532" result="Passed" start-time="2022-08-11T21:23:28.3780302Z" end-time="2022-08-11T21:23:28.3781555Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrl(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1370" name="function-encodeUrl.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="285691992" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.3781639Z" end-time="2022-08-11T21:23:28.3786170Z" duration="0.000453" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl('�')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURI throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$encodeUrl('�')'
Result: '"%EF%BF%BD"'
]]></output>
                </test-case>
                <test-case id="0-1371" name="function-encodeUrlComponent.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="396563681" result="Passed" start-time="2022-08-11T21:23:28.3786312Z" end-time="2022-08-11T21:23:28.3788516Z" duration="0.000220" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent(&quot;?x=test&quot;)';&#xA; result: &quot;%3Fx%3Dtest&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrlComponent("?x=test")'
Result: '"%3Fx%3Dtest"'
Expected: '"%3Fx%3Dtest"'
]]></output>
                </test-case>
                <test-case id="0-1372" name="function-encodeUrlComponent.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="882060707" result="Passed" start-time="2022-08-11T21:23:28.3788624Z" end-time="2022-08-11T21:23:28.3789467Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrlComponent(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1373" name="function-encodeUrlComponent.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1478712912" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.3789551Z" end-time="2022-08-11T21:23:28.3792887Z" duration="0.000334" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent('�')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURIComponent throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$encodeUrlComponent('�')'
Result: '"%EF%BF%BD"'
]]></output>
                </test-case>
                <test-case id="0-1374" name="function-error.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="541073733" result="Passed" start-time="2022-08-11T21:23:28.3792987Z" end-time="2022-08-11T21:23:28.3821045Z" duration="0.002807" asserts="2">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 35 ? Account.Order[0].Product[0].Price : $error('Too Expensive')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 35 ? Account.Order[0].Product[0].Price : $error('Too Expensive')'
]]></output>
                </test-case>
                <test-case id="0-1375" name="function-error.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="403111572" result="Passed" start-time="2022-08-11T21:23:28.3821386Z" end-time="2022-08-11T21:23:28.3827273Z" duration="0.000589" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 34 ? Account.Order[0].Product[0].Price : $error('Too Expensive')';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 34 ? Account.Order[0].Product[0].Price : $error('Too Expensive')'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1376" name="function-error.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="421845509" result="Passed" start-time="2022-08-11T21:23:28.3827442Z" end-time="2022-08-11T21:23:28.3831300Z" duration="0.000386" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 35 ? $error('Too Expensive') : Account.Order[0].Product[0].Price';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 35 ? $error('Too Expensive') : Account.Order[0].Product[0].Price'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1377" name="function-error.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2057925622" result="Passed" start-time="2022-08-11T21:23:28.3831759Z" end-time="2022-08-11T21:23:28.3839224Z" duration="0.000747" asserts="2">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 34 ? $error('Too Expensive') : Account.Order[0].Product[0].Price';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 34 ? $error('Too Expensive') : Account.Order[0].Product[0].Price'
]]></output>
                </test-case>
                <test-case id="0-1378" name="function-error.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1408054226" result="Passed" start-time="2022-08-11T21:23:28.3843094Z" end-time="2022-08-11T21:23:28.3846331Z" duration="0.000324" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order[0].Product) &lt; 2 ? $error('Not enough products in orders')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order[0].Product) < 2 ? $error('Not enough products in orders')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1379" name="function-error.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1578623781" result="Passed" start-time="2022-08-11T21:23:28.3847046Z" end-time="2022-08-11T21:23:28.3856392Z" duration="0.000935" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order[0].Product) &lt; 3 ? $error('Not enough products in orders')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order[0].Product) < 3 ? $error('Not enough products in orders')'
]]></output>
                </test-case>
                <test-case id="0-1380" name="function-error.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="738953803" result="Passed" start-time="2022-08-11T21:23:28.3870734Z" end-time="2022-08-11T21:23:28.3878873Z" duration="0.000814" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '($msg:='My Message'; $error($msg); true)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '($msg:='My Message'; $error($msg); true)'
]]></output>
                </test-case>
                <test-case id="0-1381" name="function-error.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1817519433" result="Passed" start-time="2022-08-11T21:23:28.3879066Z" end-time="2022-08-11T21:23:28.3895832Z" duration="0.001677" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$error(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$error(null)'
]]></output>
                </test-case>
                <test-case id="0-1382" name="function-error.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1934787520" result="Passed" start-time="2022-08-11T21:23:28.3896088Z" end-time="2022-08-11T21:23:28.3903886Z" duration="0.000780" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$error(5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$error(5)'
]]></output>
                </test-case>
                <test-case id="0-1383" name="function-error.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1667773165" result="Passed" start-time="2022-08-11T21:23:28.3904169Z" end-time="2022-08-11T21:23:28.3909784Z" duration="0.000562" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$error()';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$error()'
]]></output>
                </test-case>
                <test-case id="0-1384" name="function-error.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="581062183" result="Passed" start-time="2022-08-11T21:23:28.3909932Z" end-time="2022-08-11T21:23:28.3922798Z" duration="0.001287" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$error(foo)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$error(foo)'
]]></output>
                </test-case>
                <test-case id="0-1385" name="function-eval.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="979480629" result="Passed" start-time="2022-08-11T21:23:28.3927564Z" end-time="2022-08-11T21:23:28.3936424Z" duration="0.000886" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,2,3]')';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$eval('[1,2,3]')'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1386" name="function-eval.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="367232294" result="Passed" start-time="2022-08-11T21:23:28.3936635Z" end-time="2022-08-11T21:23:28.3940234Z" duration="0.000360" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$eval(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1387" name="function-eval.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="386914368" result="Passed" start-time="2022-08-11T21:23:28.3943868Z" end-time="2022-08-11T21:23:28.3946839Z" duration="0.000297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,$string(2),3]')';&#xA; result: [1,&quot;2&quot;,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$eval('[1,$string(2),3]')'
Result: '[1,"2",3]'
Expected: '[1,"2",3]'
]]></output>
                </test-case>
                <test-case id="0-1388" name="function-eval.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="17684703" result="Passed" start-time="2022-08-11T21:23:28.3946996Z" end-time="2022-08-11T21:23:28.3951557Z" duration="0.000456" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval('Account.Order.Product.Quantity ~&gt; $sum()')';&#xA; result: 8" />
                  </properties>
                  <output><![CDATA[Expr is '$eval('Account.Order.Product.Quantity ~> $sum()')'
Result: '8'
Expected: '8'
]]></output>
                </test-case>
                <test-case id="0-1389" name="function-eval.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1325366672" result="Passed" start-time="2022-08-11T21:23:28.3951702Z" end-time="2022-08-11T21:23:28.3959140Z" duration="0.000744" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{'Name': `Product Name`, 'Total': $eval('Price * Quantity')}';&#xA; result: [{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Total&quot;:68.9},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;Total&quot;:21.67},{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Total&quot;:137.8},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;Total&quot;:107.99}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{'Name': `Product Name`, 'Total': $eval('Price * Quantity')}'
Result: '[{"Name":"Bowler Hat","Total":68.9},{"Name":"Trilby hat","Total":21.67},{"Name":"Bowler Hat","Total":137.8},{"Name":"Cloak","Total":107.99}]'
Expected: '[{"Name":"Bowler Hat","Total":68.9},{"Name":"Trilby hat","Total":21.67},{"Name":"Bowler Hat","Total":137.8},{"Name":"Cloak","Total":107.99}]'
]]></output>
                </test-case>
                <test-case id="0-1390" name="function-eval.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1518805341" result="Passed" start-time="2022-08-11T21:23:28.3959318Z" end-time="2022-08-11T21:23:28.3971782Z" duration="0.001246" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{'Name': `Product Name`, 'Volume': $eval('Width*Height*Depth', Description)}';&#xA; result: [{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;Volume&quot;:126000}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{'Name': `Product Name`, 'Volume': $eval('Width*Height*Depth', Description)}'
Result: '[{"Name":"Bowler Hat","Volume":12600000},{"Name":"Trilby hat","Volume":12600000},{"Name":"Bowler Hat","Volume":12600000},{"Name":"Cloak","Volume":126000}]'
Expected: '[{"Name":"Bowler Hat","Volume":12600000},{"Name":"Trilby hat","Volume":12600000},{"Name":"Bowler Hat","Volume":12600000},{"Name":"Cloak","Volume":126000}]'
]]></output>
                </test-case>
                <test-case id="0-1391" name="function-eval.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1145775923" result="Passed" start-time="2022-08-11T21:23:28.3979689Z" end-time="2022-08-11T21:23:28.3994511Z" duration="0.001482" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,string(2),3]')';&#xA; result: error D3121" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3121]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$eval('[1,string(2),3]')'
]]></output>
                </test-case>
                <test-case id="0-1392" name="function-eval.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="41582817" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.3994758Z" end-time="2022-08-11T21:23:28.4016659Z" duration="0.002190" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,#string(2),3]')';&#xA; result: error D3120" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'eval': Not supported yet: #
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$eval('[1,#string(2),3]')'
]]></output>
                </test-case>
                <test-case id="0-1393" name="function-eval.case008[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1597547244" result="Passed" start-time="2022-08-11T21:23:28.4025033Z" end-time="2022-08-11T21:23:28.4028251Z" duration="0.000322" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;, [])';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }", [])'
Result: '{"test":1}'
Expected: '{"test":1}'
]]></output>
                </test-case>
                <test-case id="0-1394" name="function-eval.case008[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1390825505" result="Passed" start-time="2022-08-11T21:23:28.4032683Z" end-time="2022-08-11T21:23:28.4035556Z" duration="0.000287" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;)';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }")'
Result: '{"test":1}'
Expected: '{"test":1}'
]]></output>
                </test-case>
                <test-case id="0-1395" name="function-eval.case008[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2113358604" result="Passed" start-time="2022-08-11T21:23:28.4036094Z" end-time="2022-08-11T21:23:28.4038258Z" duration="0.000217" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;, [1,2,3])';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }", [1,2,3])'
Result: '{"test":1}'
Expected: '{"test":1}'
]]></output>
                </test-case>
                <test-case id="0-1396" name="function-eval.case008[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="957037399" result="Passed" start-time="2022-08-11T21:23:28.4038856Z" end-time="2022-08-11T21:23:28.4041485Z" duration="0.000263" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;)';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }")'
Result: '{"test":1}'
Expected: '{"test":1}'
]]></output>
                </test-case>
                <test-case id="0-1397" name="function-exists.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1610414366" result="Passed" start-time="2022-08-11T21:23:28.4041612Z" end-time="2022-08-11T21:23:28.4045941Z" duration="0.000433" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(&quot;Hello World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists("Hello World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1398" name="function-exists.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1151152575" result="Passed" start-time="2022-08-11T21:23:28.4046140Z" end-time="2022-08-11T21:23:28.4047483Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(&quot;&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists("")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1399" name="function-exists.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1949549054" result="Passed" start-time="2022-08-11T21:23:28.4047583Z" end-time="2022-08-11T21:23:28.4050025Z" duration="0.000244" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(true)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(true)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1400" name="function-exists.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1472089493" result="Passed" start-time="2022-08-11T21:23:28.4050131Z" end-time="2022-08-11T21:23:28.4051356Z" duration="0.000123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(false)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(false)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1401" name="function-exists.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1965659514" result="Passed" start-time="2022-08-11T21:23:28.4051450Z" end-time="2022-08-11T21:23:28.4053382Z" duration="0.000193" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(0)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(0)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1402" name="function-exists.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="399394741" result="Passed" start-time="2022-08-11T21:23:28.4053780Z" end-time="2022-08-11T21:23:28.4056114Z" duration="0.000234" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(-0.5)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(-0.5)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1403" name="function-exists.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2064321876" result="Passed" start-time="2022-08-11T21:23:28.4056292Z" end-time="2022-08-11T21:23:28.4057475Z" duration="0.000118" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(null)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(null)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1404" name="function-exists.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="497372533" result="Passed" start-time="2022-08-11T21:23:28.4057575Z" end-time="2022-08-11T21:23:28.4059483Z" duration="0.000191" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1405" name="function-exists.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="45886854" result="Passed" start-time="2022-08-11T21:23:28.4059582Z" end-time="2022-08-11T21:23:28.4083554Z" duration="0.002397" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([0])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([0])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1406" name="function-exists.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674254931" result="Passed" start-time="2022-08-11T21:23:28.4083798Z" end-time="2022-08-11T21:23:28.4089621Z" duration="0.000583" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([1,2,3])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([1,2,3])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1407" name="function-exists.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="136327071" result="Passed" start-time="2022-08-11T21:23:28.4090122Z" end-time="2022-08-11T21:23:28.4095007Z" duration="0.000489" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1408" name="function-exists.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1229158344" result="Passed" start-time="2022-08-11T21:23:28.4099815Z" end-time="2022-08-11T21:23:28.4102768Z" duration="0.000295" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[null]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[null]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1409" name="function-exists.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1159048164" result="Passed" start-time="2022-08-11T21:23:28.4105614Z" end-time="2022-08-11T21:23:28.4108247Z" duration="0.000263" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[[true]]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[[true]]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1410" name="function-exists.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="432266080" result="Passed" start-time="2022-08-11T21:23:28.4111096Z" end-time="2022-08-11T21:23:28.4113686Z" duration="0.000259" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists({})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists({})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1411" name="function-exists.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="298702744" result="Passed" start-time="2022-08-11T21:23:28.4115090Z" end-time="2022-08-11T21:23:28.4117348Z" duration="0.000226" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists({"hello":"world"})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1412" name="function-exists.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1875670217" result="Passed" start-time="2022-08-11T21:23:28.4117472Z" end-time="2022-08-11T21:23:28.4120554Z" duration="0.000309" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1413" name="function-exists.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1192601860" result="Passed" start-time="2022-08-11T21:23:28.4120681Z" end-time="2022-08-11T21:23:28.4123361Z" duration="0.000268" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order.Product.Price)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order.Product.Price)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1414" name="function-exists.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1687429088" result="Passed" start-time="2022-08-11T21:23:28.4123552Z" end-time="2022-08-11T21:23:28.4126553Z" duration="0.000300" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists($exists)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists($exists)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1415" name="function-exists.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1214940103" result="Passed" start-time="2022-08-11T21:23:28.4126677Z" end-time="2022-08-11T21:23:28.4131024Z" duration="0.000435" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(function(){true})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(function(){true})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1416" name="function-exists.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1688284029" result="Passed" start-time="2022-08-11T21:23:28.4131474Z" end-time="2022-08-11T21:23:28.4132440Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1417" name="function-exists.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1259876253" result="Passed" start-time="2022-08-11T21:23:28.4132527Z" end-time="2022-08-11T21:23:28.4148227Z" duration="0.001570" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1418" name="function-exists.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1225863266" result="Passed" start-time="2022-08-11T21:23:28.4152876Z" end-time="2022-08-11T21:23:28.4155469Z" duration="0.000259" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order[2])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order[2])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1419" name="function-exists.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1872221635" result="Passed" start-time="2022-08-11T21:23:28.4158111Z" end-time="2022-08-11T21:23:28.4159874Z" duration="0.000176" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order[0].blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order[0].blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1420" name="function-exists.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="132284456" result="Passed" start-time="2022-08-11T21:23:28.4160009Z" end-time="2022-08-11T21:23:28.4167801Z" duration="0.000779" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$exists(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$exists(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1421" name="function-exists.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="699552899" result="Passed" start-time="2022-08-11T21:23:28.4168459Z" end-time="2022-08-11T21:23:28.4176766Z" duration="0.000831" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$exists()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$exists()'
]]></output>
                </test-case>
                <test-case id="0-1422" name="function-floor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="960032966" result="Passed" start-time="2022-08-11T21:23:28.4183350Z" end-time="2022-08-11T21:23:28.4188141Z" duration="0.000479" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(3.7)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(3.7)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1423" name="function-floor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2005274062" result="Passed" start-time="2022-08-11T21:23:28.4188313Z" end-time="2022-08-11T21:23:28.4189354Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(-3.7)';&#xA; result: -4" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(-3.7)'
Result: '-4'
Expected: '-4'
]]></output>
                </test-case>
                <test-case id="0-1424" name="function-floor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="53157191" result="Passed" start-time="2022-08-11T21:23:28.4189448Z" end-time="2022-08-11T21:23:28.4190178Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1425" name="function-floor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1287399716" result="Passed" start-time="2022-08-11T21:23:28.4190263Z" end-time="2022-08-11T21:23:28.4190924Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1426" name="function-formatBase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="354980864" result="Passed" start-time="2022-08-11T21:23:28.4191606Z" end-time="2022-08-11T21:23:28.4200454Z" duration="0.000885" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100)';&#xA; result: &quot;100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(100)'
Result: '"100"'
Expected: '"100"'
]]></output>
                </test-case>
                <test-case id="0-1427" name="function-formatBase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1431997110" result="Passed" start-time="2022-08-11T21:23:28.4200608Z" end-time="2022-08-11T21:23:28.4201559Z" duration="0.000095" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1428" name="function-formatBase.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="87887407" result="Passed" start-time="2022-08-11T21:23:28.4201658Z" end-time="2022-08-11T21:23:28.4202425Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 2)';&#xA; result: &quot;1100100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(100, 2)'
Result: '"1100100"'
Expected: '"1100100"'
]]></output>
                </test-case>
                <test-case id="0-1429" name="function-formatBase.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="575198776" result="Passed" start-time="2022-08-11T21:23:28.4202510Z" end-time="2022-08-11T21:23:28.4203198Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(-100, 2)';&#xA; result: &quot;-1100100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(-100, 2)'
Result: '"-1100100"'
Expected: '"-1100100"'
]]></output>
                </test-case>
                <test-case id="0-1430" name="function-formatBase.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1593557820" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4203273Z" end-time="2022-08-11T21:23:28.4224510Z" duration="0.002124" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 36)';&#xA; result: &quot;2s&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatBase': No support for radix=36 in formatBase() yet
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 36)'
]]></output>
                </test-case>
                <test-case id="0-1431" name="function-formatBase.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="958914790" result="Failed" start-time="2022-08-11T21:23:28.4231218Z" end-time="2022-08-11T21:23:28.4385837Z" duration="0.015462" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(99.5, 2.5)';&#xA; result: &quot;1100100&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1100100"', got '"1100011"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatBase(99.5, 2.5)'
Result: '"1100011"'
Expected: '"1100100"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1100100"', got '"1100011"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1432" name="function-formatBase.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="906773047" result="Passed" start-time="2022-08-11T21:23:28.4386184Z" end-time="2022-08-11T21:23:28.4394120Z" duration="0.000794" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 1)';&#xA; result: error D3100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3100]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 1)'
]]></output>
                </test-case>
                <test-case id="0-1433" name="function-formatBase.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1605988819" result="Passed" start-time="2022-08-11T21:23:28.4394589Z" end-time="2022-08-11T21:23:28.4405864Z" duration="0.001128" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 37)';&#xA; result: error D3100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3100]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 37)'
]]></output>
                </test-case>
                <test-case id="0-1434" name="function-formatInteger.formatInteger[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="106534288" result="Passed" start-time="2022-08-11T21:23:28.4406051Z" end-time="2022-08-11T21:23:28.4408596Z" duration="0.000255" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(undefined, '0')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Description: 'should return result object'
Expr is '$formatInteger(undefined, '0')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1435" name="function-formatInteger.formatInteger[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="920777936" result="Passed" start-time="2022-08-11T21:23:28.4408737Z" end-time="2022-08-11T21:23:28.4411602Z" duration="0.000286" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '000')';&#xA; result: &quot;123&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should format a number'
Expr is '$formatInteger(123, '000')'
Result: '"123"'
Expected: '"123"'
]]></output>
                </test-case>
                <test-case id="0-1436" name="function-formatInteger.formatInteger[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1418124692" result="Passed" start-time="2022-08-11T21:23:28.4411744Z" end-time="2022-08-11T21:23:28.4414238Z" duration="0.000249" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '0000')';&#xA; result: &quot;0123&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(123, '0000')'
Result: '"0123"'
Expected: '"0123"'
]]></output>
                </test-case>
                <test-case id="0-1437" name="function-formatInteger.formatInteger[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2017949291" result="Passed" start-time="2022-08-11T21:23:28.4414373Z" end-time="2022-08-11T21:23:28.4417664Z" duration="0.000329" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(-3, '0000')';&#xA; result: &quot;-0003&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(-3, '0000')'
Result: '"-0003"'
Expected: '"-0003"'
]]></output>
                </test-case>
                <test-case id="0-1438" name="function-formatInteger.formatInteger[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1170400632" result="Passed" start-time="2022-08-11T21:23:28.4420676Z" end-time="2022-08-11T21:23:28.4422639Z" duration="0.000196" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '0;c')';&#xA; result: &quot;1234&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '0;c')'
Result: '"1234"'
Expected: '"1234"'
]]></output>
                </test-case>
                <test-case id="0-1439" name="function-formatInteger.formatInteger[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="535175329" result="Passed" start-time="2022-08-11T21:23:28.4425787Z" end-time="2022-08-11T21:23:28.4427405Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '###0')';&#xA; result: &quot;1234&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '###0')'
Result: '"1234"'
Expected: '"1234"'
]]></output>
                </test-case>
                <test-case id="0-1440" name="function-formatInteger.formatInteger[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1452709345" result="Passed" start-time="2022-08-11T21:23:28.4431348Z" end-time="2022-08-11T21:23:28.4433065Z" duration="0.000172" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '###0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(12, '###0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1441" name="function-formatInteger.formatInteger[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="230905223" result="Passed" start-time="2022-08-11T21:23:28.4433192Z" end-time="2022-08-11T21:23:28.4433980Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12.6, '###0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should round down floats'
Expr is '$formatInteger(12.6, '###0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1442" name="function-formatInteger.formatInteger[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1305239671" result="Failed" start-time="2022-08-11T21:23:28.4434064Z" end-time="2022-08-11T21:23:28.4455518Z" duration="0.002146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '000;o')';&#xA; result: &quot;123rd&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"123rd"', got '"123"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format a number'
Expr is '$formatInteger(123, '000;o')'
Result: '"123"'
Expected: '"123rd"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"123rd"', got '"123"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1443" name="function-formatInteger.formatInteger[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1006120186" result="Failed" start-time="2022-08-11T21:23:28.4461891Z" end-time="2022-08-11T21:23:28.4472924Z" duration="0.001103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1, '0;o')';&#xA; result: &quot;1st&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1st"', got '"1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1, '0;o')'
Result: '"1"'
Expected: '"1st"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1st"', got '"1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1444" name="function-formatInteger.formatInteger[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="893100592" result="Failed" start-time="2022-08-11T21:23:28.4473120Z" end-time="2022-08-11T21:23:28.4478678Z" duration="0.000556" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(28, '#0;o')';&#xA; result: &quot;28th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"28th"', got '"28"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(28, '#0;o')'
Result: '"28"'
Expected: '"28th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"28th"', got '"28"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1445" name="function-formatInteger.formatInteger[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1220102597" result="Failed" start-time="2022-08-11T21:23:28.4478838Z" end-time="2022-08-11T21:23:28.4484359Z" duration="0.000552" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '###0;o')';&#xA; result: &quot;1234th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1234th"', got '"1234"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '###0;o')'
Result: '"1234"'
Expected: '"1234th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1234th"', got '"1234"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1446" name="function-formatInteger.formatInteger[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1417589353" result="Failed" start-time="2022-08-11T21:23:28.4484769Z" end-time="2022-08-11T21:23:28.4490381Z" duration="0.000561" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '###0;o')';&#xA; result: &quot;12th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12th"', got '"12"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(12, '###0;o')'
Result: '"12"'
Expected: '"12th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12th"', got '"12"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1447" name="function-formatInteger.formatInteger[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="996464604" result="Failed" start-time="2022-08-11T21:23:28.4490571Z" end-time="2022-08-11T21:23:28.4503899Z" duration="0.001332" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '###١')';&#xA; result: &quot;١٢٣٤٠&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"١٢٣٤٠"', got '"12340١"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12340, '###١')'
Result: '"12340١"'
Expected: '"١٢٣٤٠"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"١٢٣٤٠"', got '"12340١"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1448" name="function-formatInteger.formatInteger[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2057601803" result="Failed" start-time="2022-08-11T21:23:28.4504358Z" end-time="2022-08-11T21:23:28.4523403Z" duration="0.001905" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '###０')';&#xA; result: &quot;１２３４０&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"１２３４０"', got '"12340０"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12340, '###０')'
Result: '"12340０"'
Expected: '"１２３４０"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"１２３４０"', got '"12340０"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1449" name="function-formatInteger.formatInteger[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="175885402" result="Failed" start-time="2022-08-11T21:23:28.4527898Z" end-time="2022-08-11T21:23:28.4540179Z" duration="0.001228" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '##0０')';&#xA; result: error D3131" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3131 (), got '"12340０"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should throw error with mixed integer groups'
Expr is '$formatInteger(12340, '##0０')'
Result: '"12340０"'
Expected error D3131
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3131 (), got '"12340０"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1450" name="function-formatInteger.formatInteger[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="425074575" result="Passed" start-time="2022-08-11T21:23:28.4540414Z" end-time="2022-08-11T21:23:28.4542458Z" duration="0.000204" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '#,##0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12, '#,##0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1451" name="function-formatInteger.formatInteger[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1844644793" result="Passed" start-time="2022-08-11T21:23:28.4542597Z" end-time="2022-08-11T21:23:28.4545160Z" duration="0.000256" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1200, '#,##0')';&#xA; result: &quot;1,200&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1200, '#,##0')'
Result: '"1,200"'
Expected: '"1,200"'
]]></output>
                </test-case>
                <test-case id="0-1452" name="function-formatInteger.formatInteger[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="384551100" result="Passed" start-time="2022-08-11T21:23:28.4547037Z" end-time="2022-08-11T21:23:28.4548528Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(120000, '#,##0')';&#xA; result: &quot;120,000&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(120000, '#,##0')'
Result: '"120,000"'
Expected: '"120,000"'
]]></output>
                </test-case>
                <test-case id="0-1453" name="function-formatInteger.formatInteger[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1426414587" result="Passed" start-time="2022-08-11T21:23:28.4549021Z" end-time="2022-08-11T21:23:28.4550874Z" duration="0.000185" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12345678, '#,##0')';&#xA; result: &quot;12,345,678&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12345678, '#,##0')'
Result: '"12,345,678"'
Expected: '"12,345,678"'
]]></output>
                </test-case>
                <test-case id="0-1454" name="function-formatInteger.formatInteger[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1817264598" result="Passed" start-time="2022-08-11T21:23:28.4550977Z" end-time="2022-08-11T21:23:28.4551731Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#,##0')';&#xA; result: &quot;1,234,567,890&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1234567890, '#,##0')'
Result: '"1,234,567,890"'
Expected: '"1,234,567,890"'
]]></output>
                </test-case>
                <test-case id="0-1455" name="function-formatInteger.formatInteger[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="772536594" result="Passed" start-time="2022-08-11T21:23:28.4551822Z" end-time="2022-08-11T21:23:28.4552501Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#,###,##0')';&#xA; result: &quot;1,234,567,890&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1234567890, '#,###,##0')'
Result: '"1,234,567,890"'
Expected: '"1,234,567,890"'
]]></output>
                </test-case>
                <test-case id="0-1456" name="function-formatInteger.formatInteger[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1005626548" result="Failed" start-time="2022-08-11T21:23:28.4552583Z" end-time="2022-08-11T21:23:28.4589725Z" duration="0.003715" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#:###,##0')';&#xA; result: &quot;1234:567,890&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1234:567,890"', got '"1,234,:567,890"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert non-regular groups - different chars'
Expr is '$formatInteger(1234567890, '#:###,##0')'
Result: '"1,234,:567,890"'
Expected: '"1234:567,890"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1234:567,890"', got '"1,234,:567,890"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1457" name="function-formatInteger.formatInteger[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="541604326" result="Failed" start-time="2022-08-11T21:23:28.4590012Z" end-time="2022-08-11T21:23:28.4617732Z" duration="0.002772" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '##,##,##0')';&#xA; result: &quot;12345,67,890&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12345,67,890"', got '"1,234,567,890"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert non-regular groups - different positions'
Expr is '$formatInteger(1234567890, '##,##,##0')'
Result: '"1,234,567,890"'
Expected: '"12345,67,890"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12345,67,890"', got '"1,234,567,890"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1458" name="function-formatInteger.formatInteger[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2011164685" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4617998Z" end-time="2022-08-11T21:23:28.4628651Z" duration="0.001066" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(0, 'I')';&#xA; result: &quot;&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '0'
Expr is '$formatInteger(0, 'I')'
]]></output>
                </test-case>
                <test-case id="0-1459" name="function-formatInteger.formatInteger[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1357456464" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4628844Z" end-time="2022-08-11T21:23:28.4638121Z" duration="0.000928" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1984, 'I')';&#xA; result: &quot;MCMLXXXIV&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1984'
Expr is '$formatInteger(1984, 'I')'
]]></output>
                </test-case>
                <test-case id="0-1460" name="function-formatInteger.formatInteger[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1838389637" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4638308Z" end-time="2022-08-11T21:23:28.4649619Z" duration="0.001131" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'i')';&#xA; result: &quot;xcix&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'i')'
]]></output>
                </test-case>
                <test-case id="0-1461" name="function-formatInteger.formatInteger[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="242257821" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4650534Z" end-time="2022-08-11T21:23:28.4660217Z" duration="0.000968" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'w')';&#xA; result: &quot;twelve&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1462" name="function-formatInteger.formatInteger[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="48439664" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4664904Z" end-time="2022-08-11T21:23:28.4678913Z" duration="0.001401" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(20, 'w')';&#xA; result: &quot;twenty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$formatInteger(20, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1463" name="function-formatInteger.formatInteger[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="653959568" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4681648Z" end-time="2022-08-11T21:23:28.4701077Z" duration="0.001943" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(34, 'w')';&#xA; result: &quot;thirty-four&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$formatInteger(34, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1464" name="function-formatInteger.formatInteger[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1712973991" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4701593Z" end-time="2022-08-11T21:23:28.4711440Z" duration="0.000985" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'W')';&#xA; result: &quot;NINETY-NINE&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'W')'
]]></output>
                </test-case>
                <test-case id="0-1465" name="function-formatInteger.formatInteger[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1620834937" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4711621Z" end-time="2022-08-11T21:23:28.4721933Z" duration="0.001032" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(100, 'w')';&#xA; result: &quot;one hundred&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$formatInteger(100, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1466" name="function-formatInteger.formatInteger[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1539413344" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4722120Z" end-time="2022-08-11T21:23:28.4731587Z" duration="0.000947" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'W')';&#xA; result: &quot;FIVE HUNDRED AND FIFTY-FIVE&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'W')'
]]></output>
                </test-case>
                <test-case id="0-1467" name="function-formatInteger.formatInteger[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="269681398" result="Failed" start-time="2022-08-11T21:23:28.4731762Z" end-time="2022-08-11T21:23:28.4744603Z" duration="0.001285" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'Ww')';&#xA; result: &quot;Five Hundred and Fifty-Five&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Five Hundred and Fifty-Five"', got '"Ww"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'Ww')'
Result: '"Ww"'
Expected: '"Five Hundred and Fifty-Five"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Five Hundred and Fifty-Five"', got '"Ww"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1468" name="function-formatInteger.formatInteger[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1086067572" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4744800Z" end-time="2022-08-11T21:23:28.4754109Z" duration="0.000931" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(919, 'w')';&#xA; result: &quot;nine hundred and nineteen&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$formatInteger(919, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1469" name="function-formatInteger.formatInteger[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="766651152" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4754278Z" end-time="2022-08-11T21:23:28.4769631Z" duration="0.001536" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(730, 'w')';&#xA; result: &quot;seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$formatInteger(730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1470" name="function-formatInteger.formatInteger[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1944299058" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4777691Z" end-time="2022-08-11T21:23:28.4788350Z" duration="0.001066" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000, 'w')';&#xA; result: &quot;one thousand&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$formatInteger(1000, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1471" name="function-formatInteger.formatInteger[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1817818385" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4788559Z" end-time="2022-08-11T21:23:28.4808610Z" duration="0.002005" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(3730, 'w')';&#xA; result: &quot;three thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$formatInteger(3730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1472" name="function-formatInteger.formatInteger[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="89475621" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4811632Z" end-time="2022-08-11T21:23:28.4830239Z" duration="0.001861" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(327730, 'w')';&#xA; result: &quot;three hundred and twenty-seven thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$formatInteger(327730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1473" name="function-formatInteger.formatInteger[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="690687937" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4830686Z" end-time="2022-08-11T21:23:28.4843802Z" duration="0.001312" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(4327730, 'w')';&#xA; result: &quot;four million, three hundred and twenty-seven thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$formatInteger(4327730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1474" name="function-formatInteger.formatInteger[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="419512290" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4844040Z" end-time="2022-08-11T21:23:28.4855031Z" duration="0.001099" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000001, 'w')';&#xA; result: &quot;one trillion and one&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$formatInteger(1000000000001, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1475" name="function-formatInteger.formatInteger[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2048862880" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4855246Z" end-time="2022-08-11T21:23:28.4865965Z" duration="0.001072" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890123, 'w')';&#xA; result: &quot;one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123'
Expr is '$formatInteger(1234567890123, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1476" name="function-formatInteger.formatInteger[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1541796875" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4866189Z" end-time="2022-08-11T21:23:28.4886752Z" duration="0.002057" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000000000, 'w')';&#xA; result: &quot;one thousand trillion&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e15'
Expr is '$formatInteger(1000000000000000, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1477" name="function-formatInteger.formatInteger[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2101396427" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4888545Z" end-time="2022-08-11T21:23:28.4906226Z" duration="0.001768" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1e+46, 'w')';&#xA; result: &quot;ten billion trillion trillion trillion&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e46'
Expr is '$formatInteger(1e+46, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1478" name="function-formatInteger.formatInteger[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1112173470" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.4906751Z" end-time="2022-08-11T21:23:28.4931362Z" duration="0.002461" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890123456, 'w')';&#xA; result: &quot;one thousand, two hundred and thirty-four trillion, five hundred and sixty-seven billion, eight hundred and ninety million, one hundred and twenty-three thousand, four hundred and fifty-six&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123456'
Expr is '$formatInteger(1234567890123456, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1479" name="function-formatInteger.formatInteger[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="980538241" result="Failed" start-time="2022-08-11T21:23:28.4931894Z" end-time="2022-08-11T21:23:28.4959057Z" duration="0.002717" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'w;o')';&#xA; result: &quot;twelfth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"twelfth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'w;o')'
Result: '"w"'
Expected: '"twelfth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"twelfth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1480" name="function-formatInteger.formatInteger[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2017294010" result="Failed" start-time="2022-08-11T21:23:28.4959549Z" end-time="2022-08-11T21:23:28.4969846Z" duration="0.001030" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(20, 'w;o')';&#xA; result: &quot;twentieth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"twentieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '20'
Expr is '$formatInteger(20, 'w;o')'
Result: '"w"'
Expected: '"twentieth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"twentieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1481" name="function-formatInteger.formatInteger[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1505999907" result="Failed" start-time="2022-08-11T21:23:28.4970033Z" end-time="2022-08-11T21:23:28.4979092Z" duration="0.000906" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(34, 'w;o')';&#xA; result: &quot;thirty-fourth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"thirty-fourth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '34'
Expr is '$formatInteger(34, 'w;o')'
Result: '"w"'
Expected: '"thirty-fourth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"thirty-fourth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1482" name="function-formatInteger.formatInteger[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1521878954" result="Failed" start-time="2022-08-11T21:23:28.4979322Z" end-time="2022-08-11T21:23:28.4989609Z" duration="0.001029" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'W;o')';&#xA; result: &quot;NINETY-NINTH&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"NINETY-NINTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'W;o')'
Result: '"W"'
Expected: '"NINETY-NINTH"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"NINETY-NINTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1483" name="function-formatInteger.formatInteger[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2059485652" result="Failed" start-time="2022-08-11T21:23:28.4989806Z" end-time="2022-08-11T21:23:28.4996915Z" duration="0.000711" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(100, 'w;o')';&#xA; result: &quot;one hundredth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one hundredth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '100'
Expr is '$formatInteger(100, 'w;o')'
Result: '"w"'
Expected: '"one hundredth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one hundredth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1484" name="function-formatInteger.formatInteger[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="150124201" result="Failed" start-time="2022-08-11T21:23:28.4997084Z" end-time="2022-08-11T21:23:28.5005035Z" duration="0.000795" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'W;o')';&#xA; result: &quot;FIVE HUNDRED AND FIFTY-FIFTH&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"FIVE HUNDRED AND FIFTY-FIFTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'W;o')'
Result: '"W"'
Expected: '"FIVE HUNDRED AND FIFTY-FIFTH"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"FIVE HUNDRED AND FIFTY-FIFTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1485" name="function-formatInteger.formatInteger[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1896396674" result="Failed" start-time="2022-08-11T21:23:28.5005358Z" end-time="2022-08-11T21:23:28.5012241Z" duration="0.000688" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(919, 'w;o')';&#xA; result: &quot;nine hundred and nineteenth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"nine hundred and nineteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '919'
Expr is '$formatInteger(919, 'w;o')'
Result: '"w"'
Expected: '"nine hundred and nineteenth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"nine hundred and nineteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1486" name="function-formatInteger.formatInteger[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="574363690" result="Failed" start-time="2022-08-11T21:23:28.5012407Z" end-time="2022-08-11T21:23:28.5019944Z" duration="0.000754" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(730, 'w;o')';&#xA; result: &quot;seven hundred and thirtieth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"seven hundred and thirtieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '730'
Expr is '$formatInteger(730, 'w;o')'
Result: '"w"'
Expected: '"seven hundred and thirtieth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"seven hundred and thirtieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1487" name="function-formatInteger.formatInteger[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1627842107" result="Failed" start-time="2022-08-11T21:23:28.5020307Z" end-time="2022-08-11T21:23:28.5028421Z" duration="0.000811" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000, 'w;o')';&#xA; result: &quot;one thousandth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one thousandth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1000'
Expr is '$formatInteger(1000, 'w;o')'
Result: '"w"'
Expected: '"one thousandth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one thousandth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1488" name="function-formatInteger.formatInteger[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1936207868" result="Failed" start-time="2022-08-11T21:23:28.5028584Z" end-time="2022-08-11T21:23:28.5036577Z" duration="0.000799" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(3731, 'w;o')';&#xA; result: &quot;three thousand, seven hundred and thirty-first&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"three thousand, seven hundred and thirty-first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '3730'
Expr is '$formatInteger(3731, 'w;o')'
Result: '"w"'
Expected: '"three thousand, seven hundred and thirty-first"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"three thousand, seven hundred and thirty-first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1489" name="function-formatInteger.formatInteger[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1481481341" result="Failed" start-time="2022-08-11T21:23:28.5036740Z" end-time="2022-08-11T21:23:28.5041911Z" duration="0.000517" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(327713, 'w;o')';&#xA; result: &quot;three hundred and twenty-seven thousand, seven hundred and thirteenth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"three hundred and twenty-seven thousand, seven hundred and thirteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '327730'
Expr is '$formatInteger(327713, 'w;o')'
Result: '"w"'
Expected: '"three hundred and twenty-seven thousand, seven hundred and thirteenth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"three hundred and twenty-seven thousand, seven hundred and thirteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1490" name="function-formatInteger.formatInteger[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2062635035" result="Failed" start-time="2022-08-11T21:23:28.5042065Z" end-time="2022-08-11T21:23:28.5047351Z" duration="0.000529" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(4327732, 'w;o')';&#xA; result: &quot;four million, three hundred and twenty-seven thousand, seven hundred and thirty-second&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '4327730'
Expr is '$formatInteger(4327732, 'w;o')'
Result: '"w"'
Expected: '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1491" name="function-formatInteger.formatInteger[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="876520366" result="Failed" start-time="2022-08-11T21:23:28.5047837Z" end-time="2022-08-11T21:23:28.5054303Z" duration="0.000647" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000001, 'w;o')';&#xA; result: &quot;one trillion and first&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one trillion and first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$formatInteger(1000000000001, 'w;o')'
Result: '"w"'
Expected: '"one trillion and first"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one trillion and first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1492" name="function-formatInteger.formatInteger[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="6784606" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.5054871Z" end-time="2022-08-11T21:23:28.5062505Z" duration="0.000763" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1, 'A')';&#xA; result: &quot;A&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1'
Expr is '$formatInteger(1, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1493" name="function-formatInteger.formatInteger[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1960427815" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.5062659Z" end-time="2022-08-11T21:23:28.5073333Z" duration="0.001067" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'a')';&#xA; result: &quot;l&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1494" name="function-formatInteger.formatInteger[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="844269339" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.5073523Z" end-time="2022-08-11T21:23:28.5082250Z" duration="0.000873" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(26, 'a')';&#xA; result: &quot;z&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '26'
Expr is '$formatInteger(26, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1495" name="function-formatInteger.formatInteger[62]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[62]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1210451524" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.5082422Z" end-time="2022-08-11T21:23:28.5105079Z" duration="0.002266" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(27, 'a')';&#xA; result: &quot;aa&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '27'
Expr is '$formatInteger(27, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1496" name="function-formatInteger.formatInteger[63]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[63]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="182465559" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.5105631Z" end-time="2022-08-11T21:23:28.5114068Z" duration="0.000844" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(300, 'A')';&#xA; result: &quot;KN&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '300'
Expr is '$formatInteger(300, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1497" name="function-formatInteger.formatInteger[64]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[64]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="651280103" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.5114234Z" end-time="2022-08-11T21:23:28.5123318Z" duration="0.000909" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123456, 'A')';&#xA; result: &quot;FZPH&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '123456'
Expr is '$formatInteger(123456, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1498" name="function-formatInteger.formatInteger[65]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[65]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1440629842" result="Failed" start-time="2022-08-11T21:23:28.5123499Z" end-time="2022-08-11T21:23:28.5157067Z" duration="0.003357" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123456, 'α')';&#xA; result: error D3130" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3130 (), got '"α"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'sequence starting with greek alpha, α'
Expr is '$formatInteger(123456, 'α')'
Result: '"α"'
Expected error D3130
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3130 (), got '"α"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1499" name="function-formatNumber.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1419749302" result="Passed" start-time="2022-08-11T21:23:28.5158099Z" end-time="2022-08-11T21:23:28.5172909Z" duration="0.001482" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(12345.6, &quot;#,###.00&quot;)';&#xA; result: &quot;12,345.60&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(12345.6, "#,###.00")'
Result: '"12,345.60"'
Expected: '"12,345.60"'
]]></output>
                </test-case>
                <test-case id="0-1500" name="function-formatNumber.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1828172900" result="Failed" start-time="2022-08-11T21:23:28.5173175Z" end-time="2022-08-11T21:23:28.5184616Z" duration="0.001144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(12345678.9, &quot;9,999.99&quot;)';&#xA; result: &quot;12,345,678.90&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12,345,678.90"', got '"12345,678.90"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(12345678.9, "9,999.99")'
Result: '"12345,678.90"'
Expected: '"12,345,678.90"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12,345,678.90"', got '"12345,678.90"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1501" name="function-formatNumber.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1147907955" result="Passed" start-time="2022-08-11T21:23:28.5184863Z" end-time="2022-08-11T21:23:28.5193497Z" duration="0.000864" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(123412345678.9, &quot;9,9,99.99&quot;)';&#xA; result: &quot;123412345,6,78.90&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(123412345678.9, "9,9,99.99")'
Result: '"123412345,6,78.90"'
Expected: '"123412345,6,78.90"'
]]></output>
                </test-case>
                <test-case id="0-1502" name="function-formatNumber.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2057880679" result="Passed" start-time="2022-08-11T21:23:28.5200424Z" end-time="2022-08-11T21:23:28.5202785Z" duration="0.000235" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.56789, &quot;9,999.999,999&quot;)';&#xA; result: &quot;1,234.567,890&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.56789, "9,999.999,999")'
Result: '"1,234.567,890"'
Expected: '"1,234.567,890"'
]]></output>
                </test-case>
                <test-case id="0-1503" name="function-formatNumber.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1290950651" result="Passed" start-time="2022-08-11T21:23:28.5202930Z" end-time="2022-08-11T21:23:28.5215072Z" duration="0.001214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(123.9, &quot;9999&quot;)';&#xA; result: &quot;0124&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(123.9, "9999")'
Result: '"0124"'
Expected: '"0124"'
]]></output>
                </test-case>
                <test-case id="0-1504" name="function-formatNumber.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="379069991" result="Passed" start-time="2022-08-11T21:23:28.5221028Z" end-time="2022-08-11T21:23:28.5222918Z" duration="0.000189" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.14, &quot;01%&quot;)';&#xA; result: &quot;14%&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.14, "01%")'
Result: '"14%"'
Expected: '"14%"'
]]></output>
                </test-case>
                <test-case id="0-1505" name="function-formatNumber.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="754739837" result="Passed" start-time="2022-08-11T21:23:28.5223223Z" end-time="2022-08-11T21:23:28.5237537Z" duration="0.001432" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.4857,&quot;###.###‰&quot;)';&#xA; result: &quot;485.7‰&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.4857,"###.###‰")'
Result: '"485.7‰"'
Expected: '"485.7‰"'
]]></output>
                </test-case>
                <test-case id="0-1506" name="function-formatNumber.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1755169172" result="Failed" start-time="2022-08-11T21:23:28.5240327Z" end-time="2022-08-11T21:23:28.5249147Z" duration="0.000882" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.14, &quot;###pm&quot;, {&quot;per-mille&quot;: &quot;pm&quot;})';&#xA; result: &quot;140pm&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"140pm"', got '"pm"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.14, "###pm", {"per-mille": "pm"})'
Result: '"pm"'
Expected: '"140pm"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"140pm"', got '"pm"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1507" name="function-formatNumber.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1841346810" result="Passed" start-time="2022-08-11T21:23:28.5249337Z" end-time="2022-08-11T21:23:28.5250512Z" duration="0.000118" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(-6, &quot;000&quot;)';&#xA; result: &quot;-006&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(-6, "000")'
Result: '"-006"'
Expected: '"-006"'
]]></output>
                </test-case>
                <test-case id="0-1508" name="function-formatNumber.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1006902297" result="Passed" start-time="2022-08-11T21:23:28.5250614Z" end-time="2022-08-11T21:23:28.5251713Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;00.000e0&quot;)';&#xA; result: &quot;12.346e2&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "00.000e0")'
Result: '"12.346e2"'
Expected: '"12.346e2"'
]]></output>
                </test-case>
                <test-case id="0-1509" name="function-formatNumber.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1915885365" result="Passed" start-time="2022-08-11T21:23:28.5251807Z" end-time="2022-08-11T21:23:28.5253123Z" duration="0.000131" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;00.000e000&quot;)';&#xA; result: &quot;12.346e002&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "00.000e000")'
Result: '"12.346e002"'
Expected: '"12.346e002"'
]]></output>
                </test-case>
                <test-case id="0-1510" name="function-formatNumber.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1378223366" result="Failed" start-time="2022-08-11T21:23:28.5253229Z" end-time="2022-08-11T21:23:28.5264992Z" duration="0.001177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;①①.①①①e①&quot;, {&quot;zero-digit&quot;: &quot;⑟&quot;})';&#xA; result: &quot;①②.③④⑥e②&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"①②.③④⑥e②"', got '"①①1235①①①e①"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "①①.①①①e①", {"zero-digit": "⑟"})'
Result: '"①①1235①①①e①"'
Expected: '"①②.③④⑥e②"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"①②.③④⑥e②"', got '"①①1235①①①e①"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1511" name="function-formatNumber.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1051713768" result="Passed" start-time="2022-08-11T21:23:28.5265177Z" end-time="2022-08-11T21:23:28.5266227Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;0.0e0&quot;)';&#xA; result: &quot;2.3e-1&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.234, "0.0e0")'
Result: '"2.3e-1"'
Expected: '"2.3e-1"'
]]></output>
                </test-case>
                <test-case id="0-1512" name="function-formatNumber.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1576914503" result="Failed" start-time="2022-08-11T21:23:28.5266321Z" end-time="2022-08-11T21:23:28.5278417Z" duration="0.001210" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;#.00e0&quot;)';&#xA; result: &quot;0.23e0&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"0.23e0"', got '"2.34e-1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.234, "#.00e0")'
Result: '"2.34e-1"'
Expected: '"0.23e0"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"0.23e0"', got '"2.34e-1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1513" name="function-formatNumber.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1030626444" result="Failed" start-time="2022-08-11T21:23:28.5278622Z" end-time="2022-08-11T21:23:28.5294337Z" duration="0.001572" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.123, &quot;#.e9&quot;)';&#xA; result: &quot;0.1e0&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"0.1e0"', got '"1e-1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.123, "#.e9")'
Result: '"1e-1"'
Expected: '"0.1e0"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"0.1e0"', got '"1e-1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1514" name="function-formatNumber.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1487646101" result="Passed" start-time="2022-08-11T21:23:28.5294515Z" end-time="2022-08-11T21:23:28.5296070Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;.00e0&quot;)';&#xA; result: &quot;.23e0&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.234, ".00e0")'
Result: '".23e0"'
Expected: '".23e0"'
]]></output>
                </test-case>
                <test-case id="0-1515" name="function-formatNumber.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="332389730" result="Passed" start-time="2022-08-11T21:23:28.5296173Z" end-time="2022-08-11T21:23:28.5297604Z" duration="0.000143" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2392.14*(-36.58), &quot;000,000.000###;###,###.000###&quot;)';&#xA; result: &quot;87,504.4812&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2392.14*(-36.58), "000,000.000###;###,###.000###")'
Result: '"87,504.4812"'
Expected: '"87,504.4812"'
]]></output>
                </test-case>
                <test-case id="0-1516" name="function-formatNumber.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="867862514" result="Passed" start-time="2022-08-11T21:23:28.5297700Z" end-time="2022-08-11T21:23:28.5299922Z" duration="0.000222" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2.14*86.58,&quot;PREFIX##00.000###SUFFIX&quot;)';&#xA; result: &quot;PREFIX185.2812SUFFIX&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2.14*86.58,"PREFIX##00.000###SUFFIX")'
Result: '"PREFIX185.2812SUFFIX"'
Expected: '"PREFIX185.2812SUFFIX"'
]]></output>
                </test-case>
                <test-case id="0-1517" name="function-formatNumber.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="136437659" result="Failed" start-time="2022-08-11T21:23:28.5300317Z" end-time="2022-08-11T21:23:28.5309358Z" duration="0.000904" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1E20,&quot;#,######&quot;)';&#xA; result: &quot;100,000000,000000,000000&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"100,000000,000000,000000"', got '"100000000000000,000000"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(1E20,"#,######")'
Result: '"100000000000000,000000"'
Expected: '"100,000000,000000,000000"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"100,000000,000000,000000"', got '"100000000000000,000000"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1518" name="function-formatNumber.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="503835367" result="Failed" start-time="2022-08-11T21:23:28.5309509Z" end-time="2022-08-11T21:23:28.5319833Z" duration="0.001033" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#;#;#&quot;)';&#xA; result: error D3080" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3080 (), got '"20"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#;#;#")'
Result: '"20"'
Expected error D3080
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3080 (), got '"20"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1519" name="function-formatNumber.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1964060964" result="Failed" start-time="2022-08-11T21:23:28.5320005Z" end-time="2022-08-11T21:23:28.5325291Z" duration="0.000529" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#.0.0&quot;)';&#xA; result: error D3081" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3081 (), got '"20.00"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#.0.0")'
Result: '"20.00"'
Expected error D3081
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3081 (), got '"20.00"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1520" name="function-formatNumber.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1046471247" result="Failed" start-time="2022-08-11T21:23:28.5325424Z" end-time="2022-08-11T21:23:28.5330133Z" duration="0.000471" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0%%&quot;)';&#xA; result: error D3082" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3082 (), got '"200000%%"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0%%")'
Result: '"200000%%"'
Expected error D3082
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3082 (), got '"200000%%"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1521" name="function-formatNumber.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2059054884" result="Failed" start-time="2022-08-11T21:23:28.5330257Z" end-time="2022-08-11T21:23:28.5334818Z" duration="0.000456" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0‰‰&quot;)';&#xA; result: error D3083" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3083 (), got '"20000000‰‰"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0‰‰")'
Result: '"20000000‰‰"'
Expected error D3083
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3083 (), got '"20000000‰‰"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1522" name="function-formatNumber.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="480957177" result="Failed" start-time="2022-08-11T21:23:28.5334939Z" end-time="2022-08-11T21:23:28.5340185Z" duration="0.000525" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0%‰&quot;)';&#xA; result: error D3084" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3084 (), got '"2000000%‰"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0%‰")'
Result: '"2000000%‰"'
Expected error D3084
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3084 (), got '"2000000%‰"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1523" name="function-formatNumber.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1752069878" result="Failed" start-time="2022-08-11T21:23:28.5340315Z" end-time="2022-08-11T21:23:28.5346298Z" duration="0.000599" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;.e0&quot;)';&#xA; result: error D3085" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3085 (), got '"e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,".e0")'
Result: '"e0"'
Expected error D3085
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3085 (), got '"e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1524" name="function-formatNumber.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="851499764" result="Failed" start-time="2022-08-11T21:23:28.5346561Z" end-time="2022-08-11T21:23:28.5365752Z" duration="0.001919" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0+.e0&quot;)';&#xA; result: error D3086" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3086 (), got '"2+e1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0+.e0")'
Result: '"2+e1"'
Expected error D3086
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3086 (), got '"2+e1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1525" name="function-formatNumber.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1067778692" result="Failed" start-time="2022-08-11T21:23:28.5376649Z" end-time="2022-08-11T21:23:28.5388259Z" duration="0.001161" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,.e0&quot;)';&#xA; result: error D3087" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3087 (), got '"2,e1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,.e0")'
Result: '"2,e1"'
Expected error D3087
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3087 (), got '"2,e1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1526" name="function-formatNumber.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1811033779" result="Failed" start-time="2022-08-11T21:23:28.5388464Z" end-time="2022-08-11T21:23:28.5399643Z" duration="0.001118" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,&quot;)';&#xA; result: error D3088" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3088 (), got '"20,"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,")'
Result: '"20,"'
Expected error D3088
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3088 (), got '"20,"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1527" name="function-formatNumber.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="276531453" result="Failed" start-time="2022-08-11T21:23:28.5399839Z" end-time="2022-08-11T21:23:28.5411995Z" duration="0.001215" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,,0&quot;)';&#xA; result: error D3089" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3089 (), got '"2,,0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,,0")'
Result: '"2,,0"'
Expected error D3089
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3089 (), got '"2,,0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1528" name="function-formatNumber.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1993902245" result="Failed" start-time="2022-08-11T21:23:28.5412179Z" end-time="2022-08-11T21:23:28.5419216Z" duration="0.000704" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0#.e0&quot;)';&#xA; result: error D3090" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3090 (), got '"20e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0#.e0")'
Result: '"20e0"'
Expected error D3090
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3090 (), got '"20e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1529" name="function-formatNumber.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1356544413" result="Failed" start-time="2022-08-11T21:23:28.5419557Z" end-time="2022-08-11T21:23:28.5427958Z" duration="0.000840" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.#0e0&quot;)';&#xA; result: error D3091" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3091 (), got '"20.00e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.#0e0")'
Result: '"20.00e0"'
Expected error D3091
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3091 (), got '"20.00e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1530" name="function-formatNumber.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1866397321" result="Failed" start-time="2022-08-11T21:23:28.5428133Z" end-time="2022-08-11T21:23:28.5438536Z" duration="0.001041" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.0e0%&quot;)';&#xA; result: error D3092" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3092 (), got '"20.0e2%"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.0e0%")'
Result: '"20.0e2%"'
Expected error D3092
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3092 (), got '"20.0e2%"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1531" name="function-formatNumber.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="890516772" result="Failed" start-time="2022-08-11T21:23:28.5438738Z" end-time="2022-08-11T21:23:28.5455181Z" duration="0.001645" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.0e0,0&quot;)';&#xA; result: error D3093" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3093 (), got '"20.0e0,0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.0e0,0")'
Result: '"20.0e0,0"'
Expected error D3093
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3093 (), got '"20.0e0,0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1532" name="function-formatNumber.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="660766585" result="Passed" start-time="2022-08-11T21:23:28.5455480Z" end-time="2022-08-11T21:23:28.5457161Z" duration="0.000168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2, '000.000')';&#xA; result: &quot;002.000&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2, '000.000')'
Result: '"002.000"'
Expected: '"002.000"'
]]></output>
                </test-case>
                <test-case id="0-1533" name="function-formatNumber.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1839907815" result="Failed" start-time="2022-08-11T21:23:28.5457276Z" end-time="2022-08-11T21:23:28.5470812Z" duration="0.001354" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2, 'AAA.AAA', {'zero-digit': 'A'})';&#xA; result: &quot;AAC.AAA&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"AAC.AAA"', got '"AAA2AAA"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(2, 'AAA.AAA', {'zero-digit': 'A'})'
Result: '"AAA2AAA"'
Expected: '"AAC.AAA"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"AAC.AAA"', got '"AAA2AAA"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1534" name="function-formatNumber.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1299848988" result="Failed" start-time="2022-08-11T21:23:28.5471011Z" end-time="2022-08-11T21:23:28.5487463Z" duration="0.001645" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.1, 'AeAAA', {'zero-digit': 'A'})';&#xA; result: &quot;Be-AAB&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Be-AAB"', got '"AeAAA"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.1, 'AeAAA', {'zero-digit': 'A'})'
Result: '"AeAAA"'
Expected: '"Be-AAB"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Be-AAB"', got '"AeAAA"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1535" name="function-formatNumber.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="869386055" result="Passed" start-time="2022-08-11T21:23:28.5491369Z" end-time="2022-08-11T21:23:28.5492592Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(foo, '#0.00')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(foo, '#0.00')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1536" name="function-fromMillis.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1595602875" result="Failed" start-time="2022-08-11T21:23:28.5492727Z" end-time="2022-08-11T21:23:28.5512631Z" duration="0.001991" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1)';&#xA; result: &quot;1970-01-01T00:00:00.001Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1970-01-01T00:00:00.001Z"', got '"1970-01-01T00:00:00.001+00:00"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$fromMillis(1)'
Result: '"1970-01-01T00:00:00.001+00:00"'
Expected: '"1970-01-01T00:00:00.001Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1970-01-01T00:00:00.001Z"', got '"1970-01-01T00:00:00.001+00:00"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1537" name="function-fromMillis.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="230928303" result="Failed" start-time="2022-08-11T21:23:28.5512936Z" end-time="2022-08-11T21:23:28.5521110Z" duration="0.000818" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1509380732935)';&#xA; result: &quot;2017-10-30T16:25:32.935Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2017-10-30T16:25:32.935Z"', got '"2017-10-30T16:25:32.935+00:00"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$fromMillis(1509380732935)'
Result: '"2017-10-30T16:25:32.935+00:00"'
Expected: '"2017-10-30T16:25:32.935Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2017-10-30T16:25:32.935Z"', got '"2017-10-30T16:25:32.935+00:00"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1538" name="function-fromMillis.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1680415661" result="Passed" start-time="2022-08-11T21:23:28.5521276Z" end-time="2022-08-11T21:23:28.5522396Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(foo)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$fromMillis(foo)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1539" name="function-fromMillis.formatDateTime[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1542868011" result="Passed" start-time="2022-08-11T21:23:28.5522487Z" end-time="2022-08-11T21:23:28.5523700Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(undefined, 'undefined')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Description: 'should return nothing'
Expr is '$fromMillis(undefined, 'undefined')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1540" name="function-fromMillis.formatDateTime[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="141227502" result="Failed" start-time="2022-08-11T21:23:28.5523791Z" end-time="2022-08-11T21:23:28.5533985Z" duration="0.001020" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Hello')';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Hello"', got '"10ello"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, 'Hello')'
Result: '"10ello"'
Expected: '"Hello"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Hello"', got '"10ello"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1541" name="function-fromMillis.formatDateTime[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="880500527" result="Failed" start-time="2022-08-11T21:23:28.5534151Z" end-time="2022-08-11T21:23:28.5548248Z" duration="0.001410" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: [Y0001]')';&#xA; result: &quot;Year: 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Year: 2018"', got '"Year: [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year'
Expr is '$fromMillis(1521801216617, 'Year: [Y0001]')'
Result: '"Year: [Y0001]"'
Expected: '"Year: 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Year: 2018"', got '"Year: [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1542" name="function-fromMillis.formatDateTime[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="620939810" result="Failed" start-time="2022-08-11T21:23:28.5548417Z" end-time="2022-08-11T21:23:28.5554117Z" duration="0.000570" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: &lt;[Y0001]&gt;')';&#xA; result: &quot;Year: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Year: <2018>"', got '"Year: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year'
Expr is '$fromMillis(1521801216617, 'Year: <[Y0001]>')'
Result: '"Year: <[Y0001]>"'
Expected: '"Year: <2018>"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Year: <2018>"', got '"Year: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1543" name="function-fromMillis.formatDateTime[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="20322503" result="Failed" start-time="2022-08-11T21:23:28.5554265Z" end-time="2022-08-11T21:23:28.5559843Z" duration="0.000558" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: &lt;[Y9,999,*]&gt;')';&#xA; result: &quot;Year: &lt;2,018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Year: <2,018>"', got '"Year: <[Y9,999,*]>"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year with grouping separator'
Expr is '$fromMillis(1521801216617, 'Year: <[Y9,999,*]>')'
Result: '"Year: <[Y9,999,*]>"'
Expected: '"Year: <2,018>"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Year: <2,018>"', got '"Year: <[Y9,999,*]>"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1544" name="function-fromMillis.formatDateTime[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="103257975" result="Failed" start-time="2022-08-11T21:23:28.5559997Z" end-time="2022-08-11T21:23:28.5568797Z" duration="0.000880" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[[Year: &lt;[Y0001]&gt;')';&#xA; result: &quot;[Year: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"[Year: <2018>"', got '"[[Year: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle opening square bracket literal'
Expr is '$fromMillis(1521801216617, '[[Year: <[Y0001]>')'
Result: '"[[Year: <[Y0001]>"'
Expected: '"[Year: <2018>"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"[Year: <2018>"', got '"[[Year: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1545" name="function-fromMillis.formatDateTime[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1010921267" result="Failed" start-time="2022-08-11T21:23:28.5569032Z" end-time="2022-08-11T21:23:28.5581170Z" duration="0.001214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year]]: &lt;[Y0001]&gt;')';&#xA; result: &quot;Year]: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Year]: <2018>"', got '"Year]]: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle closing square bracket literal'
Expr is '$fromMillis(1521801216617, 'Year]]: <[Y0001]>')'
Result: '"Year]]: <[Y0001]>"'
Expected: '"Year]: <2018>"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Year]: <2018>"', got '"Year]]: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1546" name="function-fromMillis.formatDateTime[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1447089510" result="Failed" start-time="2022-08-11T21:23:28.5581575Z" end-time="2022-08-11T21:23:28.5597103Z" duration="0.001553" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[[Year]]: [[[Y0001]]]')';&#xA; result: &quot;[Year]: [2018]&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"[Year]: [2018]"', got '"[[Year]]: [[[Y0001]]]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle opening and closing square bracket literal'
Expr is '$fromMillis(1521801216617, '[[Year]]: [[[Y0001]]]')'
Result: '"[[Year]]: [[[Y0001]]]"'
Expected: '"[Year]: [2018]"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"[Year]: [2018]"', got '"[[Year]]: [[[Y0001]]]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1547" name="function-fromMillis.formatDateTime[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1123641809" result="Failed" start-time="2022-08-11T21:23:28.5597402Z" end-time="2022-08-11T21:23:28.5606527Z" duration="0.000913" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1]/[M#1]/[Y0001]')';&#xA; result: &quot;23/3/2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/3/2018"', got '"[D#1].[3#1].[Y0001]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date in European style'
Expr is '$fromMillis(1521801216617, '[D#1]/[M#1]/[Y0001]')'
Result: '"[D#1].[3#1].[Y0001]"'
Expected: '"23/3/2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/3/2018"', got '"[D#1].[3#1].[Y0001]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1548" name="function-fromMillis.formatDateTime[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="472781714" result="Failed" start-time="2022-08-11T21:23:28.5606697Z" end-time="2022-08-11T21:23:28.5612212Z" duration="0.000552" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1522616700000, '[F0] [FNn]')';&#xA; result: &quot;7 Sunday&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"7 Sunday"', got '"[0] [Nn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday should be day 7'
Expr is '$fromMillis(1522616700000, '[F0] [FNn]')'
Result: '"[0] [Nn]"'
Expected: '"7 Sunday"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"7 Sunday"', got '"[0] [Nn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1549" name="function-fromMillis.formatDateTime[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="511879609" result="Failed" start-time="2022-08-11T21:23:28.5612526Z" end-time="2022-08-11T21:23:28.5619991Z" duration="0.000746" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1522703100000, '[F0] [FNn]')';&#xA; result: &quot;1 Monday&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1 Monday"', got '"[0] [Nn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Monday should be day 1'
Expr is '$fromMillis(1522703100000, '[F0] [FNn]')'
Result: '"[0] [Nn]"'
Expected: '"1 Monday"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1 Monday"', got '"[0] [Nn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1550" name="function-fromMillis.formatDateTime[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="342589010" result="Failed" start-time="2022-08-11T21:23:28.5620616Z" end-time="2022-08-11T21:23:28.5629714Z" duration="0.000910" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y0001]-[M01]-[D01]')';&#xA; result: &quot;2018-03-23&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-03-23"', got '"[Y0001]-[301]-[D01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date in ISO 8601 style'
Expr is '$fromMillis(1521801216617, '[Y0001]-[M01]-[D01]')'
Result: '"[Y0001]-[301]-[D01]"'
Expected: '"2018-03-23"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-03-23"', got '"[Y0001]-[301]-[D01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1551" name="function-fromMillis.formatDateTime[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="46027900" result="Failed" start-time="2022-08-11T21:23:28.5630270Z" end-time="2022-08-11T21:23:28.5636353Z" duration="0.000609" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]')';&#xA; result: &quot;03/23/2018 at 10:33:36&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"03/23/2018 at 10:33:36"', got '"[301].[D01].[Y0001] a [1001]:[3301]:[3601]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date & time in US style'
Expr is '$fromMillis(1521801216617, '[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]')'
Result: '"[301].[D01].[Y0001] a [1001]:[3301]:[3601]"'
Expected: '"03/23/2018 at 10:33:36"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"03/23/2018 at 10:33:36"', got '"[301].[D01].[Y0001] a [1001]:[3301]:[3601]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1552" name="function-fromMillis.formatDateTime[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="147444736" result="Failed" start-time="2022-08-11T21:23:28.5636574Z" end-time="2022-08-11T21:23:28.5641567Z" duration="0.000500" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z01:01t]')';&#xA; result: &quot;2018-03-23T10:33:36.617Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-03-23T10:33:36.617Z"', got '"[Y]-[301]-[D01]T[1001]:[33]:[36].[6001][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date & time in ISO 8601 style'
Expr is '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z01:01t]')'
Result: '"[Y]-[301]-[D01]T[1001]:[33]:[36].[6001][Z01:01]"'
Expected: '"2018-03-23T10:33:36.617Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-03-23T10:33:36.617Z"', got '"[Y]-[301]-[D01]T[1001]:[33]:[36].[6001][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1553" name="function-fromMillis.formatDateTime[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1624052525" result="Failed" start-time="2022-08-11T21:23:28.5641702Z" end-time="2022-08-11T21:23:28.5646831Z" duration="0.000513" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[ M01]-[D 01]T[H01 ]:[ m   ]:[s].[f0  01][Z01:&#xA; 01t]')';&#xA; result: &quot;2018-03-23T10:33:36.617Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-03-23T10:33:36.617Z"', got '"[Y]-[ 301]-[D 01]T[1001 ]:[ 33   ]:[36].[60  01][Z01:\n 01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should ignore whitespace in variable markers'
Expr is '$fromMillis(1521801216617, '[Y]-[ M01]-[D 01]T[H01 ]:[ m   ]:[s].[f0  01][Z01:
 01t]')'
Result: '"[Y]-[ 301]-[D 01]T[1001 ]:[ 33   ]:[36].[60  01][Z01:\n 01]"'
Expected: '"2018-03-23T10:33:36.617Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-03-23T10:33:36.617Z"', got '"[Y]-[ 301]-[D 01]T[1001 ]:[ 33   ]:[36].[60  01][Z01:\n 01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1554" name="function-fromMillis.formatDateTime[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="373278055" result="Failed" start-time="2022-08-11T21:23:28.5646970Z" end-time="2022-08-11T21:23:28.5652289Z" duration="0.000532" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0100')';&#xA; result: &quot;2018-03-23T13:33:36.617+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-03-23T13:33:36.617+03:00"', got '"[Y]-[301]-[D01]T[1101]:[33]:[36].[6001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for BST +0100'
Expr is '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0100')'
Result: '"[Y]-[301]-[D01]T[1101]:[33]:[36].[6001][Z0101]"'
Expected: '"2018-03-23T13:33:36.617+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-03-23T13:33:36.617+03:00"', got '"[Y]-[301]-[D01]T[1101]:[33]:[36].[6001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1555" name="function-fromMillis.formatDateTime[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1916601663" result="Failed" start-time="2022-08-11T21:23:28.5652422Z" end-time="2022-08-11T21:23:28.5663485Z" duration="0.001107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01]')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01]')'
Result: '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
Expected: '"2018-07-11T15:00:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1556" name="function-fromMillis.formatDateTime[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="666950778" result="Failed" start-time="2022-08-11T21:23:28.5663830Z" end-time="2022-08-11T21:23:28.5673855Z" duration="0.001003" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01t]')';&#xA; result: &quot;2018-07-11T12:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T12:00:00Z"', got '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for Z'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01t]')'
Result: '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
Expected: '"2018-07-11T12:00:00Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T12:00:00Z"', got '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1557" name="function-fromMillis.formatDateTime[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="305810801" result="Failed" start-time="2022-08-11T21:23:28.5674045Z" end-time="2022-08-11T21:23:28.5684127Z" duration="0.001008" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '-0500')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][Z]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '-0500')'
Result: '"[Y]-[701]-[D01]T[701]:[0]:[0][Z]"'
Expected: '"2018-07-11T15:00:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][Z]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1558" name="function-fromMillis.formatDateTime[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="439450887" result="Failed" start-time="2022-08-11T21:23:28.5684399Z" end-time="2022-08-11T21:23:28.5691580Z" duration="0.000718" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '-0500')';&#xA; result: &quot;2018-07-11T07:00:00-5&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T07:00:00-5"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '-0500')'
Result: '"[Y]-[701]-[D01]T[701]:[0]:[0][Z0]"'
Expected: '"2018-07-11T07:00:00-5"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T07:00:00-5"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1559" name="function-fromMillis.formatDateTime[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1458774946" result="Failed" start-time="2022-08-11T21:23:28.5691749Z" end-time="2022-08-11T21:23:28.5701814Z" duration="0.001006" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '+1000')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '+1000')'
Result: '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z]"'
Expected: '"2018-07-11T15:00:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1560" name="function-fromMillis.formatDateTime[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1091189705" result="Failed" start-time="2022-08-11T21:23:28.5701980Z" end-time="2022-08-11T21:23:28.5719259Z" duration="0.001728" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+1000')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+1000')'
Result: '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z0]"'
Expected: '"2018-07-11T15:00:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1561" name="function-fromMillis.formatDateTime[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1478637719" result="Failed" start-time="2022-08-11T21:23:28.5719570Z" end-time="2022-08-11T21:23:28.5729305Z" duration="0.000974" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+0530')';&#xA; result: &quot;2018-07-11T17:30:00+5:30&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T17:30:00+5:30"', got '"[Y]-[701]-[D01]T[1701]:[30]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+0530')'
Result: '"[Y]-[701]-[D01]T[1701]:[30]:[0][Z0]"'
Expected: '"2018-07-11T17:30:00+5:30"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T17:30:00+5:30"', got '"[Y]-[701]-[D01]T[1701]:[30]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1562" name="function-fromMillis.formatDateTime[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1994928212" result="Failed" start-time="2022-08-11T21:23:28.5729495Z" end-time="2022-08-11T21:23:28.5744673Z" duration="0.001518" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][z]', '-0500')';&#xA; result: &quot;2018-07-11T07:00:00GMT-05:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T07:00:00GMT-05:00"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][-5]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][z]', '-0500')'
Result: '"[Y]-[701]-[D01]T[701]:[0]:[0][-5]"'
Expected: '"2018-07-11T07:00:00GMT-05:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T07:00:00GMT-05:00"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][-5]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1563" name="function-fromMillis.formatDateTime[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1797841531" result="Failed" start-time="2022-08-11T21:23:28.5744915Z" end-time="2022-08-11T21:23:28.5754342Z" duration="0.000943" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1204405500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')';&#xA; result: &quot;2008-03-02T00:05:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2008-03-02T00:05:00+03:00"', got '"[Y]-[301]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should rollover day boundaries'
Expr is '$fromMillis(1204405500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')'
Result: '"[Y]-[301]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
Expected: '"2008-03-02T00:05:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2008-03-02T00:05:00+03:00"', got '"[Y]-[301]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1564" name="function-fromMillis.formatDateTime[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="49488044" result="Failed" start-time="2022-08-11T21:23:28.5754542Z" end-time="2022-08-11T21:23:28.5762333Z" duration="0.000779" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')';&#xA; result: &quot;2009-01-01T00:05:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2009-01-01T00:05:00+03:00"', got '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should rollover year boundaries'
Expr is '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')'
Result: '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
Expected: '"2009-01-01T00:05:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2009-01-01T00:05:00+03:00"', got '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1565" name="function-fromMillis.formatDateTime[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="487706594" result="Failed" start-time="2022-08-11T21:23:28.5762635Z" end-time="2022-08-11T21:23:28.5770545Z" duration="0.000791" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z010101t]', '+0530')';&#xA; result: error D3134" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3134 (), got '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z010101]"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'picture string has 6 digit timezone - error'
Expr is '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z010101t]', '+0530')'
Result: '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z010101]"'
Expected error D3134
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3134 (), got '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z010101]"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1566" name="function-fromMillis.formatDateTime[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="390947183" result="Failed" start-time="2022-08-11T21:23:28.5771870Z" end-time="2022-08-11T21:23:28.5778149Z" duration="0.000628" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y,2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y,2]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y,2]')'
Result: '"[D#1,2].[31,2].[Y,2]"'
Expected: '"23/03/18"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y,2]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1567" name="function-fromMillis.formatDateTime[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1884490335" result="Failed" start-time="2022-08-11T21:23:28.5778411Z" end-time="2022-08-11T21:23:28.5786725Z" duration="0.000831" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2]')';&#xA; result: &quot;23/03/2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/03/2018"', got '"[D#1,2].[31,2].[Y0001,2]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2]')'
Result: '"[D#1,2].[31,2].[Y0001,2]"'
Expected: '"23/03/2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/03/2018"', got '"[D#1,2].[31,2].[Y0001,2]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1568" name="function-fromMillis.formatDateTime[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1878261103" result="Failed" start-time="2022-08-11T21:23:28.5787531Z" end-time="2022-08-11T21:23:28.5794658Z" duration="0.000713" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y##01,2-2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y##01,2-2]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'width modifier should override pattern'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y##01,2-2]')'
Result: '"[D#1,2].[31,2].[Y##01,2-2]"'
Expected: '"23/03/18"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y##01,2-2]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1569" name="function-fromMillis.formatDateTime[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="618260046" result="Failed" start-time="2022-08-11T21:23:28.5794812Z" end-time="2022-08-11T21:23:28.5802570Z" duration="0.000776" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2-2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y0001,2-2]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'width modifier should override pattern'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2-2]')'
Result: '"[D#1,2].[31,2].[Y0001,2-2]"'
Expected: '"23/03/18"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y0001,2-2]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1570" name="function-fromMillis.formatDateTime[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="884270502" result="Failed" start-time="2022-08-11T21:23:28.5802757Z" end-time="2022-08-11T21:23:28.5821126Z" duration="0.001837" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1] [M01] [YI]')';&#xA; result: &quot;23 03 MMXVIII&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23 03 MMXVIII"', got '"[D1] [301] [YI]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'year in roman numerals'
Expr is '$fromMillis(1521801216617, '[D1] [M01] [YI]')'
Result: '"[D1] [301] [YI]"'
Expected: '"23 03 MMXVIII"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23 03 MMXVIII"', got '"[D1] [301] [YI]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1571" name="function-fromMillis.formatDateTime[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="636934211" result="Failed" start-time="2022-08-11T21:23:28.5822995Z" end-time="2022-08-11T21:23:28.5835712Z" duration="0.001272" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Da] [MA] [Yi]')';&#xA; result: &quot;w C mmxviii&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"w C mmxviii"', got '"[Da] [3A] [Yi]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$fromMillis(1521801216617, '[Da] [MA] [Yi]')'
Result: '"[Da] [3A] [Yi]"'
Expected: '"w C mmxviii"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"w C mmxviii"', got '"[Da] [3A] [Yi]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1572" name="function-fromMillis.formatDateTime[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="603505645" result="Failed" start-time="2022-08-11T21:23:28.5836023Z" end-time="2022-08-11T21:23:28.5841732Z" duration="0.000571" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [M01] [Y]')';&#xA; result: &quot;23rd 03 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23rd 03 2018"', got '"[D1o] [301] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day in ordinal numerals'
Expr is '$fromMillis(1521801216617, '[D1o] [M01] [Y]')'
Result: '"[D1o] [301] [Y]"'
Expected: '"23rd 03 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23rd 03 2018"', got '"[D1o] [301] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1573" name="function-fromMillis.formatDateTime[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1108451003" result="Failed" start-time="2022-08-11T21:23:28.5841871Z" end-time="2022-08-11T21:23:28.5846483Z" duration="0.000461" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Yw]')';&#xA; result: &quot;two thousand and eighteen&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"two thousand and eighteen"', got '"[Yw]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'year in words'
Expr is '$fromMillis(1521801216617, '[Yw]')'
Result: '"[Yw]"'
Expected: '"two thousand and eighteen"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"two thousand and eighteen"', got '"[Yw]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1574" name="function-fromMillis.formatDateTime[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1822833462" result="Failed" start-time="2022-08-11T21:23:28.5846601Z" end-time="2022-08-11T21:23:28.5866868Z" duration="0.002027" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Dwo] [M01] [Y]')';&#xA; result: &quot;twenty-third 03 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"twenty-third 03 2018"', got '"[Dwo] [301] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day of month in ordinal words'
Expr is '$fromMillis(1521801216617, '[Dwo] [M01] [Y]')'
Result: '"[Dwo] [301] [Y]"'
Expected: '"twenty-third 03 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"twenty-third 03 2018"', got '"[Dwo] [301] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1575" name="function-fromMillis.formatDateTime[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="165970720" result="Failed" start-time="2022-08-11T21:23:28.5867086Z" end-time="2022-08-11T21:23:28.5879097Z" duration="0.001206" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [MNn] [Y]')';&#xA; result: &quot;23rd March 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23rd March 2018"', got '"[D1o] [3Nn] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'month in words'
Expr is '$fromMillis(1521801216617, '[D1o] [MNn] [Y]')'
Result: '"[D1o] [3Nn] [Y]"'
Expected: '"23rd March 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23rd March 2018"', got '"[D1o] [3Nn] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1576" name="function-fromMillis.formatDateTime[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1438115074" result="Failed" start-time="2022-08-11T21:23:28.5879405Z" end-time="2022-08-11T21:23:28.5889726Z" duration="0.001032" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [MN] [Y]')';&#xA; result: &quot;23rd MARCH 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23rd MARCH 2018"', got '"[D1o] [3N] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'month in uppercase words'
Expr is '$fromMillis(1521801216617, '[D1o] [MN] [Y]')'
Result: '"[D1o] [3N] [Y]"'
Expected: '"23rd MARCH 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23rd MARCH 2018"', got '"[D1o] [3N] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1577" name="function-fromMillis.formatDateTime[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="460634674" result="Failed" start-time="2022-08-11T21:23:28.5890478Z" end-time="2022-08-11T21:23:28.5914837Z" duration="0.002436" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn], [D1o] [MNn] [Y]')';&#xA; result: &quot;Friday, 23rd March 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Friday, 23rd March 2018"', got '"[6Nn], [D1o] [3Nn] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in words'
Expr is '$fromMillis(1521801216617, '[FNn], [D1o] [MNn] [Y]')'
Result: '"[6Nn], [D1o] [3Nn] [Y]"'
Expected: '"Friday, 23rd March 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Friday, 23rd March 2018"', got '"[6Nn], [D1o] [3Nn] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1578" name="function-fromMillis.formatDateTime[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1648811903" result="Failed" start-time="2022-08-11T21:23:28.5918616Z" end-time="2022-08-11T21:23:28.5926588Z" duration="0.000797" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn], the [Dwo] of [MNn] [Y] [E]')';&#xA; result: &quot;Friday, the twenty-third of March 2018 ISO&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Friday, the twenty-third of March 2018 ISO"', got '"[6Nn], 10e [Dwo] o6 [3Nn] [Y] [E]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/date/month in words'
Expr is '$fromMillis(1521801216617, '[FNn], the [Dwo] of [MNn] [Y] [E]')'
Result: '"[6Nn], 10e [Dwo] o6 [3Nn] [Y] [E]"'
Expected: '"Friday, the twenty-third of March 2018 ISO"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Friday, the twenty-third of March 2018 ISO"', got '"[6Nn], 10e [Dwo] o6 [3Nn] [Y] [E]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1579" name="function-fromMillis.formatDateTime[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1988062144" result="Failed" start-time="2022-08-11T21:23:28.5931491Z" end-time="2022-08-11T21:23:28.5943919Z" duration="0.001243" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn,3-3], [D1o] [MNn,3-3] [Y] [C]')';&#xA; result: &quot;Fri, 23rd Mar 2018 ISO&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Fri, 23rd Mar 2018 ISO"', got '"[6Nn,3-3], [D1o] [3Nn,3-3] [Y] [C]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'abbreviated day/month in words'
Expr is '$fromMillis(1521801216617, '[FNn,3-3], [D1o] [MNn,3-3] [Y] [C]')'
Result: '"[6Nn,3-3], [D1o] [3Nn,3-3] [Y] [C]"'
Expected: '"Fri, 23rd Mar 2018 ISO"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Fri, 23rd Mar 2018 ISO"', got '"[6Nn,3-3], [D1o] [3Nn,3-3] [Y] [C]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1580" name="function-fromMillis.formatDateTime[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1768172829" result="Failed" start-time="2022-08-11T21:23:28.5944112Z" end-time="2022-08-11T21:23:28.5955580Z" duration="0.001147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;friday, 23/3/2018 10:33:36 am&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"friday, 23/3/2018 10:33:36 am"', got '"[6], [D].[3].[Y] [10]:[33]:[36] [P]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time'
Expr is '$fromMillis(1521801216617, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
Result: '"[6], [D].[3].[Y] [10]:[33]:[36] [P]"'
Expected: '"friday, 23/3/2018 10:33:36 am"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"friday, 23/3/2018 10:33:36 am"', got '"[6], [D].[3].[Y] [10]:[33]:[36] [P]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1581" name="function-fromMillis.formatDateTime[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="687391970" result="Failed" start-time="2022-08-11T21:23:28.5955761Z" end-time="2022-08-11T21:23:28.5962689Z" duration="0.000693" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1204405500000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;saturday, 1/3/2008 9:05:00 pm&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"saturday, 1/3/2008 9:05:00 pm"', got '"[], [D].[3].[Y] [9]:[5]:[0] [P]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time 12hr pm'
Expr is '$fromMillis(1204405500000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
Result: '"[], [D].[3].[Y] [9]:[5]:[0] [P]"'
Expected: '"saturday, 1/3/2008 9:05:00 pm"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"saturday, 1/3/2008 9:05:00 pm"', got '"[], [D].[3].[Y] [9]:[5]:[0] [P]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1582" name="function-fromMillis.formatDateTime[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1951233386" result="Failed" start-time="2022-08-11T21:23:28.5962852Z" end-time="2022-08-11T21:23:28.5973828Z" duration="0.001098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1199664000000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;monday, 7/1/2008 12:00:00 am&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"monday, 7/1/2008 12:00:00 am"', got '"[], [D].[1].[Y] [12]:[0]:[0] [P]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time 12hr midnight'
Expr is '$fromMillis(1199664000000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
Result: '"[], [D].[1].[Y] [12]:[0]:[0] [P]"'
Expected: '"monday, 7/1/2008 12:00:00 am"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"monday, 7/1/2008 12:00:00 am"', got '"[], [D].[1].[Y] [12]:[0]:[0] [P]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1583" name="function-fromMillis.formatDateTime[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1482022636" result="Failed" start-time="2022-08-11T21:23:28.5974009Z" end-time="2022-08-11T21:23:28.5981296Z" duration="0.000729" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, '[dwo] day of the year')';&#xA; result: &quot;first day of the year&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"first day of the year"', got '"[1wo] 1a18 o0 12e 18ear"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1st Jan should be day 1'
Expr is '$fromMillis(1514808000000, '[dwo] day of the year')'
Result: '"[1wo] 1a18 o0 12e 18ear"'
Expected: '"first day of the year"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"first day of the year"', got '"[1wo] 1a18 o0 12e 18ear"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1584" name="function-fromMillis.formatDateTime[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1013955403" result="Failed" start-time="2022-08-11T21:23:28.5981468Z" end-time="2022-08-11T21:23:28.5992230Z" duration="0.001076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1546257600000, '[d] days in [Y0001]')';&#xA; result: &quot;365 days in 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"365 days in 2018"', got '"[31] 31a180 in [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '31st Dec should be day 365'
Expr is '$fromMillis(1546257600000, '[d] days in [Y0001]')'
Result: '"[31] 31a180 in [Y0001]"'
Expected: '"365 days in 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"365 days in 2018"', got '"[31] 31a180 in [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1585" name="function-fromMillis.formatDateTime[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1820369421" result="Failed" start-time="2022-08-11T21:23:28.5992399Z" end-time="2022-08-11T21:23:28.5999780Z" duration="0.000738" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1483185600000, '[d] days in [Y0001]')';&#xA; result: &quot;366 days in 2016&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"366 days in 2016"', got '"[31] 31a160 in [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '31st Dec should be day 366 in a leap year'
Expr is '$fromMillis(1483185600000, '[d] days in [Y0001]')'
Result: '"[31] 31a160 in [Y0001]"'
Expected: '"366 days in 2016"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"366 days in 2016"', got '"[31] 31a160 in [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1586" name="function-fromMillis.formatDateTime[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="743072036" result="Failed" start-time="2022-08-11T21:23:28.5999991Z" end-time="2022-08-11T21:23:28.6018686Z" duration="0.001870" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Monday 1st Jan should be in the first week of 2018'
Expr is '$fromMillis(1514808000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1587" name="function-fromMillis.formatDateTime[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1184197707" result="Failed" start-time="2022-08-11T21:23:28.6018900Z" end-time="2022-08-11T21:23:28.6060206Z" duration="0.004131" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1515326400000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday 7st Jan should be in the first week of 2018'
Expr is '$fromMillis(1515326400000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1588" name="function-fromMillis.formatDateTime[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1466629760" result="Failed" start-time="2022-08-11T21:23:28.6060487Z" end-time="2022-08-11T21:23:28.6080851Z" duration="0.002037" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1545739200000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday 25th Dec should be in week 52 of 2018'
Expr is '$fromMillis(1545739200000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 52"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1589" name="function-fromMillis.formatDateTime[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1530730972" result="Failed" start-time="2022-08-11T21:23:28.6081111Z" end-time="2022-08-11T21:23:28.6088338Z" duration="0.000723" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1388577600000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Wed 1st Jan 2014 should be in week 1'
Expr is '$fromMillis(1388577600000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1590" name="function-fromMillis.formatDateTime[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="202435277" result="Failed" start-time="2022-08-11T21:23:28.6088531Z" end-time="2022-08-11T21:23:28.6097300Z" duration="0.000877" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419854400000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 29th Dec 2014 should be in week 1 of 2015'
Expr is '$fromMillis(1419854400000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1591" name="function-fromMillis.formatDateTime[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1289792074" result="Failed" start-time="2022-08-11T21:23:28.6097490Z" end-time="2022-08-11T21:23:28.6106417Z" duration="0.000893" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419768000000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 28th Dec 2014 should be in week 52 of 2014'
Expr is '$fromMillis(1419768000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 52"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1592" name="function-fromMillis.formatDateTime[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1938961063" result="Failed" start-time="2022-08-11T21:23:28.6106628Z" end-time="2022-08-11T21:23:28.6120946Z" duration="0.001432" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419336000000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 23th Dec 2014 should be in week 52 of 2014'
Expr is '$fromMillis(1419336000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 52"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1593" name="function-fromMillis.formatDateTime[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="221640715" result="Failed" start-time="2022-08-11T21:23:28.6121154Z" end-time="2022-08-11T21:23:28.6127858Z" duration="0.000671" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1420113600000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 1st Jan 2015 should be in week 1 of 2015'
Expr is '$fromMillis(1420113600000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1594" name="function-fromMillis.formatDateTime[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="451678306" result="Failed" start-time="2022-08-11T21:23:28.6128030Z" end-time="2022-08-11T21:23:28.6135179Z" duration="0.000715" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1420459200000, 'Week: [W]')';&#xA; result: &quot;Week: 2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 2"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 5th Jan 2015 should be in week 2 of 2015'
Expr is '$fromMillis(1420459200000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 2"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 2"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1595" name="function-fromMillis.formatDateTime[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="810073430" result="Failed" start-time="2022-08-11T21:23:28.6135336Z" end-time="2022-08-11T21:23:28.6147679Z" duration="0.001235" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451304000000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 28th Dec 2015 should be in week 53 of 2015'
Expr is '$fromMillis(1451304000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 53"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1596" name="function-fromMillis.formatDateTime[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1033055962" result="Failed" start-time="2022-08-11T21:23:28.6147857Z" end-time="2022-08-11T21:23:28.6153173Z" duration="0.000532" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451563200000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 31th Dec 2015 should be in week 53 of 2015'
Expr is '$fromMillis(1451563200000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 53"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1597" name="function-fromMillis.formatDateTime[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="970581926" result="Failed" start-time="2022-08-11T21:23:28.6153312Z" end-time="2022-08-11T21:23:28.6158688Z" duration="0.000538" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451736000000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 2nd Jan 2016 should be in week 53 of 2015'
Expr is '$fromMillis(1451736000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 53"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1598" name="function-fromMillis.formatDateTime[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2118318106" result="Failed" start-time="2022-08-11T21:23:28.6158839Z" end-time="2022-08-11T21:23:28.6167343Z" duration="0.000851" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359460800000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 29th Jan 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359460800000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 5 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1599" name="function-fromMillis.formatDateTime[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1763035028" result="Failed" start-time="2022-08-11T21:23:28.6167748Z" end-time="2022-08-11T21:23:28.6173495Z" duration="0.000575" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359633600000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 31st Jan 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359633600000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 5 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1600" name="function-fromMillis.formatDateTime[62]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[62]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="619974084" result="Failed" start-time="2022-08-11T21:23:28.6173658Z" end-time="2022-08-11T21:23:28.6179268Z" duration="0.000561" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359720000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 1st Feb 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359720000000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 5 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1601" name="function-fromMillis.formatDateTime[63]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[63]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1710082822" result="Failed" start-time="2022-08-11T21:23:28.6179413Z" end-time="2022-08-11T21:23:28.6184400Z" duration="0.000499" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 1st Jan 2018 should be in week 1 of Jan'
Expr is '$fromMillis(1514808000000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 1 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1602" name="function-fromMillis.formatDateTime[64]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[64]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1392864353" result="Failed" start-time="2022-08-11T21:23:28.6184533Z" end-time="2022-08-11T21:23:28.6202980Z" duration="0.001845" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1483272000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of December&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 5 of December"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 1st Jan 2017 should be in week 5 of Dec'
Expr is '$fromMillis(1483272000000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 5 of December"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 5 of December"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1603" name="function-fromMillis.formatDateTime[65]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[65]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2002005315" result="Failed" start-time="2022-08-11T21:23:28.6203188Z" end-time="2022-08-11T21:23:28.6210590Z" duration="0.000740" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1533038400000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of August&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1 of August"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 31st July 2018 should be in week 1 of Aug'
Expr is '$fromMillis(1533038400000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 1 of August"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1 of August"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1604" name="function-fromMillis.formatDateTime[66]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[66]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1775092754" result="Failed" start-time="2022-08-11T21:23:28.6210989Z" end-time="2022-08-11T21:23:28.6220193Z" duration="0.000921" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 30th Dec 2014 should be in week 1 of Jan'
Expr is '$fromMillis(1419940800000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 1 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1605" name="function-fromMillis.formatDateTime[67]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[67]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1853138446" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6220371Z" end-time="2022-08-11T21:23:28.6259013Z" duration="0.003865" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-10-21T13:05:00Z').[$fromMillis(), $fromMillis($, (),'-0500'), $fromMillis($, (),'0000')] ';&#xA; result: [&quot;2018-10-21T13:05:00Z&quot;,&quot;2018-10-21T16:05:00+03:00&quot;,&quot;2018-10-21T13:05:00Z&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018-10-21T13:05:00Z']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1250
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1212
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 79
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Undefined picture string defaults to ISO 8601'
Expr is '$toMillis('2018-10-21T13:05:00Z').[$fromMillis(), $fromMillis($, (),'-0500'), $fromMillis($, (),'0000')] '
]]></output>
                </test-case>
                <test-case id="0-1606" name="function-fromMillis.formatDateTime[68]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[68]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1590005902" result="Failed" start-time="2022-08-11T21:23:28.6259245Z" end-time="2022-08-11T21:23:28.6265588Z" duration="0.000634" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, '[YN]-[M]-[D]')';&#xA; result: error D3133" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3133 (), got '"[YN]-[12]-[D]"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'throws error asking for year name'
Expr is '$fromMillis(1419940800000, '[YN]-[M]-[D]')'
Result: '"[YN]-[12]-[D]"'
Expected error D3133
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3133 (), got '"[YN]-[12]-[D]"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1607" name="function-fromMillis.formatDateTime[69]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[69]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1186477380" result="Failed" start-time="2022-08-11T21:23:28.6265950Z" end-time="2022-08-11T21:23:28.6274146Z" duration="0.000820" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, '[YN]-[M')';&#xA; result: error D3135" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3135 (), got '"[YN]-[12"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'throws error for component with no closing bracket'
Expr is '$fromMillis(1419940800000, '[YN]-[M')'
Result: '"[YN]-[12"'
Expected error D3135
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3135 (), got '"[YN]-[12"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1608" name="function-fromMillis.isoWeekDate[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1948702710" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6274318Z" end-time="2022-08-11T21:23:28.6284316Z" duration="0.001000" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2004-W53-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2005-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 1 Jan 2005'
Expr is '($ts := $toMillis('2005-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1609" name="function-fromMillis.isoWeekDate[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="207307335" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6284506Z" end-time="2022-08-11T21:23:28.6289906Z" duration="0.000540" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2004-W53-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2005-01-02']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 2 Jan 2005'
Expr is '($ts := $toMillis('2005-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1610" name="function-fromMillis.isoWeekDate[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="478486589" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6290097Z" end-time="2022-08-11T21:23:28.6300922Z" duration="0.001083" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2005-W52-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2005-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 31 Dec 2005'
Expr is '($ts := $toMillis('2005-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1611" name="function-fromMillis.isoWeekDate[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="206316104" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6301130Z" end-time="2022-08-11T21:23:28.6307711Z" duration="0.000658" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2005-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2006-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 1 Jan 2006'
Expr is '($ts := $toMillis('2006-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1612" name="function-fromMillis.isoWeekDate[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="804482545" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6308327Z" end-time="2022-08-11T21:23:28.6319086Z" duration="0.001076" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2006-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2006-01-02']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 2 Jan 2006'
Expr is '($ts := $toMillis('2006-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1613" name="function-fromMillis.isoWeekDate[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="598872390" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6319282Z" end-time="2022-08-11T21:23:28.6325567Z" duration="0.000629" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2006-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2006-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 31 Dec 2006'
Expr is '($ts := $toMillis('2006-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1614" name="function-fromMillis.isoWeekDate[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1838085764" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6343677Z" end-time="2022-08-11T21:23:28.6365058Z" duration="0.002138" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2007-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2007-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 1 Jan 2007'
Expr is '($ts := $toMillis('2007-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1615" name="function-fromMillis.isoWeekDate[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="403797735" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6372786Z" end-time="2022-08-11T21:23:28.6387125Z" duration="0.001434" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2007-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2007-12-30']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 30 Dec 2007'
Expr is '($ts := $toMillis('2007-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1616" name="function-fromMillis.isoWeekDate[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674887980" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6387445Z" end-time="2022-08-11T21:23:28.6398258Z" duration="0.001082" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2007-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 31 Dec 2007'
Expr is '($ts := $toMillis('2007-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1617" name="function-fromMillis.isoWeekDate[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="512905576" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6398548Z" end-time="2022-08-11T21:23:28.6410945Z" duration="0.001240" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W01-2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 1 Jan 2008'
Expr is '($ts := $toMillis('2008-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1618" name="function-fromMillis.isoWeekDate[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="783886128" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6411289Z" end-time="2022-08-11T21:23:28.6427095Z" duration="0.001581" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-28', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-12-28']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 28 Dec 2008'
Expr is '($ts := $toMillis('2008-12-28', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1619" name="function-fromMillis.isoWeekDate[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="376602270" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6427485Z" end-time="2022-08-11T21:23:28.6435219Z" duration="0.000773" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-29', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-12-29']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 29 Dec 2008'
Expr is '($ts := $toMillis('2008-12-29', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1620" name="function-fromMillis.isoWeekDate[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1892118205" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6435397Z" end-time="2022-08-11T21:23:28.6442412Z" duration="0.000702" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-12-30']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 30 Dec 2008'
Expr is '($ts := $toMillis('2008-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1621" name="function-fromMillis.isoWeekDate[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1354233123" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6442705Z" end-time="2022-08-11T21:23:28.6450632Z" duration="0.000793" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-3&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Wed 31 Dec 2008'
Expr is '($ts := $toMillis('2008-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1622" name="function-fromMillis.isoWeekDate[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="417860575" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6450889Z" end-time="2022-08-11T21:23:28.6457685Z" duration="0.000680" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2009-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-4&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2009-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thu 1 Jan 2009'
Expr is '($ts := $toMillis('2009-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1623" name="function-fromMillis.isoWeekDate[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="347530131" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6457851Z" end-time="2022-08-11T21:23:28.6476021Z" duration="0.001817" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2009-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-4&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2009-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thu 31 Dec 2009'
Expr is '($ts := $toMillis('2009-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1624" name="function-fromMillis.isoWeekDate[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="415824769" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6476238Z" end-time="2022-08-11T21:23:28.6484364Z" duration="0.000813" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-5&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2010-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Fri 1 Jan 2010'
Expr is '($ts := $toMillis('2010-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1625" name="function-fromMillis.isoWeekDate[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1741962075" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6493605Z" end-time="2022-08-11T21:23:28.6500653Z" duration="0.000705" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2010-01-02']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 2 Jan 2010'
Expr is '($ts := $toMillis('2010-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1626" name="function-fromMillis.isoWeekDate[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="845456795" result="Failed" label="Error" start-time="2022-08-11T21:23:28.6500828Z" end-time="2022-08-11T21:23:28.6505688Z" duration="0.000486" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-03', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2010-01-03']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 3 Jan 2010'
Expr is '($ts := $toMillis('2010-01-03', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1627" name="function-join.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="381864930" result="Passed" start-time="2022-08-11T21:23:28.6505933Z" end-time="2022-08-11T21:23:28.6506914Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(&quot;hello&quot;)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join("hello")'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1628" name="function-join.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="656772697" result="Passed" start-time="2022-08-11T21:23:28.6507023Z" end-time="2022-08-11T21:23:28.6507681Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;])';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello"])'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1629" name="function-join.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1012760032" result="Passed" start-time="2022-08-11T21:23:28.6507762Z" end-time="2022-08-11T21:23:28.6508390Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;, &quot;world&quot;])';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello", "world"])'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-1630" name="function-join.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1280398405" result="Passed" start-time="2022-08-11T21:23:28.6508466Z" end-time="2022-08-11T21:23:28.6509567Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;, &quot;world&quot;], &quot;, &quot;)';&#xA; result: &quot;hello, world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello", "world"], ", ")'
Result: '"hello, world"'
Expected: '"hello, world"'
]]></output>
                </test-case>
                <test-case id="0-1631" name="function-join.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="467533148" result="Passed" start-time="2022-08-11T21:23:28.6510289Z" end-time="2022-08-11T21:23:28.6511925Z" duration="0.000164" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([], &quot;, &quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join([], ", ")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1632" name="function-join.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="489800215" result="Passed" start-time="2022-08-11T21:23:28.6512016Z" end-time="2022-08-11T21:23:28.6518409Z" duration="0.000639" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.Order.Product.Description.Colour, &quot;, &quot;)';&#xA; result: &quot;Purple, Orange, Purple, Black&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.Order.Product.Description.Colour, ", ")'
Result: '"Purple, Orange, Purple, Black"'
Expected: '"Purple, Orange, Purple, Black"'
]]></output>
                </test-case>
                <test-case id="0-1633" name="function-join.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2033260522" result="Passed" start-time="2022-08-11T21:23:28.6518983Z" end-time="2022-08-11T21:23:28.6520411Z" duration="0.000143" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.Order.Product.Description.Colour, no.sep)';&#xA; result: &quot;PurpleOrangePurpleBlack&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.Order.Product.Description.Colour, no.sep)'
Result: '"PurpleOrangePurpleBlack"'
Expected: '"PurpleOrangePurpleBlack"'
]]></output>
                </test-case>
                <test-case id="0-1634" name="function-join.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1368088060" result="Passed" start-time="2022-08-11T21:23:28.6520824Z" end-time="2022-08-11T21:23:28.6521790Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.blah.Product.Description.Colour, &quot;, &quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.blah.Product.Description.Colour, ", ")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1635" name="function-join.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="58090007" result="Passed" start-time="2022-08-11T21:23:28.6522243Z" end-time="2022-08-11T21:23:28.6531414Z" duration="0.000917" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join(true, &quot;, &quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join(true, ", ")'
]]></output>
                </test-case>
                <test-case id="0-1636" name="function-join.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1442011264" result="Passed" start-time="2022-08-11T21:23:28.6531577Z" end-time="2022-08-11T21:23:28.6551455Z" duration="0.001988" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join([1,2,3], &quot;, &quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join([1,2,3], ", ")'
]]></output>
                </test-case>
                <test-case id="0-1637" name="function-join.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2096711718" result="Passed" start-time="2022-08-11T21:23:28.6555808Z" end-time="2022-08-11T21:23:28.6566259Z" duration="0.001045" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;], 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join(["hello"], 3)'
]]></output>
                </test-case>
                <test-case id="0-1638" name="function-join.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1854413529" result="Passed" start-time="2022-08-11T21:23:28.6566748Z" end-time="2022-08-11T21:23:28.6576395Z" duration="0.000964" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join()'
]]></output>
                </test-case>
                <test-case id="0-1639" name="function-keys.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1308300604" result="Passed" start-time="2022-08-11T21:23:28.6576574Z" end-time="2022-08-11T21:23:28.6586424Z" duration="0.000985" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(Account)';&#xA; result: [&quot;Account Name&quot;,&quot;Order&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(Account)'
Result: '["Account Name","Order"]'
Expected: '["Account Name","Order"]'
]]></output>
                </test-case>
                <test-case id="0-1640" name="function-keys.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="230363519" result="Passed" start-time="2022-08-11T21:23:28.6586686Z" end-time="2022-08-11T21:23:28.6596278Z" duration="0.000959" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(Account.Order.Product)';&#xA; result: [&quot;Product Name&quot;,&quot;ProductID&quot;,&quot;SKU&quot;,&quot;Description&quot;,&quot;Price&quot;,&quot;Quantity&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(Account.Order.Product)'
Result: '["Product Name","ProductID","SKU","Description","Price","Quantity"]'
Expected: '["Product Name","ProductID","SKU","Description","Price","Quantity"]'
]]></output>
                </test-case>
                <test-case id="0-1641" name="function-keys.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1704078303" result="Passed" start-time="2022-08-11T21:23:28.6599070Z" end-time="2022-08-11T21:23:28.6601421Z" duration="0.000235" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys({})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys({})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1642" name="function-keys.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1382978644" result="Passed" start-time="2022-08-11T21:23:28.6601850Z" end-time="2022-08-11T21:23:28.6606743Z" duration="0.000489" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys({&quot;foo&quot;:{}})';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$keys({"foo":{}})'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1643" name="function-keys.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1259322425" result="Passed" start-time="2022-08-11T21:23:28.6609986Z" end-time="2022-08-11T21:23:28.6612832Z" duration="0.000285" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(&quot;foo&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys("foo")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1644" name="function-keys.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1052244383" result="Passed" start-time="2022-08-11T21:23:28.6616615Z" end-time="2022-08-11T21:23:28.6619700Z" duration="0.000309" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(function(){1})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(function(){1})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1645" name="function-keys.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2143602820" result="Passed" start-time="2022-08-11T21:23:28.6623832Z" end-time="2022-08-11T21:23:28.6625245Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys([&quot;foo&quot;, &quot;bar&quot;])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(["foo", "bar"])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1646" name="function-length.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="485309529" result="Passed" start-time="2022-08-11T21:23:28.6625366Z" end-time="2022-08-11T21:23:28.6640296Z" duration="0.001493" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;&quot;)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$length("")'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1647" name="function-length.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1340088673" result="Passed" start-time="2022-08-11T21:23:28.6640538Z" end-time="2022-08-11T21:23:28.6641815Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;hello&quot;)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$length("hello")'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-1648" name="function-length.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="531038598" result="Passed" start-time="2022-08-11T21:23:28.6642388Z" end-time="2022-08-11T21:23:28.6643792Z" duration="0.000140" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(missing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$length(missing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1649" name="function-length.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="47880571" result="Passed" start-time="2022-08-11T21:23:28.6643901Z" end-time="2022-08-11T21:23:28.6650086Z" duration="0.000619" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\u03BB-calculus&quot;)';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\u03BB-calculus")'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1650" name="function-length.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1282669097" result="Failed" start-time="2022-08-11T21:23:28.6650608Z" end-time="2022-08-11T21:23:28.6693589Z" duration="0.004298" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\uD834\uDD1E&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("\uD834\uDD1E")'
Result: '2'
Expected: '1'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1651" name="function-length.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="520150386" result="Failed" start-time="2022-08-11T21:23:28.6709675Z" end-time="2022-08-11T21:23:28.6721913Z" duration="0.001224" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;𝄞&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("𝄞")'
Result: '2'
Expected: '1'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1652" name="function-length.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="186695798" result="Passed" start-time="2022-08-11T21:23:28.6731227Z" end-time="2022-08-11T21:23:28.6732869Z" duration="0.000164" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;超明體繁&quot;)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$length("超明體繁")'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1653" name="function-length.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1741715836" result="Passed" start-time="2022-08-11T21:23:28.6733008Z" end-time="2022-08-11T21:23:28.6735562Z" duration="0.000255" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\t&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\t")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1654" name="function-length.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2018400470" result="Passed" start-time="2022-08-11T21:23:28.6735679Z" end-time="2022-08-11T21:23:28.6739945Z" duration="0.000427" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\n&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\n")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1655" name="function-length.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1413224608" result="Passed" start-time="2022-08-11T21:23:28.6743283Z" end-time="2022-08-11T21:23:28.6757604Z" duration="0.001432" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(1234)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(1234)'
]]></output>
                </test-case>
                <test-case id="0-1656" name="function-length.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1292222247" result="Passed" start-time="2022-08-11T21:23:28.6757785Z" end-time="2022-08-11T21:23:28.6765039Z" duration="0.000725" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(null)'
]]></output>
                </test-case>
                <test-case id="0-1657" name="function-length.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1045334222" result="Passed" start-time="2022-08-11T21:23:28.6765205Z" end-time="2022-08-11T21:23:28.6778219Z" duration="0.001302" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(true)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(true)'
]]></output>
                </test-case>
                <test-case id="0-1658" name="function-length.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1586180546" result="Passed" start-time="2022-08-11T21:23:28.6780341Z" end-time="2022-08-11T21:23:28.6791293Z" duration="0.001095" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length([&quot;str&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(["str"])'
]]></output>
                </test-case>
                <test-case id="0-1659" name="function-length.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="33130679" result="Passed" start-time="2022-08-11T21:23:28.6791486Z" end-time="2022-08-11T21:23:28.6801249Z" duration="0.000977" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length()';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length()'
]]></output>
                </test-case>
                <test-case id="0-1660" name="function-length.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1007681651" result="Passed" start-time="2022-08-11T21:23:28.6806797Z" end-time="2022-08-11T21:23:28.6825570Z" duration="0.001878" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length()';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length()'
]]></output>
                </test-case>
                <test-case id="0-1661" name="function-length.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1208140972" result="Passed" start-time="2022-08-11T21:23:28.6825920Z" end-time="2022-08-11T21:23:28.6833899Z" duration="0.000798" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;Hello&quot;, &quot;World&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length("Hello", "World")'
]]></output>
                </test-case>
                <test-case id="0-1662" name="function-length.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="529704683" result="Failed" start-time="2022-08-11T21:23:28.6834149Z" end-time="2022-08-11T21:23:28.6843842Z" duration="0.000969" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;𝄞💩&quot;)';&#xA; result: 2" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '2', got '4'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("𝄞💩")'
Result: '4'
Expected: '2'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '2', got '4'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1663" name="function-lookup.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="935942678" result="Passed" start-time="2022-08-11T21:23:28.6844377Z" end-time="2022-08-11T21:23:28.6845826Z" duration="0.000145" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account, &quot;Account Name&quot;)';&#xA; result: &quot;Firefly&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account, "Account Name")'
Result: '"Firefly"'
Expected: '"Firefly"'
]]></output>
                </test-case>
                <test-case id="0-1664" name="function-lookup.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1074392577" result="Passed" start-time="2022-08-11T21:23:28.6848286Z" end-time="2022-08-11T21:23:28.6850529Z" duration="0.000224" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account.Order.Product, &quot;Product Name&quot;)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;,&quot;Bowler Hat&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account.Order.Product, "Product Name")'
Result: '["Bowler Hat","Trilby hat","Bowler Hat","Cloak"]'
Expected: '["Bowler Hat","Trilby hat","Bowler Hat","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-1665" name="function-lookup.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="10953441" result="Passed" start-time="2022-08-11T21:23:28.6850662Z" end-time="2022-08-11T21:23:28.6853578Z" duration="0.000292" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account.Order.Product.ProductID, &quot;Product Name&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account.Order.Product.ProductID, "Product Name")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1666" name="function-lookup.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1863999536" result="Passed" start-time="2022-08-11T21:23:28.6853705Z" end-time="2022-08-11T21:23:28.6855027Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup($$, &quot;gust&quot;)';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup($$, "gust")'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1667" name="function-lowercase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="918705670" result="Passed" start-time="2022-08-11T21:23:28.6855114Z" end-time="2022-08-11T21:23:28.6858879Z" duration="0.000377" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Hello World&quot;)';&#xA; result: &quot;hello world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase("Hello World")'
Result: '"hello world"'
Expected: '"hello world"'
]]></output>
                </test-case>
                <test-case id="0-1668" name="function-lowercase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1378267977" result="Passed" start-time="2022-08-11T21:23:28.6858996Z" end-time="2022-08-11T21:23:28.6860545Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1669" name="function-max.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1779995757" result="Passed" start-time="2022-08-11T21:23:28.6860635Z" end-time="2022-08-11T21:23:28.6868422Z" duration="0.000779" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(Account.Order.Product.(Price * Quantity))';&#xA; result: 137.8" />
                  </properties>
                  <output><![CDATA[Expr is '$max(Account.Order.Product.(Price * Quantity))'
Result: '137.8'
Expected: '137.8'
]]></output>
                </test-case>
                <test-case id="0-1670" name="function-max.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1109270118" result="Passed" start-time="2022-08-11T21:23:28.6869436Z" end-time="2022-08-11T21:23:28.6876110Z" duration="0.000668" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$max(Product.(Price * Quantity))';&#xA; result: [68.9,137.8]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$max(Product.(Price * Quantity))'
Result: '[68.9,137.8]'
Expected: '[68.9,137.8]'
]]></output>
                </test-case>
                <test-case id="0-1671" name="function-max.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1725659909" result="Passed" start-time="2022-08-11T21:23:28.6879706Z" end-time="2022-08-11T21:23:28.6884291Z" duration="0.000459" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $count(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 2&quot;,&quot;order104: 2&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $count(Product.(Price*Quantity)))'
Result: '["order103: 2","order104: 2"]'
Expected: '["order103: 2","order104: 2"]'
]]></output>
                </test-case>
                <test-case id="0-1672" name="function-max.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="805975694" result="Passed" start-time="2022-08-11T21:23:28.6884451Z" end-time="2022-08-11T21:23:28.6888925Z" duration="0.000447" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$max([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1673" name="function-max.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1623069171" result="Passed" start-time="2022-08-11T21:23:28.6895795Z" end-time="2022-08-11T21:23:28.6901944Z" duration="0.000577" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$max([1,2,3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1674" name="function-max.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="146238751" result="Passed" start-time="2022-08-11T21:23:28.6902234Z" end-time="2022-08-11T21:23:28.6911363Z" duration="0.000913" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1675" name="function-max.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="188039902" result="Passed" start-time="2022-08-11T21:23:28.6911628Z" end-time="2022-08-11T21:23:28.6919664Z" duration="0.000804" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1676" name="function-max.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2118738126" result="Passed" start-time="2022-08-11T21:23:28.6919930Z" end-time="2022-08-11T21:23:28.6921011Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$max(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1677" name="function-max.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1306021797" result="Passed" start-time="2022-08-11T21:23:28.6921104Z" end-time="2022-08-11T21:23:28.6934145Z" duration="0.001304" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([-1,-5])';&#xA; result: -1" />
                  </properties>
                  <output><![CDATA[Expr is '$max([-1,-5])'
Result: '-1'
Expected: '-1'
]]></output>
                </test-case>
                <test-case id="0-1678" name="function-max.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1442769395" result="Passed" start-time="2022-08-11T21:23:28.6934426Z" end-time="2022-08-11T21:23:28.6950470Z" duration="0.001605" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([],[])'
]]></output>
                </test-case>
                <test-case id="0-1679" name="function-max.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="419705596" result="Passed" start-time="2022-08-11T21:23:28.6953096Z" end-time="2022-08-11T21:23:28.6958159Z" duration="0.000507" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1680" name="function-max.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1256652546" result="Passed" start-time="2022-08-11T21:23:28.6958340Z" end-time="2022-08-11T21:23:28.6962910Z" duration="0.000457" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1681" name="function-max.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1652851769" result="Passed" start-time="2022-08-11T21:23:28.6963070Z" end-time="2022-08-11T21:23:28.6967260Z" duration="0.000419" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1682" name="function-max.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1998309979" result="Passed" start-time="2022-08-11T21:23:28.6967390Z" end-time="2022-08-11T21:23:28.6968232Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$max(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1683" name="function-max.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="608892126" result="Passed" start-time="2022-08-11T21:23:28.6968320Z" end-time="2022-08-11T21:23:28.6979764Z" duration="0.001145" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(Account.Order.Product.(Price * Quantity))';&#xA; result: 21.67" />
                  </properties>
                  <output><![CDATA[Expr is '$min(Account.Order.Product.(Price * Quantity))'
Result: '21.67'
Expected: '21.67'
]]></output>
                </test-case>
                <test-case id="0-1684" name="function-max.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1877574582" result="Passed" start-time="2022-08-11T21:23:28.6986052Z" end-time="2022-08-11T21:23:28.6992089Z" duration="0.000604" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$min(Product.(Price * Quantity))';&#xA; result: [21.67,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$min(Product.(Price * Quantity))'
Result: '[21.67,107.99]'
Expected: '[21.67,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1685" name="function-max.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="760248019" result="Passed" start-time="2022-08-11T21:23:28.7000585Z" end-time="2022-08-11T21:23:28.7012436Z" duration="0.001185" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $min(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 21.67&quot;,&quot;order104: 107.99&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $min(Product.(Price*Quantity)))'
Result: '["order103: 21.67","order104: 107.99"]'
Expected: '["order103: 21.67","order104: 107.99"]'
]]></output>
                </test-case>
                <test-case id="0-1686" name="function-max.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="280837350" result="Passed" start-time="2022-08-11T21:23:28.7037923Z" end-time="2022-08-11T21:23:28.7052416Z" duration="0.001449" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$min([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1687" name="function-max.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="895568026" result="Passed" start-time="2022-08-11T21:23:28.7068167Z" end-time="2022-08-11T21:23:28.7070555Z" duration="0.000239" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2,3])';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$min([1,2,3])'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1688" name="function-max.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="14860052" result="Passed" start-time="2022-08-11T21:23:28.7070724Z" end-time="2022-08-11T21:23:28.7087713Z" duration="0.001699" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1689" name="function-max.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2102347099" result="Passed" start-time="2022-08-11T21:23:28.7088326Z" end-time="2022-08-11T21:23:28.7100226Z" duration="0.001190" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1690" name="function-max.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="913351407" result="Passed" start-time="2022-08-11T21:23:28.7100428Z" end-time="2022-08-11T21:23:28.7101560Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$min(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1691" name="function-max.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="396677042" result="Passed" start-time="2022-08-11T21:23:28.7101784Z" end-time="2022-08-11T21:23:28.7114818Z" duration="0.001304" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([],[])'
]]></output>
                </test-case>
                <test-case id="0-1692" name="function-max.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="510531172" result="Passed" start-time="2022-08-11T21:23:28.7116439Z" end-time="2022-08-11T21:23:28.7127497Z" duration="0.001106" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1693" name="function-max.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1821282850" result="Passed" start-time="2022-08-11T21:23:28.7127793Z" end-time="2022-08-11T21:23:28.7134651Z" duration="0.000686" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1694" name="function-max.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="300618953" result="Passed" start-time="2022-08-11T21:23:28.7134884Z" end-time="2022-08-11T21:23:28.7146968Z" duration="0.001208" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1695" name="function-max.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1169706194" result="Passed" start-time="2022-08-11T21:23:28.7147171Z" end-time="2022-08-11T21:23:28.7149405Z" duration="0.000223" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$min(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1696" name="function-merge.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1174373620" result="Passed" start-time="2022-08-11T21:23:28.7149510Z" end-time="2022-08-11T21:23:28.7152287Z" duration="0.000278" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$merge(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1697" name="function-merge.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="447035966" result="Passed" start-time="2022-08-11T21:23:28.7152414Z" end-time="2022-08-11T21:23:28.7164552Z" duration="0.001214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge({&quot;a&quot;:1})';&#xA; result: {&quot;a&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge({"a":1})'
Result: '{"a":1}'
Expected: '{"a":1}'
]]></output>
                </test-case>
                <test-case id="0-1698" name="function-merge.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="184929848" result="Passed" start-time="2022-08-11T21:23:28.7168591Z" end-time="2022-08-11T21:23:28.7175184Z" duration="0.000659" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;:1}, {&quot;b&quot;:2}])';&#xA; result: {&quot;a&quot;:1,&quot;b&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a":1}, {"b":2}])'
Result: '{"a":1,"b":2}'
Expected: '{"a":1,"b":2}'
]]></output>
                </test-case>
                <test-case id="0-1699" name="function-merge.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1041290942" result="Passed" start-time="2022-08-11T21:23:28.7175356Z" end-time="2022-08-11T21:23:28.7194410Z" duration="0.001905" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;: 1}, {&quot;b&quot;: 2, &quot;c&quot;: 3}])';&#xA; result: {&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a": 1}, {"b": 2, "c": 3}])'
Result: '{"a":1,"b":2,"c":3}'
Expected: '{"a":1,"b":2,"c":3}'
]]></output>
                </test-case>
                <test-case id="0-1700" name="function-merge.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="279603284" result="Passed" start-time="2022-08-11T21:23:28.7194598Z" end-time="2022-08-11T21:23:28.7198751Z" duration="0.000416" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;: 1}, {&quot;b&quot;: 2, &quot;a&quot;: 3}])';&#xA; result: {&quot;a&quot;:3,&quot;b&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a": 1}, {"b": 2, "a": 3}])'
Result: '{"a":3,"b":2}'
Expected: '{"a":3,"b":2}'
]]></output>
                </test-case>
                <test-case id="0-1701" name="function-number.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1714087506" result="Passed" start-time="2022-08-11T21:23:28.7199180Z" end-time="2022-08-11T21:23:28.7200321Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1702" name="function-number.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2109304343" result="Passed" start-time="2022-08-11T21:23:28.7200424Z" end-time="2022-08-11T21:23:28.7203711Z" duration="0.000329" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(10)';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$number(10)'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1703" name="function-number.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="898526488" result="Passed" start-time="2022-08-11T21:23:28.7203838Z" end-time="2022-08-11T21:23:28.7205220Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(-0.05)';&#xA; result: -0.05" />
                  </properties>
                  <output><![CDATA[Expr is '$number(-0.05)'
Result: '-0.05'
Expected: '-0.05'
]]></output>
                </test-case>
                <test-case id="0-1704" name="function-number.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1086094100" result="Passed" start-time="2022-08-11T21:23:28.7205311Z" end-time="2022-08-11T21:23:28.7225606Z" duration="0.002030" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;0&quot;)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number("0")'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1705" name="function-number.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1704492835" result="Passed" start-time="2022-08-11T21:23:28.7236890Z" end-time="2022-08-11T21:23:28.7239395Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;-0.05&quot;)';&#xA; result: -0.05" />
                  </properties>
                  <output><![CDATA[Expr is '$number("-0.05")'
Result: '-0.05'
Expected: '-0.05'
]]></output>
                </test-case>
                <test-case id="0-1706" name="function-number.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1861658339" result="Passed" start-time="2022-08-11T21:23:28.7244627Z" end-time="2022-08-11T21:23:28.7246006Z" duration="0.000138" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1e2&quot;)';&#xA; result: 100" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1e2")'
Result: '100'
Expected: '100'
]]></output>
                </test-case>
                <test-case id="0-1707" name="function-number.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="711110274" result="Passed" start-time="2022-08-11T21:23:28.7246239Z" end-time="2022-08-11T21:23:28.7247035Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1.0e-2&quot;)';&#xA; result: 0.01" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1.0e-2")'
Result: '0.01'
Expected: '0.01'
]]></output>
                </test-case>
                <test-case id="0-1708" name="function-number.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1595477085" result="Passed" start-time="2022-08-11T21:23:28.7247120Z" end-time="2022-08-11T21:23:28.7254108Z" duration="0.000699" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1e0&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1e0")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1709" name="function-number.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1830360568" result="Passed" start-time="2022-08-11T21:23:28.7263152Z" end-time="2022-08-11T21:23:28.7279092Z" duration="0.001594" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;10e500&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("10e500")'
]]></output>
                </test-case>
                <test-case id="0-1710" name="function-number.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1441970129" result="Passed" start-time="2022-08-11T21:23:28.7279361Z" end-time="2022-08-11T21:23:28.7286298Z" duration="0.000694" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;Hello world&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("Hello world")'
]]></output>
                </test-case>
                <test-case id="0-1711" name="function-number.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2133684097" result="Passed" start-time="2022-08-11T21:23:28.7287469Z" end-time="2022-08-11T21:23:28.7300353Z" duration="0.001289" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1/2&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("1/2")'
]]></output>
                </test-case>
                <test-case id="0-1712" name="function-number.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1750048474" result="Passed" start-time="2022-08-11T21:23:28.7300585Z" end-time="2022-08-11T21:23:28.7305285Z" duration="0.000470" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1234 hello&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("1234 hello")'
]]></output>
                </test-case>
                <test-case id="0-1713" name="function-number.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1166474950" result="Passed" start-time="2022-08-11T21:23:28.7305400Z" end-time="2022-08-11T21:23:28.7319374Z" duration="0.001398" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("")'
]]></output>
                </test-case>
                <test-case id="0-1714" name="function-number.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="923961780" result="Passed" start-time="2022-08-11T21:23:28.7325794Z" end-time="2022-08-11T21:23:28.7328342Z" duration="0.000254" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(true)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$number(true)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1715" name="function-number.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1502313529" result="Passed" start-time="2022-08-11T21:23:28.7329685Z" end-time="2022-08-11T21:23:28.7331886Z" duration="0.000220" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(false)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number(false)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1716" name="function-number.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1357314640" result="Passed" start-time="2022-08-11T21:23:28.7332285Z" end-time="2022-08-11T21:23:28.7334431Z" duration="0.000215" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(Account.blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$number(Account.blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1717" name="function-number.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2068296204" result="Passed" start-time="2022-08-11T21:23:28.7334543Z" end-time="2022-08-11T21:23:28.7351094Z" duration="0.001655" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(null)'
]]></output>
                </test-case>
                <test-case id="0-1718" name="function-number.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1205851743" result="Passed" start-time="2022-08-11T21:23:28.7351517Z" end-time="2022-08-11T21:23:28.7364763Z" duration="0.001325" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number([])'
]]></output>
                </test-case>
                <test-case id="0-1719" name="function-number.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="314144558" result="Passed" start-time="2022-08-11T21:23:28.7365321Z" end-time="2022-08-11T21:23:28.7376318Z" duration="0.001099" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;[1]&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("[1]")'
]]></output>
                </test-case>
                <test-case id="0-1720" name="function-number.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1877599738" result="Passed" start-time="2022-08-11T21:23:28.7383174Z" end-time="2022-08-11T21:23:28.7391026Z" duration="0.000785" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([1,2])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number([1,2])'
]]></output>
                </test-case>
                <test-case id="0-1721" name="function-number.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="968431510" result="Passed" start-time="2022-08-11T21:23:28.7391213Z" end-time="2022-08-11T21:23:28.7410092Z" duration="0.001888" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([&quot;hello&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(["hello"])'
]]></output>
                </test-case>
                <test-case id="0-1722" name="function-number.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="903845618" result="Passed" start-time="2022-08-11T21:23:28.7411118Z" end-time="2022-08-11T21:23:28.7419273Z" duration="0.000815" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([&quot;2&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(["2"])'
]]></output>
                </test-case>
                <test-case id="0-1723" name="function-number.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1423404525" result="Passed" start-time="2022-08-11T21:23:28.7423022Z" end-time="2022-08-11T21:23:28.7442444Z" duration="0.001943" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number({})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number({})'
]]></output>
                </test-case>
                <test-case id="0-1724" name="function-number.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="866644350" result="Passed" start-time="2022-08-11T21:23:28.7447639Z" end-time="2022-08-11T21:23:28.7455397Z" duration="0.000776" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number({"hello":"world"})'
]]></output>
                </test-case>
                <test-case id="0-1725" name="function-number.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="712593076" result="Passed" start-time="2022-08-11T21:23:28.7455551Z" end-time="2022-08-11T21:23:28.7463442Z" duration="0.000789" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number($number)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number($number)'
]]></output>
                </test-case>
                <test-case id="0-1726" name="function-number.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1215128737" result="Passed" start-time="2022-08-11T21:23:28.7464245Z" end-time="2022-08-11T21:23:28.7471686Z" duration="0.000744" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(function(){5})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(function(){5})'
]]></output>
                </test-case>
                <test-case id="0-1727" name="function-number.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1132176491" result="Passed" start-time="2022-08-11T21:23:28.7472009Z" end-time="2022-08-11T21:23:28.7478231Z" duration="0.000622" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(1,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(1,2)'
]]></output>
                </test-case>
                <test-case id="0-1728" name="function-number.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1322450218" result="Passed" start-time="2022-08-11T21:23:28.7478379Z" end-time="2022-08-11T21:23:28.7480447Z" duration="0.000207" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('00')';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number('00')'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1729" name="function-number.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1124016204" result="Passed" start-time="2022-08-11T21:23:28.7482339Z" end-time="2022-08-11T21:23:28.7483849Z" duration="0.000151" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('0123')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Expr is '$number('0123')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1730" name="function-number.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1161149929" result="Passed" start-time="2022-08-11T21:23:28.7484000Z" end-time="2022-08-11T21:23:28.7486203Z" duration="0.000220" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('-007')';&#xA; result: -7" />
                  </properties>
                  <output><![CDATA[Expr is '$number('-007')'
Result: '-7'
Expected: '-7'
]]></output>
                </test-case>
                <test-case id="0-1731" name="function-number.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1671702160" result="Passed" start-time="2022-08-11T21:23:28.7486916Z" end-time="2022-08-11T21:23:28.7488434Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('000.00123000')';&#xA; result: 0.00123" />
                  </properties>
                  <output><![CDATA[Expr is '$number('000.00123000')'
Result: '0.00123'
Expected: '0.00123'
]]></output>
                </test-case>
                <test-case id="0-1732" name="function-pad.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1121091949" result="Passed" start-time="2022-08-11T21:23:28.7488531Z" end-time="2022-08-11T21:23:28.7494408Z" duration="0.000588" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 5)';&#xA; result: &quot;foo  &quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 5)'
Result: '"foo  "'
Expected: '"foo  "'
]]></output>
                </test-case>
                <test-case id="0-1733" name="function-pad.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="401478453" result="Passed" start-time="2022-08-11T21:23:28.7494791Z" end-time="2022-08-11T21:23:28.7497424Z" duration="0.000263" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, -5)';&#xA; result: &quot;  foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", -5)'
Result: '"  foo"'
Expected: '"  foo"'
]]></output>
                </test-case>
                <test-case id="0-1734" name="function-pad.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="140102312" result="Passed" start-time="2022-08-11T21:23:28.7497747Z" end-time="2022-08-11T21:23:28.7500050Z" duration="0.000231" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, -5, &quot;#&quot;)';&#xA; result: &quot;##foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", -5, "#")'
Result: '"##foo"'
Expected: '"##foo"'
]]></output>
                </test-case>
                <test-case id="0-1735" name="function-pad.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1690048687" result="Passed" start-time="2022-08-11T21:23:28.7502278Z" end-time="2022-08-11T21:23:28.7504738Z" duration="0.000246" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 5, &quot;&quot;)';&#xA; result: &quot;foo  &quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 5, "")'
Result: '"foo  "'
Expected: '"foo  "'
]]></output>
                </test-case>
                <test-case id="0-1736" name="function-pad.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1691031073" result="Passed" start-time="2022-08-11T21:23:28.7507573Z" end-time="2022-08-11T21:23:28.7510537Z" duration="0.000296" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 1)';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 1)'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1737" name="function-pad.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1099783491" result="Passed" start-time="2022-08-11T21:23:28.7512988Z" end-time="2022-08-11T21:23:28.7515234Z" duration="0.000225" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 8, &quot;-+&quot;)';&#xA; result: &quot;foo-+-+-&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 8, "-+")'
Result: '"foo-+-+-"'
Expected: '"foo-+-+-"'
]]></output>
                </test-case>
                <test-case id="0-1738" name="function-pad.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1670281673" result="Passed" start-time="2022-08-11T21:23:28.7519753Z" end-time="2022-08-11T21:23:28.7522397Z" duration="0.000264" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(nothing, 1)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$pad(nothing, 1)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1739" name="function-pad.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="173081747" result="Failed" start-time="2022-08-11T21:23:28.7523967Z" end-time="2022-08-11T21:23:28.7536585Z" duration="0.001262" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 7)';&#xA; result: &quot;a𝄞💩    &quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩    "', got '"a𝄞💩  "'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 7)'
Result: '"a𝄞💩  "'
Expected: '"a𝄞💩    "'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩    "', got '"a𝄞💩  "'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1740" name="function-pad.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1046073327" result="Failed" start-time="2022-08-11T21:23:28.7540522Z" end-time="2022-08-11T21:23:28.7559565Z" duration="0.001904" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('𝄞💩', -7)';&#xA; result: &quot;     𝄞💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"     𝄞💩"', got '"   𝄞💩"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('𝄞💩', -7)'
Result: '"   𝄞💩"'
Expected: '"     𝄞💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"     𝄞💩"', got '"   𝄞💩"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1741" name="function-pad.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1717210723" result="Failed" start-time="2022-08-11T21:23:28.7559833Z" end-time="2022-08-11T21:23:28.7592511Z" duration="0.003268" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 7, '💩')';&#xA; result: &quot;a𝄞💩💩💩💩💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩💩💩💩💩"', got '"a𝄞💩💩"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 7, '💩')'
Result: '"a𝄞💩💩"'
Expected: '"a𝄞💩💩💩💩💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩💩💩💩💩"', got '"a𝄞💩💩"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1742" name="function-pad.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1447574588" result="Failed" start-time="2022-08-11T21:23:28.7592761Z" end-time="2022-08-11T21:23:28.7610687Z" duration="0.001793" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 6, '💩')';&#xA; result: &quot;a𝄞💩💩💩💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩💩💩💩"', got '"a𝄞💩\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 6, '💩')'
Result: '"a𝄞💩\ud83d"'
Expected: '"a𝄞💩💩💩💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩💩💩💩"', got '"a𝄞💩\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1743" name="function-parseInteger.parseInteger[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="331983131" result="Passed" start-time="2022-08-11T21:23:28.7610889Z" end-time="2022-08-11T21:23:28.7612256Z" duration="0.000137" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger(undefined, '0')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Description: 'should return result object'
Expr is '$parseInteger(undefined, '0')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1744" name="function-parseInteger.parseInteger[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="660376970" result="Passed" start-time="2022-08-11T21:23:28.7612570Z" end-time="2022-08-11T21:23:28.7615317Z" duration="0.000275" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('123', '000')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Description: 'should parse a number'
Expr is '$parseInteger('123', '000')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1745" name="function-parseInteger.parseInteger[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="927150957" result="Passed" start-time="2022-08-11T21:23:28.7615429Z" end-time="2022-08-11T21:23:28.7617125Z" duration="0.000169" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('0123', '0000')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number padded with zeros'
Expr is '$parseInteger('0123', '0000')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1746" name="function-parseInteger.parseInteger[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="794112215" result="Passed" start-time="2022-08-11T21:23:28.7621705Z" end-time="2022-08-11T21:23:28.7622994Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234', '0')';&#xA; result: 1234" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number'
Expr is '$parseInteger('1234', '0')'
Result: '1234'
Expected: '1234'
]]></output>
                </test-case>
                <test-case id="0-1747" name="function-parseInteger.parseInteger[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1491539869" result="Passed" start-time="2022-08-11T21:23:28.7623181Z" end-time="2022-08-11T21:23:28.7624404Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234', '###0')';&#xA; result: 1234" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number with optional digits'
Expr is '$parseInteger('1234', '###0')'
Result: '1234'
Expected: '1234'
]]></output>
                </test-case>
                <test-case id="0-1748" name="function-parseInteger.parseInteger[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="897321070" result="Passed" start-time="2022-08-11T21:23:28.7624491Z" end-time="2022-08-11T21:23:28.7627784Z" duration="0.000330" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12', '###0')';&#xA; result: 12" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number with optional digits'
Expr is '$parseInteger('12', '###0')'
Result: '12'
Expected: '12'
]]></output>
                </test-case>
                <test-case id="0-1749" name="function-parseInteger.parseInteger[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="945789071" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7627978Z" end-time="2022-08-11T21:23:28.7641758Z" duration="0.001378" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('123rd', '000;o')';&#xA; result: 123" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should parse a number'
Expr is '$parseInteger('123rd', '000;o')'
]]></output>
                </test-case>
                <test-case id="0-1750" name="function-parseInteger.parseInteger[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1959875201" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7647515Z" end-time="2022-08-11T21:23:28.7690656Z" duration="0.004314" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1st', '0;o')';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('1st', '0;o')'
]]></output>
                </test-case>
                <test-case id="0-1751" name="function-parseInteger.parseInteger[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1253561063" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7704512Z" end-time="2022-08-11T21:23:28.7717350Z" duration="0.001284" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('28th', '#0;o')';&#xA; result: 28" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('28th', '#0;o')'
]]></output>
                </test-case>
                <test-case id="0-1752" name="function-parseInteger.parseInteger[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1388667870" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7728565Z" end-time="2022-08-11T21:23:28.7746091Z" duration="0.001752" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234th', '###0;o')';&#xA; result: 1234" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('1234th', '###0;o')'
]]></output>
                </test-case>
                <test-case id="0-1753" name="function-parseInteger.parseInteger[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2018268937" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7746366Z" end-time="2022-08-11T21:23:28.7757898Z" duration="0.001153" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12th', '###0;o')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('12th', '###0;o')'
]]></output>
                </test-case>
                <test-case id="0-1754" name="function-parseInteger.parseInteger[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1311174851" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7758091Z" end-time="2022-08-11T21:23:28.7773224Z" duration="0.001514" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('١٢٣٤٠', '###١')';&#xA; result: 12340" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('١٢٣٤٠', '###١')'
]]></output>
                </test-case>
                <test-case id="0-1755" name="function-parseInteger.parseInteger[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1458655421" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7773435Z" end-time="2022-08-11T21:23:28.7790352Z" duration="0.001692" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('１２３４０', '###０')';&#xA; result: 12340" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('１２３４０', '###０')'
]]></output>
                </test-case>
                <test-case id="0-1756" name="function-parseInteger.parseInteger[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="810241888" result="Passed" start-time="2022-08-11T21:23:28.7790560Z" end-time="2022-08-11T21:23:28.7792332Z" duration="0.000178" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12', '#,##0')';&#xA; result: 12" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('12', '#,##0')'
Result: '12'
Expected: '12'
]]></output>
                </test-case>
                <test-case id="0-1757" name="function-parseInteger.parseInteger[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="685899818" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7792425Z" end-time="2022-08-11T21:23:28.7802641Z" duration="0.001022" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,200', '#,##0')';&#xA; result: 1200" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,200', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1758" name="function-parseInteger.parseInteger[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="31882138" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7802810Z" end-time="2022-08-11T21:23:28.7822911Z" duration="0.002010" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12,345,678', '#,##0')';&#xA; result: 12345678" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('12,345,678', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1759" name="function-parseInteger.parseInteger[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="373501024" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7844055Z" end-time="2022-08-11T21:23:28.7859777Z" duration="0.001569" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,234,567,890', '#,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,234,567,890', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1760" name="function-parseInteger.parseInteger[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="489364098" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7860045Z" end-time="2022-08-11T21:23:28.7878665Z" duration="0.001862" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,234,567,890', '#,###,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,234,567,890', '#,###,##0')'
]]></output>
                </test-case>
                <test-case id="0-1761" name="function-parseInteger.parseInteger[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="729481848" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7878939Z" end-time="2022-08-11T21:23:28.7896068Z" duration="0.001713" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234:567,890', '#:###,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert non-regular groups - different chars'
Expr is '$parseInteger('1234:567,890', '#:###,##0')'
]]></output>
                </test-case>
                <test-case id="0-1762" name="function-parseInteger.parseInteger[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1536143703" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7896433Z" end-time="2022-08-11T21:23:28.7908948Z" duration="0.001252" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12345,67,890', '##,##,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert non-regular groups - different positions'
Expr is '$parseInteger('12345,67,890', '##,##,##0')'
]]></output>
                </test-case>
                <test-case id="0-1763" name="function-parseInteger.parseInteger[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="471460881" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7909172Z" end-time="2022-08-11T21:23:28.7923191Z" duration="0.001402" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('', 'I')';&#xA; result: 0" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '0'
Expr is '$parseInteger('', 'I')'
]]></output>
                </test-case>
                <test-case id="0-1764" name="function-parseInteger.parseInteger[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="669210639" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7923393Z" end-time="2022-08-11T21:23:28.7936008Z" duration="0.001262" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('MCMLXXXIV', 'I')';&#xA; result: 1984" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1984'
Expr is '$parseInteger('MCMLXXXIV', 'I')'
]]></output>
                </test-case>
                <test-case id="0-1765" name="function-parseInteger.parseInteger[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1917751616" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7949260Z" end-time="2022-08-11T21:23:28.7962259Z" duration="0.001300" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('xcix', 'i')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('xcix', 'i')'
]]></output>
                </test-case>
                <test-case id="0-1766" name="function-parseInteger.parseInteger[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1012592148" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7962479Z" end-time="2022-08-11T21:23:28.7983222Z" duration="0.002074" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twelve', 'w')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('twelve', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1767" name="function-parseInteger.parseInteger[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1348570021" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7983454Z" end-time="2022-08-11T21:23:28.7997397Z" duration="0.001395" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twenty', 'w')';&#xA; result: 20" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$parseInteger('twenty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1768" name="function-parseInteger.parseInteger[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1026372638" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.7997621Z" end-time="2022-08-11T21:23:28.8005460Z" duration="0.000784" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('thirty-four', 'w')';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$parseInteger('thirty-four', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1769" name="function-parseInteger.parseInteger[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1381396740" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8006475Z" end-time="2022-08-11T21:23:28.8013071Z" duration="0.000660" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('NINETY-NINE', 'W')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('NINETY-NINE', 'W')'
]]></output>
                </test-case>
                <test-case id="0-1770" name="function-parseInteger.parseInteger[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1958766103" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8013240Z" end-time="2022-08-11T21:23:28.8019168Z" duration="0.000593" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one hundred', 'w')';&#xA; result: 100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$parseInteger('one hundred', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1771" name="function-parseInteger.parseInteger[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="257531149" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8019322Z" end-time="2022-08-11T21:23:28.8045733Z" duration="0.002641" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FIVE HUNDRED AND FIFTY-FIVE', 'W')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('FIVE HUNDRED AND FIFTY-FIVE', 'W')'
]]></output>
                </test-case>
                <test-case id="0-1772" name="function-parseInteger.parseInteger[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="398014531" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8046089Z" end-time="2022-08-11T21:23:28.8056878Z" duration="0.001079" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('Five Hundred and Fifty-Five', 'Ww')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('Five Hundred and Fifty-Five', 'Ww')'
]]></output>
                </test-case>
                <test-case id="0-1773" name="function-parseInteger.parseInteger[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1032769996" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8057089Z" end-time="2022-08-11T21:23:28.8068793Z" duration="0.001171" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('nine hundred and nineteen', 'w')';&#xA; result: 919" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$parseInteger('nine hundred and nineteen', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1774" name="function-parseInteger.parseInteger[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1415554878" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8068989Z" end-time="2022-08-11T21:23:28.8086673Z" duration="0.001769" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('seven hundred and thirty', 'w')';&#xA; result: 730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$parseInteger('seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1775" name="function-parseInteger.parseInteger[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="160389015" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8086896Z" end-time="2022-08-11T21:23:28.8103701Z" duration="0.001681" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousand', 'w')';&#xA; result: 1000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$parseInteger('one thousand', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1776" name="function-parseInteger.parseInteger[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1668340569" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8103927Z" end-time="2022-08-11T21:23:28.8116676Z" duration="0.001275" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three thousand, seven hundred and thirty', 'w')';&#xA; result: 3730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$parseInteger('three thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1777" name="function-parseInteger.parseInteger[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="571862487" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8122466Z" end-time="2022-08-11T21:23:28.8145248Z" duration="0.002278" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirty', 'w')';&#xA; result: 327730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1778" name="function-parseInteger.parseInteger[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="763027555" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8152306Z" end-time="2022-08-11T21:23:28.8171913Z" duration="0.001961" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty', 'w')';&#xA; result: 4327730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1779" name="function-parseInteger.parseInteger[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2086977040" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8181180Z" end-time="2022-08-11T21:23:28.8191519Z" duration="0.001034" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion and one', 'w')';&#xA; result: 1000000000001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$parseInteger('one trillion and one', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1780" name="function-parseInteger.parseInteger[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2065964508" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8193068Z" end-time="2022-08-11T21:23:28.8209589Z" duration="0.001652" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three', 'w')';&#xA; result: 1234567890123" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123'
Expr is '$parseInteger('one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1781" name="function-parseInteger.parseInteger[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1871072515" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8210682Z" end-time="2022-08-11T21:23:28.8223955Z" duration="0.001327" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousand trillion', 'w')';&#xA; result: 1000000000000000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e15'
Expr is '$parseInteger('one thousand trillion', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1782" name="function-parseInteger.parseInteger[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="234855421" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8224157Z" end-time="2022-08-11T21:23:28.8234853Z" duration="0.001070" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('ten billion trillion trillion trillion', 'w')';&#xA; result: 1E+46" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e46'
Expr is '$parseInteger('ten billion trillion trillion trillion', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1783" name="function-parseInteger.parseInteger[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="376661147" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8235031Z" end-time="2022-08-11T21:23:28.8245902Z" duration="0.001087" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twelfth', 'w;o')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('twelfth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1784" name="function-parseInteger.parseInteger[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1311624650" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8246080Z" end-time="2022-08-11T21:23:28.8261005Z" duration="0.001493" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twentieth', 'w;o')';&#xA; result: 20" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$parseInteger('twentieth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1785" name="function-parseInteger.parseInteger[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2055072513" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8261213Z" end-time="2022-08-11T21:23:28.8282782Z" duration="0.002157" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('thirty-fourth', 'w;o')';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$parseInteger('thirty-fourth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1786" name="function-parseInteger.parseInteger[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="283034290" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8283056Z" end-time="2022-08-11T21:23:28.8289199Z" duration="0.000614" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('NINETY-NINTH', 'W;o')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('NINETY-NINTH', 'W;o')'
]]></output>
                </test-case>
                <test-case id="0-1787" name="function-parseInteger.parseInteger[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1250306659" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8289344Z" end-time="2022-08-11T21:23:28.8301561Z" duration="0.001222" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one hundredth', 'w;o')';&#xA; result: 100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$parseInteger('one hundredth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1788" name="function-parseInteger.parseInteger[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1237787249" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8301742Z" end-time="2022-08-11T21:23:28.8313174Z" duration="0.001144" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FIVE HUNDRED AND FIFTY-FIFTH', 'W;o')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('FIVE HUNDRED AND FIFTY-FIFTH', 'W;o')'
]]></output>
                </test-case>
                <test-case id="0-1789" name="function-parseInteger.parseInteger[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="828930538" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8313364Z" end-time="2022-08-11T21:23:28.8323262Z" duration="0.000990" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('nine hundred and nineteenth', 'w;o')';&#xA; result: 919" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$parseInteger('nine hundred and nineteenth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1790" name="function-parseInteger.parseInteger[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="879806799" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8323546Z" end-time="2022-08-11T21:23:28.8333336Z" duration="0.000979" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('seven hundred and thirtieth', 'w;o')';&#xA; result: 730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$parseInteger('seven hundred and thirtieth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1791" name="function-parseInteger.parseInteger[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1005131255" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8333607Z" end-time="2022-08-11T21:23:28.8347038Z" duration="0.001343" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('Seven Hundred and Thirty-Third', 'Ww;o')';&#xA; result: 733" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '733'
Expr is '$parseInteger('Seven Hundred and Thirty-Third', 'Ww;o')'
]]></output>
                </test-case>
                <test-case id="0-1792" name="function-parseInteger.parseInteger[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1067901353" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8347367Z" end-time="2022-08-11T21:23:28.8357482Z" duration="0.001012" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousandth', 'w;o')';&#xA; result: 1000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$parseInteger('one thousandth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1793" name="function-parseInteger.parseInteger[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1296780649" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8358174Z" end-time="2022-08-11T21:23:28.8374604Z" duration="0.001643" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three thousand, seven hundred and thirty-first', 'w;o')';&#xA; result: 3731" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$parseInteger('three thousand, seven hundred and thirty-first', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1794" name="function-parseInteger.parseInteger[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1831201296" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8379266Z" end-time="2022-08-11T21:23:28.8387504Z" duration="0.000824" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirteenth', 'w;o')';&#xA; result: 327713" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirteenth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1795" name="function-parseInteger.parseInteger[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="316591479" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8394945Z" end-time="2022-08-11T21:23:28.8413767Z" duration="0.001883" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty-second', 'w;o')';&#xA; result: 4327732" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty-second', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1796" name="function-parseInteger.parseInteger[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="181067020" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8414138Z" end-time="2022-08-11T21:23:28.8428661Z" duration="0.001452" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion and first', 'w;o')';&#xA; result: 1000000000001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$parseInteger('one trillion and first', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1797" name="function-parseInteger.parseInteger[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="976113707" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8429821Z" end-time="2022-08-11T21:23:28.8453046Z" duration="0.002323" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('A', 'A')';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1'
Expr is '$parseInteger('A', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1798" name="function-parseInteger.parseInteger[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1810256139" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8454366Z" end-time="2022-08-11T21:23:28.8493265Z" duration="0.003890" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('l', 'a')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('l', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1799" name="function-parseInteger.parseInteger[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="890109001" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8517557Z" end-time="2022-08-11T21:23:28.8535953Z" duration="0.001840" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('z', 'a')';&#xA; result: 26" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '26'
Expr is '$parseInteger('z', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1800" name="function-parseInteger.parseInteger[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2062042456" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8542896Z" end-time="2022-08-11T21:23:28.8558651Z" duration="0.001575" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('aa', 'a')';&#xA; result: 27" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '27'
Expr is '$parseInteger('aa', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1801" name="function-parseInteger.parseInteger[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1593025841" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8558892Z" end-time="2022-08-11T21:23:28.8565603Z" duration="0.000671" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('KN', 'A')';&#xA; result: 300" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '300'
Expr is '$parseInteger('KN', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1802" name="function-parseInteger.parseInteger[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="465167231" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.8565989Z" end-time="2022-08-11T21:23:28.8579582Z" duration="0.001360" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FZPH', 'A')';&#xA; result: 123456" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 107
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '123456'
Expr is '$parseInteger('FZPH', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1803" name="function-parseInteger.parseInteger[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1663407977" result="Failed" start-time="2022-08-11T21:23:28.8579779Z" end-time="2022-08-11T21:23:28.8591715Z" duration="0.001194" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('50', '#')';&#xA; result: error D3130" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3130 (), got '50']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'unsupported picture string'
Expr is '$parseInteger('50', '#')'
Result: '50'
Expected error D3130
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3130 (), got '50']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1804" name="function-power.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1134506615" result="Passed" start-time="2022-08-11T21:23:28.8591914Z" end-time="2022-08-11T21:23:28.8594407Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(4, 2)';&#xA; result: 16" />
                  </properties>
                  <output><![CDATA[Expr is '$power(4, 2)'
Result: '16'
Expected: '16'
]]></output>
                </test-case>
                <test-case id="0-1805" name="function-power.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1702344052" result="Passed" start-time="2022-08-11T21:23:28.8594613Z" end-time="2022-08-11T21:23:28.8595554Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(4, 0.5)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$power(4, 0.5)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1806" name="function-power.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="855546532" result="Passed" start-time="2022-08-11T21:23:28.8595645Z" end-time="2022-08-11T21:23:28.8596424Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(10, -2)';&#xA; result: 0.01" />
                  </properties>
                  <output><![CDATA[Expr is '$power(10, -2)'
Result: '0.01'
Expected: '0.01'
]]></output>
                </test-case>
                <test-case id="0-1807" name="function-power.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="355897874" result="Passed" start-time="2022-08-11T21:23:28.8596505Z" end-time="2022-08-11T21:23:28.8597160Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(-2, 3)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$power(-2, 3)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1808" name="function-power.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="602714059" result="Passed" start-time="2022-08-11T21:23:28.8597239Z" end-time="2022-08-11T21:23:28.8597903Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(nothing, 3)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$power(nothing, 3)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1809" name="function-power.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1150785836" result="Passed" start-time="2022-08-11T21:23:28.8598156Z" end-time="2022-08-11T21:23:28.8602349Z" duration="0.000419" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$power(-2, 1/3)';&#xA; result: error D3061" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3061]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$power(-2, 1/3)'
]]></output>
                </test-case>
                <test-case id="0-1810" name="function-power.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1937798499" result="Passed" start-time="2022-08-11T21:23:28.8602612Z" end-time="2022-08-11T21:23:28.8608348Z" duration="0.000574" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$power(100, 1000)';&#xA; result: error D3061" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3061]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$power(100, 1000)'
]]></output>
                </test-case>
                <test-case id="0-1811" name="function-replace.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="238379401" result="Passed" start-time="2022-08-11T21:23:28.8608483Z" end-time="2022-08-11T21:23:28.8620108Z" duration="0.001163" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;Hello World&quot;, &quot;World&quot;, &quot;Everyone&quot;)';&#xA; result: &quot;Hello Everyone&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("Hello World", "World", "Everyone")'
Result: '"Hello Everyone"'
Expected: '"Hello Everyone"'
]]></output>
                </test-case>
                <test-case id="0-1812" name="function-replace.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2070355910" result="Passed" start-time="2022-08-11T21:23:28.8620256Z" end-time="2022-08-11T21:23:28.8621219Z" duration="0.000096" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;)';&#xA; result: &quot;the cit sit on the mit&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it")'
Result: '"the cit sit on the mit"'
Expected: '"the cit sit on the mit"'
]]></output>
                </test-case>
                <test-case id="0-1813" name="function-replace.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="92388745" result="Passed" start-time="2022-08-11T21:23:28.8621304Z" end-time="2022-08-11T21:23:28.8621989Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;, 0)';&#xA; result: &quot;the cat sat on the mat&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it", 0)'
Result: '"the cat sat on the mat"'
Expected: '"the cat sat on the mat"'
]]></output>
                </test-case>
                <test-case id="0-1814" name="function-replace.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="455020163" result="Passed" start-time="2022-08-11T21:23:28.8622065Z" end-time="2022-08-11T21:23:28.8622744Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;, 2)';&#xA; result: &quot;the cit sit on the mat&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it", 2)'
Result: '"the cit sit on the mat"'
Expected: '"the cit sit on the mat"'
]]></output>
                </test-case>
                <test-case id="0-1815" name="function-replace.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="765775230" result="Passed" start-time="2022-08-11T21:23:28.8622819Z" end-time="2022-08-11T21:23:28.8623465Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(nothing, &quot;at&quot;, &quot;it&quot;, 2)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$replace(nothing, "at", "it", 2)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1816" name="function-replace.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="494626427" result="Passed" start-time="2022-08-11T21:23:28.8623541Z" end-time="2022-08-11T21:23:28.8638743Z" duration="0.001521" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello")'
]]></output>
                </test-case>
                <test-case id="0-1817" name="function-replace.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1159482556" result="Passed" start-time="2022-08-11T21:23:28.8648289Z" end-time="2022-08-11T21:23:28.8666552Z" duration="0.001826" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;l&quot;, &quot;1&quot;, null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "l", "1", null)'
]]></output>
                </test-case>
                <test-case id="0-1818" name="function-replace.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1307319878" result="Passed" start-time="2022-08-11T21:23:28.8673764Z" end-time="2022-08-11T21:23:28.8694303Z" duration="0.002054" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;l&quot;, &quot;1&quot;, -2)';&#xA; result: error D3011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3011]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "l", "1", -2)'
]]></output>
                </test-case>
                <test-case id="0-1819" name="function-replace.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="761621773" result="Passed" start-time="2022-08-11T21:23:28.8694524Z" end-time="2022-08-11T21:23:28.8702161Z" duration="0.000764" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", 1)'
]]></output>
                </test-case>
                <test-case id="0-1820" name="function-replace.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1634717326" result="Passed" start-time="2022-08-11T21:23:28.8702333Z" end-time="2022-08-11T21:23:28.8712071Z" duration="0.000974" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;&quot;, &quot;bye&quot;)';&#xA; result: error D3010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3010]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "", "bye")'
]]></output>
                </test-case>
                <test-case id="0-1821" name="function-replace.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1909769136" result="Passed" start-time="2022-08-11T21:23:28.8712264Z" end-time="2022-08-11T21:23:28.8721677Z" duration="0.000942" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, 2, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", 2, 1)'
]]></output>
                </test-case>
                <test-case id="0-1822" name="function-replace.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="110782772" result="Passed" start-time="2022-08-11T21:23:28.8725055Z" end-time="2022-08-11T21:23:28.8738675Z" duration="0.001362" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(123, 2, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace(123, 2, 1)'
]]></output>
                </test-case>
                <test-case id="0-1823" name="function-reverse.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="197442100" result="Passed" start-time="2022-08-11T21:23:28.8744516Z" end-time="2022-08-11T21:23:28.8760832Z" duration="0.001632" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse([1..5])';&#xA; result: [5,4,3,2,1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse([1..5])'
Result: '[5,4,3,2,1]'
Expected: '[5,4,3,2,1]'
]]></output>
                </test-case>
                <test-case id="0-1824" name="function-reverse.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="501589941" result="Passed" start-time="2022-08-11T21:23:28.8762716Z" end-time="2022-08-11T21:23:28.8769375Z" duration="0.000666" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[[$], [$reverse($)], [$]]';&#xA; result: [[1,2,3],[3,2,1],[1,2,3]]" />
                  </properties>
                  <output><![CDATA[Expr is '[[$], [$reverse($)], [$]]'
Result: '[[1,2,3],[3,2,1],[1,2,3]]'
Expected: '[[1,2,3],[3,2,1],[1,2,3]]'
]]></output>
                </test-case>
                <test-case id="0-1825" name="function-reverse.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="953634848" result="Passed" start-time="2022-08-11T21:23:28.8776650Z" end-time="2022-08-11T21:23:28.8779367Z" duration="0.000271" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1826" name="function-reverse.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1337113443" result="Passed" start-time="2022-08-11T21:23:28.8781423Z" end-time="2022-08-11T21:23:28.8807798Z" duration="0.002637" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1827" name="function-round.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1248717529" result="Passed" start-time="2022-08-11T21:23:28.8818687Z" end-time="2022-08-11T21:23:28.8829234Z" duration="0.001055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1828" name="function-round.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1349052347" result="Passed" start-time="2022-08-11T21:23:28.8832488Z" end-time="2022-08-11T21:23:28.8842634Z" duration="0.001015" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.3)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.3)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1829" name="function-round.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1098963399" result="Passed" start-time="2022-08-11T21:23:28.8861187Z" end-time="2022-08-11T21:23:28.8892612Z" duration="0.003142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.7)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.7)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1830" name="function-round.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2126805642" result="Passed" start-time="2022-08-11T21:23:28.8896280Z" end-time="2022-08-11T21:23:28.8897496Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.5)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.5)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1831" name="function-round.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="692226862" result="Passed" start-time="2022-08-11T21:23:28.8900011Z" end-time="2022-08-11T21:23:28.8901215Z" duration="0.000121" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(3.5)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$round(3.5)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1832" name="function-round.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="909089995" result="Passed" start-time="2022-08-11T21:23:28.8901363Z" end-time="2022-08-11T21:23:28.8902127Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-0.5)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-0.5)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1833" name="function-round.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2020402201" result="Passed" start-time="2022-08-11T21:23:28.8902223Z" end-time="2022-08-11T21:23:28.8905991Z" duration="0.000377" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-0.3)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-0.3)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1834" name="function-round.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="24934584" result="Passed" start-time="2022-08-11T21:23:28.8909073Z" end-time="2022-08-11T21:23:28.8910860Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(0.5)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(0.5)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1835" name="function-round.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="472938667" result="Passed" start-time="2022-08-11T21:23:28.8915131Z" end-time="2022-08-11T21:23:28.8918093Z" duration="0.000296" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-7.5)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-7.5)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1836" name="function-round.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1405905284" result="Passed" start-time="2022-08-11T21:23:28.8937389Z" end-time="2022-08-11T21:23:28.8951731Z" duration="0.001435" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-8.5)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-8.5)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1837" name="function-round.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="718931091" result="Passed" start-time="2022-08-11T21:23:28.9007136Z" end-time="2022-08-11T21:23:28.9018535Z" duration="0.000991" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.49, 1)';&#xA; result: 4.5" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.49, 1)'
Result: '4.5'
Expected: '4.5'
]]></output>
                </test-case>
                <test-case id="0-1838" name="function-round.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1389638179" result="Passed" start-time="2022-08-11T21:23:28.9122458Z" end-time="2022-08-11T21:23:28.9129697Z" duration="0.000724" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.525, 2)';&#xA; result: 4.52" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.525, 2)'
Result: '4.52'
Expected: '4.52'
]]></output>
                </test-case>
                <test-case id="0-1839" name="function-round.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1756764245" result="Passed" start-time="2022-08-11T21:23:28.9165320Z" end-time="2022-08-11T21:23:28.9167817Z" duration="0.000249" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.515, 2)';&#xA; result: 4.52" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.515, 2)'
Result: '4.52'
Expected: '4.52'
]]></output>
                </test-case>
                <test-case id="0-1840" name="function-round.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1199525981" result="Passed" start-time="2022-08-11T21:23:28.9168043Z" end-time="2022-08-11T21:23:28.9207924Z" duration="0.003988" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12345, -2)';&#xA; result: 12300" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12345, -2)'
Result: '12300'
Expected: '12300'
]]></output>
                </test-case>
                <test-case id="0-1841" name="function-round.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2074620063" result="Passed" start-time="2022-08-11T21:23:28.9237097Z" end-time="2022-08-11T21:23:28.9243895Z" duration="0.000680" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12450, -2)';&#xA; result: 12400" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12450, -2)'
Result: '12400'
Expected: '12400'
]]></output>
                </test-case>
                <test-case id="0-1842" name="function-round.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="647592600" result="Passed" start-time="2022-08-11T21:23:28.9244771Z" end-time="2022-08-11T21:23:28.9246540Z" duration="0.000177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12350, -2)';&#xA; result: 12400" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12350, -2)'
Result: '12400'
Expected: '12400'
]]></output>
                </test-case>
                <test-case id="0-1843" name="function-round.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="87001413" result="Passed" start-time="2022-08-11T21:23:28.9246663Z" end-time="2022-08-11T21:23:28.9257039Z" duration="0.001038" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(6.022e-23, 24)';&#xA; result: 6E-23" />
                  </properties>
                  <output><![CDATA[Expr is '$round(6.022e-23, 24)'
Result: '0.000000000000000000000060'
Expected: '6E-23'
]]></output>
                </test-case>
                <test-case id="0-1844" name="function-round.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1038615686" result="Passed" start-time="2022-08-11T21:23:28.9257214Z" end-time="2022-08-11T21:23:28.9258189Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(unknown)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$round(unknown)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1845" name="function-shuffle.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="641427398" result="Passed" start-time="2022-08-11T21:23:28.9258282Z" end-time="2022-08-11T21:23:28.9268522Z" duration="0.001024" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count($shuffle([1..10]))';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$count($shuffle([1..10]))'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1846" name="function-shuffle.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1082258992" result="Passed" start-time="2022-08-11T21:23:28.9268721Z" end-time="2022-08-11T21:23:28.9279899Z" duration="0.001118" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort($shuffle([1..10]))';&#xA; result: [1,2,3,4,5,6,7,8,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort($shuffle([1..10]))'
Result: '[1,2,3,4,5,6,7,8,9,10]'
Expected: '[1,2,3,4,5,6,7,8,9,10]'
]]></output>
                </test-case>
                <test-case id="0-1847" name="function-shuffle.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="975512608" result="Passed" start-time="2022-08-11T21:23:28.9280089Z" end-time="2022-08-11T21:23:28.9282175Z" duration="0.000209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$shuffle(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$shuffle(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1848" name="function-shuffle.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="841760486" result="Passed" start-time="2022-08-11T21:23:28.9282296Z" end-time="2022-08-11T21:23:28.9283582Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$shuffle([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$shuffle([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1849" name="function-sift.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1065426066" result="Passed" start-time="2022-08-11T21:23:28.9283694Z" end-time="2022-08-11T21:23:28.9292484Z" duration="0.000879" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift(λ($v){$v.**.Postcode})';&#xA; result: {&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;},&quot;Other&quot;:{&quot;Over 18 ?&quot;:true,&quot;Misc&quot;:null,&quot;Alternative.Address&quot;:{&quot;Street&quot;:&quot;Brick Lane&quot;,&quot;City&quot;:&quot;London&quot;,&quot;Postcode&quot;:&quot;E1 6RF&quot;}}}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift(λ($v){$v.**.Postcode})'
Result: '{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"},"Other":{"Over 18 ?":true,"Misc":null,"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}}'
Expected: '{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"},"Other":{"Over 18 ?":true,"Misc":null,"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}}'
]]></output>
                </test-case>
                <test-case id="0-1850" name="function-sift.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1969448699" result="Passed" start-time="2022-08-11T21:23:28.9292756Z" end-time="2022-08-11T21:23:28.9298860Z" duration="0.000610" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**[*].$sift(λ($v){$v.Postcode})';&#xA; result: [{&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;}},{&quot;Alternative.Address&quot;:{&quot;Street&quot;:&quot;Brick Lane&quot;,&quot;City&quot;:&quot;London&quot;,&quot;Postcode&quot;:&quot;E1 6RF&quot;}}]" />
                  </properties>
                  <output><![CDATA[Expr is '**[*].$sift(λ($v){$v.Postcode})'
Result: '[{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}},{"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}]'
Expected: '[{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}},{"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}]'
]]></output>
                </test-case>
                <test-case id="0-1851" name="function-sift.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1169068111" result="Passed" start-time="2022-08-11T21:23:28.9299240Z" end-time="2022-08-11T21:23:28.9312800Z" duration="0.001356" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift(λ($v, $k){$k ~&gt; /^A/})';&#xA; result: {&quot;Age&quot;:28,&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift(λ($v, $k){$k ~> /^A/})'
Result: '{"Age":28,"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}}'
Expected: '{"Age":28,"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}}'
]]></output>
                </test-case>
                <test-case id="0-1852" name="function-sift.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1816277476" result="Passed" start-time="2022-08-11T21:23:28.9313005Z" end-time="2022-08-11T21:23:28.9314343Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift({'a': 1, 'b': 0}, $boolean)';&#xA; result: {&quot;a&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift({'a': 1, 'b': 0}, $boolean)'
Result: '{"a":1}'
Expected: '{"a":1}'
]]></output>
                </test-case>
                <test-case id="0-1853" name="function-sift.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1048634366" result="Passed" start-time="2022-08-11T21:23:28.9314445Z" end-time="2022-08-11T21:23:28.9315656Z" duration="0.000121" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift({'a': 'hello', 'b': 'world', 'hello': 'again'}, λ($v,$k,$o){$lookup($o, $v)})';&#xA; result: {&quot;a&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift({'a': 'hello', 'b': 'world', 'hello': 'again'}, λ($v,$k,$o){$lookup($o, $v)})'
Result: '{"a":"hello"}'
Expected: '{"a":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1854" name="function-signatures.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1402875322" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9315743Z" end-time="2022-08-11T21:23:28.9403525Z" duration="0.008779" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;b:b&gt;{$not($arg)}(true)';&#xA; result: false" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<b:b>{$not($arg)}(true)'
]]></output>
                </test-case>
                <test-case id="0-1855" name="function-signatures.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="152273320" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9403906Z" end-time="2022-08-11T21:23:28.9409363Z" duration="0.000546" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;b:b&gt;{$not($arg)}(foo)';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<b:b>{$not($arg)}(foo)'
]]></output>
                </test-case>
                <test-case id="0-1856" name="function-signatures.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1482243069" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9409653Z" end-time="2022-08-11T21:23:28.9420973Z" duration="0.001132" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;x:b&gt;{$not($arg)}(null)';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<x:b>{$not($arg)}(null)'
]]></output>
                </test-case>
                <test-case id="0-1857" name="function-signatures.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="267725131" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9422344Z" end-time="2022-08-11T21:23:28.9441015Z" duration="0.001867" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'function($x,$y)&lt;n-n:n&gt;{$x+$y}(2, 6)';&#xA; result: 8" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'function($x,$y)<n-n:n>{$x+$y}(2, 6)'
]]></output>
                </test-case>
                <test-case id="0-1858" name="function-signatures.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1161818036" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9442107Z" end-time="2022-08-11T21:23:28.9453925Z" duration="0.001182" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].function($x,$y)&lt;n-n:n&gt;{$x+$y}(6)';&#xA; result: [7,8,9,10,11]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1250
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1212
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 79
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].function($x,$y)<n-n:n>{$x+$y}(6)'
]]></output>
                </test-case>
                <test-case id="0-1859" name="function-signatures.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="180871767" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9460633Z" end-time="2022-08-11T21:23:28.9479447Z" duration="0.001882" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].function($x,$y)&lt;n-n:n&gt;{$x+$y}(2, 6)';&#xA; result: [8,8,8,8,8]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1250
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1212
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 79
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].function($x,$y)<n-n:n>{$x+$y}(2, 6)'
]]></output>
                </test-case>
                <test-case id="0-1860" name="function-signatures.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="365230609" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9479685Z" end-time="2022-08-11T21:23:28.9489765Z" duration="0.001008" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Age.function($x,$y)&lt;n-n:n&gt;{$x+$y}(6)';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1250
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1212
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 79
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Age.function($x,$y)<n-n:n>{$x+$y}(6)'
]]></output>
                </test-case>
                <test-case id="0-1861" name="function-signatures.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1754312650" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9489961Z" end-time="2022-08-11T21:23:28.9498772Z" duration="0.000881" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($str)&lt;s-&gt;{$uppercase($str)}(&quot;hello&quot;)';&#xA; result: &quot;HELLO&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($str)<s->{$uppercase($str)}("hello")'
]]></output>
                </test-case>
                <test-case id="0-1862" name="function-signatures.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1154329174" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9503092Z" end-time="2022-08-11T21:23:28.9508622Z" duration="0.000554" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.Colour.λ($str)&lt;s-&gt;{$uppercase($str)}()';&#xA; result: [&quot;PURPLE&quot;,&quot;ORANGE&quot;,&quot;PURPLE&quot;,&quot;BLACK&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1250
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1212
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 79
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.Colour.λ($str)<s->{$uppercase($str)}()'
]]></output>
                </test-case>
                <test-case id="0-1863" name="function-signatures.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1651234307" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9508788Z" end-time="2022-08-11T21:23:28.9512550Z" duration="0.000376" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($str, $prefix)&lt;s-s&gt;{$prefix &amp; $str}(&quot;World&quot;, &quot;Hello &quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($str, $prefix)<s-s>{$prefix & $str}("World", "Hello ")'
]]></output>
                </test-case>
                <test-case id="0-1864" name="function-signatures.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1171463841" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9514141Z" end-time="2022-08-11T21:23:28.9521422Z" duration="0.000729" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'FirstName.λ($str, $prefix)&lt;s-s&gt;{$prefix &amp; $str}(&quot;Hello &quot;)';&#xA; result: &quot;Hello Fred&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1250
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1212
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 79
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'FirstName.λ($str, $prefix)<s-s>{$prefix & $str}("Hello ")'
]]></output>
                </test-case>
                <test-case id="0-1865" name="function-signatures.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1245571637" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9521814Z" end-time="2022-08-11T21:23:28.9532340Z" duration="0.001053" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(&quot;a&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}("a")'
]]></output>
                </test-case>
                <test-case id="0-1866" name="function-signatures.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1476773053" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9532506Z" end-time="2022-08-11T21:23:28.9544180Z" duration="0.001168" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;])';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a"])'
]]></output>
                </test-case>
                <test-case id="0-1867" name="function-signatures.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="49953709" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9547087Z" end-time="2022-08-11T21:23:28.9575559Z" duration="0.002847" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(&quot;a&quot;, &quot;-&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}("a", "-")'
]]></output>
                </test-case>
                <test-case id="0-1868" name="function-signatures.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="67454161" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9577398Z" end-time="2022-08-11T21:23:28.9590864Z" duration="0.001347" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;], &quot;-&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1869" name="function-signatures.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2129565143" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9593581Z" end-time="2022-08-11T21:23:28.9602978Z" duration="0.000940" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;, &quot;b&quot;], &quot;-&quot;)';&#xA; result: &quot;a-b&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a", "b"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1870" name="function-signatures.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1507353593" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9606163Z" end-time="2022-08-11T21:23:28.9614832Z" duration="0.000868" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;as?:s&gt;{$join($arr, $sep)}([&quot;a&quot;, &quot;b&quot;], &quot;-&quot;)';&#xA; result: &quot;a-b&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<as?:s>{$join($arr, $sep)}(["a", "b"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1871" name="function-signatures.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1923178983" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9615321Z" end-time="2022-08-11T21:23:28.9622812Z" duration="0.000749" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([], &quot;-&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}([], "-")'
]]></output>
                </test-case>
                <test-case id="0-1872" name="function-signatures.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1917328024" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9622978Z" end-time="2022-08-11T21:23:28.9639973Z" duration="0.001700" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(foo, &quot;-&quot;)';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(foo, "-")'
]]></output>
                </test-case>
                <test-case id="0-1873" name="function-signatures.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1698039280" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9641036Z" end-time="2022-08-11T21:23:28.9652072Z" duration="0.001104" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($obj)&lt;o&gt;{$obj}({&quot;hello&quot;: &quot;world&quot;})';&#xA; result: {&quot;hello&quot;:&quot;world&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($obj)<o>{$obj}({"hello": "world"})'
]]></output>
                </test-case>
                <test-case id="0-1874" name="function-signatures.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1709579439" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9655504Z" end-time="2022-08-11T21:23:28.9668310Z" duration="0.001281" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;a&lt;n&gt;&gt;&gt;{$arr}([[1]])';&#xA; result: [[1]]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<a<n>>>{$arr}([[1]])'
]]></output>
                </test-case>
                <test-case id="0-1875" name="function-signatures.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1707580910" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9671021Z" end-time="2022-08-11T21:23:28.9679527Z" duration="0.000851" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($num)&lt;(ns)-:n&gt;{$number($num)}(5)';&#xA; result: 5" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($num)<(ns)-:n>{$number($num)}(5)'
]]></output>
                </test-case>
                <test-case id="0-1876" name="function-signatures.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1262176536" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9686265Z" end-time="2022-08-11T21:23:28.9693241Z" duration="0.000698" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($num)&lt;(ns)-:n&gt;{$number($num)}(&quot;5&quot;)';&#xA; result: 5" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($num)<(ns)-:n>{$number($num)}("5")'
]]></output>
                </test-case>
                <test-case id="0-1877" name="function-signatures.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="23781359" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9697739Z" end-time="2022-08-11T21:23:28.9704522Z" duration="0.000678" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].λ($num)&lt;(ns)-:n&gt;{$number($num)}()';&#xA; result: [1,2,3,4,5]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1250
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1212
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 79
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].λ($num)<(ns)-:n>{$number($num)}()'
]]></output>
                </test-case>
                <test-case id="0-1878" name="function-signatures.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1306310061" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9704688Z" end-time="2022-08-11T21:23:28.9710804Z" duration="0.000612" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($twice := function($f)&lt;f:f&gt;{function($x)&lt;n:n&gt;{$f($f($x))}};$add2 := function($x)&lt;n:n&gt;{$x+2};$add4 := $twice($add2);$add4(5))';&#xA; result: 9" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($twice := function($f)<f:f>{function($x)<n:n>{$f($f($x))}};$add2 := function($x)<n:n>{$x+2};$add4 := $twice($add2);$add4(5))'
]]></output>
                </test-case>
                <test-case id="0-1879" name="function-signatures.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2007646190" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9713156Z" end-time="2022-08-11T21:23:28.9724491Z" duration="0.001134" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($twice := function($f)&lt;f&lt;n:n&gt;:f&lt;n:n&gt;&gt;{function($x)&lt;n:n&gt;{$f($f($x))}};$add2 := function($x)&lt;n:n&gt;{$x+2};$add4 := $twice($add2);$add4(5))';&#xA; result: 9" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 409
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 93
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($twice := function($f)<f<n:n>:f<n:n>>{function($x)<n:n>{$f($f($x))}};$add2 := function($x)<n:n>{$x+2};$add4 := $twice($add2);$add4(5))'
]]></output>
                </test-case>
                <test-case id="0-1880" name="function-signatures.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2018859503" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9730344Z" end-time="2022-08-11T21:23:28.9742380Z" duration="0.001204" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;n&lt;n&gt;&gt;{$arg}(5)';&#xA; result: error S0401" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<n<n>>{$arg}(5)'
]]></output>
                </test-case>
                <test-case id="0-1881" name="function-signatures.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="361600835" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9743792Z" end-time="2022-08-11T21:23:28.9758374Z" duration="0.001458" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn:a&gt;{[$arg1, $arg2]}(1,&quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn:a>{[$arg1, $arg2]}(1,"2")'
]]></output>
                </test-case>
                <test-case id="0-1882" name="function-signatures.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="406957043" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9761972Z" end-time="2022-08-11T21:23:28.9772471Z" duration="0.001050" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn:a&gt;{[$arg1, $arg2]}(1,3,&quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn:a>{[$arg1, $arg2]}(1,3,"2")'
]]></output>
                </test-case>
                <test-case id="0-1883" name="function-signatures.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="283626281" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9773609Z" end-time="2022-08-11T21:23:28.9783115Z" duration="0.000951" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn+:a&gt;{[$arg1, $arg2]}(1,3, 2,&quot;g&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn+:a>{[$arg1, $arg2]}(1,3, 2,"g")'
]]></output>
                </test-case>
                <test-case id="0-1884" name="function-signatures.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1276998347" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9783707Z" end-time="2022-08-11T21:23:28.9797460Z" duration="0.001375" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}([&quot;3&quot;]) ';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}(["3"]) '
]]></output>
                </test-case>
                <test-case id="0-1885" name="function-signatures.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="957737531" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9804593Z" end-time="2022-08-11T21:23:28.9816922Z" duration="0.001233" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}([1, 2, &quot;3&quot;]) ';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}([1, 2, "3"]) '
]]></output>
                </test-case>
                <test-case id="0-1886" name="function-signatures.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1023433033" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9825048Z" end-time="2022-08-11T21:23:28.9835254Z" duration="0.001021" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}(&quot;f&quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}("f")'
]]></output>
                </test-case>
                <test-case id="0-1887" name="function-signatures.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2007939276" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9835459Z" end-time="2022-08-11T21:23:28.9841014Z" duration="0.000556" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($fun := λ($arr)&lt;a&lt;n&gt;&gt;{$arr};$fun(&quot;f&quot;))';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($fun := λ($arr)<a<n>>{$arr};$fun("f"))'
]]></output>
                </test-case>
                <test-case id="0-1888" name="function-signatures.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="617526879" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:28.9841587Z" end-time="2022-08-11T21:23:28.9848947Z" duration="0.000736" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;(sa&lt;n&gt;)&gt;&gt;{$arr}([[1]])';&#xA; result: error S0402" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to parse lambda signature: Unexpected param type char '<'. Remainder string '<n>)>', Whole string was: '<(sa<n>)>'
(Exception)
   at Jsonata.Net.Native.Parsing.SignatureParser.Parse(String str) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\SignatureParser.cs:line 32
   at Jsonata.Net.Native.Parsing.Parser.ParseLambdaDefinition(Boolean isShorthand) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 58
   at Jsonata.Net.Native.Parsing.Parser.parseFunctionCall(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<(sa<n>)>>{$arr}([[1]])'
]]></output>
                </test-case>
                <test-case id="0-1889" name="function-sort.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2020144911" result="Passed" start-time="2022-08-11T21:23:28.9850284Z" end-time="2022-08-11T21:23:28.9851612Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1890" name="function-sort.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1138179245" result="Passed" start-time="2022-08-11T21:23:28.9854873Z" end-time="2022-08-11T21:23:28.9856122Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(1)';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(1)'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1891" name="function-sort.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1138180153" result="Passed" start-time="2022-08-11T21:23:28.9860922Z" end-time="2022-08-11T21:23:28.9862718Z" duration="0.000180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort([1,3,2])';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort([1,3,2])'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1892" name="function-sort.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1704596702" result="Passed" start-time="2022-08-11T21:23:28.9866969Z" end-time="2022-08-11T21:23:28.9879188Z" duration="0.001222" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort([1,3,22,11])';&#xA; result: [1,3,11,22]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort([1,3,22,11])'
Result: '[1,3,11,22]'
Expected: '[1,3,11,22]'
]]></output>
                </test-case>
                <test-case id="0-1893" name="function-sort.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1208766412" result="Passed" start-time="2022-08-11T21:23:28.9879357Z" end-time="2022-08-11T21:23:28.9880791Z" duration="0.000143" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[[$], [$sort($)], [$]]';&#xA; result: [[1,3,2],[1,2,3],[1,3,2]]" />
                  </properties>
                  <output><![CDATA[Expr is '[[$], [$sort($)], [$]]'
Result: '[[1,3,2],[1,2,3],[1,3,2]]'
Expected: '[[1,3,2],[1,2,3],[1,3,2]]'
]]></output>
                </test-case>
                <test-case id="0-1894" name="function-sort.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1391533636" result="Passed" start-time="2022-08-11T21:23:28.9880891Z" end-time="2022-08-11T21:23:28.9882630Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product.Price)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product.Price)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1895" name="function-sort.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1592696978" result="Passed" start-time="2022-08-11T21:23:28.9882747Z" end-time="2022-08-11T21:23:28.9889495Z" duration="0.000675" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product.&quot;Product Name&quot;)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Bowler Hat&quot;,&quot;Cloak&quot;,&quot;Trilby hat&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product."Product Name")'
Result: '["Bowler Hat","Bowler Hat","Cloak","Trilby hat"]'
Expected: '["Bowler Hat","Bowler Hat","Cloak","Trilby hat"]'
]]></output>
                </test-case>
                <test-case id="0-1896" name="function-sort.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="920290889" result="Passed" start-time="2022-08-11T21:23:28.9894216Z" end-time="2022-08-11T21:23:28.9904785Z" duration="0.001057" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product)';&#xA; result: error D3070" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3070]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product)'
]]></output>
                </test-case>
                <test-case id="0-1897" name="function-sort.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1143841940" result="Passed" start-time="2022-08-11T21:23:28.9909796Z" end-time="2022-08-11T21:23:28.9919139Z" duration="0.000934" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product, function($a, $b) { $a.(Price * Quantity) &gt; $b.(Price * Quantity) }).(Price &amp; &quot; x &quot; &amp; Quantity)';&#xA; result: [&quot;21.67 x 1&quot;,&quot;34.45 x 2&quot;,&quot;107.99 x 1&quot;,&quot;34.45 x 4&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product, function($a, $b) { $a.(Price * Quantity) > $b.(Price * Quantity) }).(Price & " x " & Quantity)'
Result: '["21.67 x 1","34.45 x 2","107.99 x 1","34.45 x 4"]'
Expected: '["21.67 x 1","34.45 x 2","107.99 x 1","34.45 x 4"]'
]]></output>
                </test-case>
                <test-case id="0-1898" name="function-sort.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1063021219" result="Failed" start-time="2022-08-11T21:23:28.9924268Z" end-time="2022-08-11T21:23:28.9939916Z" duration="0.001565" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product, function($a, $b) { $a.Price &gt; $b.Price }).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '["0406634348","0406654608","040657863","0406654603"]', got '["0406634348","040657863","0406654608","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product, function($a, $b) { $a.Price > $b.Price }).SKU'
Result: '["0406634348","040657863","0406654608","0406654603"]'
Expected: '["0406634348","0406654608","040657863","0406654603"]'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '["0406634348","0406654608","040657863","0406654603"]', got '["0406634348","040657863","0406654608","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1899" name="function-sort.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1940527696" result="Failed" start-time="2022-08-11T21:23:28.9941927Z" end-time="2022-08-11T21:23:28.9954292Z" duration="0.001237" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&#xA;                (Account.Order.Product&#xA;                  ~&gt; $sort(λ($a,$b){$a.Quantity &lt; $b.Quantity})&#xA;                  ~&gt; $sort(λ($a,$b){$a.Price &gt; $b.Price})&#xA;                ).SKU&#xA;            ';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654608&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '["0406634348","040657863","0406654608","0406654603"]', got '["0406634348","0406654608","040657863","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '
                (Account.Order.Product
                  ~> $sort(λ($a,$b){$a.Quantity < $b.Quantity})
                  ~> $sort(λ($a,$b){$a.Price > $b.Price})
                ).SKU
            '
Result: '["0406634348","0406654608","040657863","0406654603"]'
Expected: '["0406634348","040657863","0406654608","0406654603"]'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '["0406634348","040657863","0406654608","0406654603"]', got '["0406634348","0406654608","040657863","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1900" name="function-split.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1312137992" result="Passed" start-time="2022-08-11T21:23:28.9961802Z" end-time="2022-08-11T21:23:28.9974882Z" duration="0.001308" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;,&quot;World&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello World", " ")'
Result: '["Hello","World"]'
Expected: '["Hello","World"]'
]]></output>
                </test-case>
                <test-case id="0-1901" name="function-split.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1032305283" result="Passed" start-time="2022-08-11T21:23:28.9975142Z" end-time="2022-08-11T21:23:28.9977517Z" duration="0.000238" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello", " ")'
Result: '["Hello"]'
Expected: '["Hello"]'
]]></output>
                </test-case>
                <test-case id="0-1902" name="function-split.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="908058447" result="Passed" start-time="2022-08-11T21:23:28.9977756Z" end-time="2022-08-11T21:23:28.9980289Z" duration="0.000254" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello  World&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;,&quot;&quot;,&quot;World&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello  World", " ")'
Result: '["Hello","","World"]'
Expected: '["Hello","","World"]'
]]></output>
                </test-case>
                <test-case id="0-1903" name="function-split.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="859678990" result="Passed" start-time="2022-08-11T21:23:28.9980663Z" end-time="2022-08-11T21:23:28.9983443Z" duration="0.000278" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello&quot;, &quot;&quot;)';&#xA; result: [&quot;H&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello", "")'
Result: '["H","e","l","l","o"]'
Expected: '["H","e","l","l","o"]'
]]></output>
                </test-case>
                <test-case id="0-1904" name="function-split.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1705556120" result="Passed" start-time="2022-08-11T21:23:28.9983570Z" end-time="2022-08-11T21:23:28.9986314Z" duration="0.000274" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum($split(&quot;12345&quot;, &quot;&quot;).$number($))';&#xA; result: 15" />
                  </properties>
                  <output><![CDATA[Expr is '$sum($split("12345", "").$number($))'
Result: '15'
Expected: '15'
]]></output>
                </test-case>
                <test-case id="0-1905" name="function-split.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="46269716" result="Passed" start-time="2022-08-11T21:23:28.9986441Z" end-time="2022-08-11T21:23:28.9987660Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;)';&#xA; result: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ")'
Result: '["a","b","c","d"]'
Expected: '["a","b","c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1906" name="function-split.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1399223734" result="Passed" start-time="2022-08-11T21:23:28.9987766Z" end-time="2022-08-11T21:23:28.9989740Z" duration="0.000197" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 2)';&#xA; result: [&quot;a&quot;,&quot;b&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 2)'
Result: '["a","b"]'
Expected: '["a","b"]'
]]></output>
                </test-case>
                <test-case id="0-1907" name="function-split.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="118238196" result="Passed" start-time="2022-08-11T21:23:28.9989861Z" end-time="2022-08-11T21:23:28.9992708Z" duration="0.000285" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 2.5)';&#xA; result: [&quot;a&quot;,&quot;b&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 2.5)'
Result: '["a","b"]'
Expected: '["a","b"]'
]]></output>
                </test-case>
                <test-case id="0-1908" name="function-split.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1486538574" result="Passed" start-time="2022-08-11T21:23:28.9992810Z" end-time="2022-08-11T21:23:28.9993680Z" duration="0.000087" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 10)';&#xA; result: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 10)'
Result: '["a","b","c","d"]'
Expected: '["a","b","c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1909" name="function-split.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1842778059" result="Passed" start-time="2022-08-11T21:23:28.9993770Z" end-time="2022-08-11T21:23:29.0001667Z" duration="0.000790" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 0)';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 0)'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-1910" name="function-split.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1037580431" result="Passed" start-time="2022-08-11T21:23:29.0011526Z" end-time="2022-08-11T21:23:29.0015580Z" duration="0.000405" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(nothing, &quot; &quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$split(nothing, " ")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1911" name="function-split.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1458461710" result="Passed" start-time="2022-08-11T21:23:29.0021389Z" end-time="2022-08-11T21:23:29.0046804Z" duration="0.002541" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, -3)';&#xA; result: error D3020" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3020]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", -3)'
]]></output>
                </test-case>
                <test-case id="0-1912" name="function-split.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1108898717" result="Passed" start-time="2022-08-11T21:23:29.0052618Z" end-time="2022-08-11T21:23:29.0059612Z" duration="0.000699" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", null)'
]]></output>
                </test-case>
                <test-case id="0-1913" name="function-split.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1301655493" result="Passed" start-time="2022-08-11T21:23:29.0059790Z" end-time="2022-08-11T21:23:29.0076894Z" duration="0.001711" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, -5)';&#xA; result: error D3020" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3020]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", -5)'
]]></output>
                </test-case>
                <test-case id="0-1914" name="function-split.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="309495911" result="Passed" start-time="2022-08-11T21:23:29.0084522Z" end-time="2022-08-11T21:23:29.0094412Z" duration="0.000989" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, &quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", "2")'
]]></output>
                </test-case>
                <test-case id="0-1915" name="function-split.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="3629774" result="Passed" start-time="2022-08-11T21:23:29.0094605Z" end-time="2022-08-11T21:23:29.0102348Z" duration="0.000774" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, true)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", true)'
]]></output>
                </test-case>
                <test-case id="0-1916" name="function-split.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1347355607" result="Passed" start-time="2022-08-11T21:23:29.0102511Z" end-time="2022-08-11T21:23:29.0108926Z" duration="0.000642" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(12345, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split(12345, 3)'
]]></output>
                </test-case>
                <test-case id="0-1917" name="function-split.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="870702893" result="Passed" start-time="2022-08-11T21:23:29.0109080Z" end-time="2022-08-11T21:23:29.0114830Z" duration="0.000575" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(12345)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split(12345)'
]]></output>
                </test-case>
                <test-case id="0-1918" name="function-split.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="374235960" result="Passed" start-time="2022-08-11T21:23:29.0114990Z" end-time="2022-08-11T21:23:29.0116765Z" duration="0.000178" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split('12💩345💩6', '💩')';&#xA; result: [&quot;12&quot;,&quot;345&quot;,&quot;6&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split('12💩345💩6', '💩')'
Result: '["12","345","6"]'
Expected: '["12","345","6"]'
]]></output>
                </test-case>
                <test-case id="0-1919" name="function-spread.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="213726310" result="Passed" start-time="2022-08-11T21:23:29.0119802Z" end-time="2022-08-11T21:23:29.0136994Z" duration="0.001720" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread(&quot;Hello World&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$spread("Hello World")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1920" name="function-spread.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="222138604" result="Passed" start-time="2022-08-11T21:23:29.0137178Z" end-time="2022-08-11T21:23:29.0141830Z" duration="0.000465" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread((Account.Order.Product.Description))';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Orange&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.6},{&quot;Colour&quot;:&quot;Purple&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Black&quot;},{&quot;Width&quot;:30},{&quot;Height&quot;:20},{&quot;Depth&quot;:210},{&quot;Weight&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is '$spread((Account.Order.Product.Description))'
Result: '[{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Orange"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.6},{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Black"},{"Width":30},{"Height":20},{"Depth":210},{"Weight":2}]'
Expected: '[{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Orange"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.6},{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Black"},{"Width":30},{"Height":20},{"Depth":210},{"Weight":2}]'
]]></output>
                </test-case>
                <test-case id="0-1921" name="function-spread.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1616317424" result="Passed" start-time="2022-08-11T21:23:29.0143731Z" end-time="2022-08-11T21:23:29.0146288Z" duration="0.000255" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$spread(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1922" name="function-spread.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1579910477" result="Passed" start-time="2022-08-11T21:23:29.0146415Z" end-time="2022-08-11T21:23:29.0147330Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string($spread(function($x){$x*$x}))';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string($spread(function($x){$x*$x}))'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1923" name="function-sqrt.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="194792897" result="Passed" start-time="2022-08-11T21:23:29.0147411Z" end-time="2022-08-11T21:23:29.0151269Z" duration="0.000386" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(4)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(4)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1924" name="function-sqrt.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="991385898" result="Passed" start-time="2022-08-11T21:23:29.0151399Z" end-time="2022-08-11T21:23:29.0152347Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(2)';&#xA; result: 1.4142135623730951" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(2)'
Result: '1.4142135623731'
Expected: '1.4142135623730951'
]]></output>
                </test-case>
                <test-case id="0-1925" name="function-sqrt.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="369173440" result="Passed" start-time="2022-08-11T21:23:29.0152437Z" end-time="2022-08-11T21:23:29.0153077Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1926" name="function-sqrt.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="218582281" result="Passed" start-time="2022-08-11T21:23:29.0153156Z" end-time="2022-08-11T21:23:29.0161561Z" duration="0.000841" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(-2)';&#xA; result: error D3060" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3060]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sqrt(-2)'
]]></output>
                </test-case>
                <test-case id="0-1927" name="function-string.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="708561612" result="Passed" start-time="2022-08-11T21:23:29.0164456Z" end-time="2022-08-11T21:23:29.0168317Z" duration="0.000386" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(5)';&#xA; result: &quot;5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(5)'
Result: '"5"'
Expected: '"5"'
]]></output>
                </test-case>
                <test-case id="0-1928" name="function-string.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="306505644" result="Passed" start-time="2022-08-11T21:23:29.0178589Z" end-time="2022-08-11T21:23:29.0181961Z" duration="0.000337" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(22/7)';&#xA; result: &quot;3.14285714285714&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(22/7)'
Result: '"3.14285714285714"'
Expected: '"3.14285714285714"'
]]></output>
                </test-case>
                <test-case id="0-1929" name="function-string.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="116882461" result="Passed" start-time="2022-08-11T21:23:29.0185167Z" end-time="2022-08-11T21:23:29.0191066Z" duration="0.000590" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e100)';&#xA; result: &quot;1e+100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(1e100)'
Result: '"1e+100"'
Expected: '"1e+100"'
]]></output>
                </test-case>
                <test-case id="0-1930" name="function-string.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="787290021" result="Failed" start-time="2022-08-11T21:23:29.0195726Z" end-time="2022-08-11T21:23:29.0206920Z" duration="0.001120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-100)';&#xA; result: &quot;1e-100&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e-100"', got '"0"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e-100)'
Result: '"0"'
Expected: '"1e-100"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e-100"', got '"0"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1931" name="function-string.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="118334596" result="Passed" start-time="2022-08-11T21:23:29.0211934Z" end-time="2022-08-11T21:23:29.0213455Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-6)';&#xA; result: &quot;0.000001&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(1e-6)'
Result: '"0.000001"'
Expected: '"0.000001"'
]]></output>
                </test-case>
                <test-case id="0-1932" name="function-string.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1108243787" result="Failed" start-time="2022-08-11T21:23:29.0213627Z" end-time="2022-08-11T21:23:29.0222101Z" duration="0.000848" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-7)';&#xA; result: &quot;1e-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e-7"', got '"0.0000001"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e-7)'
Result: '"0.0000001"'
Expected: '"1e-7"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e-7"', got '"0.0000001"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1933" name="function-string.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1513266012" result="Passed" start-time="2022-08-11T21:23:29.0222279Z" end-time="2022-08-11T21:23:29.0225201Z" duration="0.000293" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e20)';&#xA; result: &quot;100000000000000000000&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(1e20)'
Result: '"100000000000000000000"'
Expected: '"100000000000000000000"'
]]></output>
                </test-case>
                <test-case id="0-1934" name="function-string.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="695508198" result="Failed" start-time="2022-08-11T21:23:29.0226031Z" end-time="2022-08-11T21:23:29.0236609Z" duration="0.001058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e21)';&#xA; result: &quot;1e+21&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e+21"', got '"1000000000000000000000"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e21)'
Result: '"1000000000000000000000"'
Expected: '"1e+21"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e+21"', got '"1000000000000000000000"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1935" name="function-string.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="986554220" result="Passed" start-time="2022-08-11T21:23:29.0238891Z" end-time="2022-08-11T21:23:29.0242151Z" duration="0.000326" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$string($sum(Product.(Price* Quantity)))';&#xA; result: [&quot;90.57&quot;,&quot;245.79&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$string($sum(Product.(Price* Quantity)))'
Result: '["90.57","245.79"]'
Expected: '["90.57","245.79"]'
]]></output>
                </test-case>
                <test-case id="0-1936" name="function-string.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1601026035" result="Passed" start-time="2022-08-11T21:23:29.0242278Z" end-time="2022-08-11T21:23:29.0246507Z" duration="0.000423" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(true)';&#xA; result: &quot;true&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(true)'
Result: '"true"'
Expected: '"true"'
]]></output>
                </test-case>
                <test-case id="0-1937" name="function-string.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1694761700" result="Passed" start-time="2022-08-11T21:23:29.0246643Z" end-time="2022-08-11T21:23:29.0247805Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(false)';&#xA; result: &quot;false&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(false)'
Result: '"false"'
Expected: '"false"'
]]></output>
                </test-case>
                <test-case id="0-1938" name="function-string.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="725553808" result="Passed" start-time="2022-08-11T21:23:29.0247893Z" end-time="2022-08-11T21:23:29.0253193Z" duration="0.000530" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(null)';&#xA; result: &quot;null&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(null)'
Result: '"null"'
Expected: '"null"'
]]></output>
                </test-case>
                <test-case id="0-1939" name="function-string.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1230728631" result="Passed" start-time="2022-08-11T21:23:29.0253833Z" end-time="2022-08-11T21:23:29.0259207Z" duration="0.000537" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$string(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1940" name="function-string.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1705997444" result="Passed" start-time="2022-08-11T21:23:29.0260499Z" end-time="2022-08-11T21:23:29.0262319Z" duration="0.000182" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string($string)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string($string)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1941" name="function-string.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="905194837" result="Passed" start-time="2022-08-11T21:23:29.0262458Z" end-time="2022-08-11T21:23:29.0280147Z" duration="0.001769" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(function(){true})';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(function(){true})'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1942" name="function-string.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="521400702" result="Passed" start-time="2022-08-11T21:23:29.0280395Z" end-time="2022-08-11T21:23:29.0285092Z" duration="0.000470" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(function(){1})';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(function(){1})'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1943" name="function-string.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="922232467" result="Passed" start-time="2022-08-11T21:23:29.0289735Z" end-time="2022-08-11T21:23:29.0296273Z" duration="0.000654" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;})';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({"string": "hello"})'
Result: '"{\"string\":\"hello\"}"'
Expected: '"{\"string\":\"hello\"}"'
]]></output>
                </test-case>
                <test-case id="0-1944" name="function-string.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="982564480" result="Passed" start-time="2022-08-11T21:23:29.0296950Z" end-time="2022-08-11T21:23:29.0307024Z" duration="0.001008" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5])';&#xA; result: &quot;[\&quot;string\&quot;,5]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(["string", 5])'
Result: '"[\"string\",5]"'
Expected: '"[\"string\",5]"'
]]></output>
                </test-case>
                <test-case id="0-1945" name="function-string.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1827201182" result="Passed" start-time="2022-08-11T21:23:29.0308325Z" end-time="2022-08-11T21:23:29.0316261Z" duration="0.000794" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []})';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;,\&quot;number\&quot;:39.4,\&quot;null\&quot;:null,\&quot;boolean\&quot;:false,\&quot;function\&quot;:\&quot;\&quot;,\&quot;lambda\&quot;:\&quot;\&quot;,\&quot;object\&quot;:{\&quot;str\&quot;:\&quot;another\&quot;,\&quot;lambda2\&quot;:\&quot;\&quot;},\&quot;array\&quot;:[]}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []})'
Result: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
Expected: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
]]></output>
                </test-case>
                <test-case id="0-1946" name="function-string.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="29281436" result="Passed" start-time="2022-08-11T21:23:29.0316974Z" end-time="2022-08-11T21:23:29.0326630Z" duration="0.000966" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string(1/0)';&#xA; result: error D3001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3001]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$string(1/0)'
]]></output>
                </test-case>
                <test-case id="0-1947" name="function-string.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="402941209" result="Passed" start-time="2022-08-11T21:23:29.0326842Z" end-time="2022-08-11T21:23:29.0373472Z" duration="0.004664" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;inf&quot;: 1/0})';&#xA; result: error D1001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1001]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$string({"inf": 1/0})'
]]></output>
                </test-case>
                <test-case id="0-1948" name="function-string.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="899270501" result="Passed" start-time="2022-08-11T21:23:29.0374142Z" end-time="2022-08-11T21:23:29.0391677Z" duration="0.001754" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$string(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1949" name="function-string.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1387903862" result="Passed" start-time="2022-08-11T21:23:29.0396951Z" end-time="2022-08-11T21:23:29.0398430Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$string()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1950" name="function-string.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="245341371" result="Passed" start-time="2022-08-11T21:23:29.0398883Z" end-time="2022-08-11T21:23:29.0400100Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;}, false)';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({"string": "hello"}, false)'
Result: '"{\"string\":\"hello\"}"'
Expected: '"{\"string\":\"hello\"}"'
]]></output>
                </test-case>
                <test-case id="0-1951" name="function-string.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="49587996" result="Passed" start-time="2022-08-11T21:23:29.0400417Z" end-time="2022-08-11T21:23:29.0410514Z" duration="0.001010" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;}, true)';&#xA; result: &quot;{\n  \&quot;string\&quot;: \&quot;hello\&quot;\n}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({"string": "hello"}, true)'
Result: '"{\n  \"string\": \"hello\"\n}"'
Expected: '"{\n  \"string\": \"hello\"\n}"'
]]></output>
                </test-case>
                <test-case id="0-1952" name="function-string.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="769605980" result="Passed" start-time="2022-08-11T21:23:29.0410683Z" end-time="2022-08-11T21:23:29.0412669Z" duration="0.000199" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5], false)';&#xA; result: &quot;[\&quot;string\&quot;,5]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(["string", 5], false)'
Result: '"[\"string\",5]"'
Expected: '"[\"string\",5]"'
]]></output>
                </test-case>
                <test-case id="0-1953" name="function-string.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="849294909" result="Passed" start-time="2022-08-11T21:23:29.0412778Z" end-time="2022-08-11T21:23:29.0417509Z" duration="0.000473" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5], true)';&#xA; result: &quot;[\n  \&quot;string\&quot;,\n  5\n]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(["string", 5], true)'
Result: '"[\n  \"string\",\n  5\n]"'
Expected: '"[\n  \"string\",\n  5\n]"'
]]></output>
                </test-case>
                <test-case id="0-1954" name="function-string.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1718389092" result="Passed" start-time="2022-08-11T21:23:29.0417868Z" end-time="2022-08-11T21:23:29.0419597Z" duration="0.000173" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []}, false)';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;,\&quot;number\&quot;:39.4,\&quot;null\&quot;:null,\&quot;boolean\&quot;:false,\&quot;function\&quot;:\&quot;\&quot;,\&quot;lambda\&quot;:\&quot;\&quot;,\&quot;object\&quot;:{\&quot;str\&quot;:\&quot;another\&quot;,\&quot;lambda2\&quot;:\&quot;\&quot;},\&quot;array\&quot;:[]}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []}, false)'
Result: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
Expected: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
]]></output>
                </test-case>
                <test-case id="0-1955" name="function-string.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1843304215" result="Passed" start-time="2022-08-11T21:23:29.0419703Z" end-time="2022-08-11T21:23:29.0425345Z" duration="0.000564" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []}, true)';&#xA; result: &quot;{\n  \&quot;string\&quot;: \&quot;hello\&quot;,\n  \&quot;number\&quot;: 39.4,\n  \&quot;null\&quot;: null,\n  \&quot;boolean\&quot;: false,\n  \&quot;function\&quot;: \&quot;\&quot;,\n  \&quot;lambda\&quot;: \&quot;\&quot;,\n  \&quot;object\&quot;: {\n    \&quot;str\&quot;: \&quot;another\&quot;,\n    \&quot;lambda2\&quot;: \&quot;\&quot;\n  },\n  \&quot;array\&quot;: []\n}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []}, true)'
Result: '"{\n  \"string\": \"hello\",\n  \"number\": 39.4,\n  \"null\": null,\n  \"boolean\": false,\n  \"function\": \"\",\n  \"lambda\": \"\",\n  \"object\": {\n    \"str\": \"another\",\n    \"lambda2\": \"\"\n  },\n  \"array\": []\n}"'
Expected: '"{\n  \"string\": \"hello\",\n  \"number\": 39.4,\n  \"null\": null,\n  \"boolean\": false,\n  \"function\": \"\",\n  \"lambda\": \"\",\n  \"object\": {\n    \"str\": \"another\",\n    \"lambda2\": \"\"\n  },\n  \"array\": []\n}"'
]]></output>
                </test-case>
                <test-case id="0-1956" name="function-string.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1599878453" result="Failed" start-time="2022-08-11T21:23:29.0425469Z" end-time="2022-08-11T21:23:29.0436910Z" duration="0.001144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string()';&#xA; result: &quot;[4,true]&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"[4,true]"', got '"[[4,true]]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string()'
Result: '"[[4,true]]"'
Expected: '"[4,true]"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"[4,true]"', got '"[[4,true]]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1957" name="function-substring.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="713265550" result="Passed" start-time="2022-08-11T21:23:29.0441227Z" end-time="2022-08-11T21:23:29.0443941Z" duration="0.000271" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 0, 5)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 0, 5)'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1958" name="function-substring.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2015776739" result="Passed" start-time="2022-08-11T21:23:29.0447368Z" end-time="2022-08-11T21:23:29.0449846Z" duration="0.000248" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1959" name="function-substring.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1336382680" result="Passed" start-time="2022-08-11T21:23:29.0450268Z" end-time="2022-08-11T21:23:29.0452925Z" duration="0.000266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 6)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 6)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1960" name="function-substring.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1975171082" result="Passed" start-time="2022-08-11T21:23:29.0453067Z" end-time="2022-08-11T21:23:29.0457378Z" duration="0.000431" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(blah, 6)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(blah, 6)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1961" name="function-substring.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="690662122" result="Failed" start-time="2022-08-11T21:23:29.0457525Z" end-time="2022-08-11T21:23:29.0470612Z" duration="0.001309" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 0, 2)';&#xA; result: &quot;𝄞💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"𝄞💩"', got '"𝄞"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 0, 2)'
Result: '"𝄞"'
Expected: '"𝄞💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"𝄞💩"', got '"𝄞"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1962" name="function-substring.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1959216199" result="Failed" start-time="2022-08-11T21:23:29.0470805Z" end-time="2022-08-11T21:23:29.0478656Z" duration="0.000785" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 0, 1)';&#xA; result: &quot;𝄞&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"𝄞"', got '"\ud834"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 0, 1)'
Result: '"\ud834"'
Expected: '"𝄞"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"𝄞"', got '"\ud834"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1963" name="function-substring.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1369656113" result="Failed" start-time="2022-08-11T21:23:29.0479058Z" end-time="2022-08-11T21:23:29.0496838Z" duration="0.001778" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 1, 1)';&#xA; result: &quot;💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"💩"', got '"\udd1e"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 1, 1)'
Result: '"\udd1e"'
Expected: '"💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"💩"', got '"\udd1e"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1964" name="function-substring.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1055488038" result="Passed" start-time="2022-08-11T21:23:29.0497022Z" end-time="2022-08-11T21:23:29.0498547Z" duration="0.000153" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1965" name="function-substring.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="919245835" result="Passed" start-time="2022-08-11T21:23:29.0498661Z" end-time="2022-08-11T21:23:29.0500678Z" duration="0.000202" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1966" name="function-substring.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="350217923" result="Passed" start-time="2022-08-11T21:23:29.0500786Z" end-time="2022-08-11T21:23:29.0501758Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 4)';&#xA; result: &quot;worl&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 4)'
Result: '"worl"'
Expected: '"worl"'
]]></output>
                </test-case>
                <test-case id="0-1967" name="function-substring.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1743116352" result="Passed" start-time="2022-08-11T21:23:29.0502151Z" end-time="2022-08-11T21:23:29.0503561Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 1)';&#xA; result: &quot;w&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 1)'
Result: '"w"'
Expected: '"w"'
]]></output>
                </test-case>
                <test-case id="0-1968" name="function-substring.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="606147295" result="Passed" start-time="2022-08-11T21:23:29.0503654Z" end-time="2022-08-11T21:23:29.0504729Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 0)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 0)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1969" name="function-substring.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1470425338" result="Passed" start-time="2022-08-11T21:23:29.0505804Z" end-time="2022-08-11T21:23:29.0506718Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, -1)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, -1)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1970" name="function-substring.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="550087386" result="Passed" start-time="2022-08-11T21:23:29.0506809Z" end-time="2022-08-11T21:23:29.0507633Z" duration="0.000082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 0, -6)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 0, -6)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1971" name="function-substring.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1800077554" result="Passed" start-time="2022-08-11T21:23:29.0507717Z" end-time="2022-08-11T21:23:29.0508511Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -100, 3)';&#xA; result: &quot;hel&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -100, 3)'
Result: '"hel"'
Expected: '"hel"'
]]></output>
                </test-case>
                <test-case id="0-1972" name="function-substring.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="145149085" result="Failed" start-time="2022-08-11T21:23:29.0509360Z" end-time="2022-08-11T21:23:29.0522192Z" duration="0.001283" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -2, 1)';&#xA; result: &quot;😁&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😁"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -2, 1)'
Result: '"\ud83d"'
Expected: '"😁"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😁"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1973" name="function-substring.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1290990976" result="Failed" start-time="2022-08-11T21:23:29.0522446Z" end-time="2022-08-11T21:23:29.0529823Z" duration="0.000738" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -3, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ude01"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -3, 1)'
Result: '"\ude01"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ude01"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1974" name="function-substring.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="655212513" result="Failed" start-time="2022-08-11T21:23:29.0529959Z" end-time="2022-08-11T21:23:29.0561538Z" duration="0.003158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -4, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -4, 1)'
Result: '"\ud83d"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1975" name="function-substring.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1464427414" result="Failed" start-time="2022-08-11T21:23:29.0564786Z" end-time="2022-08-11T21:23:29.0578863Z" duration="0.001408" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -5, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ude02"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -5, 1)'
Result: '"\ude02"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ude02"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1976" name="function-substringAfter.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1094916722" result="Passed" start-time="2022-08-11T21:23:29.0579099Z" end-time="2022-08-11T21:23:29.0581601Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: &quot;World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", " ")'
Result: '"World"'
Expected: '"World"'
]]></output>
                </test-case>
                <test-case id="0-1977" name="function-substringAfter.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="657678010" result="Passed" start-time="2022-08-11T21:23:29.0581704Z" end-time="2022-08-11T21:23:29.0586965Z" duration="0.000526" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;l&quot;)';&#xA; result: &quot;lo World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "l")'
Result: '"lo World"'
Expected: '"lo World"'
]]></output>
                </test-case>
                <test-case id="0-1978" name="function-substringAfter.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1359712064" result="Passed" start-time="2022-08-11T21:23:29.0587116Z" end-time="2022-08-11T21:23:29.0590177Z" duration="0.000306" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;f&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "f")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1979" name="function-substringAfter.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1311668363" result="Passed" start-time="2022-08-11T21:23:29.0591179Z" end-time="2022-08-11T21:23:29.0594636Z" duration="0.000346" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;ld&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "ld")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1980" name="function-substringAfter.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="339892004" result="Passed" start-time="2022-08-11T21:23:29.0597166Z" end-time="2022-08-11T21:23:29.0600154Z" duration="0.000299" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(blah, &quot;ld&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(blah, "ld")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1981" name="function-substringBefore.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1963124719" result="Passed" start-time="2022-08-11T21:23:29.0605063Z" end-time="2022-08-11T21:23:29.0607275Z" duration="0.000221" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", " ")'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-1982" name="function-substringBefore.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1956774758" result="Passed" start-time="2022-08-11T21:23:29.0608299Z" end-time="2022-08-11T21:23:29.0611272Z" duration="0.000297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;l&quot;)';&#xA; result: &quot;He&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "l")'
Result: '"He"'
Expected: '"He"'
]]></output>
                </test-case>
                <test-case id="0-1983" name="function-substringBefore.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1066085429" result="Passed" start-time="2022-08-11T21:23:29.0611538Z" end-time="2022-08-11T21:23:29.0613119Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;f&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "f")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1984" name="function-substringBefore.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2019024737" result="Passed" start-time="2022-08-11T21:23:29.0613228Z" end-time="2022-08-11T21:23:29.0614381Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;He&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "He")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1985" name="function-substringBefore.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="737702025" result="Passed" start-time="2022-08-11T21:23:29.0615601Z" end-time="2022-08-11T21:23:29.0616672Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(blah, &quot;He&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore(blah, "He")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1986" name="function-sum.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1496212263" result="Passed" start-time="2022-08-11T21:23:29.0616772Z" end-time="2022-08-11T21:23:29.0618034Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(Account.Order.Product.(Price * Quantity))';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(Account.Order.Product.(Price * Quantity))'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1987" name="function-sum.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="258948878" result="Passed" start-time="2022-08-11T21:23:29.0618130Z" end-time="2022-08-11T21:23:29.0642096Z" duration="0.002397" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$sum(Product.(Price * Quantity))';&#xA; result: [90.57000000000001,245.79000000000002]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$sum(Product.(Price * Quantity))'
Result: '[90.57,245.79]'
Expected: '[90.57000000000001,245.79000000000002]'
]]></output>
                </test-case>
                <test-case id="0-1988" name="function-sum.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1942360567" result="Passed" start-time="2022-08-11T21:23:29.0645217Z" end-time="2022-08-11T21:23:29.0650047Z" duration="0.000483" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $sum(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 90.57&quot;,&quot;order104: 245.79&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $sum(Product.(Price*Quantity)))'
Result: '["order103: 90.57","order104: 245.79"]'
Expected: '["order103: 90.57","order104: 245.79"]'
]]></output>
                </test-case>
                <test-case id="0-1989" name="function-sum.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="999687630" result="Passed" start-time="2022-08-11T21:23:29.0653286Z" end-time="2022-08-11T21:23:29.0661790Z" duration="0.000850" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sum()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sum()'
]]></output>
                </test-case>
                <test-case id="0-1990" name="function-sum.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1534159414" result="Passed" start-time="2022-08-11T21:23:29.0662019Z" end-time="2022-08-11T21:23:29.0668419Z" duration="0.000640" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1991" name="function-sum.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="887760485" result="Passed" start-time="2022-08-11T21:23:29.0668902Z" end-time="2022-08-11T21:23:29.0680781Z" duration="0.001188" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sum(Account.Order)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sum(Account.Order)'
]]></output>
                </test-case>
                <test-case id="0-1992" name="function-sum.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1826468608" result="Passed" start-time="2022-08-11T21:23:29.0686109Z" end-time="2022-08-11T21:23:29.0687232Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1993" name="function-tomillis.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1536654775" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0691316Z" end-time="2022-08-11T21:23:29.0703653Z" duration="0.001234" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;1970-01-01T00:00:00.001Z&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '1970-01-01T00:00:00.001Z']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("1970-01-01T00:00:00.001Z")'
]]></output>
                </test-case>
                <test-case id="0-1994" name="function-tomillis.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1403041196" result="Passed" start-time="2022-08-11T21:23:29.0703883Z" end-time="2022-08-11T21:23:29.0705812Z" duration="0.000193" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018-02-01T09:42:13.123+0000&quot;)';&#xA; result: 1517478133123" />
                  </properties>
                  <output><![CDATA[Expr is '$toMillis("2018-02-01T09:42:13.123+0000")'
Result: '1517478133123'
Expected: '1517478133123'
]]></output>
                </test-case>
                <test-case id="0-1995" name="function-tomillis.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1015335322" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0708670Z" end-time="2022-08-11T21:23:29.0717269Z" duration="0.000860" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2017-10-30&quot;)';&#xA; result: 1509321600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2017-10-30']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2017-10-30")'
]]></output>
                </test-case>
                <test-case id="0-1996" name="function-tomillis.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1093462285" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0717444Z" end-time="2022-08-11T21:23:29.0724559Z" duration="0.000711" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2017-10-30T15:28:34Z&quot;)';&#xA; result: 1509377314000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2017-10-30T15:28:34Z']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2017-10-30T15:28:34Z")'
]]></output>
                </test-case>
                <test-case id="0-1997" name="function-tomillis.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1299228236" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0724707Z" end-time="2022-08-11T21:23:29.0731719Z" duration="0.000702" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018&quot;)';&#xA; result: 1514764800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2018")'
]]></output>
                </test-case>
                <test-case id="0-1998" name="function-tomillis.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2014228076" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0731876Z" end-time="2022-08-11T21:23:29.0743731Z" duration="0.001186" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(foo)';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T0410: Argument 1 ('timestamp') of function toMillis should be String but incompatible value of type Undefined was specified]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.ConvertFunctionArg(Int32 parameterIndex, JToken argToken, ArgumentInfo argumentInfo, Boolean& returnUndefined) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 297
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.TryBindFunctionArguments(List`1 args, JToken context, EvaluationEnvironment env, Boolean& returnUndefined) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 183
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.BindFunctionArguments(List`1 args, JToken context, EvaluationEnvironment env, Boolean& returnUndefined) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 119
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 88
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis(foo)'
]]></output>
                </test-case>
                <test-case id="0-1999" name="function-tomillis.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="63318645" result="Passed" start-time="2022-08-11T21:23:29.0745382Z" end-time="2022-08-11T21:23:29.0757336Z" duration="0.001195" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;foo&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("foo")'
]]></output>
                </test-case>
                <test-case id="0-2000" name="function-tomillis.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1476983259" result="Passed" start-time="2022-08-11T21:23:29.0757828Z" end-time="2022-08-11T21:23:29.0768390Z" duration="0.001056" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;01-02-2018&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("01-02-2018")'
]]></output>
                </test-case>
                <test-case id="0-2001" name="function-tomillis.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="433648731" result="Passed" start-time="2022-08-11T21:23:29.0768572Z" end-time="2022-08-11T21:23:29.0778023Z" duration="0.000945" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018-02-03 11:15:33&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("2018-02-03 11:15:33")'
]]></output>
                </test-case>
                <test-case id="0-2002" name="function-tomillis.parseDateTime[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1944277561" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0784749Z" end-time="2022-08-11T21:23:29.0794949Z" duration="0.001020" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(undefined, 'pic')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T0410: Argument 1 ('timestamp') of function toMillis should be String but incompatible value of type Undefined was specified]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.ConvertFunctionArg(Int32 parameterIndex, JToken argToken, ArgumentInfo argumentInfo, Boolean& returnUndefined) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 297
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.TryBindFunctionArguments(List`1 args, JToken context, EvaluationEnvironment env, Boolean& returnUndefined) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 183
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.BindFunctionArguments(List`1 args, JToken context, EvaluationEnvironment env, Boolean& returnUndefined) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 119
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 88
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return undefined'
Expr is '$toMillis(undefined, 'pic')'
]]></output>
                </test-case>
                <test-case id="0-2003" name="function-tomillis.parseDateTime[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1576328810" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0795136Z" end-time="2022-08-11T21:23:29.0803661Z" duration="0.000853" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Hello', 'Hello')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'Hello']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse string literal'
Expr is '$toMillis('Hello', 'Hello')'
]]></output>
                </test-case>
                <test-case id="0-2004" name="function-tomillis.parseDateTime[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="837816476" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0812962Z" end-time="2022-08-11T21:23:29.0818842Z" duration="0.000588" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018', '[Y1]')';&#xA; result: 1514764800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year'
Expr is '$toMillis('2018', '[Y1]')'
]]></output>
                </test-case>
                <test-case id="0-2005" name="function-tomillis.parseDateTime[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="592747464" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0818999Z" end-time="2022-08-11T21:23:29.0822775Z" duration="0.000378" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-03-27', '[Y1]-[M01]-[D01]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018-03-27']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2018-03-27', '[Y1]-[M01]-[D01]')'
]]></output>
                </test-case>
                <test-case id="0-2006" name="function-tomillis.parseDateTime[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2051922558" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0822893Z" end-time="2022-08-11T21:23:29.0826567Z" duration="0.000367" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-03-27T14:03:00.123Z', '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f001]Z')';&#xA; result: 1522159380123" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018-03-27T14:03:00.123Z']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ISO 8601 format'
Expr is '$toMillis('2018-03-27T14:03:00.123Z', '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f001]Z')'
]]></output>
                </test-case>
                <test-case id="0-2007" name="function-tomillis.parseDateTime[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1626098651" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0826685Z" end-time="2022-08-11T21:23:29.0830316Z" duration="0.000363" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27th 3 1976', '[D1o] [M#1] [Y0001]')';&#xA; result: 196732800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '27th 3 1976']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27th 3 1976', '[D1o] [M#1] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2008" name="function-tomillis.parseDateTime[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="194082396" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0830437Z" end-time="2022-08-11T21:23:29.0834071Z" duration="0.000363" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('21st 12 1881', '[D1o] [M01] [Y0001]')';&#xA; result: -2777932800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '21st 12 1881']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('21st 12 1881', '[D1o] [M01] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2009" name="function-tomillis.parseDateTime[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="253961678" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0834192Z" end-time="2022-08-11T21:23:29.0837875Z" duration="0.000369" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2nd 12 2012', '[D1o] [M01] [Y0001]')';&#xA; result: 1354406400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2nd 12 2012']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2nd 12 2012', '[D1o] [M01] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2010" name="function-tomillis.parseDateTime[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="748387493" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0838165Z" end-time="2022-08-11T21:23:29.0854005Z" duration="0.001584" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('MCMLXXXIV', '[YI]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'MCMLXXXIV']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year'
Expr is '$toMillis('MCMLXXXIV', '[YI]')'
]]></output>
                </test-case>
                <test-case id="0-2011" name="function-tomillis.parseDateTime[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="942200443" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0863810Z" end-time="2022-08-11T21:23:29.0874858Z" duration="0.001105" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27 03 MMXVIII', '[D1] [M01] [YI]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '27 03 MMXVIII']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27 03 MMXVIII', '[D1] [M01] [YI]')'
]]></output>
                </test-case>
                <test-case id="0-2012" name="function-tomillis.parseDateTime[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1501037133" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0879839Z" end-time="2022-08-11T21:23:29.0889864Z" duration="0.001003" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27 iii MMXVIII', '[D1] [Mi] [YI]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '27 iii MMXVIII']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27 iii MMXVIII', '[D1] [Mi] [YI]')'
]]></output>
                </test-case>
                <test-case id="0-2013" name="function-tomillis.parseDateTime[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="704108376" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0891059Z" end-time="2022-08-11T21:23:29.0906346Z" duration="0.001529" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('w C mmxviii', '[Da] [MA] [Yi]')';&#xA; result: 1521763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'w C mmxviii']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$toMillis('w C mmxviii', '[Da] [MA] [Yi]')'
]]></output>
                </test-case>
                <test-case id="0-2014" name="function-tomillis.parseDateTime[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="996490676" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0906591Z" end-time="2022-08-11T21:23:29.0914322Z" duration="0.000773" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('ae C mmxviii', '[Da] [MA] [Yi]')';&#xA; result: 1522454400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'ae C mmxviii']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$toMillis('ae C mmxviii', '[Da] [MA] [Yi]')'
]]></output>
                </test-case>
                <test-case id="0-2015" name="function-tomillis.parseDateTime[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="12046363" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0915103Z" end-time="2022-08-11T21:23:29.0922049Z" duration="0.000695" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27th April 2008', '[D1o] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '27th April 2008']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27th April 2008', '[D1o] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2016" name="function-tomillis.parseDateTime[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="881371011" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0922321Z" end-time="2022-08-11T21:23:29.0930671Z" duration="0.000835" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('21 August 2017', '[D1] [MNn] [Y0001]')';&#xA; result: 1503273600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '21 August 2017']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('21 August 2017', '[D1] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2017" name="function-tomillis.parseDateTime[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="893130770" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0931112Z" end-time="2022-08-11T21:23:29.0941022Z" duration="0.000991" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2 Feb 2012', '[D1] [MNn,3-3] [Y0001]')';&#xA; result: 1328140800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2 Feb 2012']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2 Feb 2012', '[D1] [MNn,3-3] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2018" name="function-tomillis.parseDateTime[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1498115023" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0941242Z" end-time="2022-08-11T21:23:29.0956158Z" duration="0.001492" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('one thousand, nine hundred and eighty-four', '[Yw]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'one thousand, nine hundred and eighty-four']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year in words'
Expr is '$toMillis('one thousand, nine hundred and eighty-four', '[Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2019" name="function-tomillis.parseDateTime[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="317786013" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0956466Z" end-time="2022-08-11T21:23:29.0964139Z" duration="0.000768" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('nineteen hundred and eighty-four', '[Yw]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'nineteen hundred and eighty-four']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year in words'
Expr is '$toMillis('nineteen hundred and eighty-four', '[Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2020" name="function-tomillis.parseDateTime[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1570517219" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0964311Z" end-time="2022-08-11T21:23:29.0972749Z" duration="0.000844" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-seven April 2008', '[Dw] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'twenty-seven April 2008']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse date/month in words'
Expr is '$toMillis('twenty-seven April 2008', '[Dw] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2021" name="function-tomillis.parseDateTime[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="91269045" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0977431Z" end-time="2022-08-11T21:23:29.0988944Z" duration="0.001151" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-seventh April 2008', '[Dw] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'twenty-seventh April 2008']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse date/month in ordinal words'
Expr is '$toMillis('twenty-seventh April 2008', '[Dw] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2022" name="function-tomillis.parseDateTime[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1948239432" result="Failed" label="Error" start-time="2022-08-11T21:23:29.0993343Z" end-time="2022-08-11T21:23:29.1001014Z" duration="0.000767" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-first August two thousand and seventeen', '[Dw] [MNn] [Yw]')';&#xA; result: 1503273600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'twenty-first August two thousand and seventeen']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('twenty-first August two thousand and seventeen', '[Dw] [MNn] [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2023" name="function-tomillis.parseDateTime[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1753943312" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1001512Z" end-time="2022-08-11T21:23:29.1010006Z" duration="0.000849" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('TWENTY-SECOND August two thousand and seventeen', '[DW] [MNn] [Yw]')';&#xA; result: 1503360000000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'TWENTY-SECOND August two thousand and seventeen']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('TWENTY-SECOND August two thousand and seventeen', '[DW] [MNn] [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2024" name="function-tomillis.parseDateTime[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2083749571" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1010830Z" end-time="2022-08-11T21:23:29.1016961Z" duration="0.000613" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Twentieth of August, two thousand and seventeen', '[DW] of [MNn], [Yw]')';&#xA; result: 1503187200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'Twentieth of August, two thousand and seventeen']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('Twentieth of August, two thousand and seventeen', '[DW] of [MNn], [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2025" name="function-tomillis.parseDateTime[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1809810548" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1017121Z" end-time="2022-08-11T21:23:29.1023778Z" duration="0.000666" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 12:06 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522800360000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '4/4/2018 12:06 am']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just after midnight'
Expr is '$toMillis('4/4/2018 12:06 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2026" name="function-tomillis.parseDateTime[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2121092593" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1024203Z" end-time="2022-08-11T21:23:29.1030727Z" duration="0.000652" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 06:30 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522823400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '4/4/2018 06:30 am']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'breakfast time'
Expr is '$toMillis('4/4/2018 06:30 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2027" name="function-tomillis.parseDateTime[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="755977957" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1030863Z" end-time="2022-08-11T21:23:29.1038301Z" duration="0.000744" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 12:06 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522843560000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '4/4/2018 12:06 pm']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just after midday'
Expr is '$toMillis('4/4/2018 12:06 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2028" name="function-tomillis.parseDateTime[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2035433427" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1038437Z" end-time="2022-08-11T21:23:29.1059263Z" duration="0.002083" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 11:30 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522884600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '4/4/2018 11:30 pm']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just before midnight'
Expr is '$toMillis('4/4/2018 11:30 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2029" name="function-tomillis.parseDateTime[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1787360838" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1063658Z" end-time="2022-08-11T21:23:29.1069514Z" duration="0.000585" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-094', '[Y0001]-[d001]')';&#xA; result: 1522800000000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018-094']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'ordinal date: day 94 of the year 2018'
Expr is '$toMillis('2018-094', '[Y0001]-[d001]')'
]]></output>
                </test-case>
                <test-case id="0-2030" name="function-tomillis.parseDateTime[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="370965129" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1069674Z" end-time="2022-08-11T21:23:29.1075944Z" duration="0.000627" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('13:45', '[H]:[m]') ~&gt; $fromMillis() ~&gt; $substringBefore('T') = $substringBefore($now(), 'T')';&#xA; result: true" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '13:45']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalComparisonOperator(ComparisonOperatorNode comparisonOperatorNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 620
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 117
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'time only defaults to todays date'
Expr is '$toMillis('13:45', '[H]:[m]') ~> $fromMillis() ~> $substringBefore('T') = $substringBefore($now(), 'T')'
]]></output>
                </test-case>
                <test-case id="0-2031" name="function-tomillis.parseDateTime[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1943172133" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1076086Z" end-time="2022-08-11T21:23:29.1082356Z" duration="0.000627" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('13:45', '[H]:[m]') ~&gt; $fromMillis() ~&gt; $substringAfter('T')';&#xA; result: &quot;13:45:00.000Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '13:45']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'hours/minutes only defaults seconds to zero'
Expr is '$toMillis('13:45', '[H]:[m]') ~> $fromMillis() ~> $substringAfter('T')'
]]></output>
                </test-case>
                <test-case id="0-2032" name="function-tomillis.parseDateTime[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="790933581" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1082531Z" end-time="2022-08-11T21:23:29.1091539Z" duration="0.000901" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Wednesday, 14th November 2018', '[FNn], [D1o] [MNn] [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-11-14T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'Wednesday, 14th November 2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'date only defaults time to midnight'
Expr is '$toMillis('Wednesday, 14th November 2018', '[FNn], [D1o] [MNn] [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2033" name="function-tomillis.parseDateTime[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1296393419" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1091726Z" end-time="2022-08-11T21:23:29.1104751Z" duration="0.001303" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Mon, Twelfth November 2018', '[FNn,*-3], [DWwo] [MNn] [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-11-12T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'Mon, Twelfth November 2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'date only defaults time to midnight'
Expr is '$toMillis('Mon, Twelfth November 2018', '[FNn,*-3], [DWwo] [MNn] [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2034" name="function-tomillis.parseDateTime[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1982168751" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1107589Z" end-time="2022-08-11T21:23:29.1113774Z" duration="0.000619" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018--180', '[Y]--[d]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-06-29T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018--180']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '180th day of 2018 is 29th June'
Expr is '$toMillis('2018--180', '[Y]--[d]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2035" name="function-tomillis.parseDateTime[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2053726920" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1113943Z" end-time="2022-08-11T21:23:29.1130484Z" duration="0.001654" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('three hundred and sixty-fifth day of 2018', '[dwo] day of [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-12-31T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'three hundred and sixty-fifth day of 2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '365th day of 2018 is 31st December'
Expr is '$toMillis('three hundred and sixty-fifth day of 2018', '[dwo] day of [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2036" name="function-tomillis.parseDateTime[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="18847158" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1131504Z" end-time="2022-08-11T21:23:29.1151805Z" duration="0.002030" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('irrelevent string', '[Y]-[M]-[D]')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'irrelevent string']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'parsing a non-date string returns undefined'
Expr is '$toMillis('irrelevent string', '[Y]-[M]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2037" name="function-tomillis.parseDateTime[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="380445948" result="Passed" start-time="2022-08-11T21:23:29.1162334Z" end-time="2022-08-11T21:23:29.1176130Z" duration="0.001380" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-05-22', '[Y]-[M]-[q]')';&#xA; result: error D3132" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3132]]></message>
                  </reason>
                  <output><![CDATA[Description: 'picture string contains an unknown component'
Expr is '$toMillis('2018-05-22', '[Y]-[M]-[q]')'
]]></output>
                </test-case>
                <test-case id="0-2038" name="function-tomillis.parseDateTime[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="228268953" result="Passed" start-time="2022-08-11T21:23:29.1176371Z" end-time="2022-08-11T21:23:29.1185551Z" duration="0.000918" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-05-22', '[YN]-[M]-[D]')';&#xA; result: error D3133" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3133]]></message>
                  </reason>
                  <output><![CDATA[Description: 'picture string contains a named year'
Expr is '$toMillis('2018-05-22', '[YN]-[M]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2039" name="function-tomillis.parseDateTime[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1426277273" result="Passed" start-time="2022-08-11T21:23:29.1185765Z" end-time="2022-08-11T21:23:29.1193991Z" duration="0.000823" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-22', '[Y]-[D]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136]]></message>
                  </reason>
                  <output><![CDATA[Description: 'year/date with no month'
Expr is '$toMillis('2018-22', '[Y]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2040" name="function-tomillis.parseDateTime[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="833263114" result="Passed" start-time="2022-08-11T21:23:29.1194462Z" end-time="2022-08-11T21:23:29.1203286Z" duration="0.000883" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('5-22 23:59', '[M]-[D] [m]:[s]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136]]></message>
                  </reason>
                  <output><![CDATA[Description: 'month/date, min/sec with no hours'
Expr is '$toMillis('5-22 23:59', '[M]-[D] [m]:[s]')'
]]></output>
                </test-case>
                <test-case id="0-2041" name="function-tomillis.parseDateTime[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2017597259" result="Passed" start-time="2022-08-11T21:23:29.1203488Z" end-time="2022-08-11T21:23:29.1211934Z" duration="0.000845" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-3-2-5', '[X]-[x]-[w]-[F1]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136]]></message>
                  </reason>
                  <output><![CDATA[Description: 'currently no support for year/month-of-year/week-of-month/day-of-week'
Expr is '$toMillis('2018-3-2-5', '[X]-[x]-[w]-[F1]')'
]]></output>
                </test-case>
                <test-case id="0-2042" name="function-tomillis.parseDateTime[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="64866482" result="Passed" start-time="2022-08-11T21:23:29.1212143Z" end-time="2022-08-11T21:23:29.1220236Z" duration="0.000810" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-32-5', '[X]-[W]-[F1]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136]]></message>
                  </reason>
                  <output><![CDATA[Description: 'currently no support for year/week-of-year/day-of-week'
Expr is '$toMillis('2018-32-5', '[X]-[W]-[F1]')'
]]></output>
                </test-case>
                <test-case id="0-2043" name="function-tomillis.parseDateTime[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1688398889" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1220444Z" end-time="2022-08-11T21:23:29.1228915Z" duration="0.000847" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 08:00:00 +02:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 08:00:00 +02:00']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 08:00:00 +02:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2044" name="function-tomillis.parseDateTime[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="251300137" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1229117Z" end-time="2022-08-11T21:23:29.1240425Z" duration="0.001131" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 08:00:00 GMT-05:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T13:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 08:00:00 GMT-05:00']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 08:00:00 GMT-05:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2045" name="function-tomillis.parseDateTime[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="591958971" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1241131Z" end-time="2022-08-11T21:23:29.1249861Z" duration="0.000873" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 +05:30', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:30:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 12:00:00 +05:30']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 +05:30', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2046" name="function-tomillis.parseDateTime[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1534206999" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1250021Z" end-time="2022-08-11T21:23:29.1258410Z" duration="0.000839" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 GMT-5', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z01]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T17:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 12:00:00 GMT-5']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 GMT-5', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z01]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2047" name="function-tomillis.parseDateTime[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1122360232" result="Failed" label="Error" start-time="2022-08-11T21:23:29.1258585Z" end-time="2022-08-11T21:23:29.1270205Z" duration="0.001162" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 +0530', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z0001]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:30:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 12:00:00 +0530']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1840
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 301
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 113
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 +0530', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z0001]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2048" name="function-trim.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="540164099" result="Passed" start-time="2022-08-11T21:23:29.1274884Z" end-time="2022-08-11T21:23:29.1276282Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim(&quot;Hello World&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$trim("Hello World")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-2049" name="function-trim.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1390994833" result="Passed" start-time="2022-08-11T21:23:29.1277152Z" end-time="2022-08-11T21:23:29.1280237Z" duration="0.000308" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim(&quot;   Hello  &#xA;  &#x9; World  &#x9; &quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$trim("   Hello  
  	 World  	 ")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-2050" name="function-trim.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="133964311" result="Passed" start-time="2022-08-11T21:23:29.1280360Z" end-time="2022-08-11T21:23:29.1281701Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$trim()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2051" name="function-typeOf.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="200331515" result="Passed" start-time="2022-08-11T21:23:29.1282975Z" end-time="2022-08-11T21:23:29.1287666Z" duration="0.000469" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= undefined; $type($var))';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= undefined; $type($var))'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2052" name="function-typeOf.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1948596860" result="Passed" start-time="2022-08-11T21:23:29.1287808Z" end-time="2022-08-11T21:23:29.1288822Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= null; $type($var))';&#xA; result: &quot;null&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= null; $type($var))'
Result: '"null"'
Expected: '"null"'
]]></output>
                </test-case>
                <test-case id="0-2053" name="function-typeOf.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1696442063" result="Passed" start-time="2022-08-11T21:23:29.1288912Z" end-time="2022-08-11T21:23:29.1289812Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= 123; $type($var))';&#xA; result: &quot;number&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= 123; $type($var))'
Result: '"number"'
Expected: '"number"'
]]></output>
                </test-case>
                <test-case id="0-2054" name="function-typeOf.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="640285073" result="Passed" start-time="2022-08-11T21:23:29.1289890Z" end-time="2022-08-11T21:23:29.1290983Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= '123'; $type($var))';&#xA; result: &quot;string&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= '123'; $type($var))'
Result: '"string"'
Expected: '"string"'
]]></output>
                </test-case>
                <test-case id="0-2055" name="function-typeOf.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1385714214" result="Passed" start-time="2022-08-11T21:23:29.1291089Z" end-time="2022-08-11T21:23:29.1292112Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= true; $type($var))';&#xA; result: &quot;boolean&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= true; $type($var))'
Result: '"boolean"'
Expected: '"boolean"'
]]></output>
                </test-case>
                <test-case id="0-2056" name="function-typeOf.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="632892946" result="Passed" start-time="2022-08-11T21:23:29.1292200Z" end-time="2022-08-11T21:23:29.1293009Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= 'true'; $type($var))';&#xA; result: &quot;string&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= 'true'; $type($var))'
Result: '"string"'
Expected: '"string"'
]]></output>
                </test-case>
                <test-case id="0-2057" name="function-typeOf.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="190334249" result="Passed" start-time="2022-08-11T21:23:29.1293093Z" end-time="2022-08-11T21:23:29.1301636Z" duration="0.000854" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= []; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= []; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2058" name="function-typeOf.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1640062886" result="Passed" start-time="2022-08-11T21:23:29.1301968Z" end-time="2022-08-11T21:23:29.1303357Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= ['a']; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= ['a']; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2059" name="function-typeOf.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1175489575" result="Passed" start-time="2022-08-11T21:23:29.1303450Z" end-time="2022-08-11T21:23:29.1304262Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= ['a','b']; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= ['a','b']; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2060" name="function-typeOf.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="619138518" result="Passed" start-time="2022-08-11T21:23:29.1304344Z" end-time="2022-08-11T21:23:29.1305150Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= function(){true}; $type($var))';&#xA; result: &quot;function&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= function(){true}; $type($var))'
Result: '"function"'
Expected: '"function"'
]]></output>
                </test-case>
                <test-case id="0-2061" name="function-typeOf.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1295944601" result="Passed" start-time="2022-08-11T21:23:29.1305225Z" end-time="2022-08-11T21:23:29.1307022Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= (λ($v, $i, $a) {$v.price = $max($a.price)}); $type($var))';&#xA; result: &quot;function&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= (λ($v, $i, $a) {$v.price = $max($a.price)}); $type($var))'
Result: '"function"'
Expected: '"function"'
]]></output>
                </test-case>
                <test-case id="0-2062" name="function-typeOf.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1738148871" result="Passed" start-time="2022-08-11T21:23:29.1307115Z" end-time="2022-08-11T21:23:29.1307963Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= {}; $type($var))';&#xA; result: &quot;object&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= {}; $type($var))'
Result: '"object"'
Expected: '"object"'
]]></output>
                </test-case>
                <test-case id="0-2063" name="function-typeOf.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="554205205" result="Passed" start-time="2022-08-11T21:23:29.1308042Z" end-time="2022-08-11T21:23:29.1311836Z" duration="0.000379" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= {&quot;foo&quot;:&quot;bar&quot;}; $type($var))';&#xA; result: &quot;object&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= {"foo":"bar"}; $type($var))'
Result: '"object"'
Expected: '"object"'
]]></output>
                </test-case>
                <test-case id="0-2064" name="function-uppercase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2030480196" result="Passed" start-time="2022-08-11T21:23:29.1311927Z" end-time="2022-08-11T21:23:29.1312754Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello World&quot;)';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello World")'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-2065" name="function-uppercase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="952699007" result="Passed" start-time="2022-08-11T21:23:29.1312833Z" end-time="2022-08-11T21:23:29.1313587Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2066" name="function-zip.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="151266862" result="Passed" start-time="2022-08-11T21:23:29.1313669Z" end-time="2022-08-11T21:23:29.1315320Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5,6])';&#xA; result: [[1,4],[2,5],[3,6]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5,6])'
Result: '[[1,4],[2,5],[3,6]]'
Expected: '[[1,4],[2,5],[3,6]]'
]]></output>
                </test-case>
                <test-case id="0-2067" name="function-zip.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="204643714" result="Passed" start-time="2022-08-11T21:23:29.1315417Z" end-time="2022-08-11T21:23:29.1317934Z" duration="0.000252" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5,6],[7,8,9])';&#xA; result: [[1,4,7],[2,5,8],[3,6,9]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5,6],[7,8,9])'
Result: '[[1,4,7],[2,5,8],[3,6,9]]'
Expected: '[[1,4,7],[2,5,8],[3,6,9]]'
]]></output>
                </test-case>
                <test-case id="0-2068" name="function-zip.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="869423272" result="Passed" start-time="2022-08-11T21:23:29.1318025Z" end-time="2022-08-11T21:23:29.1318819Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5],[7,8,9])';&#xA; result: [[1,4,7],[2,5,8]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5],[7,8,9])'
Result: '[[1,4,7],[2,5,8]]'
Expected: '[[1,4,7],[2,5,8]]'
]]></output>
                </test-case>
                <test-case id="0-2069" name="function-zip.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1090247403" result="Passed" start-time="2022-08-11T21:23:29.1318894Z" end-time="2022-08-11T21:23:29.1320313Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3])';&#xA; result: [[1],[2],[3]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3])'
Result: '[[1],[2],[3]]'
Expected: '[[1],[2],[3]]'
]]></output>
                </test-case>
                <test-case id="0-2070" name="function-zip.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2140682852" result="Passed" start-time="2022-08-11T21:23:29.1320406Z" end-time="2022-08-11T21:23:29.1321152Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip(1,2,3)';&#xA; result: [[1,2,3]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip(1,2,3)'
Result: '[[1,2,3]]'
Expected: '[[1,2,3]]'
]]></output>
                </test-case>
                <test-case id="0-2071" name="function-zip.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="500925063" result="Passed" start-time="2022-08-11T21:23:29.1321231Z" end-time="2022-08-11T21:23:29.1323621Z" duration="0.000239" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3], [4,5,6], nothing)';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3], [4,5,6], nothing)'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2072" name="higher-order-functions.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="664861817" result="Passed" start-time="2022-08-11T21:23:29.1323721Z" end-time="2022-08-11T21:23:29.1324741Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($twice:=function($f){function($x){$f($f($x))}}; $add3:=function($y){$y+3}; $add6:=$twice($add3); $add6(7))';&#xA; result: 13" />
                  </properties>
                  <output><![CDATA[Expr is '($twice:=function($f){function($x){$f($f($x))}}; $add3:=function($y){$y+3}; $add6:=$twice($add3); $add6(7))'
Result: '13'
Expected: '13'
]]></output>
                </test-case>
                <test-case id="0-2073" name="higher-order-functions.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="71837750" result="Passed" start-time="2022-08-11T21:23:29.1324826Z" end-time="2022-08-11T21:23:29.1357826Z" duration="0.003301" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n &lt; 2 ? 1 : $n * $f($n - 1) } })(6)';&#xA; result: 720" />
                  </properties>
                  <output><![CDATA[Expr is 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n < 2 ? 1 : $n * $f($n - 1) } })(6)'
Result: '720'
Expected: '720'
]]></output>
                </test-case>
                <test-case id="0-2074" name="higher-order-functions.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1632006546" result="Passed" start-time="2022-08-11T21:23:29.1361286Z" end-time="2022-08-11T21:23:29.1370146Z" duration="0.000886" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n &lt;= 1 ? $n : $f($n-1) + $f($n-2) } })(6) ';&#xA; result: 8" />
                  </properties>
                  <output><![CDATA[Expr is 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n <= 1 ? $n : $f($n-1) + $f($n-2) } })(6) '
Result: '8'
Expected: '8'
]]></output>
                </test-case>
                <test-case id="0-2075" name="hof-filter.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1700403607" result="Passed" start-time="2022-08-11T21:23:29.1373505Z" end-time="2022-08-11T21:23:29.1380814Z" duration="0.000731" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(library.books~&gt;$filter(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn';&#xA; result: &quot;9780262510875&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(library.books~>$filter(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn'
Result: '"9780262510875"'
Expected: '"9780262510875"'
]]></output>
                </test-case>
                <test-case id="0-2076" name="hof-filter.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="26402563" result="Passed" start-time="2022-08-11T21:23:29.1386263Z" end-time="2022-08-11T21:23:29.1387941Z" duration="0.000168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing~&gt;$filter(λ($v, $i, $a) {$v.price = $max($a.price)})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing~>$filter(λ($v, $i, $a) {$v.price = $max($a.price)})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2077" name="hof-filter.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="259840543" result="Passed" start-time="2022-08-11T21:23:29.1392484Z" end-time="2022-08-11T21:23:29.1393939Z" duration="0.000146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter(data, function($d) { true })';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$filter(data, function($d) { true })'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2078" name="hof-filter.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1502643175" result="Passed" start-time="2022-08-11T21:23:29.1394268Z" end-time="2022-08-11T21:23:29.1409495Z" duration="0.001523" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter([0, 1, 2], $boolean)';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$filter([0, 1, 2], $boolean)'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2079" name="hof-map.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1491790600" result="Passed" start-time="2022-08-11T21:23:29.1409649Z" end-time="2022-08-11T21:23:29.1415657Z" duration="0.000601" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($data.one, $add) )  ';&#xA; result: [1,4,9,16,25]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($data.one, $add) )  '
Result: '[1,4,9,16,25]'
Expected: '[1,4,9,16,25]'
]]></output>
                </test-case>
                <test-case id="0-2080" name="hof-map.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="275603549" result="Passed" start-time="2022-08-11T21:23:29.1415868Z" end-time="2022-08-11T21:23:29.1422476Z" duration="0.000661" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($add) )  ';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($add) )  '
]]></output>
                </test-case>
                <test-case id="0-2081" name="hof-map.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="998732361" result="Passed" start-time="2022-08-11T21:23:29.1423228Z" end-time="2022-08-11T21:23:29.1427300Z" duration="0.000407" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map([1,2,3], $string)';&#xA; result: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$map([1,2,3], $string)'
Result: '["1","2","3"]'
Expected: '["1","2","3"]'
]]></output>
                </test-case>
                <test-case id="0-2082" name="hof-map.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="215813858" result="Passed" start-time="2022-08-11T21:23:29.1427424Z" end-time="2022-08-11T21:23:29.1434904Z" duration="0.000748" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product ~&gt; $map(λ($prod, $index) { $index+1 &amp; &quot;: &quot; &amp; $prod.&quot;Product Name&quot; })';&#xA; result: [&quot;1: Bowler Hat&quot;,&quot;2: Trilby hat&quot;,&quot;3: Bowler Hat&quot;,&quot;4: Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product ~> $map(λ($prod, $index) { $index+1 & ": " & $prod."Product Name" })'
Result: '["1: Bowler Hat","2: Trilby hat","3: Bowler Hat","4: Cloak"]'
Expected: '["1: Bowler Hat","2: Trilby hat","3: Bowler Hat","4: Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2083" name="hof-map.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="644438594" result="Passed" start-time="2022-08-11T21:23:29.1438046Z" end-time="2022-08-11T21:23:29.1443380Z" duration="0.000533" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product ~&gt; $map(λ($prod, $index, $arr) { $index+1 &amp; &quot;/&quot; &amp; $count($arr) &amp; &quot;: &quot; &amp; $prod.&quot;Product Name&quot; })';&#xA; result: [&quot;1/4: Bowler Hat&quot;,&quot;2/4: Trilby hat&quot;,&quot;3/4: Bowler Hat&quot;,&quot;4/4: Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product ~> $map(λ($prod, $index, $arr) { $index+1 & "/" & $count($arr) & ": " & $prod."Product Name" })'
Result: '["1/4: Bowler Hat","2/4: Trilby hat","3/4: Bowler Hat","4/4: Cloak"]'
Expected: '["1/4: Bowler Hat","2/4: Trilby hat","3/4: Bowler Hat","4/4: Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2084" name="hof-map.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1653396527" result="Passed" start-time="2022-08-11T21:23:29.1448763Z" end-time="2022-08-11T21:23:29.1468067Z" duration="0.001930" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$i[$v.type=&quot;office&quot;]})';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$i[$v.type="office"]})'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2085" name="hof-map.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="170633614" result="Passed" start-time="2022-08-11T21:23:29.1470036Z" end-time="2022-08-11T21:23:29.1474630Z" duration="0.000459" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i})';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i})'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2086" name="hof-map.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2142058920" result="Passed" start-time="2022-08-11T21:23:29.1474805Z" end-time="2022-08-11T21:23:29.1480815Z" duration="0.000601" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i: null})';&#xA; result: [null,1,2,null]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i: null})'
Result: '[null,1,2,null]'
Expected: '[null,1,2,null]'
]]></output>
                </test-case>
                <test-case id="0-2087" name="hof-map.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1241975165" result="Passed" start-time="2022-08-11T21:23:29.1481887Z" end-time="2022-08-11T21:23:29.1485334Z" duration="0.000345" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i: null})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i: null})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2088" name="hof-map.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="656108346" result="Passed" start-time="2022-08-11T21:23:29.1485518Z" end-time="2022-08-11T21:23:29.1489020Z" duration="0.000350" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map([0, 1, 2], $boolean)';&#xA; result: [false,true,true]" />
                  </properties>
                  <output><![CDATA[Expr is '$map([0, 1, 2], $boolean)'
Result: '[false,true,true]'
Expected: '[false,true,true]'
]]></output>
                </test-case>
                <test-case id="0-2089" name="hof-reduce.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="596454537" result="Passed" start-time="2022-08-11T21:23:29.1489388Z" end-time="2022-08-11T21:23:29.1491396Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y})) ';&#xA; result: 15" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y})) '
Result: '15'
Expected: '15'
]]></output>
                </test-case>
                <test-case id="0-2090" name="hof-reduce.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1420833974" result="Passed" start-time="2022-08-11T21:23:29.1492060Z" end-time="2022-08-11T21:23:29.1500379Z" duration="0.000832" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $concat := function($s){function($a, $b){$string($a) &amp; $s &amp; $string($b)}};  $comma_join := $concat(' ... ');  $reduce([1,2,3,4,5], $comma_join))      ';&#xA; result: &quot;1 ... 2 ... 3 ... 4 ... 5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $concat := function($s){function($a, $b){$string($a) & $s & $string($b)}};  $comma_join := $concat(' ... ');  $reduce([1,2,3,4,5], $comma_join))      '
Result: '"1 ... 2 ... 3 ... 4 ... 5"'
Expected: '"1 ... 2 ... 3 ... 4 ... 5"'
]]></output>
                </test-case>
                <test-case id="0-2091" name="hof-reduce.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1975996556" result="Passed" start-time="2022-08-11T21:23:29.1500787Z" end-time="2022-08-11T21:23:29.1506423Z" duration="0.000564" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y}, 2))';&#xA; result: 17" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y}, 2))'
Result: '17'
Expected: '17'
]]></output>
                </test-case>
                <test-case id="0-2092" name="hof-reduce.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="887866709" result="Passed" start-time="2022-08-11T21:23:29.1514733Z" end-time="2022-08-11T21:23:29.1516077Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-2093" name="hof-reduce.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1200263025" result="Passed" start-time="2022-08-11T21:23:29.1519989Z" end-time="2022-08-11T21:23:29.1521695Z" duration="0.000171" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-2094" name="hof-reduce.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="807138755" result="Passed" start-time="2022-08-11T21:23:29.1522851Z" end-time="2022-08-11T21:23:29.1525833Z" duration="0.000298" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reduce(Account.Order.Product.Quantity, $append)';&#xA; result: [2,1,4,1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reduce(Account.Order.Product.Quantity, $append)'
Result: '[2,1,4,1]'
Expected: '[2,1,4,1]'
]]></output>
                </test-case>
                <test-case id="0-2095" name="hof-reduce.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1684802160" result="Passed" start-time="2022-08-11T21:23:29.1525966Z" end-time="2022-08-11T21:23:29.1526953Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reduce(Account.Order.Product.Quantity, $append)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$reduce(Account.Order.Product.Quantity, $append)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2096" name="hof-reduce.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="279448388" result="Passed" start-time="2022-08-11T21:23:29.1527047Z" end-time="2022-08-11T21:23:29.1528746Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($product := function($a, $b) { $a * $b };$power := function($x, $n) { $n = 0 ? 1 : $reduce([1..$n].($x), $product) };[0..5].$power(2, $))';&#xA; result: [1,2,4,8,16,32]" />
                  </properties>
                  <output><![CDATA[Expr is '($product := function($a, $b) { $a * $b };$power := function($x, $n) { $n = 0 ? 1 : $reduce([1..$n].($x), $product) };[0..5].$power(2, $))'
Result: '[1,2,4,8,16,32]'
Expected: '[1,2,4,8,16,32]'
]]></output>
                </test-case>
                <test-case id="0-2097" name="hof-reduce.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1658144924" result="Passed" start-time="2022-08-11T21:23:29.1528834Z" end-time="2022-08-11T21:23:29.1535576Z" duration="0.000674" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x){$x}))';&#xA; result: error D3050" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3050]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x){$x}))'
]]></output>
                </test-case>
                <test-case id="0-2098" name="hof-reduce.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1805402340" result="Passed" start-time="2022-08-11T21:23:29.1535724Z" end-time="2022-08-11T21:23:29.1537221Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(&#xA; $months := [&#xA;        &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;,&#xA;        &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;&#xA; ];&#xA; $indexof := λ($array, $value) {&#xA;  $reduce($array, λ($acc, $v, $i) {&#xA;   $v=$value ? $i : $acc&#xA;  })&#xA; };&#xA; $indexof($months, 'May')&#xA;)&#xA;';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '(
 $months := [
        "Jan", "Feb", "Mar", "Apr", "May", "Jun",
        "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
 ];
 $indexof := λ($array, $value) {
  $reduce($array, λ($acc, $v, $i) {
   $v=$value ? $i : $acc
  })
 };
 $indexof($months, 'May')
)
'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-2099" name="hof-reduce.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1446084777" result="Passed" start-time="2022-08-11T21:23:29.1537314Z" end-time="2022-08-11T21:23:29.1539319Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(&#xA;  $mean := $reduce(?, λ($acc, $v, $i, $arr) {(&#xA;    $total := $acc + $v;&#xA;    $length := $count($arr);&#xA;    $i = $length - 1 ? $total / $length : $total&#xA;  )});&#xA;&#xA;  $mean([7,3,8])&#xA;)&#xA;';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(
  $mean := $reduce(?, λ($acc, $v, $i, $arr) {(
    $total := $acc + $v;
    $length := $count($arr);
    $i = $length - 1 ? $total / $length : $total
  )});

  $mean([7,3,8])
)
'
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2100" name="hof-single.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="440692109" result="Passed" start-time="2022-08-11T21:23:29.1539424Z" end-time="2022-08-11T21:23:29.1565050Z" duration="0.002563" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(library.books~&gt;$single(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn';&#xA; result: &quot;9780262510875&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(library.books~>$single(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn'
Result: '"9780262510875"'
Expected: '"9780262510875"'
]]></output>
                </test-case>
                <test-case id="0-2101" name="hof-single.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1329563285" result="Passed" start-time="2022-08-11T21:23:29.1565268Z" end-time="2022-08-11T21:23:29.1571803Z" duration="0.000654" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing~&gt;$single(λ($v, $i, $a) {$v.price = $max($a.price)})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing~>$single(λ($v, $i, $a) {$v.price = $max($a.price)})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2102" name="hof-single.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="252936960" result="Passed" start-time="2022-08-11T21:23:29.1572265Z" end-time="2022-08-11T21:23:29.1574598Z" duration="0.000233" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single(data, function($d) { true })';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$single(data, function($d) { true })'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2103" name="hof-single.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1597400343" result="Passed" start-time="2022-08-11T21:23:29.1575374Z" end-time="2022-08-11T21:23:29.1585082Z" duration="0.000971" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2], $boolean)';&#xA; result: error D3138" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3138]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2], $boolean)'
]]></output>
                </test-case>
                <test-case id="0-2104" name="hof-single.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1397795628" result="Passed" start-time="2022-08-11T21:23:29.1585257Z" end-time="2022-08-11T21:23:29.1598413Z" duration="0.001316" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2], function($v) {$v = 3})';&#xA; result: error D3139" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3139]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2], function($v) {$v = 3})'
]]></output>
                </test-case>
                <test-case id="0-2105" name="hof-single.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1780522895" result="Passed" start-time="2022-08-11T21:23:29.1598615Z" end-time="2022-08-11T21:23:29.1608281Z" duration="0.000967" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2])';&#xA; result: error D3138" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3138]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2])'
]]></output>
                </test-case>
                <test-case id="0-2106" name="hof-single.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1682953345" result="Passed" start-time="2022-08-11T21:23:29.1608634Z" end-time="2022-08-11T21:23:29.1610122Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single([0])';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$single([0])'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-2107" name="hof-single.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1876759110" result="Passed" start-time="2022-08-11T21:23:29.1610219Z" end-time="2022-08-11T21:23:29.1618324Z" duration="0.000811" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([])';&#xA; result: error D3139" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3139]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([])'
]]></output>
                </test-case>
                <test-case id="0-2108" name="hof-single.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="64435517" result="Passed" start-time="2022-08-11T21:23:29.1618472Z" end-time="2022-08-11T21:23:29.1619942Z" duration="0.000147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single([true, false, true], function($v) {$v=false})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$single([true, false, true], function($v) {$v=false})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2109" name="hof-single.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1087365113" result="Passed" start-time="2022-08-11T21:23:29.1620039Z" end-time="2022-08-11T21:23:29.1623737Z" duration="0.000370" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single(['zero', 'one', 'two'], function($v, $i, $k) {$i=1})';&#xA; result: &quot;one&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$single(['zero', 'one', 'two'], function($v, $i, $k) {$i=1})'
Result: '"one"'
Expected: '"one"'
]]></output>
                </test-case>
                <test-case id="0-2110" name="hof-single.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1359311651" result="Passed" start-time="2022-08-11T21:23:29.1623855Z" end-time="2022-08-11T21:23:29.1625663Z" duration="0.000181" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone ~&gt; $filter(function($p) {$p.type = 'home'}) ~&gt; $single(function($p) {$p.number = '0203 544 1234'})';&#xA; result: {&quot;type&quot;:&quot;home&quot;,&quot;number&quot;:&quot;0203 544 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone ~> $filter(function($p) {$p.type = 'home'}) ~> $single(function($p) {$p.number = '0203 544 1234'})'
Result: '{"type":"home","number":"0203 544 1234"}'
Expected: '{"type":"home","number":"0203 544 1234"}'
]]></output>
                </test-case>
                <test-case id="0-2111" name="hof-zip-map.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="373052403" result="Passed" start-time="2022-08-11T21:23:29.1625759Z" end-time="2022-08-11T21:23:29.1628636Z" duration="0.000288" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $map($zip($data.one, $data.two), $sum)) ';&#xA; result: [6,6,6,6,6]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $map($zip($data.one, $data.two), $sum)) '
Result: '[6,6,6,6,6]'
Expected: '[6,6,6,6,6]'
]]></output>
                </test-case>
                <test-case id="0-2112" name="hof-zip-map.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="835174721" result="Passed" start-time="2022-08-11T21:23:29.1628754Z" end-time="2022-08-11T21:23:29.1629919Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: [6,6,6,6,6]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '[6,6,6,6,6]'
Expected: '[6,6,6,6,6]'
]]></output>
                </test-case>
                <test-case id="0-2113" name="hof-zip-map.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="148272286" result="Passed" start-time="2022-08-11T21:23:29.1630357Z" end-time="2022-08-11T21:23:29.1631259Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1],    &quot;two&quot;: [5]  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1],    "two": [5]  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2114" name="hof-zip-map.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="899886026" result="Passed" start-time="2022-08-11T21:23:29.1631338Z" end-time="2022-08-11T21:23:29.1633469Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: 1,    &quot;two&quot;: 5  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": 1,    "two": 5  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2115" name="inclusion-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1767889804" result="Passed" start-time="2022-08-11T21:23:29.1638402Z" end-time="2022-08-11T21:23:29.1641197Z" duration="0.000280" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1 in [1,2]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '1 in [1,2]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2116" name="inclusion-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1080130743" result="Passed" start-time="2022-08-11T21:23:29.1644158Z" end-time="2022-08-11T21:23:29.1646908Z" duration="0.000275" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3 in [1,2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '3 in [1,2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2117" name="inclusion-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1093710277" result="Passed" start-time="2022-08-11T21:23:29.1670153Z" end-time="2022-08-11T21:23:29.1671645Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; in [1,2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" in [1,2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2118" name="inclusion-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1048292325" result="Passed" start-time="2022-08-11T21:23:29.1675723Z" end-time="2022-08-11T21:23:29.1680287Z" duration="0.000456" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;world&quot; in [&quot;hello&quot;, &quot;world&quot;]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"world" in ["hello", "world"]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2119" name="inclusion-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1859846582" result="Passed" start-time="2022-08-11T21:23:29.1684097Z" end-time="2022-08-11T21:23:29.1685398Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'in in [&quot;hello&quot;, &quot;world&quot;]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'in in ["hello", "world"]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2120" name="inclusion-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="958123734" result="Passed" start-time="2022-08-11T21:23:29.1689186Z" end-time="2022-08-11T21:23:29.1691052Z" duration="0.000187" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;world&quot; in in';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"world" in in'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2121" name="inclusion-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1056775344" result="Passed" start-time="2022-08-11T21:23:29.1693684Z" end-time="2022-08-11T21:23:29.1696576Z" duration="0.000289" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; in &quot;hello&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" in "hello"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2122" name="inclusion-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1696019015" result="Passed" start-time="2022-08-11T21:23:29.1699160Z" end-time="2022-08-11T21:23:29.1701826Z" duration="0.000267" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'library.books[&quot;Aho&quot; in authors].title';&#xA; result: [&quot;The AWK Programming Language&quot;,&quot;Compilers: Principles, Techniques, and Tools&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'library.books["Aho" in authors].title'
Result: '["The AWK Programming Language","Compilers: Principles, Techniques, and Tools"]'
Expected: '["The AWK Programming Language","Compilers: Principles, Techniques, and Tools"]'
]]></output>
                </test-case>
                <test-case id="0-2123" name="inclusion-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="272968735" result="Passed" start-time="2022-08-11T21:23:29.1701949Z" end-time="2022-08-11T21:23:29.1706109Z" duration="0.000416" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'content.integration.$lowercase(name)';&#xA; result: &quot;fakeintegrationname&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'content.integration.$lowercase(name)'
Result: '"fakeintegrationname"'
Expected: '"fakeintegrationname"'
]]></output>
                </test-case>
                <test-case id="0-2124" name="joins.employee-map-reduce[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1816897076" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1706239Z" end-time="2022-08-11T21:23:29.1718419Z" duration="0.001218" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.(Contact)[ssn = $e.SSN].{ 'name': $e.(FirstName &amp; ' ' &amp; Surname), 'phone': Phone[type='mobile'].number }';&#xA; result: [{&quot;name&quot;:&quot;Fred Smith&quot;,&quot;phone&quot;:&quot;077 7700 1234&quot;},{&quot;name&quot;:&quot;Darren Cruse&quot;,&quot;phone&quot;:&quot;315 782 9279&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.(Contact)[ssn = $e.SSN].{ 'name': $e.(FirstName & ' ' & Surname), 'phone': Phone[type='mobile'].number }'
]]></output>
                </test-case>
                <test-case id="0-2125" name="joins.employee-map-reduce[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="164686296" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1718610Z" end-time="2022-08-11T21:23:29.1733848Z" duration="0.001524" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.(Contact)[ssn = $e.SSN]{ $e.FirstName: Phone[type='mobile'].number }';&#xA; result: {&quot;Fred&quot;:&quot;077 7700 1234&quot;,&quot;Darren&quot;:&quot;315 782 9279&quot;,&quot;Hugh&quot;:&quot;07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.(Contact)[ssn = $e.SSN]{ $e.FirstName: Phone[type='mobile'].number }'
]]></output>
                </test-case>
                <test-case id="0-2126" name="joins.employee-map-reduce[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1760542001" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1734041Z" end-time="2022-08-11T21:23:29.1738427Z" duration="0.000439" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $join($c.Phone.number, ', ') }';&#xA; result: {&quot;Fred Smith&quot;:&quot;0203 544 1234, 01962 001234, 077 7700 1234&quot;,&quot;Darren Cruse&quot;:&quot;3146458343, 315 782 9279&quot;,&quot;Hugh Jones&quot;:&quot;0280 564 6543, 0280 864 8643, 07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $join($c.Phone.number, ', ') }'
]]></output>
                </test-case>
                <test-case id="0-2127" name="joins.employee-map-reduce[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1612082439" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1738554Z" end-time="2022-08-11T21:23:29.1742083Z" duration="0.000353" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number ~&gt; $join(', ') }';&#xA; result: {&quot;Fred Smith&quot;:&quot;01962 001234, 077 7700 1234&quot;,&quot;Darren Cruse&quot;:&quot;315 782 9279&quot;,&quot;Hugh Jones&quot;:&quot;0280 864 8643, 07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number ~> $join(', ') }'
]]></output>
                </test-case>
                <test-case id="0-2128" name="joins.employee-map-reduce[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1412182642" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1742195Z" end-time="2022-08-11T21:23:29.1746822Z" duration="0.000463" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number }';&#xA; result: {&quot;Fred Smith&quot;:[&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren Cruse&quot;:&quot;315 782 9279&quot;,&quot;Hugh Jones&quot;:[&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number }'
]]></output>
                </test-case>
                <test-case id="0-2129" name="joins.employee-map-reduce[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2094688033" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1768611Z" end-time="2022-08-11T21:23:29.1778504Z" duration="0.000989" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number[] }';&#xA; result: {&quot;Fred Smith&quot;:[&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren Cruse&quot;:[&quot;315 782 9279&quot;],&quot;Hugh Jones&quot;:[&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number[] }'
]]></output>
                </test-case>
                <test-case id="0-2130" name="joins.employee-map-reduce[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1420955219" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1778981Z" end-time="2022-08-11T21:23:29.1790886Z" duration="0.001191" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.FirstName: $c.Phone.number }';&#xA; result: {&quot;Fred&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;],&quot;Hugh&quot;:[&quot;0280 564 6543&quot;,&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.FirstName: $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2131" name="joins.employee-map-reduce[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="515741286" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1793884Z" end-time="2022-08-11T21:23:29.1808326Z" duration="0.001444" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e^($e.Surname).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }';&#xA; result: [{&quot;name&quot;:&quot;Cruse&quot;,&quot;phone&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;]},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 564 6543&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 864 8643&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;},{&quot;name&quot;:&quot;Smith&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e^($e.Surname).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2132" name="joins.employee-map-reduce[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="601921850" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1808673Z" end-time="2022-08-11T21:23:29.1817144Z" duration="0.000847" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e^($e.FirstName).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }';&#xA; result: [{&quot;name&quot;:&quot;Cruse&quot;,&quot;phone&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;]},{&quot;name&quot;:&quot;Smith&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;]},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 564 6543&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 864 8643&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e^($e.FirstName).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2133" name="joins.employee-map-reduce[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="56558398" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1817346Z" end-time="2022-08-11T21:23:29.1824380Z" duration="0.000703" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^($) }';&#xA; result: {&quot;Smith&quot;:[&quot;01962 001234&quot;,&quot;0203 544 1234&quot;,&quot;077 7700 1234&quot;],&quot;Cruse&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;],&quot;Jones&quot;:[&quot;0280 564 6543&quot;,&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^($) }'
]]></output>
                </test-case>
                <test-case id="0-2134" name="joins.employee-map-reduce[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1051098491" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1824576Z" end-time="2022-08-11T21:23:29.1831945Z" duration="0.000737" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^(&gt;$) }';&#xA; result: {&quot;Smith&quot;:[&quot;077 7700 1234&quot;,&quot;0203 544 1234&quot;,&quot;01962 001234&quot;],&quot;Cruse&quot;:[&quot;315 782 9279&quot;,&quot;3146458343&quot;],&quot;Jones&quot;:[&quot;07735 853535&quot;,&quot;0280 864 8643&quot;,&quot;0280 564 6543&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^(>$) }'
]]></output>
                </test-case>
                <test-case id="0-2135" name="joins.employee-map-reduce[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1093523911" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1832204Z" end-time="2022-08-11T21:23:29.1845834Z" duration="0.001363" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$@$i';&#xA; result: [1,2,3]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$@$i'
]]></output>
                </test-case>
                <test-case id="0-2136" name="joins.errors[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="745795401" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1846036Z" end-time="2022-08-11T21:23:29.1853000Z" duration="0.000696" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order@o.Product';&#xA; result: error S0214" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order@o.Product'
]]></output>
                </test-case>
                <test-case id="0-2137" name="joins.errors[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="765897162" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1853193Z" end-time="2022-08-11T21:23:29.1860318Z" duration="0.000713" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order@$o#i.Product';&#xA; result: error S0214" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order@$o#i.Product'
]]></output>
                </test-case>
                <test-case id="0-2138" name="joins.errors[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1394126613" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1862699Z" end-time="2022-08-11T21:23:29.1869449Z" duration="0.000675" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[1]@$o.Product';&#xA; result: error S0215" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 200
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 156
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order[1]@$o.Product'
]]></output>
                </test-case>
                <test-case id="0-2139" name="joins.errors[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2020357279" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1874342Z" end-time="2022-08-11T21:23:29.1903950Z" duration="0.002961" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order^(&gt;OrderID)@$o.Product.{ 'name':`Product Name`, 'orderid':$o.OrderID }';&#xA; result: error S0216" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 200
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 237
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order^(>OrderID)@$o.Product.{ 'name':`Product Name`, 'orderid':$o.OrderID }'
]]></output>
                </test-case>
                <test-case id="0-2140" name="joins.index[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="635163916" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1913281Z" end-time="2022-08-11T21:23:29.1920317Z" duration="0.000704" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]';&#xA; result: [3,1,4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]'
]]></output>
                </test-case>
                <test-case id="0-2141" name="joins.index[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="265299810" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1920492Z" end-time="2022-08-11T21:23:29.1927034Z" duration="0.000654" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3] = $[[0..2]]';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3] = $[[0..2]]'
]]></output>
                </test-case>
                <test-case id="0-2142" name="joins.index[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1177539648" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1927360Z" end-time="2022-08-11T21:23:29.1934729Z" duration="0.000737" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.$#$pos[$pos&lt;3]';&#xA; result: [3,1,4,1,5,9]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.$#$pos[$pos<3]'
]]></output>
                </test-case>
                <test-case id="0-2143" name="joins.index[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1716226880" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1934985Z" end-time="2022-08-11T21:23:29.1943266Z" duration="0.000828" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.$#$pos[$pos&lt;3] = $.$[[0..2]]';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.$#$pos[$pos<3] = $.$[[0..2]]'
]]></output>
                </test-case>
                <test-case id="0-2144" name="joins.index[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1384626533" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1943429Z" end-time="2022-08-11T21:23:29.1947277Z" duration="0.000393" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)';&#xA; result: [1,3,4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)'
]]></output>
                </test-case>
                <test-case id="0-2145" name="joins.index[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1047781571" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1947501Z" end-time="2022-08-11T21:23:29.1958882Z" duration="0.001138" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^(&gt;$)';&#xA; result: [4,3,1]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^(>$)'
]]></output>
                </test-case>
                <test-case id="0-2146" name="joins.index[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1140821835" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1962028Z" end-time="2022-08-11T21:23:29.1967935Z" duration="0.000591" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$^($)#$pos[$pos&lt;3] ';&#xA; result: [1,1,3]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 200
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 237
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$^($)#$pos[$pos<3] '
]]></output>
                </test-case>
                <test-case id="0-2147" name="joins.index[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="739594423" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1968980Z" end-time="2022-08-11T21:23:29.1981064Z" duration="0.001208" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3][1]';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3][1]'
]]></output>
                </test-case>
                <test-case id="0-2148" name="joins.index[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="300376999" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1981341Z" end-time="2022-08-11T21:23:29.1991883Z" duration="0.001054" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3][1][]';&#xA; result: [1]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3][1][]'
]]></output>
                </test-case>
                <test-case id="0-2149" name="joins.index[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1186732598" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.1997479Z" end-time="2022-08-11T21:23:29.2006243Z" duration="0.000876" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)[-1]';&#xA; result: 4" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)[-1]'
]]></output>
                </test-case>
                <test-case id="0-2150" name="joins.index[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="604671417" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2006520Z" end-time="2022-08-11T21:23:29.2020572Z" duration="0.001406" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[][$pos&lt;3]^($)[-1]';&#xA; result: [4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[][$pos<3]^($)[-1]'
]]></output>
                </test-case>
                <test-case id="0-2151" name="joins.index[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1333221758" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2020871Z" end-time="2022-08-11T21:23:29.2028663Z" duration="0.000779" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)[-1][]';&#xA; result: [4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)[-1][]'
]]></output>
                </test-case>
                <test-case id="0-2152" name="joins.index[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="609852599" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2028901Z" end-time="2022-08-11T21:23:29.2037009Z" duration="0.000811" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$[[1..4]]#$pos[$pos&gt;=2]';&#xA; result: [1,5]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 200
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 156
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$[[1..4]]#$pos[$pos>=2]'
]]></output>
                </test-case>
                <test-case id="0-2153" name="joins.index[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2093039405" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2037193Z" end-time="2022-08-11T21:23:29.2115506Z" duration="0.007832" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$o.Product[ProductID=858383].{ 'Product': `Product Name`, 'Order Index': $o }';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:1}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$o.Product[ProductID=858383].{ 'Product': `Product Name`, 'Order Index': $o }'
]]></output>
                </test-case>
                <test-case id="0-2154" name="joins.index[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="487961043" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2118014Z" end-time="2022-08-11T21:23:29.2133745Z" duration="0.001573" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$i.Missing';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$i.Missing'
]]></output>
                </test-case>
                <test-case id="0-2155" name="joins.index[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1531400412" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2144198Z" end-time="2022-08-11T21:23:29.2155558Z" duration="0.001136" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$i.Product{ $string(ProductID): $i }';&#xA; result: {&quot;345664&quot;:1,&quot;858236&quot;:0,&quot;858383&quot;:[0,1]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$i.Product{ $string(ProductID): $i }'
]]></output>
                </test-case>
                <test-case id="0-2156" name="joins.library-joins[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1781027917" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2155772Z" end-time="2022-08-11T21:23:29.2160373Z" duration="0.000460" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2157" name="joins.library-joins[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2127451872" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2160732Z" end-time="2022-08-11T21:23:29.2168200Z" duration="0.000747" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books[$l.isbn=isbn].{&#xA;  'title': title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books[$l.isbn=isbn].{
  'title': title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2158" name="joins.library-joins[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1927986914" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2174524Z" end-time="2022-08-11T21:23:29.2183436Z" duration="0.000891" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.books#$pos.$[$substring(title,0,3) = 'The'].$pos';&#xA; result: [1,2]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.books#$pos.$[$substring(title,0,3) = 'The'].$pos'
]]></output>
                </test-case>
                <test-case id="0-2159" name="joins.library-joins[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1233109332" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2183638Z" end-time="2022-08-11T21:23:29.2195522Z" duration="0.001189" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers[$l.customer=id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': name&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers[$l.customer=id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': name
}
'
]]></output>
                </test-case>
                <test-case id="0-2160" name="joins.library-joins[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="19980894" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2195719Z" end-time="2022-08-11T21:23:29.2208497Z" duration="0.001278" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers@$c[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers@$c[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name
}
'
]]></output>
                </test-case>
                <test-case id="0-2161" name="joins.library-joins[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="70870906" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2208702Z" end-time="2022-08-11T21:23:29.2219741Z" duration="0.001104" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn].customers@$c#$ic[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name,&#xA;  'loan-index': $il,&#xA;  'book-index': $ib,&#xA;  'customer-index': $ic&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;,&quot;loan-index&quot;:0,&quot;book-index&quot;:0,&quot;customer-index&quot;:0},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:1,&quot;book-index&quot;:3,&quot;customer-index&quot;:2},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:2,&quot;book-index&quot;:0,&quot;customer-index&quot;:2}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn].customers@$c#$ic[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name,
  'loan-index': $il,
  'book-index': $ib,
  'customer-index': $ic
}
'
]]></output>
                </test-case>
                <test-case id="0-2162" name="joins.library-joins[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="464576468" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2219957Z" end-time="2022-08-11T21:23:29.2250663Z" duration="0.003071" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.customers#$ic[$il=$ic].{&#xA;  'customer': name,&#xA;  'return': $l.return&#xA;}&#xA;';&#xA; result: [{&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;return&quot;:&quot;2016-12-05&quot;},{&quot;customer&quot;:&quot;Fred Bloggs&quot;,&quot;return&quot;:&quot;2016-10-22&quot;},{&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;return&quot;:&quot;2016-12-22&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.customers#$ic[$il=$ic].{
  'customer': name,
  'return': $l.return
}
'
]]></output>
                </test-case>
                <test-case id="0-2163" name="joins.library-joins[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117231131" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2261099Z" end-time="2022-08-11T21:23:29.2270460Z" duration="0.000936" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn]#$ib2.customers@$c#$ic[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name,&#xA;  'loan-index': $il,&#xA;  'book-index': $ib,&#xA;  'customer-index': $ic,&#xA;  'ib2': $ib2&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;,&quot;loan-index&quot;:0,&quot;book-index&quot;:0,&quot;customer-index&quot;:0,&quot;ib2&quot;:0},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:1,&quot;book-index&quot;:3,&quot;customer-index&quot;:2,&quot;ib2&quot;:1},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:2,&quot;book-index&quot;:0,&quot;customer-index&quot;:2,&quot;ib2&quot;:2}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn]#$ib2.customers@$c#$ic[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name,
  'loan-index': $il,
  'book-index': $ib,
  'customer-index': $ic,
  'ib2': $ib2
}
'
]]></output>
                </test-case>
                <test-case id="0-2164" name="joins.library-joins[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1813893541" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2292895Z" end-time="2022-08-11T21:23:29.2321135Z" duration="0.002824" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: {&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2165" name="joins.library-joins[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="843570365" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2334251Z" end-time="2022-08-11T21:23:29.2358745Z" duration="0.002449" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][5].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][5].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2166" name="joins.library-joins[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1918614200" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2359717Z" end-time="2022-08-11T21:23:29.2375786Z" duration="0.001607" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1][].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1][].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2167" name="lambdas.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="778616323" result="Passed" start-time="2022-08-11T21:23:29.2377628Z" end-time="2022-08-11T21:23:29.2385531Z" duration="0.000790" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x*$x}(5)';&#xA; result: 25" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x*$x}(5)'
Result: '25'
Expected: '25'
]]></output>
                </test-case>
                <test-case id="0-2168" name="lambdas.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1244657442" result="Passed" start-time="2022-08-11T21:23:29.2385974Z" end-time="2022-08-11T21:23:29.2387502Z" duration="0.000153" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x&gt;5 ? &quot;foo&quot;}(6)';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x>5 ? "foo"}(6)'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2169" name="lambdas.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1953845762" result="Passed" start-time="2022-08-11T21:23:29.2387710Z" end-time="2022-08-11T21:23:29.2392624Z" duration="0.000492" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x&gt;5 ? &quot;foo&quot;}(3)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x>5 ? "foo"}(3)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2170" name="lambdas.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1022094403" result="Passed" start-time="2022-08-11T21:23:29.2392794Z" end-time="2022-08-11T21:23:29.2394224Z" duration="0.000143" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($factorial:= function($x){$x &lt;= 1 ? 1 : $x * $factorial($x-1)}; $factorial(4))';&#xA; result: 24" />
                  </properties>
                  <output><![CDATA[Expr is '($factorial:= function($x){$x <= 1 ? 1 : $x * $factorial($x-1)}; $factorial(4))'
Result: '24'
Expected: '24'
]]></output>
                </test-case>
                <test-case id="0-2171" name="lambdas.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="314233581" result="Passed" start-time="2022-08-11T21:23:29.2394526Z" end-time="2022-08-11T21:23:29.2421686Z" duration="0.002716" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($fibonacci := function($x){$x &lt;= 1 ? $x : $fibonacci($x-1) + $fibonacci($x-2)}; [1,2,3,4,5,6,7,8,9].$fibonacci($))';&#xA; result: [1,1,2,3,5,8,13,21,34]" />
                  </properties>
                  <output><![CDATA[Expr is '($fibonacci := function($x){$x <= 1 ? $x : $fibonacci($x-1) + $fibonacci($x-2)}; [1,2,3,4,5,6,7,8,9].$fibonacci($))'
Result: '[1,1,2,3,5,8,13,21,34]'
Expected: '[1,1,2,3,5,8,13,21,34]'
]]></output>
                </test-case>
                <test-case id="0-2172" name="lambdas.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1847067311" result="Passed" start-time="2022-08-11T21:23:29.2427397Z" end-time="2022-08-11T21:23:29.2434832Z" duration="0.000744" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($nth_price := function($n) { (Account.Order.Product.Price)[$n] }; $nth_price(1) )';&#xA; result: 21.67" />
                  </properties>
                  <output><![CDATA[Expr is '($nth_price := function($n) { (Account.Order.Product.Price)[$n] }; $nth_price(1) )'
Result: '21.67'
Expected: '21.67'
]]></output>
                </test-case>
                <test-case id="0-2173" name="lambdas.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1175418693" result="Passed" start-time="2022-08-11T21:23:29.2435068Z" end-time="2022-08-11T21:23:29.2442038Z" duration="0.000697" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };              $odd := function($n) { $n = 0 ? false : $even($n-1) };              $even(82)            )';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };              $odd := function($n) { $n = 0 ? false : $even($n-1) };              $even(82)            )'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2174" name="lambdas.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1224682666" result="Passed" start-time="2022-08-11T21:23:29.2442219Z" end-time="2022-08-11T21:23:29.2444576Z" duration="0.000236" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };               $odd := function($n) { $n = 0 ? false : $even($n-1) };               $even(65) )';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };               $odd := function($n) { $n = 0 ? false : $even($n-1) };               $even(65) )'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2175" name="lambdas.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="692823924" result="Passed" start-time="2022-08-11T21:23:29.2444697Z" end-time="2022-08-11T21:23:29.2447003Z" duration="0.000231" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(65)         )';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(65)         )'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2176" name="lambdas.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2026719343" result="Passed" start-time="2022-08-11T21:23:29.2451426Z" end-time="2022-08-11T21:23:29.2454586Z" duration="0.000316" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $gcd := λ($a, $b){$b = 0 ? $a : $gcd($b, $a%$b) };  [$gcd(8,12), $gcd(9,12)])';&#xA; result: [4,3]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $gcd := λ($a, $b){$b = 0 ? $a : $gcd($b, $a%$b) };  [$gcd(8,12), $gcd(9,12)])'
Result: '[4,3]'
Expected: '[4,3]'
]]></output>
                </test-case>
                <test-case id="0-2177" name="lambdas.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2127275782" result="Passed" start-time="2022-08-11T21:23:29.2459160Z" end-time="2022-08-11T21:23:29.2464388Z" duration="0.000523" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $range := function($start, $end, $step) { (    $step:=($step?$step:1);    $start+$step &gt; $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15))        ';&#xA; result: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $range := function($start, $end, $step) { (    $step:=($step?$step:1);    $start+$step > $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15))        '
Result: '[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]'
Expected: '[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]'
]]></output>
                </test-case>
                <test-case id="0-2178" name="lambdas.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1035825849" result="Passed" start-time="2022-08-11T21:23:29.2465119Z" end-time="2022-08-11T21:23:29.2470963Z" duration="0.000584" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $range := function($start, $end, $step) { (      $step:=($step?$step:1);        $start+$step &gt; $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15,2))        ';&#xA; result: [0,2,4,6,8,10,12,14]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $range := function($start, $end, $step) { (      $step:=($step?$step:1);        $start+$step > $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15,2))        '
Result: '[0,2,4,6,8,10,12,14]'
Expected: '[0,2,4,6,8,10,12,14]'
]]></output>
                </test-case>
                <test-case id="0-2179" name="lambdas.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="769115505" result="Passed" start-time="2022-08-11T21:23:29.2471180Z" end-time="2022-08-11T21:23:29.2477178Z" duration="0.000600" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $median := λ($x){$sort($x)[$count($x)/2]};  $median([5,4,3,2,1,6,7,8,1]) )';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '( $median := λ($x){$sort($x)[$count($x)/2]};  $median([5,4,3,2,1,6,7,8,1]) )'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-2180" name="literals.array-inputs[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1171348108" result="Passed" start-time="2022-08-11T21:23:29.2477341Z" end-time="2022-08-11T21:23:29.2479488Z" duration="0.000215" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2181" name="literals.array-inputs[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1020947578" result="Passed" start-time="2022-08-11T21:23:29.2479608Z" end-time="2022-08-11T21:23:29.2483901Z" duration="0.000430" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2182" name="literals.array-inputs[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1311705440" result="Passed" start-time="2022-08-11T21:23:29.2484109Z" end-time="2022-08-11T21:23:29.2486364Z" duration="0.000226" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2183" name="literals.array-inputs[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="225450044" result="Passed" start-time="2022-08-11T21:23:29.2486482Z" end-time="2022-08-11T21:23:29.2489428Z" duration="0.000295" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2184" name="literals.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1490016616" result="Passed" start-time="2022-08-11T21:23:29.2489537Z" end-time="2022-08-11T21:23:29.2491017Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot;';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello"'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2185" name="literals.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="87733461" result="Passed" start-time="2022-08-11T21:23:29.2491120Z" end-time="2022-08-11T21:23:29.2492913Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: ''hello'';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is ''hello''
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2186" name="literals.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2053372334" result="Passed" start-time="2022-08-11T21:23:29.2493003Z" end-time="2022-08-11T21:23:29.2496396Z" duration="0.000339" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Wayne's World&quot;';&#xA; result: &quot;Wayne's World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Wayne's World"'
Result: '"Wayne's World"'
Expected: '"Wayne's World"'
]]></output>
                </test-case>
                <test-case id="0-2187" name="literals.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="656366092" result="Passed" start-time="2022-08-11T21:23:29.2499113Z" end-time="2022-08-11T21:23:29.2501235Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '42';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is '42'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2188" name="literals.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1716081002" result="Passed" start-time="2022-08-11T21:23:29.2504849Z" end-time="2022-08-11T21:23:29.2506177Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '-42';&#xA; result: -42" />
                  </properties>
                  <output><![CDATA[Expr is '-42'
Result: '-42'
Expected: '-42'
]]></output>
                </test-case>
                <test-case id="0-2189" name="literals.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1667181726" result="Passed" start-time="2022-08-11T21:23:29.2511508Z" end-time="2022-08-11T21:23:29.2513126Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3.14159';&#xA; result: 3.14159" />
                  </properties>
                  <output><![CDATA[Expr is '3.14159'
Result: '3.14159'
Expected: '3.14159'
]]></output>
                </test-case>
                <test-case id="0-2190" name="literals.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1459979641" result="Passed" start-time="2022-08-11T21:23:29.2522031Z" end-time="2022-08-11T21:23:29.2524283Z" duration="0.000225" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '6.022e23';&#xA; result: 6.022E+23" />
                  </properties>
                  <output><![CDATA[Expr is '6.022e23'
Result: '602200000000000000000000.0'
Expected: '6.022E+23'
]]></output>
                </test-case>
                <test-case id="0-2191" name="literals.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="765827176" result="Passed" start-time="2022-08-11T21:23:29.2545577Z" end-time="2022-08-11T21:23:29.2548865Z" duration="0.000328" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1.602E-19';&#xA; result: 1.602E-19" />
                  </properties>
                  <output><![CDATA[Expr is '1.602E-19'
Result: '0.0000000000000000001602'
Expected: '1.602E-19'
]]></output>
                </test-case>
                <test-case id="0-2192" name="literals.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="985393895" result="Passed" start-time="2022-08-11T21:23:29.2549154Z" end-time="2022-08-11T21:23:29.2561863Z" duration="0.001271" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '10e1000';&#xA; result: error S0102" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0102]]></message>
                  </reason>
                  <output><![CDATA[Expr is '10e1000'
]]></output>
                </test-case>
                <test-case id="0-2193" name="literals.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="161017281" result="Passed" start-time="2022-08-11T21:23:29.2566596Z" end-time="2022-08-11T21:23:29.2568927Z" duration="0.000233" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello\tworld&quot;';&#xA; result: &quot;hello\tworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello\tworld"'
Result: '"hello\tworld"'
Expected: '"hello\tworld"'
]]></output>
                </test-case>
                <test-case id="0-2194" name="literals.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2000376385" result="Passed" start-time="2022-08-11T21:23:29.2572752Z" end-time="2022-08-11T21:23:29.2574919Z" duration="0.000217" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello\nworld&quot;';&#xA; result: &quot;hello\nworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello\nworld"'
Result: '"hello\nworld"'
Expected: '"hello\nworld"'
]]></output>
                </test-case>
                <test-case id="0-2195" name="literals.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="564293010" result="Passed" start-time="2022-08-11T21:23:29.2575263Z" end-time="2022-08-11T21:23:29.2585889Z" duration="0.001063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello \&quot;world\&quot;&quot;';&#xA; result: &quot;hello \&quot;world\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello \"world\""'
Result: '"hello \"world\""'
Expected: '"hello \"world\""'
]]></output>
                </test-case>
                <test-case id="0-2196" name="literals.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1948206989" result="Passed" start-time="2022-08-11T21:23:29.2586016Z" end-time="2022-08-11T21:23:29.2587945Z" duration="0.000193" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;C:\\Test\\test.txt&quot;';&#xA; result: &quot;C:\\Test\\test.txt&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"C:\\Test\\test.txt"'
Result: '"C:\\Test\\test.txt"'
Expected: '"C:\\Test\\test.txt"'
]]></output>
                </test-case>
                <test-case id="0-2197" name="literals.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1060308517" result="Passed" start-time="2022-08-11T21:23:29.2588144Z" end-time="2022-08-11T21:23:29.2591963Z" duration="0.000382" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u03BB-calculus rocks&quot;';&#xA; result: &quot;λ-calculus rocks&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"\u03BB-calculus rocks"'
Result: '"λ-calculus rocks"'
Expected: '"λ-calculus rocks"'
]]></output>
                </test-case>
                <test-case id="0-2198" name="literals.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2049816986" result="Passed" start-time="2022-08-11T21:23:29.2592095Z" end-time="2022-08-11T21:23:29.2593378Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;𝄞&quot;';&#xA; result: &quot;𝄞&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"𝄞"'
Result: '"𝄞"'
Expected: '"𝄞"'
]]></output>
                </test-case>
                <test-case id="0-2199" name="literals.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="541056168" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2593469Z" end-time="2022-08-11T21:23:29.2627858Z" duration="0.003439" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\y&quot;';&#xA; result: error S0103" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\y' at offset 2. Unrecognized escape sequence \\y.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Helpers.cs:line 28
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\y"'
]]></output>
                </test-case>
                <test-case id="0-2200" name="literals.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1276651018" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2628332Z" end-time="2022-08-11T21:23:29.2646557Z" duration="0.001823" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u&quot;';&#xA; result: error S0104" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\u' at offset 2. Insufficient hexadecimal digits.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanHex(Int32 c)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Helpers.cs:line 28
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\u"'
]]></output>
                </test-case>
                <test-case id="0-2201" name="literals.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="362205512" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.2647360Z" end-time="2022-08-11T21:23:29.2655972Z" duration="0.000862" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u123t&quot;';&#xA; result: error S0104" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\u123t' at offset 6. Insufficient hexadecimal digits.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanHex(Int32 c)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Helpers.cs:line 28
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\u123t"'
]]></output>
                </test-case>
                <test-case id="0-2202" name="literals.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1642420628" result="Passed" start-time="2022-08-11T21:23:29.2656298Z" end-time="2022-08-11T21:23:29.2658143Z" duration="0.000184" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'foo': { 'sequence': 123, 'bar': 'baz' } } ';&#xA; result: {&quot;foo&quot;:{&quot;sequence&quot;:123,&quot;bar&quot;:&quot;baz&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'foo': { 'sequence': 123, 'bar': 'baz' } } '
Result: '{"foo":{"sequence":123,"bar":"baz"}}'
Expected: '{"foo":{"sequence":123,"bar":"baz"}}'
]]></output>
                </test-case>
                <test-case id="0-2203" name="literals.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="494014884" result="Passed" start-time="2022-08-11T21:23:29.2658251Z" end-time="2022-08-11T21:23:29.2664262Z" duration="0.000601" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'foo': { 'sequence': true, 'bar': 'baz' } } ';&#xA; result: {&quot;foo&quot;:{&quot;sequence&quot;:true,&quot;bar&quot;:&quot;baz&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'foo': { 'sequence': true, 'bar': 'baz' } } '
Result: '{"foo":{"sequence":true,"bar":"baz"}}'
Expected: '{"foo":{"sequence":true,"bar":"baz"}}'
]]></output>
                </test-case>
                <test-case id="0-2204" name="matchers.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.matchers.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="164638195" result="Failed" label="Error" start-time="2022-08-11T21:23:29.2668285Z" end-time="2022-08-11T21:23:29.2691197Z" duration="0.002292" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(&#xA;    $generateMatcher := function($ch) {&#xA;      $match := function($str, $offset) {(&#xA;        $before := $substringBefore($str, $ch);&#xA;        $start := $length($before) + ($exists($offset) ? $offset : 0);&#xA;        $end := $start + $length($ch);&#xA;        $before != $str and $length($ch) &gt; 0 ? {&#xA;          'match': $ch,&#xA;          'start': $start,&#xA;          'end': $end,&#xA;          'groups': [],&#xA;          'next': function() {$match($substringAfter($str, $ch), $end)}&#xA;        }&#xA;      )}&#xA;    };&#xA;&#xA;    $match(&quot;abracadabra&quot;, $generateMatcher('a'))&#xA;)';&#xA; result: [{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:0,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:3,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:5,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:7,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:10,&quot;groups&quot;:[]}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T0410: Argument 2 of function match should be regex. Passed Function ("")]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.match(String str, JToken pattern, Int32 limit) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 402
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenCsharp.cs:line 103
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(
    $generateMatcher := function($ch) {
      $match := function($str, $offset) {(
        $before := $substringBefore($str, $ch);
        $start := $length($before) + ($exists($offset) ? $offset : 0);
        $end := $start + $length($ch);
        $before != $str and $length($ch) > 0 ? {
          'match': $ch,
          'start': $start,
          'end': $end,
          'groups': [],
          'next': function() {$match($substringAfter($str, $ch), $end)}
        }
      )}
    };

    $match("abracadabra", $generateMatcher('a'))
)'
]]></output>
                </test-case>
                <test-case id="0-2205" name="matchers.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.matchers.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="290437836" result="Passed" start-time="2022-08-11T21:23:29.2691916Z" end-time="2022-08-11T21:23:29.2702146Z" duration="0.001023" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split('some text', $uppercase)';&#xA; result: error T1010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1010]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split('some text', $uppercase)'
]]></output>
                </test-case>
                <test-case id="0-2206" name="missing-paths.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1633638094" result="Passed" start-time="2022-08-11T21:23:29.2702376Z" end-time="2022-08-11T21:23:29.2703746Z" duration="0.000137" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2207" name="missing-paths.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1581917553" result="Passed" start-time="2022-08-11T21:23:29.2703870Z" end-time="2022-08-11T21:23:29.2712754Z" duration="0.000889" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2208" name="missing-paths.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="868356739" result="Passed" start-time="2022-08-11T21:23:29.2716657Z" end-time="2022-08-11T21:23:29.2717997Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett[10]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett[10]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2209" name="missing-paths.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1942620766" result="Passed" start-time="2022-08-11T21:23:29.2718154Z" end-time="2022-08-11T21:23:29.2720228Z" duration="0.000208" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett[vc &gt; 10]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett[vc > 10]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2210" name="missing-paths.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1652164716" result="Passed" start-time="2022-08-11T21:23:29.2720500Z" end-time="2022-08-11T21:23:29.2722293Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett + 27';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett + 27'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2211" name="missing-paths.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1801235782" result="Passed" start-time="2022-08-11T21:23:29.2723908Z" end-time="2022-08-11T21:23:29.2724777Z" duration="0.000087" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fdsd';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$fdsd'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2212" name="multiple-array-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1091626023" result="Passed" start-time="2022-08-11T21:23:29.2735820Z" end-time="2022-08-11T21:23:29.2742654Z" duration="0.000684" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,-1]]';&#xA; result: [2,3,4,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,-1]]'
Result: '[2,3,4,9,10]'
Expected: '[2,3,4,9,10]'
]]></output>
                </test-case>
                <test-case id="0-2213" name="multiple-array-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1158871409" result="Passed" start-time="2022-08-11T21:23:29.2772960Z" end-time="2022-08-11T21:23:29.2777612Z" duration="0.000465" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,5]]';&#xA; result: [2,3,4,6,9]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,5]]'
Result: '[2,3,4,6,9]'
Expected: '[2,3,4,6,9]'
]]></output>
                </test-case>
                <test-case id="0-2214" name="multiple-array-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="61761224" result="Passed" start-time="2022-08-11T21:23:29.2778164Z" end-time="2022-08-11T21:23:29.2779450Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,false]]';&#xA; result: [1,2,3,4,5,6,7,8,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,false]]'
Result: '[1,2,3,4,5,6,7,8,9,10]'
Expected: '[1,2,3,4,5,6,7,8,9,10]'
]]></output>
                </test-case>
                <test-case id="0-2215" name="null.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1146516963" result="Passed" start-time="2022-08-11T21:23:29.2780054Z" end-time="2022-08-11T21:23:29.2786662Z" duration="0.000661" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'null'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2216" name="null.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="906649113" result="Passed" start-time="2022-08-11T21:23:29.2788069Z" end-time="2022-08-11T21:23:29.2803419Z" duration="0.001535" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[null]';&#xA; result: [null]" />
                  </properties>
                  <output><![CDATA[Expr is '[null]'
Result: '[null]'
Expected: '[null]'
]]></output>
                </test-case>
                <test-case id="0-2217" name="null.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="239126424" result="Passed" start-time="2022-08-11T21:23:29.2803597Z" end-time="2022-08-11T21:23:29.2805007Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[null, null]';&#xA; result: [null,null]" />
                  </properties>
                  <output><![CDATA[Expr is '[null, null]'
Result: '[null,null]'
Expected: '[null,null]'
]]></output>
                </test-case>
                <test-case id="0-2218" name="null.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="774698162" result="Passed" start-time="2022-08-11T21:23:29.2805254Z" end-time="2022-08-11T21:23:29.2806942Z" duration="0.000168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(null)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$not(null)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2219" name="null.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1726160080" result="Passed" start-time="2022-08-11T21:23:29.2807781Z" end-time="2022-08-11T21:23:29.2822092Z" duration="0.001431" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = null';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'null = null'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2220" name="null.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="937681678" result="Passed" start-time="2022-08-11T21:23:29.2834357Z" end-time="2022-08-11T21:23:29.2836800Z" duration="0.000244" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null != null';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null != null'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2221" name="null.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1262248108" result="Passed" start-time="2022-08-11T21:23:29.2837059Z" end-time="2022-08-11T21:23:29.2843966Z" duration="0.000691" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;true&quot;: true, &quot;false&quot;:false, &quot;null&quot;: null}';&#xA; result: {&quot;true&quot;:true,&quot;false&quot;:false,&quot;null&quot;:null}" />
                  </properties>
                  <output><![CDATA[Expr is '{"true": true, "false":false, "null": null}'
Result: '{"true":true,"false":false,"null":null}'
Expected: '{"true":true,"false":false,"null":null}'
]]></output>
                </test-case>
                <test-case id="0-2222" name="numeric-operators.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1210018968" result="Passed" start-time="2022-08-11T21:23:29.2868342Z" end-time="2022-08-11T21:23:29.2870902Z" duration="0.000256" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar + bar';&#xA; result: 140" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar + bar'
Result: '140'
Expected: '140'
]]></output>
                </test-case>
                <test-case id="0-2223" name="numeric-operators.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1724959363" result="Passed" start-time="2022-08-11T21:23:29.2872725Z" end-time="2022-08-11T21:23:29.2874733Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar + foo.bar';&#xA; result: 140" />
                  </properties>
                  <output><![CDATA[Expr is 'bar + foo.bar'
Result: '140'
Expected: '140'
]]></output>
                </test-case>
                <test-case id="0-2224" name="numeric-operators.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="493866121" result="Passed" start-time="2022-08-11T21:23:29.2880722Z" end-time="2022-08-11T21:23:29.2883112Z" duration="0.000239" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar - bar';&#xA; result: -56" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar - bar'
Result: '-56'
Expected: '-56'
]]></output>
                </test-case>
                <test-case id="0-2225" name="numeric-operators.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="256267227" result="Passed" start-time="2022-08-11T21:23:29.2888652Z" end-time="2022-08-11T21:23:29.2894034Z" duration="0.000539" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar - foo.bar';&#xA; result: 56" />
                  </properties>
                  <output><![CDATA[Expr is 'bar - foo.bar'
Result: '56'
Expected: '56'
]]></output>
                </test-case>
                <test-case id="0-2226" name="numeric-operators.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1476323333" result="Passed" start-time="2022-08-11T21:23:29.2895136Z" end-time="2022-08-11T21:23:29.2905010Z" duration="0.000987" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar * bar';&#xA; result: 4116" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar * bar'
Result: '4116'
Expected: '4116'
]]></output>
                </test-case>
                <test-case id="0-2227" name="numeric-operators.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1686050030" result="Passed" start-time="2022-08-11T21:23:29.2907787Z" end-time="2022-08-11T21:23:29.2909043Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar * foo.bar';&#xA; result: 4116" />
                  </properties>
                  <output><![CDATA[Expr is 'bar * foo.bar'
Result: '4116'
Expected: '4116'
]]></output>
                </test-case>
                <test-case id="0-2228" name="numeric-operators.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1322525955" result="Passed" start-time="2022-08-11T21:23:29.2911704Z" end-time="2022-08-11T21:23:29.2912863Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar / bar';&#xA; result: 0.42857142857142855" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar / bar'
Result: '0.428571428571429'
Expected: '0.42857142857142855'
]]></output>
                </test-case>
                <test-case id="0-2229" name="numeric-operators.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="660389656" result="Passed" start-time="2022-08-11T21:23:29.2912999Z" end-time="2022-08-11T21:23:29.2913838Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar / foo.bar';&#xA; result: 2.3333333333333335" />
                  </properties>
                  <output><![CDATA[Expr is 'bar / foo.bar'
Result: '2.33333333333333'
Expected: '2.3333333333333335'
]]></output>
                </test-case>
                <test-case id="0-2230" name="numeric-operators.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="892100582" result="Passed" start-time="2022-08-11T21:23:29.2913931Z" end-time="2022-08-11T21:23:29.2915589Z" duration="0.000166" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar % bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar % bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2231" name="numeric-operators.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="966410826" result="Passed" start-time="2022-08-11T21:23:29.2915679Z" end-time="2022-08-11T21:23:29.2917288Z" duration="0.000161" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar % foo.bar';&#xA; result: 14" />
                  </properties>
                  <output><![CDATA[Expr is 'bar % foo.bar'
Result: '14'
Expected: '14'
]]></output>
                </test-case>
                <test-case id="0-2232" name="numeric-operators.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="77458796" result="Passed" start-time="2022-08-11T21:23:29.2917376Z" end-time="2022-08-11T21:23:29.2918958Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar + foo.bar * bar';&#xA; result: 4214" />
                  </properties>
                  <output><![CDATA[Expr is 'bar + foo.bar * bar'
Result: '4214'
Expected: '4214'
]]></output>
                </test-case>
                <test-case id="0-2233" name="numeric-operators.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="494769681" result="Passed" start-time="2022-08-11T21:23:29.2919048Z" end-time="2022-08-11T21:23:29.2923401Z" duration="0.000435" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar * bar + bar';&#xA; result: 4214" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar * bar + bar'
Result: '4214'
Expected: '4214'
]]></output>
                </test-case>
                <test-case id="0-2234" name="numeric-operators.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1639948134" result="Passed" start-time="2022-08-11T21:23:29.2923522Z" end-time="2022-08-11T21:23:29.2932170Z" duration="0.000865" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '24 * notexist';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '24 * notexist'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2235" name="numeric-operators.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="809142596" result="Passed" start-time="2022-08-11T21:23:29.2958823Z" end-time="2022-08-11T21:23:29.2977653Z" duration="0.001883" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'notexist + 1';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'notexist + 1'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2236" name="numeric-operators.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1526010597" result="Passed" start-time="2022-08-11T21:23:29.2985460Z" end-time="2022-08-11T21:23:29.3001075Z" duration="0.001562" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1/(10e300 * 10e100) ';&#xA; result: error D1001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1001]]></message>
                  </reason>
                  <output><![CDATA[Expr is '1/(10e300 * 10e100) '
]]></output>
                </test-case>
                <test-case id="0-2237" name="numeric-operators.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="817690556" result="Passed" start-time="2022-08-11T21:23:29.3008227Z" end-time="2022-08-11T21:23:29.3028035Z" duration="0.001981" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;5&quot; + &quot;5&quot;';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"5" + "5"'
]]></output>
                </test-case>
                <test-case id="0-2238" name="numeric-operators.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="60811849" result="Passed" start-time="2022-08-11T21:23:29.3029155Z" end-time="2022-08-11T21:23:29.3032068Z" duration="0.000291" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '- notexist';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '- notexist'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2239" name="numeric-operators.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1199578780" result="Passed" start-time="2022-08-11T21:23:29.3037734Z" end-time="2022-08-11T21:23:29.3045474Z" duration="0.000774" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false + 1';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false + 1'
]]></output>
                </test-case>
                <test-case id="0-2240" name="numeric-operators.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="601579014" result="Failed" start-time="2022-08-11T21:23:29.3047406Z" end-time="2022-08-11T21:23:29.3065770Z" duration="0.001836" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false + $x';&#xA; result: error T2001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error T2001 (), got 'undefined']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'false + $x'
Result: 'undefined'
Expected error T2001
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error T2001 (), got 'undefined']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2241" name="object-constructor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="471454781" result="Passed" start-time="2022-08-11T21:23:29.3066193Z" end-time="2022-08-11T21:23:29.3080169Z" duration="0.001398" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{}';&#xA; result: {}" />
                  </properties>
                  <output><![CDATA[Expr is '{}'
Result: '{}'
Expected: '{}'
]]></output>
                </test-case>
                <test-case id="0-2242" name="object-constructor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1935493000" result="Passed" start-time="2022-08-11T21:23:29.3080323Z" end-time="2022-08-11T21:23:29.3085832Z" duration="0.000551" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;key&quot;: &quot;value&quot;}';&#xA; result: {&quot;key&quot;:&quot;value&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '{"key": "value"}'
Result: '{"key":"value"}'
Expected: '{"key":"value"}'
]]></output>
                </test-case>
                <test-case id="0-2243" name="object-constructor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1920943883" result="Passed" start-time="2022-08-11T21:23:29.3091299Z" end-time="2022-08-11T21:23:29.3094083Z" duration="0.000278" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: 2}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": 2}'
Result: '{"one":1,"two":2}'
Expected: '{"one":1,"two":2}'
]]></output>
                </test-case>
                <test-case id="0-2244" name="object-constructor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="15017010" result="Passed" start-time="2022-08-11T21:23:29.3094200Z" end-time="2022-08-11T21:23:29.3097639Z" duration="0.000344" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: 2}.two';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": 2}.two'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-2245" name="object-constructor.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1806227506" result="Passed" start-time="2022-08-11T21:23:29.3113574Z" end-time="2022-08-11T21:23:29.3124997Z" duration="0.000534" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: {&quot;three&quot;: 3, &quot;four&quot;: &quot;4&quot;}}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:{&quot;three&quot;:3,&quot;four&quot;:&quot;4&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": {"three": 3, "four": "4"}}'
Result: '{"one":1,"two":{"three":3,"four":"4"}}'
Expected: '{"one":1,"two":{"three":3,"four":"4"}}'
]]></output>
                </test-case>
                <test-case id="0-2246" name="object-constructor.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1821684800" result="Passed" start-time="2022-08-11T21:23:29.3145156Z" end-time="2022-08-11T21:23:29.3147852Z" duration="0.000270" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: [3, &quot;four&quot;]}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:[3,&quot;four&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": [3, "four"]}'
Result: '{"one":1,"two":[3,"four"]}'
Expected: '{"one":1,"two":[3,"four"]}'
]]></output>
                </test-case>
                <test-case id="0-2247" name="object-constructor.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1974006133" result="Passed" start-time="2022-08-11T21:23:29.3148018Z" end-time="2022-08-11T21:23:29.3159727Z" duration="0.001171" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;test&quot;: ()}';&#xA; result: {}" />
                  </properties>
                  <output><![CDATA[Expr is '{"test": ()}'
Result: '{}'
Expected: '{}'
]]></output>
                </test-case>
                <test-case id="0-2248" name="object-constructor.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="99256057" result="Passed" start-time="2022-08-11T21:23:29.3166957Z" end-time="2022-08-11T21:23:29.3168971Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'blah.{}';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'blah.{}'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2249" name="object-constructor.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="853859422" result="Passed" start-time="2022-08-11T21:23:29.3169224Z" end-time="2022-08-11T21:23:29.3176258Z" duration="0.000704" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{OrderID: Product.&quot;Product Name&quot;}';&#xA; result: {&quot;order103&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;],&quot;order104&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{OrderID: Product."Product Name"}'
Result: '{"order103":["Bowler Hat","Trilby hat"],"order104":["Bowler Hat","Cloak"]}'
Expected: '{"order103":["Bowler Hat","Trilby hat"],"order104":["Bowler Hat","Cloak"]}'
]]></output>
                </test-case>
                <test-case id="0-2250" name="object-constructor.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1805127544" result="Passed" start-time="2022-08-11T21:23:29.3183669Z" end-time="2022-08-11T21:23:29.3185685Z" duration="0.000202" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.{OrderID: Product.&quot;Product Name&quot;}';&#xA; result: [{&quot;order103&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;]},{&quot;order104&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.{OrderID: Product."Product Name"}'
Result: '[{"order103":["Bowler Hat","Trilby hat"]},{"order104":["Bowler Hat","Cloak"]}]'
Expected: '[{"order103":["Bowler Hat","Trilby hat"]},{"order104":["Bowler Hat","Cloak"]}]'
]]></output>
                </test-case>
                <test-case id="0-2251" name="object-constructor.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1709080565" result="Passed" start-time="2022-08-11T21:23:29.3185836Z" end-time="2022-08-11T21:23:29.3187484Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$string(ProductID): Price}';&#xA; result: {&quot;345664&quot;:107.99,&quot;858236&quot;:21.67,&quot;858383&quot;:[34.45,34.45]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{$string(ProductID): Price}'
Result: '{"858383":[34.45,34.45],"858236":21.67,"345664":107.99}'
Expected: '{"345664":107.99,"858236":21.67,"858383":[34.45,34.45]}'
]]></output>
                </test-case>
                <test-case id="0-2252" name="object-constructor.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="285610355" result="Passed" start-time="2022-08-11T21:23:29.3187578Z" end-time="2022-08-11T21:23:29.3191551Z" duration="0.000397" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$string(ProductID): (Price)[0]}';&#xA; result: {&quot;345664&quot;:107.99,&quot;858236&quot;:21.67,&quot;858383&quot;:34.45}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{$string(ProductID): (Price)[0]}'
Result: '{"858383":34.45,"858236":21.67,"345664":107.99}'
Expected: '{"345664":107.99,"858236":21.67,"858383":34.45}'
]]></output>
                </test-case>
                <test-case id="0-2253" name="object-constructor.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="323656906" result="Passed" start-time="2022-08-11T21:23:29.3191666Z" end-time="2022-08-11T21:23:29.3193109Z" duration="0.000144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{$string(ProductID): Price}';&#xA; result: [{&quot;858383&quot;:34.45},{&quot;858236&quot;:21.67},{&quot;858383&quot;:34.45},{&quot;345664&quot;:107.99}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{$string(ProductID): Price}'
Result: '[{"858383":34.45},{"858236":21.67},{"858383":34.45},{"345664":107.99}]'
Expected: '[{"858383":34.45},{"858236":21.67},{"858383":34.45},{"345664":107.99}]'
]]></output>
                </test-case>
                <test-case id="0-2254" name="object-constructor.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1750858137" result="Passed" start-time="2022-08-11T21:23:29.3193203Z" end-time="2022-08-11T21:23:29.3203527Z" duration="0.001033" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{ProductID: &quot;Product Name&quot;}';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product{ProductID: "Product Name"}'
]]></output>
                </test-case>
                <test-case id="0-2255" name="object-constructor.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="14402910" result="Passed" start-time="2022-08-11T21:23:29.3213322Z" end-time="2022-08-11T21:23:29.3244865Z" duration="0.003154" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ProductID: &quot;Product Name&quot;}';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ProductID: "Product Name"}'
]]></output>
                </test-case>
                <test-case id="0-2256" name="object-constructor.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1299670191" result="Passed" start-time="2022-08-11T21:23:29.3253245Z" end-time="2022-08-11T21:23:29.3256460Z" duration="0.000321" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{OrderID: $sum(Product.(Price*Quantity))}';&#xA; result: {&quot;order103&quot;:90.57000000000001,&quot;order104&quot;:245.79000000000002}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{OrderID: $sum(Product.(Price*Quantity))}'
Result: '{"order103":90.57,"order104":245.79}'
Expected: '{"order103":90.57000000000001,"order104":245.79000000000002}'
]]></output>
                </test-case>
                <test-case id="0-2257" name="object-constructor.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2064944912" result="Passed" start-time="2022-08-11T21:23:29.3274720Z" end-time="2022-08-11T21:23:29.3279311Z" duration="0.000459" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.{OrderID: $sum(Product.(Price*Quantity))}';&#xA; result: [{&quot;order103&quot;:90.57000000000001},{&quot;order104&quot;:245.79000000000002}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.{OrderID: $sum(Product.(Price*Quantity))}'
Result: '[{"order103":90.57},{"order104":245.79}]'
Expected: '[{"order103":90.57000000000001},{"order104":245.79000000000002}]'
]]></output>
                </test-case>
                <test-case id="0-2258" name="object-constructor.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="148763" result="Passed" start-time="2022-08-11T21:23:29.3288234Z" end-time="2022-08-11T21:23:29.3297179Z" duration="0.000894" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$.&quot;Product Name&quot;: Price, $.&quot;Product Name&quot;: Price}';&#xA; result: error D1009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1009]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product{$."Product Name": Price, $."Product Name": Price}'
]]></output>
                </test-case>
                <test-case id="0-2259" name="object-constructor.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2055854615" result="Passed" start-time="2022-08-11T21:23:29.3297683Z" end-time="2022-08-11T21:23:29.3306238Z" duration="0.000856" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{`Product Name`: Price, SKU: Price}';&#xA; result: {&quot;Bowler Hat&quot;:[34.45,34.45],&quot;0406654608&quot;:34.45,&quot;Trilby hat&quot;:21.67,&quot;0406634348&quot;:21.67,&quot;040657863&quot;:34.45,&quot;Cloak&quot;:107.99,&quot;0406654603&quot;:107.99}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{`Product Name`: Price, SKU: Price}'
Result: '{"Bowler Hat":[34.45,34.45],"0406654608":34.45,"Trilby hat":21.67,"0406634348":21.67,"040657863":34.45,"Cloak":107.99,"0406654603":107.99}'
Expected: '{"Bowler Hat":[34.45,34.45],"0406654608":34.45,"Trilby hat":21.67,"0406634348":21.67,"040657863":34.45,"Cloak":107.99,"0406654603":107.99}'
]]></output>
                </test-case>
                <test-case id="0-2260" name="object-constructor.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="961598150" result="Passed" start-time="2022-08-11T21:23:29.3306449Z" end-time="2022-08-11T21:23:29.3314419Z" duration="0.000797" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{  OrderID: {    &quot;TotalPrice&quot;:$sum(Product.(Price * Quantity)),    &quot;Items&quot;: Product.&quot;Product Name&quot;  }}';&#xA; result: {&quot;order103&quot;:{&quot;TotalPrice&quot;:90.57000000000001,&quot;Items&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;]},&quot;order104&quot;:{&quot;TotalPrice&quot;:245.79000000000002,&quot;Items&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{  OrderID: {    "TotalPrice":$sum(Product.(Price * Quantity)),    "Items": Product."Product Name"  }}'
Result: '{"order103":{"TotalPrice":90.57,"Items":["Bowler Hat","Trilby hat"]},"order104":{"TotalPrice":245.79,"Items":["Bowler Hat","Cloak"]}}'
Expected: '{"order103":{"TotalPrice":90.57000000000001,"Items":["Bowler Hat","Trilby hat"]},"order104":{"TotalPrice":245.79000000000002,"Items":["Bowler Hat","Cloak"]}}'
]]></output>
                </test-case>
                <test-case id="0-2261" name="object-constructor.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2095071711" result="Passed" start-time="2022-08-11T21:23:29.3314609Z" end-time="2022-08-11T21:23:29.3329679Z" duration="0.001508" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{  &quot;Order&quot;: Account.Order.{      &quot;ID&quot;: OrderID,      &quot;Product&quot;: Product.{          &quot;Name&quot;: $.&quot;Product Name&quot;,          &quot;SKU&quot;: ProductID,          &quot;Details&quot;: {            &quot;Weight&quot;: Description.Weight,            &quot;Dimensions&quot;: Description.(Width &amp; &quot; x &quot; &amp; Height &amp; &quot; x &quot; &amp; Depth)          }        },      &quot;Total Price&quot;: $sum(Product.(Price * Quantity))    }}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{  "Order": Account.Order.{      "ID": OrderID,      "Product": Product.{          "Name": $."Product Name",          "SKU": ProductID,          "Details": {            "Weight": Description.Weight,            "Dimensions": Description.(Width & " x " & Height & " x " & Depth)          }        },      "Total Price": $sum(Product.(Price * Quantity))    }}'
Result: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2262" name="object-constructor.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="259391598" result="Passed" start-time="2022-08-11T21:23:29.3367220Z" end-time="2022-08-11T21:23:29.3373861Z" duration="0.000664" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{  &quot;Order&quot;: Account.Order.{      &quot;ID&quot;: OrderID,      &quot;Product&quot;: Product.{          &quot;Name&quot;: `Product Name`,          &quot;SKU&quot;: ProductID,          &quot;Details&quot;: {            &quot;Weight&quot;: Description.Weight,            &quot;Dimensions&quot;: Description.(Width &amp; &quot; x &quot; &amp; Height &amp; &quot; x &quot; &amp; Depth)          }        },      &quot;Total Price&quot;: $sum(Product.(Price * Quantity))    }}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{  "Order": Account.Order.{      "ID": OrderID,      "Product": Product.{          "Name": `Product Name`,          "SKU": ProductID,          "Details": {            "Weight": Description.Weight,            "Dimensions": Description.(Width & " x " & Height & " x " & Depth)          }        },      "Total Price": $sum(Product.(Price * Quantity))    }}'
Result: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2263" name="object-constructor.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="207967083" result="Passed" start-time="2022-08-11T21:23:29.3391511Z" end-time="2022-08-11T21:23:29.3396483Z" duration="0.000497" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: $join(number, &quot;, &quot;), &quot;phone&quot;:number}';&#xA; result: {&quot;home&quot;:&quot;0203 544 1234&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;01962 001235&quot;,&quot;077 7700 1234&quot;],&quot;office&quot;:&quot;01962 001234, 01962 001235&quot;,&quot;mobile&quot;:&quot;077 7700 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: $join(number, ", "), "phone":number}'
Result: '{"home":"0203 544 1234","phone":["0203 544 1234","01962 001234","01962 001235","077 7700 1234"],"office":"01962 001234, 01962 001235","mobile":"077 7700 1234"}'
Expected: '{"home":"0203 544 1234","phone":["0203 544 1234","01962 001234","01962 001235","077 7700 1234"],"office":"01962 001234, 01962 001235","mobile":"077 7700 1234"}'
]]></output>
                </test-case>
                <test-case id="0-2264" name="object-constructor.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1050520184" result="Passed" start-time="2022-08-11T21:23:29.3396655Z" end-time="2022-08-11T21:23:29.3407465Z" duration="0.001081" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.{ type: $average(value), kind: $sum(value) } ';&#xA; result: error D1009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1009]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.{ type: $average(value), kind: $sum(value) } '
]]></output>
                </test-case>
                <test-case id="0-2265" name="object-constructor.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="685753890" result="Passed" start-time="2022-08-11T21:23:29.3408597Z" end-time="2022-08-11T21:23:29.3418719Z" duration="0.001012" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{ type: $average(value), kind: $sum(value) } ';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{ type: $average(value), kind: $sum(value) } '
]]></output>
                </test-case>
                <test-case id="0-2266" name="object-constructor.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1723776986" result="Passed" start-time="2022-08-11T21:23:29.3418891Z" end-time="2022-08-11T21:23:29.3441250Z" duration="0.002236" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(jsonata, λ($v, $k){&#xA;{&#xA;  'date': $k,&#xA;  'count': $v&#xA;}&#xA;}){&#xA;  $substring(date, 0, 7): $sum(count)&#xA;}&#xA;';&#xA; result: {&quot;2019-01&quot;:68281,&quot;2019-02&quot;:63672,&quot;2019-03&quot;:78625,&quot;2019-04&quot;:76505,&quot;2019-05&quot;:129360,&quot;2019-06&quot;:484244,&quot;2019-07&quot;:698748,&quot;2019-08&quot;:788322}" />
                  </properties>
                  <output><![CDATA[Expr is '$each(jsonata, λ($v, $k){
{
  'date': $k,
  'count': $v
}
}){
  $substring(date, 0, 7): $sum(count)
}
'
Result: '{"2019-01":68281,"2019-02":63672,"2019-03":78625,"2019-04":76505,"2019-05":129360,"2019-06":484244,"2019-07":698748,"2019-08":788322}'
Expected: '{"2019-01":68281,"2019-02":63672,"2019-03":78625,"2019-04":76505,"2019-05":129360,"2019-06":484244,"2019-07":698748,"2019-08":788322}'
]]></output>
                </test-case>
                <test-case id="0-2267" name="parent-operator.errors[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="596856342" result="Passed" start-time="2022-08-11T21:23:29.3441444Z" end-time="2022-08-11T21:23:29.3452066Z" duration="0.001062" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{'hello': 'world'}.% ';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{'hello': 'world'}.% '
]]></output>
                </test-case>
                <test-case id="0-2268" name="parent-operator.errors[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1666406922" result="Passed" start-time="2022-08-11T21:23:29.3452561Z" end-time="2022-08-11T21:23:29.3462645Z" duration="0.001008" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%'
]]></output>
                </test-case>
                <test-case id="0-2269" name="parent-operator.errors[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1400102275" result="Passed" start-time="2022-08-11T21:23:29.3462811Z" end-time="2022-08-11T21:23:29.3473437Z" duration="0.001063" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%()'
]]></output>
                </test-case>
                <test-case id="0-2270" name="parent-operator.errors[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1767990013" result="Passed" start-time="2022-08-11T21:23:29.3474611Z" end-time="2022-08-11T21:23:29.3496639Z" duration="0.002203" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%(1)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%(1)'
]]></output>
                </test-case>
                <test-case id="0-2271" name="parent-operator.errors[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="88958557" result="Passed" start-time="2022-08-11T21:23:29.3499917Z" end-time="2022-08-11T21:23:29.3505034Z" duration="0.000512" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%%';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0207]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%%'
]]></output>
                </test-case>
                <test-case id="0-2272" name="parent-operator.errors[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="178314575" result="Passed" start-time="2022-08-11T21:23:29.3506522Z" end-time="2022-08-11T21:23:29.3510944Z" duration="0.000442" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(%)';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(%)'
]]></output>
                </test-case>
                <test-case id="0-2273" name="parent-operator.errors[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1722603029" result="Passed" start-time="2022-08-11T21:23:29.3511092Z" end-time="2022-08-11T21:23:29.3515382Z" duration="0.000429" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(%%)';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0211]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(%%)'
]]></output>
                </test-case>
                <test-case id="0-2274" name="parent-operator.errors[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1124581066" result="Passed" start-time="2022-08-11T21:23:29.3515515Z" end-time="2022-08-11T21:23:29.3519692Z" duration="0.000418" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans.%%';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0207]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans.%%'
]]></output>
                </test-case>
                <test-case id="0-2275" name="parent-operator.errors[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="466226897" result="Passed" start-time="2022-08-11T21:23:29.3522122Z" end-time="2022-08-11T21:23:29.3525193Z" duration="0.000307" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.%'
]]></output>
                </test-case>
                <test-case id="0-2276" name="parent-operator.errors[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1474238755" result="Passed" start-time="2022-08-11T21:23:29.3525325Z" end-time="2022-08-11T21:23:29.3537388Z" duration="0.001207" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$$.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$$.%'
]]></output>
                </test-case>
                <test-case id="0-2277" name="parent-operator.errors[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1436558732" result="Passed" start-time="2022-08-11T21:23:29.3549463Z" end-time="2022-08-11T21:23:29.3582107Z" duration="0.003264" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans.%.%.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans.%.%.%'
]]></output>
                </test-case>
                <test-case id="0-2278" name="parent-operator.errors[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1709942353" result="Passed" start-time="2022-08-11T21:23:29.3590557Z" end-time="2022-08-11T21:23:29.3600426Z" duration="0.000987" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.%%%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.%%%'
]]></output>
                </test-case>
                <test-case id="0-2279" name="parent-operator.errors[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="835122262" result="Passed" start-time="2022-08-11T21:23:29.3602137Z" end-time="2022-08-11T21:23:29.3624240Z" duration="0.002210" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(%%%)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(%%%)'
]]></output>
                </test-case>
                <test-case id="0-2280" name="parent-operator.errors[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="582066074" result="Passed" start-time="2022-08-11T21:23:29.3633426Z" end-time="2022-08-11T21:23:29.3666762Z" duration="0.003334" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(%% %)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(%% %)'
]]></output>
                </test-case>
                <test-case id="0-2281" name="parent-operator.errors[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1649800847" result="Passed" start-time="2022-08-11T21:23:29.3672618Z" end-time="2022-08-11T21:23:29.3676929Z" duration="0.000431" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(% %%)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(% %%)'
]]></output>
                </test-case>
                <test-case id="0-2282" name="parent-operator.errors[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1586793973" result="Passed" start-time="2022-08-11T21:23:29.3677086Z" end-time="2022-08-11T21:23:29.3682667Z" duration="0.000558" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(% % %)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(% % %)'
]]></output>
                </test-case>
                <test-case id="0-2283" name="parent-operator.parent[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="468666533" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3687186Z" end-time="2022-08-11T21:23:29.3704809Z" duration="0.001762" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{&#xA;  &quot;order&quot;: %.OrderID,&#xA;  &quot;Product&quot;: `Product Name`,&#xA;  &quot;Weight&quot;: Description.Weight&#xA;}&#xA;';&#xA; result: [{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Weight&quot;:0.6},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Cloak&quot;,&quot;Weight&quot;:2}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.{
  "order": %.OrderID,
  "Product": `Product Name`,
  "Weight": Description.Weight
}
'
]]></output>
                </test-case>
                <test-case id="0-2284" name="parent-operator.parent[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1002745759" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3705289Z" end-time="2022-08-11T21:23:29.3714898Z" duration="0.000961" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order.Product).{&#xA;  &quot;order&quot;: %.OrderID,&#xA;  &quot;Product&quot;: `Product Name`,&#xA;  &quot;Weight&quot;: Description.Weight&#xA;}&#xA;';&#xA; result: [{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Weight&quot;:0.6},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Cloak&quot;,&quot;Weight&quot;:2}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.(Order.Product).{
  "order": %.OrderID,
  "Product": `Product Name`,
  "Weight": Description.Weight
}
'
]]></output>
                </test-case>
                <test-case id="0-2285" name="parent-operator.parent[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1330503664" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3715275Z" end-time="2022-08-11T21:23:29.3725249Z" duration="0.000997" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.[`Product Name`, %.OrderID]';&#xA; result: [&quot;Bowler Hat&quot;,&quot;order103&quot;,&quot;Trilby hat&quot;,&quot;order103&quot;,&quot;Bowler Hat&quot;,&quot;order104&quot;,&quot;Cloak&quot;,&quot;order104&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 119
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.[`Product Name`, %.OrderID]'
]]></output>
                </test-case>
                <test-case id="0-2286" name="parent-operator.parent[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="680800471" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3725409Z" end-time="2022-08-11T21:23:29.3734756Z" duration="0.000935" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ `Product Name`: [Quantity, %.OrderID] }';&#xA; result: [{&quot;Bowler Hat&quot;:[2,&quot;order103&quot;]},{&quot;Trilby hat&quot;:[1,&quot;order103&quot;]},{&quot;Bowler Hat&quot;:[4,&quot;order104&quot;]},{&quot;Cloak&quot;:[1,&quot;order104&quot;]}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 119
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ `Product Name`: [Quantity, %.OrderID] }'
]]></output>
                </test-case>
                <test-case id="0-2287" name="parent-operator.parent[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1901285537" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3735821Z" end-time="2022-08-11T21:23:29.3745801Z" duration="0.000998" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ `Product Name`: [Quantity, (%.OrderID)] }';&#xA; result: [{&quot;Bowler Hat&quot;:[2,&quot;order103&quot;]},{&quot;Trilby hat&quot;:[1,&quot;order103&quot;]},{&quot;Bowler Hat&quot;:[4,&quot;order104&quot;]},{&quot;Cloak&quot;:[1,&quot;order104&quot;]}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 119
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ `Product Name`: [Quantity, (%.OrderID)] }'
]]></output>
                </test-case>
                <test-case id="0-2288" name="parent-operator.parent[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="891395191" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3746773Z" end-time="2022-08-11T21:23:29.3759932Z" duration="0.001316" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.OrderID='order104'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.OrderID='order104'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2289" name="parent-operator.parent[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1625545224" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3765761Z" end-time="2022-08-11T21:23:29.3784782Z" duration="0.001902" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.%.`Account Name`='Firefly'].SKU';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.%.`Account Name`='Firefly'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2290" name="parent-operator.parent[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1656956052" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3785778Z" end-time="2022-08-11T21:23:29.3801979Z" duration="0.001620" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price[%.%.OrderID='order103']';&#xA; result: [34.45,21.67]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price[%.%.OrderID='order103']'
]]></output>
                </test-case>
                <test-case id="0-2291" name="parent-operator.parent[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1608549332" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3803075Z" end-time="2022-08-11T21:23:29.3815065Z" duration="0.001199" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price.%[%.OrderID='order103'].SKU';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price.%[%.OrderID='order103'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2292" name="parent-operator.parent[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="817541793" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3815959Z" end-time="2022-08-11T21:23:29.3825362Z" duration="0.000940" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.OrderID='order104'][%.%.`Account Name`='Firefly'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.OrderID='order104'][%.%.`Account Name`='Firefly'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2293" name="parent-operator.parent[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="152440881" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3825540Z" end-time="2022-08-11T21:23:29.3829927Z" duration="0.000439" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(Account.Order.Product)[%.OrderID='order104'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(Account.Order.Product)[%.OrderID='order104'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2294" name="parent-operator.parent[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="237980630" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3830075Z" end-time="2022-08-11T21:23:29.3840999Z" duration="0.001093" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ %.OrderID: Price * Quantity }';&#xA; result: [{&quot;order103&quot;:68.9},{&quot;order103&quot;:21.67},{&quot;order104&quot;:137.8},{&quot;order104&quot;:107.99}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 148
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ %.OrderID: Price * Quantity }'
]]></output>
                </test-case>
                <test-case id="0-2295" name="parent-operator.parent[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="653990950" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3842240Z" end-time="2022-08-11T21:23:29.3846683Z" duration="0.000444" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.().%';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.().%'
]]></output>
                </test-case>
                <test-case id="0-2296" name="parent-operator.parent[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="212063183" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3853237Z" end-time="2022-08-11T21:23:29.3864543Z" duration="0.001130" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2297" name="parent-operator.parent[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1727525917" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3875217Z" end-time="2022-08-11T21:23:29.3881789Z" duration="0.000657" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2298" name="parent-operator.parent[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="870423699" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3912743Z" end-time="2022-08-11T21:23:29.3918442Z" duration="0.000570" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order.(Product)).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.(Order.(Product)).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2299" name="parent-operator.parent[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1476746767" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3957160Z" end-time="2022-08-11T21:23:29.3963578Z" duration="0.000641" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order).(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.(Order).(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2300" name="parent-operator.parent[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="82450520" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3963807Z" end-time="2022-08-11T21:23:29.3969703Z" duration="0.000590" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(Account.Order).(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(Account.Order).(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2301" name="parent-operator.parent[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1224828458" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3982755Z" end-time="2022-08-11T21:23:29.3987256Z" duration="0.000450" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.SKU^(%.Price)';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 228
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.SKU^(%.Price)'
]]></output>
                </test-case>
                <test-case id="0-2302" name="parent-operator.parent[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="307599211" result="Failed" label="Error" start-time="2022-08-11T21:23:29.3987422Z" end-time="2022-08-11T21:23:29.3992627Z" duration="0.000521" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.SKU^(%.Price, &gt;%.%.OrderID)';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654608&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 228
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.SKU^(%.Price, >%.%.OrderID)'
]]></output>
                </test-case>
                <test-case id="0-2303" name="parent-operator.parent[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="846637429" result="Failed" label="Error" start-time="2022-08-11T21:23:29.4005148Z" end-time="2022-08-11T21:23:29.4011513Z" duration="0.000636" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.{ 'Colour': Colour, 'Total': %.Price * %.Quantity }';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Total&quot;:68.9},{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Total&quot;:21.67},{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Total&quot;:137.8},{&quot;Colour&quot;:&quot;Black&quot;,&quot;Total&quot;:107.99}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.{ 'Colour': Colour, 'Total': %.Price * %.Quantity }'
]]></output>
                </test-case>
                <test-case id="0-2304" name="parent-operator.parent[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1233353056" result="Failed" label="Error" start-time="2022-08-11T21:23:29.4012424Z" end-time="2022-08-11T21:23:29.4020095Z" duration="0.000767" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.{ 'Item': Colour &amp; ' ' &amp; %.`Product Name`, 'Discounted': (%.%.OrderID = 'order103') ? %.Price / 2 : %.Price }';&#xA; result: [{&quot;Item&quot;:&quot;Purple Bowler Hat&quot;,&quot;Discounted&quot;:17.225},{&quot;Item&quot;:&quot;Orange Trilby hat&quot;,&quot;Discounted&quot;:10.835},{&quot;Item&quot;:&quot;Purple Bowler Hat&quot;,&quot;Discounted&quot;:34.45},{&quot;Item&quot;:&quot;Black Cloak&quot;,&quot;Discounted&quot;:107.99}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseStringConcatenation(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 204
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.{ 'Item': Colour & ' ' & %.`Product Name`, 'Discounted': (%.%.OrderID = 'order103') ? %.Price / 2 : %.Price }'
]]></output>
                </test-case>
                <test-case id="0-2305" name="parent-operator.parent[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1716168987" result="Failed" label="Error" start-time="2022-08-11T21:23:29.4031557Z" end-time="2022-08-11T21:23:29.4036532Z" duration="0.000497" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.( $parent := %; %.OrderID )';&#xA; result: [&quot;order103&quot;,&quot;order103&quot;,&quot;order104&quot;,&quot;order104&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseAssignment(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 188
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.( $parent := %; %.OrderID )'
]]></output>
                </test-case>
                <test-case id="0-2306" name="parent-operator.parent[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1530765990" result="Failed" label="Error" start-time="2022-08-11T21:23:29.4036836Z" end-time="2022-08-11T21:23:29.4050904Z" duration="0.001407" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.( $parent := %; $parent.OrderID )';&#xA; result: [&quot;order103&quot;,&quot;order103&quot;,&quot;order104&quot;,&quot;order104&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : S0211: The symbol % cannot be used as a unary operator]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseAssignment(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 188
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.( $parent := %; $parent.OrderID )'
]]></output>
                </test-case>
                <test-case id="0-2307" name="parent-operator.parent[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="710490973" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.4055078Z" end-time="2022-08-11T21:23:29.4059866Z" duration="0.000479" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].{ 'book': $B.title, 'parent': $keys(%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].{ 'book': $B.title, 'parent': $keys(%) }'
]]></output>
                </test-case>
                <test-case id="0-2308" name="parent-operator.parent[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1346559487" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.4063187Z" end-time="2022-08-11T21:23:29.4080544Z" duration="0.001736" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%) }'
]]></output>
                </test-case>
                <test-case id="0-2309" name="parent-operator.parent[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1284631240" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.4094907Z" end-time="2022-08-11T21:23:29.4118861Z" duration="0.002396" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%.%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%.%) }'
]]></output>
                </test-case>
                <test-case id="0-2310" name="parent-operator.parent[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="687647802" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:29.4133263Z" end-time="2022-08-11T21:23:29.4145689Z" duration="0.001242" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers@$C[$C.id=$L.customer].{ 'book': $B.title, 'customer': $C.name, 'grandparent': $keys(%.%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;grandparent&quot;:&quot;library&quot;},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;grandparent&quot;:&quot;library&quot;},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;grandparent&quot;:&quot;library&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers@$C[$C.id=$L.customer].{ 'book': $B.title, 'customer': $C.name, 'grandparent': $keys(%.%) }'
]]></output>
                </test-case>
                <test-case id="0-2311" name="parentheses.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2010595106" result="Passed" start-time="2022-08-11T21:23:29.4146863Z" end-time="2022-08-11T21:23:29.4148216Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah).baz.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah).baz.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2312" name="parentheses.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="355002559" result="Passed" start-time="2022-08-11T21:23:29.4148388Z" end-time="2022-08-11T21:23:29.4155506Z" duration="0.000712" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah.baz).fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah.baz).fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2313" name="parentheses.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1312510148" result="Passed" start-time="2022-08-11T21:23:29.4177539Z" end-time="2022-08-11T21:23:29.4181246Z" duration="0.000370" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz).fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz).fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2314" name="parentheses.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1473788541" result="Passed" start-time="2022-08-11T21:23:29.4189370Z" end-time="2022-08-11T21:23:29.4193239Z" duration="0.000387" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.(baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.(baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2315" name="parentheses.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1459280950" result="Passed" start-time="2022-08-11T21:23:29.4194215Z" end-time="2022-08-11T21:23:29.4195525Z" duration="0.000131" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2316" name="parentheses.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="508277738" result="Passed" start-time="2022-08-11T21:23:29.4224854Z" end-time="2022-08-11T21:23:29.4226433Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo).(blah).baz.(fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo).(blah).baz.(fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2317" name="parentheses.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1938208712" result="Passed" start-time="2022-08-11T21:23:29.4244696Z" end-time="2022-08-11T21:23:29.4246441Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.(blah).baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.(blah).baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2318" name="parentheses.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1352704971" result="Passed" start-time="2022-08-11T21:23:29.4250746Z" end-time="2022-08-11T21:23:29.4251790Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(4 + 2) / 2';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(4 + 2) / 2'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2319" name="partial-application.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1867500167" result="Passed" start-time="2022-08-11T21:23:29.4255256Z" end-time="2022-08-11T21:23:29.4256738Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $add := function($x, $y){$x+$y};  $add2 := $add(?, 2);  $add2(3))';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '(  $add := function($x, $y){$x+$y};  $add2 := $add(?, 2);  $add2(3))'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2320" name="partial-application.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="4953419" result="Passed" start-time="2022-08-11T21:23:29.4259799Z" end-time="2022-08-11T21:23:29.4261061Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $add := function($x, $y){$x+$y};  $add2 := $add(2, ?);  $add2(4))';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $add := function($x, $y){$x+$y};  $add2 := $add(2, ?);  $add2(4))'
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2321" name="partial-application.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1969975096" result="Passed" start-time="2022-08-11T21:23:29.4279837Z" end-time="2022-08-11T21:23:29.4281939Z" duration="0.000210" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $firstn := $substring(?, 0, ?);  $first5 := $firstn(?, 5);  $first5(&quot;Hello World&quot;))';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $firstn := $substring(?, 0, ?);  $first5 := $firstn(?, 5);  $first5("Hello World"))'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-2322" name="partial-application.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1852944798" result="Passed" start-time="2022-08-11T21:23:29.4290699Z" end-time="2022-08-11T21:23:29.4298367Z" duration="0.000767" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'substring(?, 0, ?)';&#xA; result: error T1007" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1007]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'substring(?, 0, ?)'
]]></output>
                </test-case>
                <test-case id="0-2323" name="partial-application.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="40861698" result="Passed" start-time="2022-08-11T21:23:29.4305717Z" end-time="2022-08-11T21:23:29.4314846Z" duration="0.000913" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'unknown(?)';&#xA; result: error T1008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1008]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'unknown(?)'
]]></output>
                </test-case>
                <test-case id="0-2324" name="predicates.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1890629870" result="Passed" start-time="2022-08-11T21:23:29.4337930Z" end-time="2022-08-11T21:23:29.4339177Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing[x=6][y=3].number';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing[x=6][y=3].number'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2325" name="predicates.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="159440681" result="Passed" start-time="2022-08-11T21:23:29.4357862Z" end-time="2022-08-11T21:23:29.4360597Z" duration="0.000273" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'clues[x=6][y=3].number';&#xA; result: 7" />
                  </properties>
                  <output><![CDATA[Expr is 'clues[x=6][y=3].number'
Result: '7'
Expected: '7'
]]></output>
                </test-case>
                <test-case id="0-2326" name="predicates.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1418900411" result="Passed" start-time="2022-08-11T21:23:29.4373925Z" end-time="2022-08-11T21:23:29.4376862Z" duration="0.000294" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[x=6][y=3].number';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$[x=6][y=3].number'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2327" name="predicates.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="25873694" result="Passed" start-time="2022-08-11T21:23:29.4378483Z" end-time="2022-08-11T21:23:29.4380297Z" duration="0.000195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$lowercase(Description.Colour) = &quot;purple&quot;][0].Price';&#xA; result: [34.45,34.45]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$lowercase(Description.Colour) = "purple"][0].Price'
Result: '[34.45,34.45]'
Expected: '[34.45,34.45]'
]]></output>
                </test-case>
                <test-case id="0-2328" name="quoted-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1484622399" result="Passed" start-time="2022-08-11T21:23:29.4388234Z" end-time="2022-08-11T21:23:29.4392306Z" duration="0.000407" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah&quot;';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah"'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-2329" name="quoted-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="470590116" result="Passed" start-time="2022-08-11T21:23:29.4393368Z" end-time="2022-08-11T21:23:29.4394986Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah&quot;.baz.'fud'';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah".baz.'fud''
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2330" name="quoted-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="254163714" result="Passed" start-time="2022-08-11T21:23:29.4415152Z" end-time="2022-08-11T21:23:29.4417018Z" duration="0.000187" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.&quot;blah&quot;.&quot;baz&quot;.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo"."blah"."baz"."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2331" name="quoted-selectors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1894196485" result="Passed" start-time="2022-08-11T21:23:29.4428320Z" end-time="2022-08-11T21:23:29.4429730Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah.baz&quot;';&#xA; result: &quot;here&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah.baz"'
Result: '"here"'
Expected: '"here"'
]]></output>
                </test-case>
                <test-case id="0-2332" name="quoted-selectors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="566135033" result="Passed" start-time="2022-08-11T21:23:29.4430189Z" end-time="2022-08-11T21:23:29.4431254Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah`';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah`'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-2333" name="quoted-selectors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="233195586" result="Passed" start-time="2022-08-11T21:23:29.4431366Z" end-time="2022-08-11T21:23:29.4440983Z" duration="0.000962" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah`.baz.'fud'';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah`.baz.'fud''
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2334" name="quoted-selectors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="752671742" result="Passed" start-time="2022-08-11T21:23:29.4491230Z" end-time="2022-08-11T21:23:29.4496183Z" duration="0.000495" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '`foo`.`blah`.`baz`.`fud`';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '`foo`.`blah`.`baz`.`fud`'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2335" name="quoted-selectors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1504721263" result="Passed" start-time="2022-08-11T21:23:29.4498143Z" end-time="2022-08-11T21:23:29.4500032Z" duration="0.000188" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah.baz`';&#xA; result: &quot;here&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah.baz`'
Result: '"here"'
Expected: '"here"'
]]></output>
                </test-case>
                <test-case id="0-2336" name="range-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1342201636" result="Passed" start-time="2022-08-11T21:23:29.4519458Z" end-time="2022-08-11T21:23:29.4520982Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0..9]';&#xA; result: [0,1,2,3,4,5,6,7,8,9]" />
                  </properties>
                  <output><![CDATA[Expr is '[0..9]'
Result: '[0,1,2,3,4,5,6,7,8,9]'
Expected: '[0,1,2,3,4,5,6,7,8,9]'
]]></output>
                </test-case>
                <test-case id="0-2337" name="range-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="740156544" result="Passed" start-time="2022-08-11T21:23:29.4522654Z" end-time="2022-08-11T21:23:29.4525166Z" duration="0.000251" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0..9][$ % 2 = 0]';&#xA; result: [0,2,4,6,8]" />
                  </properties>
                  <output><![CDATA[Expr is '[0..9][$ % 2 = 0]'
Result: '[0,2,4,6,8]'
Expected: '[0,2,4,6,8]'
]]></output>
                </test-case>
                <test-case id="0-2338" name="range-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1382797124" result="Passed" start-time="2022-08-11T21:23:29.4532891Z" end-time="2022-08-11T21:23:29.4534844Z" duration="0.000195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0, 4..9, 20, 22]';&#xA; result: [0,4,5,6,7,8,9,20,22]" />
                  </properties>
                  <output><![CDATA[Expr is '[0, 4..9, 20, 22]'
Result: '[0,4,5,6,7,8,9,20,22]'
Expected: '[0,4,5,6,7,8,9,20,22]'
]]></output>
                </test-case>
                <test-case id="0-2339" name="range-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1434060419" result="Passed" start-time="2022-08-11T21:23:29.4545258Z" end-time="2022-08-11T21:23:29.4546276Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[5..2]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[5..2]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2340" name="range-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1947221321" result="Passed" start-time="2022-08-11T21:23:29.4546390Z" end-time="2022-08-11T21:23:29.4547115Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[5..2, 2..5]';&#xA; result: [2,3,4,5]" />
                  </properties>
                  <output><![CDATA[Expr is '[5..2, 2..5]'
Result: '[2,3,4,5]'
Expected: '[2,3,4,5]'
]]></output>
                </test-case>
                <test-case id="0-2341" name="range-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2117793145" result="Passed" start-time="2022-08-11T21:23:29.4547190Z" end-time="2022-08-11T21:23:29.4547852Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..2]';&#xA; result: [-2,-1,0,1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..2]'
Result: '[-2,-1,0,1,2]'
Expected: '[-2,-1,0,1,2]'
]]></output>
                </test-case>
                <test-case id="0-2342" name="range-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="554726050" result="Passed" start-time="2022-08-11T21:23:29.4547927Z" end-time="2022-08-11T21:23:29.4558127Z" duration="0.001020" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..2].($*$)';&#xA; result: [4,1,0,1,4]" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..2].($*$)'
Result: '[4,1,0,1,4]'
Expected: '[4,1,0,1,4]'
]]></output>
                </test-case>
                <test-case id="0-2343" name="range-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1754247598" result="Passed" start-time="2022-08-11T21:23:29.4584140Z" end-time="2022-08-11T21:23:29.4585399Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..blah]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..blah]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2344" name="range-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="937897422" result="Passed" start-time="2022-08-11T21:23:29.4590700Z" end-time="2022-08-11T21:23:29.4591735Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[blah..5, 3, -2..blah]';&#xA; result: [3]" />
                  </properties>
                  <output><![CDATA[Expr is '[blah..5, 3, -2..blah]'
Result: '[3]'
Expected: '[3]'
]]></output>
                </test-case>
                <test-case id="0-2345" name="range-operator.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1793844593" result="Passed" start-time="2022-08-11T21:23:29.4597079Z" end-time="2022-08-11T21:23:29.4613570Z" duration="0.001649" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1.1 .. 5]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1.1 .. 5]'
]]></output>
                </test-case>
                <test-case id="0-2346" name="range-operator.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1253546773" result="Passed" start-time="2022-08-11T21:23:29.4625285Z" end-time="2022-08-11T21:23:29.4632950Z" duration="0.000766" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1 .. 5.5]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1 .. 5.5]'
]]></output>
                </test-case>
                <test-case id="0-2347" name="range-operator.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1652515292" result="Passed" start-time="2022-08-11T21:23:29.4643802Z" end-time="2022-08-11T21:23:29.4650905Z" duration="0.000710" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[10..1.5]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[10..1.5]'
]]></output>
                </test-case>
                <test-case id="0-2348" name="range-operator.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="826135987" result="Passed" start-time="2022-08-11T21:23:29.4651071Z" end-time="2022-08-11T21:23:29.4660565Z" duration="0.000949" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[true..false]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[true..false]'
]]></output>
                </test-case>
                <test-case id="0-2349" name="range-operator.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="926183327" result="Passed" start-time="2022-08-11T21:23:29.4670219Z" end-time="2022-08-11T21:23:29.4677947Z" duration="0.000773" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '['dogs'..'cats']';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '['dogs'..'cats']'
]]></output>
                </test-case>
                <test-case id="0-2350" name="range-operator.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="145713212" result="Passed" start-time="2022-08-11T21:23:29.4688853Z" end-time="2022-08-11T21:23:29.4695833Z" duration="0.000698" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..'']';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..'']'
]]></output>
                </test-case>
                <test-case id="0-2351" name="range-operator.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="421338118" result="Passed" start-time="2022-08-11T21:23:29.4695990Z" end-time="2022-08-11T21:23:29.4709469Z" duration="0.001348" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..[]]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..[]]'
]]></output>
                </test-case>
                <test-case id="0-2352" name="range-operator.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="374820946" result="Passed" start-time="2022-08-11T21:23:29.4724538Z" end-time="2022-08-11T21:23:29.4728936Z" duration="0.000440" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..{}]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..{}]'
]]></output>
                </test-case>
                <test-case id="0-2353" name="range-operator.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1150407179" result="Passed" start-time="2022-08-11T21:23:29.4746659Z" end-time="2022-08-11T21:23:29.4761505Z" duration="0.001485" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..false]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..false]'
]]></output>
                </test-case>
                <test-case id="0-2354" name="range-operator.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1471793348" result="Passed" start-time="2022-08-11T21:23:29.4773248Z" end-time="2022-08-11T21:23:29.4780529Z" duration="0.000728" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[2..true]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[2..true]'
]]></output>
                </test-case>
                <test-case id="0-2355" name="range-operator.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="259959071" result="Passed" start-time="2022-08-11T21:23:29.4780746Z" end-time="2022-08-11T21:23:29.4789546Z" duration="0.000880" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[$x..true]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[$x..true]'
]]></output>
                </test-case>
                <test-case id="0-2356" name="range-operator.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1519367307" result="Passed" start-time="2022-08-11T21:23:29.4790213Z" end-time="2022-08-11T21:23:29.4799988Z" duration="0.000977" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[false..$x]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[false..$x]'
]]></output>
                </test-case>
                <test-case id="0-2357" name="range-operator.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="266737513" result="Passed" start-time="2022-08-11T21:23:29.4800187Z" end-time="2022-08-11T21:23:31.4140786Z" duration="1.934073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10000000] ~&gt; $count()';&#xA; result: 10000000" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10000000] ~> $count()'
Result: '10000000'
Expected: '10000000'
]]></output>
                </test-case>
                <test-case id="0-2358" name="range-operator.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1103491206" result="Passed" start-time="2022-08-11T21:23:31.4141287Z" end-time="2022-08-11T21:23:31.4150180Z" duration="0.000889" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[0..10000000] ~&gt; $count()';&#xA; result: error D2014" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D2014]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[0..10000000] ~> $count()'
]]></output>
                </test-case>
                <test-case id="0-2359" name="range-operator.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1073912375" result="Passed" start-time="2022-08-11T21:23:31.4150407Z" end-time="2022-08-11T21:23:31.4160791Z" duration="0.001039" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..10000001] ~&gt; $count()';&#xA; result: error D2014" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D2014]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..10000001] ~> $count()'
]]></output>
                </test-case>
                <test-case id="0-2360" name="range-operator.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="297268576" result="Passed" start-time="2022-08-11T21:23:31.4161238Z" end-time="2022-08-11T21:23:33.4746662Z" duration="2.058556" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[100..10000099] ~&gt; $count()';&#xA; result: 10000000" />
                  </properties>
                  <output><![CDATA[Expr is '[100..10000099] ~> $count()'
Result: '10000000'
Expected: '10000000'
]]></output>
                </test-case>
                <test-case id="0-2361" name="regex.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1504892296" result="Passed" start-time="2022-08-11T21:23:33.4746904Z" end-time="2022-08-11T21:23:33.4749720Z" duration="0.000282" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/b+/)';&#xA; result: [&quot;a&quot;,&quot;a&quot;,&quot;xa&quot;,&quot;cc&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/b+/)'
Result: '["a","a","xa","cc"]'
Expected: '["a","a","xa","cc"]'
]]></output>
                </test-case>
                <test-case id="0-2362" name="regex.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1373352221" result="Passed" start-time="2022-08-11T21:23:33.4749798Z" end-time="2022-08-11T21:23:33.4750704Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/b+/, 2)';&#xA; result: [&quot;a&quot;,&quot;a&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/b+/, 2)'
Result: '["a","a"]'
Expected: '["a","a"]'
]]></output>
                </test-case>
                <test-case id="0-2363" name="regex.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="875969371" result="Passed" start-time="2022-08-11T21:23:33.4750780Z" end-time="2022-08-11T21:23:33.4752660Z" duration="0.000188" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/d+/)';&#xA; result: [&quot;ababbxabbcc&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/d+/)'
Result: '["ababbxabbcc"]'
Expected: '["ababbxabbcc"]'
]]></output>
                </test-case>
                <test-case id="0-2364" name="regex.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1030467526" result="Passed" start-time="2022-08-11T21:23:33.4753047Z" end-time="2022-08-11T21:23:33.4755060Z" duration="0.000202" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;ababbxabbcc&quot;,/ab+/)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("ababbxabbcc",/ab+/)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2365" name="regex.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="940934964" result="Passed" start-time="2022-08-11T21:23:33.4755812Z" end-time="2022-08-11T21:23:33.4757119Z" duration="0.000131" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;ababbxabbcc&quot;,/ax+/)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("ababbxabbcc",/ax+/)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2366" name="regex.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1444460073" result="Passed" start-time="2022-08-11T21:23:33.4757460Z" end-time="2022-08-11T21:23:33.4761526Z" duration="0.000407" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$contains($.&quot;Product Name&quot;, /hat/)].ProductID';&#xA; result: 858236" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$contains($."Product Name", /hat/)].ProductID'
Result: '858236'
Expected: '858236'
]]></output>
                </test-case>
                <test-case id="0-2367" name="regex.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="121806973" result="Passed" start-time="2022-08-11T21:23:33.4761737Z" end-time="2022-08-11T21:23:33.4765182Z" duration="0.000344" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$contains($.&quot;Product Name&quot;, /hat/i)].ProductID';&#xA; result: [858383,858236,858383]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$contains($."Product Name", /hat/i)].ProductID'
Result: '[858383,858236,858383]'
Expected: '[858383,858236,858383]'
]]></output>
                </test-case>
                <test-case id="0-2368" name="regex.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="559838406" result="Passed" start-time="2022-08-11T21:23:33.4765284Z" end-time="2022-08-11T21:23:33.4770489Z" duration="0.000520" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;)';&#xA; result: &quot;ayyayyxayycc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy")'
Result: '"ayyayyxayycc"'
Expected: '"ayyayyxayycc"'
]]></output>
                </test-case>
                <test-case id="0-2369" name="regex.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2116550925" result="Passed" start-time="2022-08-11T21:23:33.4770905Z" end-time="2022-08-11T21:23:33.4773873Z" duration="0.000297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;, 2)';&#xA; result: &quot;ayyayyxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy", 2)'
Result: '"ayyayyxabbcc"'
Expected: '"ayyayyxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2370" name="regex.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117079314" result="Passed" start-time="2022-08-11T21:23:33.4774528Z" end-time="2022-08-11T21:23:33.4776013Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;, 0)';&#xA; result: &quot;ababbxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy", 0)'
Result: '"ababbxabbcc"'
Expected: '"ababbxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2371" name="regex.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1915604841" result="Passed" start-time="2022-08-11T21:23:33.4776091Z" end-time="2022-08-11T21:23:33.4777411Z" duration="0.000132" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/d+/, &quot;yy&quot;)';&#xA; result: &quot;ababbxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/d+/, "yy")'
Result: '"ababbxabbcc"'
Expected: '"ababbxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2372" name="regex.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="555411588" result="Passed" start-time="2022-08-11T21:23:33.4777492Z" end-time="2022-08-11T21:23:33.4781492Z" duration="0.000400" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;John Smith&quot;, /(\w+)\s(\w+)/, &quot;$2, $1&quot;)';&#xA; result: &quot;Smith, John&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("John Smith", /(\w+)\s(\w+)/, "$2, $1")'
Result: '"Smith, John"'
Expected: '"Smith, John"'
]]></output>
                </test-case>
                <test-case id="0-2373" name="regex.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2066128199" result="Passed" start-time="2022-08-11T21:23:33.4781736Z" end-time="2022-08-11T21:23:33.4783061Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$$$1&quot;)';&#xA; result: &quot;$265&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$$$1")'
Result: '"$265"'
Expected: '"$265"'
]]></output>
                </test-case>
                <test-case id="0-2374" name="regex.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2067762493" result="Passed" start-time="2022-08-11T21:23:33.4783170Z" end-time="2022-08-11T21:23:33.4785072Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$w&quot;)';&#xA; result: &quot;$w&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$w")'
Result: '"$w"'
Expected: '"$w"'
]]></output>
                </test-case>
                <test-case id="0-2375" name="regex.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="34643921" result="Passed" start-time="2022-08-11T21:23:33.4787028Z" end-time="2022-08-11T21:23:33.4788142Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$0 -&gt; $$$1&quot;)';&#xA; result: &quot;265USD -&gt; $265&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$0 -> $$$1")'
Result: '"265USD -> $265"'
Expected: '"265USD -> $265"'
]]></output>
                </test-case>
                <test-case id="0-2376" name="regex.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1415249046" result="Failed" start-time="2022-08-11T21:23:33.4788341Z" end-time="2022-08-11T21:23:33.4796411Z" duration="0.000807" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$0$1$2&quot;)';&#xA; result: &quot;265USD265&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"265USD265"', got '"265USD265$2"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$0$1$2")'
Result: '"265USD265$2"'
Expected: '"265USD265"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"265USD265"', got '"265USD265$2"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2377" name="regex.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="98697200" result="Passed" start-time="2022-08-11T21:23:33.4796861Z" end-time="2022-08-11T21:23:33.4839494Z" duration="0.004264" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcd&quot;, /(ab)|(a)/, &quot;[1=$1][2=$2]&quot;)';&#xA; result: &quot;[1=ab][2=]cd&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcd", /(ab)|(a)/, "[1=$1][2=$2]")'
Result: '"[1=ab][2=]cd"'
Expected: '"[1=ab][2=]cd"'
]]></output>
                </test-case>
                <test-case id="0-2378" name="regex.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1250447923" result="Passed" start-time="2022-08-11T21:23:33.4840970Z" end-time="2022-08-11T21:23:33.4842851Z" duration="0.000188" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /bra/, &quot;*&quot;)';&#xA; result: &quot;a*cada*&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /bra/, "*")'
Result: '"a*cada*"'
Expected: '"a*cada*"'
]]></output>
                </test-case>
                <test-case id="0-2379" name="regex.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="96785277" result="Passed" start-time="2022-08-11T21:23:33.4843298Z" end-time="2022-08-11T21:23:33.4847044Z" duration="0.000374" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a.*a/, &quot;*&quot;)';&#xA; result: &quot;*&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a.*a/, "*")'
Result: '"*"'
Expected: '"*"'
]]></output>
                </test-case>
                <test-case id="0-2380" name="regex.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1053377555" result="Passed" start-time="2022-08-11T21:23:33.4847243Z" end-time="2022-08-11T21:23:33.4849260Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a.*?a/, &quot;*&quot;)';&#xA; result: &quot;*c*bra&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a.*?a/, "*")'
Result: '"*c*bra"'
Expected: '"*c*bra"'
]]></output>
                </test-case>
                <test-case id="0-2381" name="regex.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1913868766" result="Passed" start-time="2022-08-11T21:23:33.4849353Z" end-time="2022-08-11T21:23:33.4852194Z" duration="0.000284" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a/, &quot;&quot;)';&#xA; result: &quot;brcdbr&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a/, "")'
Result: '"brcdbr"'
Expected: '"brcdbr"'
]]></output>
                </test-case>
                <test-case id="0-2382" name="regex.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1347221354" result="Passed" start-time="2022-08-11T21:23:33.4852399Z" end-time="2022-08-11T21:23:33.4855059Z" duration="0.000266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a(.)/, &quot;a$1$1&quot;)';&#xA; result: &quot;abbraccaddabbra&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a(.)/, "a$1$1")'
Result: '"abbraccaddabbra"'
Expected: '"abbraccaddabbra"'
]]></output>
                </test-case>
                <test-case id="0-2383" name="regex.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="558439072" result="Failed" start-time="2022-08-11T21:23:33.4855200Z" end-time="2022-08-11T21:23:33.4873098Z" duration="0.001790" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /.*?/, &quot;$1&quot;)';&#xA; result: error D1004" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D1004 (), got '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abracadabra", /.*?/, "$1")'
Result: '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"'
Expected error D1004
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D1004 (), got '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2384" name="regex.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="324876904" result="Passed" start-time="2022-08-11T21:23:33.4874131Z" end-time="2022-08-11T21:23:33.4879694Z" duration="0.000556" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;AAAA&quot;, /A+/, &quot;b&quot;)';&#xA; result: &quot;b&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("AAAA", /A+/, "b")'
Result: '"b"'
Expected: '"b"'
]]></output>
                </test-case>
                <test-case id="0-2385" name="regex.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1980309243" result="Passed" start-time="2022-08-11T21:23:33.4883208Z" end-time="2022-08-11T21:23:33.4885249Z" duration="0.000204" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;AAAA&quot;, /A+?/, &quot;b&quot;)';&#xA; result: &quot;bbbb&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("AAAA", /A+?/, "b")'
Result: '"bbbb"'
Expected: '"bbbb"'
]]></output>
                </test-case>
                <test-case id="0-2386" name="regex.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1519375539" result="Passed" start-time="2022-08-11T21:23:33.4885529Z" end-time="2022-08-11T21:23:33.4895050Z" duration="0.000952" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;darted&quot;, /^(.*?)d(.*)$/, &quot;$1c$2&quot;)';&#xA; result: &quot;carted&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("darted", /^(.*?)d(.*)$/, "$1c$2")'
Result: '"carted"'
Expected: '"carted"'
]]></output>
                </test-case>
                <test-case id="0-2387" name="regex.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1563211501" result="Failed" start-time="2022-08-11T21:23:33.4895298Z" end-time="2022-08-11T21:23:33.4912957Z" duration="0.001766" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;hella8l3no&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"hella8l3no"', got '"hell$18$123no"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)/, "$8$5$12$12$18$123")'
Result: '"hell$18$123no"'
Expected: '"hella8l3no"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"hella8l3no"', got '"hell$18$123no"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2388" name="regex.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="908885885" result="Passed" start-time="2022-08-11T21:23:33.4917881Z" end-time="2022-08-11T21:23:33.4919372Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /xyz/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefghijklmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /xyz/, "$8$5$12$12$18$123")'
Result: '"abcdefghijklmno"'
Expected: '"abcdefghijklmno"'
]]></output>
                </test-case>
                <test-case id="0-2389" name="regex.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="492712671" result="Failed" start-time="2022-08-11T21:23:33.4921806Z" end-time="2022-08-11T21:23:33.4952370Z" duration="0.003056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /ijk/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefgh22823lmno&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"abcdefgh22823lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /ijk/, "$8$5$12$12$18$123")'
Result: '"abcdefgh$8$5$12$12$18$123lmno"'
Expected: '"abcdefgh22823lmno"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"abcdefgh22823lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2390" name="regex.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2132837603" result="Failed" start-time="2022-08-11T21:23:33.4952850Z" end-time="2022-08-11T21:23:33.4964798Z" duration="0.001195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(ijk)/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefghijk2ijk2ijk8ijk23lmno&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"abcdefghijk2ijk2ijk8ijk23lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(ijk)/, "$8$5$12$12$18$123")'
Result: '"abcdefgh$8$5$12$12$18$123lmno"'
Expected: '"abcdefghijk2ijk2ijk8ijk23lmno"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"abcdefghijk2ijk2ijk8ijk23lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2391" name="regex.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1075464123" result="Passed" start-time="2022-08-11T21:23:33.4964967Z" end-time="2022-08-11T21:23:33.4967053Z" duration="0.000209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /ijk/, &quot;$x&quot;)';&#xA; result: &quot;abcdefgh$xlmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /ijk/, "$x")'
Result: '"abcdefgh$xlmno"'
Expected: '"abcdefgh$xlmno"'
]]></output>
                </test-case>
                <test-case id="0-2392" name="regex.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1784148985" result="Passed" start-time="2022-08-11T21:23:33.4967156Z" end-time="2022-08-11T21:23:33.4971983Z" duration="0.000483" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(ijk)/, &quot;$x$&quot;)';&#xA; result: &quot;abcdefgh$x$lmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(ijk)/, "$x$")'
Result: '"abcdefgh$x$lmno"'
Expected: '"abcdefgh$x$lmno"'
]]></output>
                </test-case>
                <test-case id="0-2393" name="regex.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="308884749" result="Passed" start-time="2022-08-11T21:23:33.4972230Z" end-time="2022-08-11T21:23:33.4976019Z" duration="0.000379" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { &quot;foo&quot; })';&#xA; result: [&quot;Bowler foo&quot;,&quot;Trilby foo&quot;,&quot;Bowler foo&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { "foo" })'
Result: '["Bowler foo","Trilby foo","Bowler foo","Cloak"]'
Expected: '["Bowler foo","Trilby foo","Bowler foo","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2394" name="regex.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1136791843" result="Passed" start-time="2022-08-11T21:23:33.4976200Z" end-time="2022-08-11T21:23:33.4980632Z" duration="0.000443" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /(h)(at)/i, function($match) { $uppercase($match.match) })';&#xA; result: [&quot;Bowler HAT&quot;,&quot;Trilby HAT&quot;,&quot;Bowler HAT&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /(h)(at)/i, function($match) { $uppercase($match.match) })'
Result: '["Bowler HAT","Trilby HAT","Bowler HAT","Cloak"]'
Expected: '["Bowler HAT","Trilby HAT","Bowler HAT","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2395" name="regex.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="442329025" result="Passed" start-time="2022-08-11T21:23:33.4980758Z" end-time="2022-08-11T21:23:33.4985826Z" duration="0.000507" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;temperature = 68F today&quot;, /(-?\d+(?:\.\d*)?)F\b/, function($m) { ($number($m.groups[0]) - 32) * 5/9 &amp; &quot;C&quot; })';&#xA; result: &quot;temperature = 20C today&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("temperature = 68F today", /(-?\d+(?:\.\d*)?)F\b/, function($m) { ($number($m.groups[0]) - 32) * 5/9 & "C" })'
Result: '"temperature = 20C today"'
Expected: '"temperature = 20C today"'
]]></output>
                </test-case>
                <test-case id="0-2396" name="regex.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="744440924" result="Passed" start-time="2022-08-11T21:23:33.4986071Z" end-time="2022-08-11T21:23:33.5446251Z" duration="0.046019" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { true })';&#xA; result: error D3012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3012]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { true })'
]]></output>
                </test-case>
                <test-case id="0-2397" name="regex.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1826240326" result="Passed" start-time="2022-08-11T21:23:33.5450097Z" end-time="2022-08-11T21:23:33.5456322Z" duration="0.000622" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { 42 })';&#xA; result: error D3012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3012]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { 42 })'
]]></output>
                </test-case>
                <test-case id="0-2398" name="regex.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="723780072" result="Passed" start-time="2022-08-11T21:23:33.5457620Z" end-time="2022-08-11T21:23:33.5459555Z" duration="0.000194" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map($, $match(?, /^(\w*\s\w*)/)).match';&#xA; result: [&quot;Felicia Saunders&quot;,&quot;Jimmy Schultz&quot;,&quot;Dolores Figueroa&quot;,&quot;Craig Moreno&quot;,&quot;Lindsey Hall&quot;,&quot;Bonnie Russell&quot;,&quot;Kristin Stewart&quot;,&quot;Owen Reid&quot;,&quot;Brenda Sherman&quot;,&quot;Dwayne Baldwin&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$map($, $match(?, /^(\w*\s\w*)/)).match'
Result: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
Expected: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
]]></output>
                </test-case>
                <test-case id="0-2399" name="regex.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2144446105" result="Passed" start-time="2022-08-11T21:23:33.5459666Z" end-time="2022-08-11T21:23:33.5461218Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map($, function($i){ $match($i, /^(\w*\s\w*)/) }).match';&#xA; result: [&quot;Felicia Saunders&quot;,&quot;Jimmy Schultz&quot;,&quot;Dolores Figueroa&quot;,&quot;Craig Moreno&quot;,&quot;Lindsey Hall&quot;,&quot;Bonnie Russell&quot;,&quot;Kristin Stewart&quot;,&quot;Owen Reid&quot;,&quot;Brenda Sherman&quot;,&quot;Dwayne Baldwin&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$map($, function($i){ $match($i, /^(\w*\s\w*)/) }).match'
Result: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
Expected: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
]]></output>
                </test-case>
                <test-case id="0-2400" name="simple-array-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="349384520" result="Passed" start-time="2022-08-11T21:23:33.5461511Z" end-time="2022-08-11T21:23:33.5462492Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1[0]';&#xA; result: [1,3,5,6]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1[0]'
Result: '[1,3,5,6]'
Expected: '[1,3,5,6]'
]]></output>
                </test-case>
                <test-case id="0-2401" name="simple-array-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1131739800" result="Passed" start-time="2022-08-11T21:23:33.5462567Z" end-time="2022-08-11T21:23:33.5463422Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz.fud';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz.fud'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2402" name="simple-array-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1092676886" result="Passed" start-time="2022-08-11T21:23:33.5463494Z" end-time="2022-08-11T21:23:33.5464312Z" duration="0.000082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[1].baz.fud';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[1].baz.fud'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2403" name="simple-array-selectors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="857068709" result="Passed" start-time="2022-08-11T21:23:33.5464385Z" end-time="2022-08-11T21:23:33.5465170Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[-1].bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[-1].bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-2404" name="simple-array-selectors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="809104013" result="Passed" start-time="2022-08-11T21:23:33.5465233Z" end-time="2022-08-11T21:23:33.5465970Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah)[1].baz.fud';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah)[1].baz.fud'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2405" name="simple-array-selectors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="377592018" result="Passed" start-time="2022-08-11T21:23:33.5466045Z" end-time="2022-08-11T21:23:33.5466996Z" duration="0.000095" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud[0]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud[0]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2406" name="simple-array-selectors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2013410177" result="Passed" start-time="2022-08-11T21:23:33.5467065Z" end-time="2022-08-11T21:23:33.5467917Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud[-1]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud[-1]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2407" name="simple-array-selectors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="456176394" result="Passed" start-time="2022-08-11T21:23:33.5467980Z" end-time="2022-08-11T21:23:33.5468925Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2408" name="simple-array-selectors.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1230128333" result="Passed" start-time="2022-08-11T21:23:33.5468988Z" end-time="2022-08-11T21:23:33.5469598Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[1]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[1]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2409" name="simple-array-selectors.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1437149427" result="Passed" start-time="2022-08-11T21:23:33.5469661Z" end-time="2022-08-11T21:23:33.5470452Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[5 * 0.2]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[5 * 0.2]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2410" name="simple-array-selectors.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="992193672" result="Passed" start-time="2022-08-11T21:23:33.5470522Z" end-time="2022-08-11T21:23:33.5471219Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-1]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-1]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2411" name="simple-array-selectors.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1420670107" result="Passed" start-time="2022-08-11T21:23:33.5471279Z" end-time="2022-08-11T21:23:33.5471883Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-2]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-2]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2412" name="simple-array-selectors.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1163773237" result="Passed" start-time="2022-08-11T21:23:33.5471944Z" end-time="2022-08-11T21:23:33.5472544Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[2-4]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[2-4]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2413" name="simple-array-selectors.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1006705929" result="Passed" start-time="2022-08-11T21:23:33.5472608Z" end-time="2022-08-11T21:23:33.5473359Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-(4-2)]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-(4-2)]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2414" name="simple-array-selectors.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="20534820" result="Passed" start-time="2022-08-11T21:23:33.5473423Z" end-time="2022-08-11T21:23:33.5474425Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[$$.foo.bar / 30]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[$$.foo.bar / 30]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2415" name="simple-array-selectors.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="530883457" result="Passed" start-time="2022-08-11T21:23:33.5474567Z" end-time="2022-08-11T21:23:33.5475288Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-2416" name="simple-array-selectors.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="157670942" result="Passed" start-time="2022-08-11T21:23:33.5475358Z" end-time="2022-08-11T21:23:33.5476055Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[0]';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[0]'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-2417" name="simple-array-selectors.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="814913149" result="Passed" start-time="2022-08-11T21:23:33.5476121Z" end-time="2022-08-11T21:23:33.5476867Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz)[0]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz)[0]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-2418" name="simple-array-selectors.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="551092467" result="Passed" start-time="2022-08-11T21:23:33.5476976Z" end-time="2022-08-11T21:23:33.5477534Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2419" name="simple-array-selectors.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1197641930" result="Passed" start-time="2022-08-11T21:23:33.5477601Z" end-time="2022-08-11T21:23:33.5478114Z" duration="0.000051" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-2420" name="simple-array-selectors.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1569043072" result="Passed" start-time="2022-08-11T21:23:33.5478174Z" end-time="2022-08-11T21:23:33.5478690Z" duration="0.000052" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[-1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[-1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-2421" name="simple-array-selectors.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2028732219" result="Passed" start-time="2022-08-11T21:23:33.5478751Z" end-time="2022-08-11T21:23:33.5479255Z" duration="0.000050" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1][0]';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$[1][0]'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2422" name="simple-array-selectors.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1360404735" result="Passed" start-time="2022-08-11T21:23:33.5498615Z" end-time="2022-08-11T21:23:33.5506246Z" duration="0.000763" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1.1][0.9]';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$[1.1][0.9]'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2423" name="sorting.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="67125735" result="Passed" start-time="2022-08-11T21:23:33.5511948Z" end-time="2022-08-11T21:23:33.5538564Z" duration="0.002662" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^($)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^($)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2424" name="sorting.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2131196969" result="Passed" start-time="2022-08-11T21:23:33.5549598Z" end-time="2022-08-11T21:23:33.5554307Z" duration="0.000471" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^(&lt;$)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^(<$)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2425" name="sorting.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1189098838" result="Passed" start-time="2022-08-11T21:23:33.5560522Z" end-time="2022-08-11T21:23:33.5563692Z" duration="0.000317" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^(&gt;$)';&#xA; result: [107.99,34.45,34.45,21.67]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^(>$)'
Result: '[107.99,34.45,34.45,21.67]'
Expected: '[107.99,34.45,34.45,21.67]'
]]></output>
                </test-case>
                <test-case id="0-2426" name="sorting.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="131455856" result="Passed" start-time="2022-08-11T21:23:33.5564857Z" end-time="2022-08-11T21:23:33.5567230Z" duration="0.000237" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Purple&quot;,&quot;Purple&quot;,&quot;Black&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).Description.Colour'
Result: '["Orange","Purple","Purple","Black"]'
Expected: '["Orange","Purple","Purple","Black"]'
]]></output>
                </test-case>
                <test-case id="0-2427" name="sorting.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="246526839" result="Passed" start-time="2022-08-11T21:23:33.5568516Z" end-time="2022-08-11T21:23:33.5571305Z" duration="0.000279" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406634348","0406654608","040657863","0406654603"]'
Expected: '["0406634348","0406654608","040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2428" name="sorting.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="929336356" result="Passed" start-time="2022-08-11T21:23:33.5573322Z" end-time="2022-08-11T21:23:33.5575984Z" duration="0.000266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price * Quantity).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Purple&quot;,&quot;Black&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price * Quantity).Description.Colour'
Result: '["Orange","Purple","Black","Purple"]'
Expected: '["Orange","Purple","Black","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2429" name="sorting.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1625433468" result="Passed" start-time="2022-08-11T21:23:33.5577753Z" end-time="2022-08-11T21:23:33.5579797Z" duration="0.000204" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Quantity, Description.Colour).Description.Colour';&#xA; result: [&quot;Black&quot;,&quot;Orange&quot;,&quot;Purple&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Quantity, Description.Colour).Description.Colour'
Result: '["Black","Orange","Purple","Purple"]'
Expected: '["Black","Orange","Purple","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2430" name="sorting.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1437686644" result="Passed" start-time="2022-08-11T21:23:33.5584298Z" end-time="2022-08-11T21:23:33.5585852Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Quantity, &gt;Description.Colour).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Black&quot;,&quot;Purple&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Quantity, >Description.Colour).Description.Colour'
Result: '["Orange","Black","Purple","Purple"]'
Expected: '["Orange","Black","Purple","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2431" name="sorting.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1736492367" result="Passed" start-time="2022-08-11T21:23:33.5586178Z" end-time="2022-08-11T21:23:33.5592294Z" duration="0.000612" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406654608&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406634348","040657863","0406654603","0406654608"]'
Expected: '["0406634348","040657863","0406654603","0406654608"]'
]]></output>
                </test-case>
                <test-case id="0-2432" name="sorting.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1522400775" result="Passed" start-time="2022-08-11T21:23:33.5604414Z" end-time="2022-08-11T21:23:33.5607964Z" duration="0.000354" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406654608","040657863","0406654603","0406634348"]'
Expected: '["0406654608","040657863","0406654603","0406634348"]'
]]></output>
                </test-case>
                <test-case id="0-2433" name="sorting.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1253485465" result="Passed" start-time="2022-08-11T21:23:33.5614573Z" end-time="2022-08-11T21:23:33.5616858Z" duration="0.000229" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406654608&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["040657863","0406654603","0406654608","0406634348"]'
Expected: '["040657863","0406654603","0406654608","0406634348"]'
]]></output>
                </test-case>
                <test-case id="0-2434" name="sorting.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1894884404" result="Passed" start-time="2022-08-11T21:23:33.5619681Z" end-time="2022-08-11T21:23:33.5633606Z" duration="0.001393" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2007" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2007]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2435" name="sorting.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2069121402" result="Passed" start-time="2022-08-11T21:23:33.5636601Z" end-time="2022-08-11T21:23:33.5648295Z" duration="0.001170" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2008]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2436" name="sorting.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="821191880" result="Passed" start-time="2022-08-11T21:23:33.5648434Z" end-time="2022-08-11T21:23:33.5656225Z" duration="0.000779" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2008]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2437" name="sorting.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="490152645" result="Passed" start-time="2022-08-11T21:23:33.5656370Z" end-time="2022-08-11T21:23:33.5659138Z" duration="0.000277" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$^(age).name';&#xA; result: [&quot;Sally&quot;,&quot;Bill&quot;,&quot;Jim&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$^(age).name'
Result: '["Sally","Bill","Jim"]'
Expected: '["Sally","Bill","Jim"]'
]]></output>
                </test-case>
                <test-case id="0-2438" name="sorting.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1896818706" result="Passed" start-time="2022-08-11T21:23:33.5659887Z" end-time="2022-08-11T21:23:33.5661988Z" duration="0.000210" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age)).name';&#xA; result: [&quot;Sally&quot;,&quot;Bill&quot;,&quot;Jim&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age)).name'
Result: '["Sally","Bill","Jim"]'
Expected: '["Sally","Bill","Jim"]'
]]></output>
                </test-case>
                <test-case id="0-2439" name="sorting.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2094768533" result="Passed" start-time="2022-08-11T21:23:33.5665266Z" end-time="2022-08-11T21:23:33.5666166Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$^(age)[0].name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$^(age)[0].name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2440" name="sorting.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2114382713" result="Passed" start-time="2022-08-11T21:23:33.5666275Z" end-time="2022-08-11T21:23:33.5666966Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age))[0].name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age))[0].name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2441" name="sorting.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1063199145" result="Passed" start-time="2022-08-11T21:23:33.5667035Z" end-time="2022-08-11T21:23:33.5671337Z" duration="0.000430" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age)[0]).name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age)[0]).name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2442" name="sorting.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="333083168" result="Passed" start-time="2022-08-11T21:23:33.5671578Z" end-time="2022-08-11T21:23:33.5696673Z" duration="0.002509" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]^(age)';&#xA; result: {&quot;name&quot;:&quot;Bill&quot;,&quot;age&quot;:35}" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]^(age)'
Result: '{"name":"Bill","age":35}'
Expected: '{"name":"Bill","age":35}'
]]></output>
                </test-case>
                <test-case id="0-2443" name="sorting.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1619220105" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:33.5700972Z" end-time="2022-08-11T21:23:33.5709478Z" duration="0.000851" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$o.Product^(ProductID).{ 'Product': `Product Name`, 'Order Index': $o }';&#xA; result: [{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order Index&quot;:1},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:1}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$o.Product^(ProductID).{ 'Product': `Product Name`, 'Order Index': $o }'
]]></output>
                </test-case>
                <test-case id="0-2444" name="string-concat.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1648002646" result="Passed" start-time="2022-08-11T21:23:33.5709629Z" end-time="2022-08-11T21:23:33.5710535Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot; &amp; &quot;bar&quot;';&#xA; result: &quot;foobar&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"foo" & "bar"'
Result: '"foobar"'
Expected: '"foobar"'
]]></output>
                </test-case>
                <test-case id="0-2445" name="string-concat.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="712167496" result="Passed" start-time="2022-08-11T21:23:33.5710616Z" end-time="2022-08-11T21:23:33.5711268Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;&amp;&quot;bar&quot;';&#xA; result: &quot;foobar&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"foo"&"bar"'
Result: '"foobar"'
Expected: '"foobar"'
]]></output>
                </test-case>
                <test-case id="0-2446" name="string-concat.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2059174533" result="Passed" start-time="2022-08-11T21:23:33.5711344Z" end-time="2022-08-11T21:23:33.5713351Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz.fud &amp;foo.blah[1].baz.fud';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz.fud &foo.blah[1].baz.fud'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-2447" name="string-concat.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="777443056" result="Passed" start-time="2022-08-11T21:23:33.5713454Z" end-time="2022-08-11T21:23:33.5714353Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah[0].baz.fud &amp; blah[1].baz.fud)';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah[0].baz.fud & blah[1].baz.fud)'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-2448" name="string-concat.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="288349929" result="Passed" start-time="2022-08-11T21:23:33.5714498Z" end-time="2022-08-11T21:23:33.5715196Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah[0].baz.fud &amp; none)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah[0].baz.fud & none)'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2449" name="string-concat.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="605908386" result="Passed" start-time="2022-08-11T21:23:33.5715262Z" end-time="2022-08-11T21:23:33.5716116Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(none.here &amp; blah[1].baz.fud)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(none.here & blah[1].baz.fud)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2450" name="string-concat.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="284658083" result="Passed" start-time="2022-08-11T21:23:33.5716310Z" end-time="2022-08-11T21:23:33.5717094Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2]&amp;[3,4]';&#xA; result: &quot;[1,2][3,4]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2]&[3,4]'
Result: '"[1,2][3,4]"'
Expected: '"[1,2][3,4]"'
]]></output>
                </test-case>
                <test-case id="0-2451" name="string-concat.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2077011422" result="Passed" start-time="2022-08-11T21:23:33.5717161Z" end-time="2022-08-11T21:23:33.5717894Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2]&amp;3';&#xA; result: &quot;[1,2]3&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2]&3'
Result: '"[1,2]3"'
Expected: '"[1,2]3"'
]]></output>
                </test-case>
                <test-case id="0-2452" name="string-concat.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1275147859" result="Passed" start-time="2022-08-11T21:23:33.5717961Z" end-time="2022-08-11T21:23:33.5718586Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1&amp;2';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '1&2'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-2453" name="string-concat.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1673621789" result="Passed" start-time="2022-08-11T21:23:33.5718652Z" end-time="2022-08-11T21:23:33.5719437Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1&amp;[2]';&#xA; result: &quot;1[2]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '1&[2]'
Result: '"1[2]"'
Expected: '"1[2]"'
]]></output>
                </test-case>
                <test-case id="0-2454" name="string-concat.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="575403033" result="Passed" start-time="2022-08-11T21:23:33.5719543Z" end-time="2022-08-11T21:23:33.5720246Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot;&amp;5';&#xA; result: &quot;hello5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello"&5'
Result: '"hello5"'
Expected: '"hello5"'
]]></output>
                </test-case>
                <test-case id="0-2455" name="string-concat.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="468135948" result="Passed" start-time="2022-08-11T21:23:33.5720309Z" end-time="2022-08-11T21:23:33.5721568Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Prices: &quot; &amp; Account.Order.Product.Price';&#xA; result: &quot;Prices: [34.45,21.67,34.45,107.99]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Prices: " & Account.Order.Product.Price'
Result: '"Prices: [34.45,21.67,34.45,107.99]"'
Expected: '"Prices: [34.45,21.67,34.45,107.99]"'
]]></output>
                </test-case>
                <test-case id="0-2456" name="tail-recursion.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1918818712" result="Passed" start-time="2022-08-11T21:23:33.5721659Z" end-time="2022-08-11T21:23:33.5722314Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $f := function($n){()};              $f(1)            ) ';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $f := function($n){()};              $f(1)            ) '
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2457" name="tail-recursion.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1025551151" result="Failed" start-time="2022-08-11T21:23:33.5722374Z" end-time="2022-08-11T21:23:33.5746382Z" duration="0.002401" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(99))             ';&#xA; result: 9.33262154439441E+155" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '9.33262154439441E+155', got '0'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(99))             '
Result: '0'
Expected: '9.33262154439441E+155'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '9.33262154439441E+155', got '0'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2458" name="tail-recursion.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="873355387" result="Failed" start-time="2022-08-11T21:23:33.5752610Z" end-time="2022-08-11T21:23:33.5771580Z" duration="0.001897" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(100))             ';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error U1001 (), got '0']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(100))             '
Result: '0'
Expected error U1001
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error U1001 (), got '0']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2459" name="tail-recursion.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1767488822" result="Passed" start-time="2022-08-11T21:23:33.5771755Z" end-time="2022-08-11T21:23:33.5777273Z" duration="0.000552" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(5)) ';&#xA; result: 120" />
                  </properties>
                  <output><![CDATA[Expr is '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(5)) '
Result: '120'
Expected: '120'
]]></output>
                </test-case>
                <test-case id="0-2460" name="tail-recursion.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="246136162" result="Failed" start-time="2022-08-11T21:23:33.5777599Z" end-time="2022-08-11T21:23:33.5800354Z" duration="0.002275" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(150)) ';&#xA; result: 5.7133839564458575E+262" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '5.7133839564458575E+262', got '0'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(150)) '
Result: '0'
Expected: '5.7133839564458575E+262'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '5.7133839564458575E+262', got '0'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2461" name="tail-recursion.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1766883338" result="Failed" start-time="2022-08-11T21:23:33.5800632Z" end-time="2022-08-11T21:23:33.5849001Z" duration="0.004837" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $inf := function($n){$n+$inf($n-1)};  $inf(5))';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2462" name="tail-recursion.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674323685" result="Failed" start-time="2022-08-11T21:23:33.5849432Z" end-time="2022-08-11T21:23:33.5855421Z" duration="0.000599" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $inf := function(){$inf()};  $inf())';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2463" name="tail-recursion.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1752178512" result="Failed" start-time="2022-08-11T21:23:33.5855554Z" end-time="2022-08-11T21:23:33.5861963Z" duration="0.000641" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(6555)         )';&#xA; result: true" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2464" name="tail-recursion.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2146946430" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:33.5862099Z" end-time="2022-08-11T21:23:33.5869386Z" duration="0.000729" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($f := function($s, $x)&lt;an:s&gt; { $x &gt; 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )';&#xA; result: [&quot;a&quot;,&quot;a&quot;,&quot;a&quot;,&quot;a&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($f := function($s, $x)<an:s> { $x > 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )'
]]></output>
                </test-case>
                <test-case id="0-2465" name="tail-recursion.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1403184952" result="Skipped" label="Ignored" start-time="2022-08-11T21:23:33.5869525Z" end-time="2022-08-11T21:23:33.5878726Z" duration="0.000920" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($f := function($s, $x)&lt;sn:s&gt; { $x &gt; 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\FunctionTokenLambda.cs:line 36
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 456
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 451
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 111
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 43
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 139
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.JsonNet\JsonataExtensions.cs:line 134
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($f := function($s, $x)<sn:s> { $x > 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )'
]]></output>
                </test-case>
                <test-case id="0-2466" name="token-conversion.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2045752979" result="Passed" start-time="2022-08-11T21:23:33.5878994Z" end-time="2022-08-11T21:23:33.5879885Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.'7a'';&#xA; result: 33" />
                  </properties>
                  <output><![CDATA[Expr is '$.'7a''
Result: '33'
Expected: '33'
]]></output>
                </test-case>
                <test-case id="0-2467" name="token-conversion.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2057771419" result="Passed" start-time="2022-08-11T21:23:33.5879960Z" end-time="2022-08-11T21:23:33.5880957Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.'7'';&#xA; result: 88" />
                  </properties>
                  <output><![CDATA[Expr is '$.'7''
Result: '88'
Expected: '88'
]]></output>
                </test-case>
                <test-case id="0-2468" name="token-conversion.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1259305172" result="Passed" start-time="2022-08-11T21:23:33.5881035Z" end-time="2022-08-11T21:23:33.5893527Z" duration="0.001249" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.7a';&#xA; result: error S0201" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0201]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.7a'
]]></output>
                </test-case>
                <test-case id="0-2469" name="token-conversion.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="98897065" result="Passed" start-time="2022-08-11T21:23:33.5894515Z" end-time="2022-08-11T21:23:33.5899716Z" duration="0.000520" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.7';&#xA; result: error S0213" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0213]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.7'
]]></output>
                </test-case>
                <test-case id="0-2470" name="transform.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1857175224" result="Passed" start-time="2022-08-11T21:23:33.5919343Z" end-time="2022-08-11T21:23:33.5923349Z" duration="0.000400" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'Order': Account.Order.{  'ID': OrderID,  'Product': Product.{    'SKU': ProductID,    'Details': {      'Weight': Description.Weight,      'Dimensions': Description.(Width &amp; ' x ' &amp; Height &amp; ' x ' &amp; Depth)    }  },  'Total Price': $sum(Product.(Price * Quantity))}}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{'Order': Account.Order.{  'ID': OrderID,  'Product': Product.{    'SKU': ProductID,    'Details': {      'Weight': Description.Weight,      'Dimensions': Description.(Width & ' x ' & Height & ' x ' & Depth)    }  },  'Total Price': $sum(Product.(Price * Quantity))}}'
Result: '{"Order":[{"ID":"order103","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2471" name="transform.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1815001944" result="Passed" start-time="2022-08-11T21:23:33.5926259Z" end-time="2022-08-11T21:23:33.5929782Z" duration="0.000352" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&#xA;        (&#xA;          $tempReadings := $count(state.tempReadings) = 5 ?&#xA;              [state.tempReadings[[1..4]], event.t] :&#xA;              [state.tempReadings, event.t];&#xA;        &#xA;          {&#xA;            &quot;tempReadings&quot;: $tempReadings,&#xA;            &quot;sumTemperatures&quot;: $sum($tempReadings),&#xA;            &quot;avgTemperature&quot;: $average($tempReadings) ~&gt; $round(2),&#xA;            &quot;maxTemperature&quot;: $max($tempReadings),&#xA;            &quot;minTemperature&quot;: $min($tempReadings)&#xA;          }&#xA;        )';&#xA; result: {&quot;tempReadings&quot;:[28.9,28,28.2,28.4,28.4],&quot;sumTemperatures&quot;:141.9,&quot;avgTemperature&quot;:28.38,&quot;maxTemperature&quot;:28.9,&quot;minTemperature&quot;:28}" />
                  </properties>
                  <output><![CDATA[Expr is '
        (
          $tempReadings := $count(state.tempReadings) = 5 ?
              [state.tempReadings[[1..4]], event.t] :
              [state.tempReadings, event.t];
        
          {
            "tempReadings": $tempReadings,
            "sumTemperatures": $sum($tempReadings),
            "avgTemperature": $average($tempReadings) ~> $round(2),
            "maxTemperature": $max($tempReadings),
            "minTemperature": $min($tempReadings)
          }
        )'
Result: '{"tempReadings":[28.9,28,28.2,28.4,28.4],"sumTemperatures":141.9,"avgTemperature":28.38,"maxTemperature":28.9,"minTemperature":28}'
Expected: '{"tempReadings":[28.9,28,28.2,28.4,28.4],"sumTemperatures":141.9,"avgTemperature":28.38,"maxTemperature":28.9,"minTemperature":28}'
]]></output>
                </test-case>
                <test-case id="0-2472" name="transform.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1065578090" result="Passed" start-time="2022-08-11T21:23:33.5931373Z" end-time="2022-08-11T21:23:33.5933115Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: {&quot;output&quot;:{&quot;is&quot;:{&quot;same&quot;:{&quot;as&quot;:&quot;input&quot;}}}}" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '{"output":{"is":{"same":{"as":"input"}}}}'
Expected: '{"output":{"is":{"same":{"as":"input"}}}}'
]]></output>
                </test-case>
                <test-case id="0-2473" name="transform.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="603807581" result="Passed" start-time="2022-08-11T21:23:33.5933226Z" end-time="2022-08-11T21:23:33.5937546Z" duration="0.000432" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo';&#xA; result: {&quot;bar&quot;:42}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo'
Result: '{"bar":42}'
Expected: '{"bar":42}'
]]></output>
                </test-case>
                <test-case id="0-2474" name="transform.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1230742864" result="Passed" start-time="2022-08-11T21:23:33.5940215Z" end-time="2022-08-11T21:23:33.5941012Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'baz';&#xA; result: {&quot;gar&quot;:50}" />
                  </properties>
                  <output><![CDATA[Expr is 'baz'
Result: '{"gar":50}'
Expected: '{"gar":50}'
]]></output>
                </test-case>
                <test-case id="0-2475" name="transform.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="505843927" result="Passed" start-time="2022-08-11T21:23:33.5941151Z" end-time="2022-08-11T21:23:33.5942856Z" duration="0.000171" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Foo';&#xA; result: {&quot;mama&quot;:45}" />
                  </properties>
                  <output><![CDATA[Expr is 'Foo'
Result: '{"mama":45}'
Expected: '{"mama":45}'
]]></output>
                </test-case>
                <test-case id="0-2476" name="transform.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1695649051" result="Passed" start-time="2022-08-11T21:23:33.5943852Z" end-time="2022-08-11T21:23:33.5945715Z" duration="0.000186" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'food';&#xA; result: {&quot;wa&quot;:&quot;hume&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'food'
Result: '{"wa":"hume"}'
Expected: '{"wa":"hume"}'
]]></output>
                </test-case>
                <test-case id="0-2477" name="transform.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1888668277" result="Passed" start-time="2022-08-11T21:23:33.5945821Z" end-time="2022-08-11T21:23:33.5946418Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'maz.rar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'maz.rar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2478" name="transform.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="566606736" result="Passed" start-time="2022-08-11T21:23:33.5946482Z" end-time="2022-08-11T21:23:33.5947076Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'jee.par.waa';&#xA; result: {&quot;bar&quot;:87}" />
                  </properties>
                  <output><![CDATA[Expr is 'jee.par.waa'
Result: '{"bar":87}'
Expected: '{"bar":87}'
]]></output>
                </test-case>
                <test-case id="0-2479" name="transform.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1419029473" result="Passed" start-time="2022-08-11T21:23:33.5947140Z" end-time="2022-08-11T21:23:33.5948972Z" duration="0.000183" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2480" name="transform.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1277407952" result="Passed" start-time="2022-08-11T21:23:33.5949054Z" end-time="2022-08-11T21:23:33.5950581Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2481" name="transform.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1501496447" result="Passed" start-time="2022-08-11T21:23:33.5950663Z" end-time="2022-08-11T21:23:33.5951215Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2482" name="transform.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2105660557" result="Passed" start-time="2022-08-11T21:23:33.5951281Z" end-time="2022-08-11T21:23:33.5951813Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2483" name="transform.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="323427970" result="Passed" start-time="2022-08-11T21:23:33.5951876Z" end-time="2022-08-11T21:23:33.5952356Z" duration="0.000048" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: 6754322" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '6754322'
Expected: '6754322'
]]></output>
                </test-case>
                <test-case id="0-2484" name="transform.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1340775385" result="Passed" start-time="2022-08-11T21:23:33.5952413Z" end-time="2022-08-11T21:23:33.5953573Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-2485" name="transform.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1508158869" result="Passed" start-time="2022-08-11T21:23:33.5953660Z" end-time="2022-08-11T21:23:33.5954517Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: -24" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '-24'
Expected: '-24'
]]></output>
                </test-case>
                <test-case id="0-2486" name="transform.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="461344508" result="Passed" start-time="2022-08-11T21:23:33.5972871Z" end-time="2022-08-11T21:23:33.5974039Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: 6.54" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '6.54'
Expected: '6.54'
]]></output>
                </test-case>
                <test-case id="0-2487" name="transform.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1996262633" result="Passed" start-time="2022-08-11T21:23:33.5974142Z" end-time="2022-08-11T21:23:33.5976086Z" duration="0.000194" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2488" name="transform.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="678082432" result="Passed" start-time="2022-08-11T21:23:33.5978613Z" end-time="2022-08-11T21:23:33.5979289Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2489" name="transform.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1426748456" result="Passed" start-time="2022-08-11T21:23:33.5982305Z" end-time="2022-08-11T21:23:33.5983497Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2490" name="transform.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="150302690" result="Passed" start-time="2022-08-11T21:23:33.5985365Z" end-time="2022-08-11T21:23:33.5986036Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2491" name="transform.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1943124376" result="Passed" start-time="2022-08-11T21:23:33.5988457Z" end-time="2022-08-11T21:23:33.5989565Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2492" name="transform.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1764280905" result="Passed" start-time="2022-08-11T21:23:33.5991605Z" end-time="2022-08-11T21:23:33.5993730Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2493" name="transform.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="129329884" result="Passed" start-time="2022-08-11T21:23:33.5998923Z" end-time="2022-08-11T21:23:33.5999665Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;\&quot;Hello\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"\"Hello\""'
Expected: '"\"Hello\""'
]]></output>
                </test-case>
                <test-case id="0-2494" name="transform.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1848632371" result="Passed" start-time="2022-08-11T21:23:33.6013234Z" end-time="2022-08-11T21:23:33.6015737Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;\&quot;Hello\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"\"Hello\""'
Expected: '"\"Hello\""'
]]></output>
                </test-case>
                <test-case id="0-2495" name="transform.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="347499375" result="Passed" start-time="2022-08-11T21:23:33.6018653Z" end-time="2022-08-11T21:23:33.6019477Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;'Hello'&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"'Hello'"'
Expected: '"'Hello'"'
]]></output>
                </test-case>
                <test-case id="0-2496" name="transform.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1536359107" result="Passed" start-time="2022-08-11T21:23:33.6019564Z" end-time="2022-08-11T21:23:33.6020117Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;'Hello'&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"'Hello'"'
Expected: '"'Hello'"'
]]></output>
                </test-case>
                <test-case id="0-2497" name="transform.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="728388303" result="Passed" start-time="2022-08-11T21:23:33.6020183Z" end-time="2022-08-11T21:23:33.6026196Z" duration="0.000601" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Salutation)';&#xA; result: &quot;mr&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Salutation)'
Result: '"mr"'
Expected: '"mr"'
]]></output>
                </test-case>
                <test-case id="0-2498" name="transform.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1619757322" result="Passed" start-time="2022-08-11T21:23:33.6029867Z" end-time="2022-08-11T21:23:33.6032657Z" duration="0.000279" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(敷)';&#xA; result: &quot;steve&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(敷)'
Result: '"steve"'
Expected: '"steve"'
]]></output>
                </test-case>
                <test-case id="0-2499" name="transform.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="244817694" result="Passed" start-time="2022-08-11T21:23:33.6035091Z" end-time="2022-08-11T21:23:33.6037599Z" duration="0.000251" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Español)';&#xA; result: &quot;/ˈspænɪʃ/&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Español)'
Result: '"/ˈspænɪʃ/"'
Expected: '"/ˈspænɪʃ/"'
]]></output>
                </test-case>
                <test-case id="0-2500" name="transform.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="813898164" result="Passed" start-time="2022-08-11T21:23:33.6039380Z" end-time="2022-08-11T21:23:33.6040268Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase($.&quot;NI.Number&quot;)';&#xA; result: &quot;no10furbzness&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase($."NI.Number")'
Result: '"no10furbzness"'
Expected: '"no10furbzness"'
]]></output>
                </test-case>
                <test-case id="0-2501" name="transform.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1403114" result="Passed" start-time="2022-08-11T21:23:33.6040754Z" end-time="2022-08-11T21:23:33.6041732Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;COMPENSATION IS : &quot; &amp; Employment.&quot;Executive.Compensation&quot;)';&#xA; result: &quot;compensation is : 1400000&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase("COMPENSATION IS : " & Employment."Executive.Compensation")'
Result: '"compensation is : 1400000"'
Expected: '"compensation is : 1400000"'
]]></output>
                </test-case>
                <test-case id="0-2502" name="transform.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1665621531" result="Passed" start-time="2022-08-11T21:23:33.6042287Z" end-time="2022-08-11T21:23:33.6042984Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Hello&quot;';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Hello"'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-2503" name="transform.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="189452864" result="Passed" start-time="2022-08-11T21:23:33.6043117Z" end-time="2022-08-11T21:23:33.6044053Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation)';&#xA; result: &quot;MR&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation)'
Result: '"MR"'
Expected: '"MR"'
]]></output>
                </test-case>
                <test-case id="0-2504" name="transform.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="896216809" result="Passed" start-time="2022-08-11T21:23:33.6044129Z" end-time="2022-08-11T21:23:33.6044841Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello World&quot;)';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello World")'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-2505" name="transform.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="617139786" result="Passed" start-time="2022-08-11T21:23:33.6044910Z" end-time="2022-08-11T21:23:33.6045517Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;鯵噂ソ竹&quot;)';&#xA; result: &quot;鯵噂ソ竹&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("鯵噂ソ竹")'
Result: '"鯵噂ソ竹"'
Expected: '"鯵噂ソ竹"'
]]></output>
                </test-case>
                <test-case id="0-2506" name="transform.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1011433332" result="Passed" start-time="2022-08-11T21:23:33.6045581Z" end-time="2022-08-11T21:23:33.6046347Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Name &amp; &quot; is happy&quot;';&#xA; result: &quot;IBM UK is happy&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Name & " is happy"'
Result: '"IBM UK is happy"'
Expected: '"IBM UK is happy"'
]]></output>
                </test-case>
                <test-case id="0-2507" name="transform.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="671340278" result="Passed" start-time="2022-08-11T21:23:33.6046414Z" end-time="2022-08-11T21:23:33.6047111Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Name &amp; &quot; is pleased to employ &quot; &amp; Salutation &amp; &quot; &quot; &amp; Surname';&#xA; result: &quot;IBM UK is pleased to employ Mr Smith&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Name & " is pleased to employ " & Salutation & " " & Surname'
Result: '"IBM UK is pleased to employ Mr Smith"'
Expected: '"IBM UK is pleased to employ Mr Smith"'
]]></output>
                </test-case>
                <test-case id="0-2508" name="transform.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="442878925" result="Passed" start-time="2022-08-11T21:23:33.6047171Z" end-time="2022-08-11T21:23:33.6047833Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello &quot; &amp; Salutation &amp; &quot; &quot; &amp; Surname)';&#xA; result: &quot;HELLO MR SMITH&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello " & Salutation & " " & Surname)'
Result: '"HELLO MR SMITH"'
Expected: '"HELLO MR SMITH"'
]]></output>
                </test-case>
                <test-case id="0-2509" name="transform.case039" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case039" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="69559106" result="Passed" start-time="2022-08-11T21:23:33.6047896Z" end-time="2022-08-11T21:23:33.6048587Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation &amp; &quot; &quot; &amp; Surname &amp; &quot; - has &quot; &amp; Cars &amp; &quot; registered cars&quot;)';&#xA; result: &quot;MR SMITH - HAS 3 REGISTERED CARS&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation & " " & Surname & " - has " & Cars & " registered cars")'
Result: '"MR SMITH - HAS 3 REGISTERED CARS"'
Expected: '"MR SMITH - HAS 3 REGISTERED CARS"'
]]></output>
                </test-case>
                <test-case id="0-2510" name="transform.case040" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case040" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="919970544" result="Passed" start-time="2022-08-11T21:23:33.6048651Z" end-time="2022-08-11T21:23:33.6049254Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment.ContractType)';&#xA; result: &quot;PERMANENT&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Employment.ContractType)'
Result: '"PERMANENT"'
Expected: '"PERMANENT"'
]]></output>
                </test-case>
                <test-case id="0-2511" name="transform.case041" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case041" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="30150435" result="Passed" start-time="2022-08-11T21:23:33.6049318Z" end-time="2022-08-11T21:23:33.6049922Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;l&quot;)';&#xA; result: &quot;Ho&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "l")'
Result: '"Ho"'
Expected: '"Ho"'
]]></output>
                </test-case>
                <test-case id="0-2512" name="transform.case042" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case042" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="458944415" result="Passed" start-time="2022-08-11T21:23:33.6049985Z" end-time="2022-08-11T21:23:33.6050574Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, 'l')';&#xA; result: &quot;Ho&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", 'l')'
Result: '"Ho"'
Expected: '"Ho"'
]]></output>
                </test-case>
                <test-case id="0-2513" name="transform.case043" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case043" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1601809561" result="Passed" start-time="2022-08-11T21:23:33.6050637Z" end-time="2022-08-11T21:23:33.6057921Z" duration="0.000729" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;Q&quot;)';&#xA; result: &quot;Hola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "Q")'
Result: '"Hola"'
Expected: '"Hola"'
]]></output>
                </test-case>
                <test-case id="0-2514" name="transform.case044" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case044" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="490080870" result="Passed" start-time="2022-08-11T21:23:33.6058129Z" end-time="2022-08-11T21:23:33.6058908Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-2515" name="transform.case045" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case045" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="892123362" result="Passed" start-time="2022-08-11T21:23:33.6058981Z" end-time="2022-08-11T21:23:33.6059606Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;鯵噂ソ竹&quot;, &quot;ソ&quot;)';&#xA; result: &quot;鯵噂&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("鯵噂ソ竹", "ソ")'
Result: '"鯵噂"'
Expected: '"鯵噂"'
]]></output>
                </test-case>
                <test-case id="0-2516" name="transform.case046" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case046" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1808706428" result="Passed" start-time="2022-08-11T21:23:33.6059672Z" end-time="2022-08-11T21:23:33.6060402Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Coca&quot; &amp; &quot;Cola&quot;, &quot;ca&quot;)';&#xA; result: &quot;Cola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Coca" & "Cola", "ca")'
Result: '"Cola"'
Expected: '"Cola"'
]]></output>
                </test-case>
                <test-case id="0-2517" name="transform.case047" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case047" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1350895715" result="Passed" start-time="2022-08-11T21:23:33.6060514Z" end-time="2022-08-11T21:23:33.6061254Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salutation &amp; &quot; &quot; &amp; MiddleName &amp;&quot; &quot; &amp; Surname, MiddleName)';&#xA; result: &quot; Smith&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(Salutation & " " & MiddleName &" " & Surname, MiddleName)'
Result: '" Smith"'
Expected: '" Smith"'
]]></output>
                </test-case>
                <test-case id="0-2518" name="transform.case048" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case048" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="411403127" result="Passed" start-time="2022-08-11T21:23:33.6061323Z" end-time="2022-08-11T21:23:33.6062748Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salutation &amp; &quot; &quot; &amp; Employment.Role, Salutation)';&#xA; result: &quot; Senior Physician&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(Salutation & " " & Employment.Role, Salutation)'
Result: '" Senior Physician"'
Expected: '" Senior Physician"'
]]></output>
                </test-case>
                <test-case id="0-2519" name="transform.case049" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case049" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="638787561" result="Passed" start-time="2022-08-11T21:23:33.6063044Z" end-time="2022-08-11T21:23:33.6063974Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hola&quot;, 'l')';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hola", 'l')'
Result: '"a"'
Expected: '"a"'
]]></output>
                </test-case>
                <test-case id="0-2520" name="transform.case050" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case050" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="941840444" result="Passed" start-time="2022-08-11T21:23:33.6064149Z" end-time="2022-08-11T21:23:33.6064952Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hola&quot;, &quot;Q&quot;)';&#xA; result: &quot;Hola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hola", "Q")'
Result: '"Hola"'
Expected: '"Hola"'
]]></output>
                </test-case>
                <test-case id="0-2521" name="transform.case051" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case051" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="49490346" result="Passed" start-time="2022-08-11T21:23:33.6065018Z" end-time="2022-08-11T21:23:33.6065746Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Employment.Role) &amp; &quot; (&quot; &amp; Employment.Role &amp; &quot;)&quot;';&#xA; result: &quot;senior physician (Senior Physician)&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Employment.Role) & " (" & Employment.Role & ")"'
Result: '"senior physician (Senior Physician)"'
Expected: '"senior physician (Senior Physician)"'
]]></output>
                </test-case>
                <test-case id="0-2522" name="transform.case052" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case052" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1379688987" result="Passed" start-time="2022-08-11T21:23:33.6065809Z" end-time="2022-08-11T21:23:33.6066407Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Years &amp; &quot; years of employment&quot;';&#xA; result: &quot;12 years of employment&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Years & " years of employment"'
Result: '"12 years of employment"'
Expected: '"12 years of employment"'
]]></output>
                </test-case>
                <test-case id="0-2523" name="transform.case053" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case053" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1980040363" result="Passed" start-time="2022-08-11T21:23:33.6066467Z" end-time="2022-08-11T21:23:33.6067201Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation &amp; &quot; &quot; &amp; Surname &amp; &quot; - has &quot; &amp; Employment.Years &amp; &quot; years of employment&quot;)';&#xA; result: &quot;MR SMITH - HAS 12 YEARS OF EMPLOYMENT&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation & " " & Surname & " - has " & Employment.Years & " years of employment")'
Result: '"MR SMITH - HAS 12 YEARS OF EMPLOYMENT"'
Expected: '"MR SMITH - HAS 12 YEARS OF EMPLOYMENT"'
]]></output>
                </test-case>
                <test-case id="0-2524" name="transform.case054" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case054" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2096078022" result="Passed" start-time="2022-08-11T21:23:33.6067273Z" end-time="2022-08-11T21:23:33.6067916Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment.Role, 7,4)';&#xA; result: &quot;Phys&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(Employment.Role, 7,4)'
Result: '"Phys"'
Expected: '"Phys"'
]]></output>
                </test-case>
                <test-case id="0-2525" name="transform.case055" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case055" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2061534495" result="Passed" start-time="2022-08-11T21:23:33.6067979Z" end-time="2022-08-11T21:23:33.6068601Z" duration="0.000062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment.Role, -4,4)';&#xA; result: &quot;cian&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(Employment.Role, -4,4)'
Result: '"cian"'
Expected: '"cian"'
]]></output>
                </test-case>
                <test-case id="0-2526" name="transform.case056" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case056" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="50721039" result="Passed" start-time="2022-08-11T21:23:33.6068662Z" end-time="2022-08-11T21:23:33.6069256Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello World&quot;,Cars,5)';&#xA; result: &quot;lo Wo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("Hello World",Cars,5)'
Result: '"lo Wo"'
Expected: '"lo Wo"'
]]></output>
                </test-case>
                <test-case id="0-2527" name="transform.case057" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case057" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="936248206" result="Passed" start-time="2022-08-11T21:23:33.6069326Z" end-time="2022-08-11T21:23:33.6075245Z" duration="0.000592" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Missing close brackets&quot;';&#xA; result: error S0203" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0203]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase("Missing close brackets"'
]]></output>
                </test-case>
                <test-case id="0-2528" name="transform.case058" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case058" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="902658857" result="Passed" start-time="2022-08-11T21:23:33.6092588Z" end-time="2022-08-11T21:23:33.6100446Z" duration="0.000786" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$unknown(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$unknown(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2529" name="transform.case059" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case059" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="883243489" result="Passed" start-time="2022-08-11T21:23:33.6105734Z" end-time="2022-08-11T21:23:33.6111409Z" duration="0.000568" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decrypt(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decrypt(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2530" name="transform.case060" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case060" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1116968467" result="Passed" start-time="2022-08-11T21:23:33.6114990Z" end-time="2022-08-11T21:23:33.6121432Z" duration="0.000644" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employment.authentication(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employment.authentication(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2531" name="transform.case061" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case061" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="967260748" result="Passed" start-time="2022-08-11T21:23:33.6128655Z" end-time="2022-08-11T21:23:33.6143806Z" duration="0.001515" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Invalid)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Invalid)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2532" name="transform.case062" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case062" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="268910955" result="Passed" start-time="2022-08-11T21:23:33.6149892Z" end-time="2022-08-11T21:23:33.6151163Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment.Invalid)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Employment.Invalid)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2533" name="transform.case063" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case063" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="321789042" result="Passed" start-time="2022-08-11T21:23:33.6153231Z" end-time="2022-08-11T21:23:33.6161016Z" duration="0.000779" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Coca&quot;, &quot;Cola&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase("Coca", "Cola")'
]]></output>
                </test-case>
                <test-case id="0-2534" name="transform.case064" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case064" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="605131309" result="Passed" start-time="2022-08-11T21:23:33.6161284Z" end-time="2022-08-11T21:23:33.6173804Z" duration="0.001252" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Salary)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Salary)'
]]></output>
                </test-case>
                <test-case id="0-2535" name="transform.case065" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case065" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1276004838" result="Passed" start-time="2022-08-11T21:23:33.6178752Z" end-time="2022-08-11T21:23:33.6185411Z" duration="0.000666" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(20)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(20)'
]]></output>
                </test-case>
                <test-case id="0-2536" name="transform.case066" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case066" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1983358563" result="Passed" start-time="2022-08-11T21:23:33.6190096Z" end-time="2022-08-11T21:23:33.6195110Z" duration="0.000501" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(20.55)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(20.55)'
]]></output>
                </test-case>
                <test-case id="0-2537" name="transform.case067" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case067" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1916207693" result="Passed" start-time="2022-08-11T21:23:33.6196499Z" end-time="2022-08-11T21:23:33.6205108Z" duration="0.000861" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Employment)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Employment)'
]]></output>
                </test-case>
                <test-case id="0-2538" name="transform.case068" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case068" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1574694808" result="Passed" start-time="2022-08-11T21:23:33.6216401Z" end-time="2022-08-11T21:23:33.6234254Z" duration="0.001785" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Qualifications)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Qualifications)'
]]></output>
                </test-case>
                <test-case id="0-2539" name="transform.case069" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case069" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="723635599" result="Passed" start-time="2022-08-11T21:23:33.6234432Z" end-time="2022-08-11T21:23:33.6238121Z" duration="0.000369" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Coca&quot;, &quot;Cola&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase("Coca", "Cola")'
]]></output>
                </test-case>
                <test-case id="0-2540" name="transform.case070" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case070" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="496725537" result="Passed" start-time="2022-08-11T21:23:33.6238253Z" end-time="2022-08-11T21:23:33.6242338Z" duration="0.000409" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salary)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Salary)'
]]></output>
                </test-case>
                <test-case id="0-2541" name="transform.case071" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case071" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1937487877" result="Passed" start-time="2022-08-11T21:23:33.6242446Z" end-time="2022-08-11T21:23:33.6245646Z" duration="0.000320" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(28)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(28)'
]]></output>
                </test-case>
                <test-case id="0-2542" name="transform.case072" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case072" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1553383708" result="Passed" start-time="2022-08-11T21:23:33.6245746Z" end-time="2022-08-11T21:23:33.6248921Z" duration="0.000318" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(20.55)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(20.55)'
]]></output>
                </test-case>
                <test-case id="0-2543" name="transform.case073" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case073" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="608523326" result="Passed" start-time="2022-08-11T21:23:33.6249042Z" end-time="2022-08-11T21:23:33.6252580Z" duration="0.000354" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Cars)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Cars)'
]]></output>
                </test-case>
                <test-case id="0-2544" name="transform.case074" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case074" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="506777912" result="Passed" start-time="2022-08-11T21:23:33.6255119Z" end-time="2022-08-11T21:23:33.6262614Z" duration="0.000750" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Employment)'
]]></output>
                </test-case>
                <test-case id="0-2545" name="transform.case075" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case075" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="120152255" result="Passed" start-time="2022-08-11T21:23:33.6265639Z" end-time="2022-08-11T21:23:33.6274085Z" duration="0.000845" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Qualifications)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Qualifications)'
]]></output>
                </test-case>
                <test-case id="0-2546" name="transform.case076" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case076" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1484179961" result="Passed" start-time="2022-08-11T21:23:33.6279093Z" end-time="2022-08-11T21:23:33.6287410Z" duration="0.000832" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Coca&quot; &amp; &quot;ca&quot;)';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("Coca" & "ca")'
]]></output>
                </test-case>
                <test-case id="0-2547" name="transform.case077" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case077" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="162471344" result="Passed" start-time="2022-08-11T21:23:33.6287757Z" end-time="2022-08-11T21:23:33.6293966Z" duration="0.000621" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Salary,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Salary,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2548" name="transform.case078" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case078" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1786732661" result="Passed" start-time="2022-08-11T21:23:33.6294908Z" end-time="2022-08-11T21:23:33.6298700Z" duration="0.000379" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(22,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(22,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2549" name="transform.case079" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case079" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="956509009" result="Passed" start-time="2022-08-11T21:23:33.6298824Z" end-time="2022-08-11T21:23:33.6309556Z" duration="0.001073" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(22.55,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(22.55,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2550" name="transform.case080" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case080" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="686276594" result="Passed" start-time="2022-08-11T21:23:33.6312297Z" end-time="2022-08-11T21:23:33.6319636Z" duration="0.000734" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;22&quot;,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("22",2)'
]]></output>
                </test-case>
                <test-case id="0-2551" name="transform.case081" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case081" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="185463392" result="Passed" start-time="2022-08-11T21:23:33.6326681Z" end-time="2022-08-11T21:23:33.6333854Z" duration="0.000717" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;22.55&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("22.55",5)'
]]></output>
                </test-case>
                <test-case id="0-2552" name="transform.case082" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case082" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="316985176" result="Passed" start-time="2022-08-11T21:23:33.6344428Z" end-time="2022-08-11T21:23:33.6350408Z" duration="0.000598" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2553" name="transform.case083" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case083" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="980969761" result="Passed" start-time="2022-08-11T21:23:33.6350879Z" end-time="2022-08-11T21:23:33.6358791Z" duration="0.000791" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Qualifications,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Qualifications,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2554" name="transform.case084" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case084" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1450460897" result="Passed" start-time="2022-08-11T21:23:33.6362531Z" end-time="2022-08-11T21:23:33.6368671Z" duration="0.000614" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Coca&quot; &amp; &quot;ca&quot;)';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("Coca" & "ca")'
]]></output>
                </test-case>
                <test-case id="0-2555" name="transform.case085" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case085" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="764407818" result="Passed" start-time="2022-08-11T21:23:33.6368804Z" end-time="2022-08-11T21:23:33.6377462Z" duration="0.000866" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salary,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Salary,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2556" name="transform.case086" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case086" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="769197774" result="Passed" start-time="2022-08-11T21:23:33.6377749Z" end-time="2022-08-11T21:23:33.6384975Z" duration="0.000723" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(22,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(22,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2557" name="transform.case087" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case087" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1833064815" result="Passed" start-time="2022-08-11T21:23:33.6385114Z" end-time="2022-08-11T21:23:33.6391819Z" duration="0.000671" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(22.55,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(22.55,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2558" name="transform.case088" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case088" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="240858489" result="Passed" start-time="2022-08-11T21:23:33.6391994Z" end-time="2022-08-11T21:23:33.6395468Z" duration="0.000347" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;22&quot;,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("22",2)'
]]></output>
                </test-case>
                <test-case id="0-2559" name="transform.case089" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case089" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="982165961" result="Passed" start-time="2022-08-11T21:23:33.6395562Z" end-time="2022-08-11T21:23:33.6398433Z" duration="0.000287" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;22.55&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("22.55",5)'
]]></output>
                </test-case>
                <test-case id="0-2560" name="transform.case090" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case090" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="566418747" result="Passed" start-time="2022-08-11T21:23:33.6398517Z" end-time="2022-08-11T21:23:33.6401313Z" duration="0.000280" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2561" name="transform.case091" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case091" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="75185126" result="Passed" start-time="2022-08-11T21:23:33.6401415Z" end-time="2022-08-11T21:23:33.6404235Z" duration="0.000282" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Qualifications,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Qualifications,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2562" name="transform.case092" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case092" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1916165068" result="Passed" start-time="2022-08-11T21:23:33.6404337Z" end-time="2022-08-11T21:23:33.6408304Z" duration="0.000397" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot; &amp; &quot;ca&quot;, 2, 4, 5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca" & "ca", 2, 4, 5)'
]]></output>
                </test-case>
                <test-case id="0-2563" name="transform.case093" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case093" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1707119083" result="Passed" start-time="2022-08-11T21:23:33.6414915Z" end-time="2022-08-11T21:23:33.6422486Z" duration="0.000757" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot;, &quot;Mr&quot;, 4)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca", "Mr", 4)'
]]></output>
                </test-case>
                <test-case id="0-2564" name="transform.case094" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case094" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1100074286" result="Passed" start-time="2022-08-11T21:23:33.6426295Z" end-time="2022-08-11T21:23:33.6433561Z" duration="0.000727" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot;, 3, &quot;Whoops&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca", 3, "Whoops")'
]]></output>
                </test-case>
                <test-case id="0-2565" name="transform.case095" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case095" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2100193443" result="Passed" start-time="2022-08-11T21:23:33.6434228Z" end-time="2022-08-11T21:23:33.6440474Z" duration="0.000624" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Salary,2,4)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Salary,2,4)'
]]></output>
                </test-case>
                <test-case id="0-2566" name="transform.case096" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case096" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1908723127" result="Passed" start-time="2022-08-11T21:23:33.6440598Z" end-time="2022-08-11T21:23:33.6447620Z" duration="0.000702" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello&quot;,&quot;World&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Hello","World",5)'
]]></output>
                </test-case>
                <test-case id="0-2567" name="transform.case097" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case097" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="137155373" result="Passed" start-time="2022-08-11T21:23:33.6450742Z" end-time="2022-08-11T21:23:33.6458470Z" duration="0.000773" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello&quot;,5,&quot;World&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Hello",5,"World")'
]]></output>
                </test-case>
                <test-case id="0-2568" name="transform.case098" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case098" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="996678252" result="Passed" start-time="2022-08-11T21:23:33.6460417Z" end-time="2022-08-11T21:23:33.6470215Z" duration="0.000980" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello World&quot;,5.5,5)';&#xA; result: &quot; Worl&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("Hello World",5.5,5)'
Result: '" Worl"'
Expected: '" Worl"'
]]></output>
                </test-case>
                <test-case id="0-2569" name="transform.case099" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case099" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1361559679" result="Passed" start-time="2022-08-11T21:23:33.6475670Z" end-time="2022-08-11T21:23:33.6484086Z" duration="0.000841" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2570" name="transform.case100" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case100" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1056248446" result="Passed" start-time="2022-08-11T21:23:33.6487842Z" end-time="2022-08-11T21:23:33.6494914Z" duration="0.000707" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Qualifications,6,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Qualifications,6,5)'
]]></output>
                </test-case>
                <test-case id="0-2571" name="transform.case101" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case101" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2039982382" result="Passed" start-time="2022-08-11T21:23:33.6495077Z" end-time="2022-08-11T21:23:33.6496415Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.contents';&#xA; result: &quot;stuff&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.contents'
Result: '"stuff"'
Expected: '"stuff"'
]]></output>
                </test-case>
                <test-case id="0-2572" name="transform.case102" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case102" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1923684554" result="Passed" start-time="2022-08-11T21:23:33.6498637Z" end-time="2022-08-11T21:23:33.6499609Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.meta';&#xA; result: &quot;boo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.meta'
Result: '"boo"'
Expected: '"boo"'
]]></output>
                </test-case>
                <test-case id="0-2573" name="transform.case103" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case103" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1835251175" result="Passed" start-time="2022-08-11T21:23:33.6500505Z" end-time="2022-08-11T21:23:33.6510280Z" duration="0.000977" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.meta';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.meta'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2574" name="transforms.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="142062024" result="Passed" start-time="2022-08-11T21:23:33.6511068Z" end-time="2022-08-11T21:23:33.6563985Z" duration="0.005292" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{&quot;Total&quot;:Price*Quantity},[&quot;Description&quot;, &quot;SKU&quot;]|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{"Total":Price*Quantity},["Description", "SKU"]|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2575" name="transforms.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1151836214" result="Passed" start-time="2022-08-11T21:23:33.6564191Z" end-time="2022-08-11T21:23:33.6566687Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order ~&gt; |Product|{&quot;Total&quot;:Price*Quantity},[&quot;Description&quot;, &quot;SKU&quot;]|';&#xA; result: [{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order ~> |Product|{"Total":Price*Quantity},["Description", "SKU"]|'
Result: '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]'
Expected: '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]'
]]></output>
                </test-case>
                <test-case id="0-2576" name="transforms.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="643590285" result="Passed" start-time="2022-08-11T21:23:33.6566790Z" end-time="2022-08-11T21:23:33.6572532Z" duration="0.000574" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{&quot;Total&quot;:Price*Quantity, &quot;Price&quot;: Price * 1.2}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:41.34,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:26.004,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:41.34,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:129.588,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{"Total":Price*Quantity, "Price": Price * 1.2}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":26.004,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":4,"Total":137.8},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":129.588,"Quantity":1,"Total":107.99}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":26.004,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":4,"Total":137.8},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":129.588,"Quantity":1,"Total":107.99}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2577" name="transforms.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="771165661" result="Passed" start-time="2022-08-11T21:23:33.6573163Z" end-time="2022-08-11T21:23:33.6575787Z" duration="0.000262" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{},&quot;Description&quot;|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{},"Description"|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2578" name="transforms.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1473262451" result="Passed" start-time="2022-08-11T21:23:33.6575886Z" end-time="2022-08-11T21:23:33.6579183Z" duration="0.000330" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|nomatch,&quot;Description&quot;|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|nomatch,"Description"|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2579" name="transforms.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1975925767" result="Passed" start-time="2022-08-11T21:23:33.6579545Z" end-time="2022-08-11T21:23:33.6581217Z" duration="0.000168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |(Account.Order.Product)[0]|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:&quot;blah&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |(Account.Order.Product)[0]|{"Description":"blah"}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":"blah","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":"blah","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2580" name="transforms.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="577354534" result="Passed" start-time="2022-08-11T21:23:33.6581296Z" end-time="2022-08-11T21:23:33.6585996Z" duration="0.000470" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |foo.bar|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |foo.bar|{"Description":"blah"}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2581" name="transforms.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2035733342" result="Passed" start-time="2022-08-11T21:23:33.6590910Z" end-time="2022-08-11T21:23:33.6593392Z" duration="0.000239" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{&quot;Product&quot;:&quot;blah&quot;},nomatch|';&#xA; result: {&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;blah&quot;},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;blah&quot;}]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account ~> |Order|{"Product":"blah"},nomatch|'
Result: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
Expected: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
]]></output>
                </test-case>
                <test-case id="0-2582" name="transforms.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1296999192" result="Passed" start-time="2022-08-11T21:23:33.6596679Z" end-time="2022-08-11T21:23:33.6598194Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo ~&gt; |foo.bar|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo ~> |foo.bar|{"Description":"blah"}|'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2583" name="transforms.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2093633495" result="Passed" start-time="2022-08-11T21:23:33.6600196Z" end-time="2022-08-11T21:23:33.6615072Z" duration="0.001488" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|5|';&#xA; result: error T2011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2011]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account ~> |Order|5|'
]]></output>
                </test-case>
                <test-case id="0-2584" name="transforms.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="196966895" result="Passed" start-time="2022-08-11T21:23:33.6615253Z" end-time="2022-08-11T21:23:33.6624985Z" duration="0.000973" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{},5|';&#xA; result: error T2012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2012]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account ~> |Order|{},5|'
]]></output>
                </test-case>
                <test-case id="0-2585" name="transforms.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="931505075" result="Passed" start-time="2022-08-11T21:23:33.6625722Z" end-time="2022-08-11T21:23:33.6628870Z" duration="0.000315" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{&quot;Product&quot;:&quot;blah&quot;},nomatch|';&#xA; result: {&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;blah&quot;},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;blah&quot;}]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account ~> |Order|{"Product":"blah"},nomatch|'
Result: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
Expected: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
]]></output>
                </test-case>
                <test-case id="0-2586" name="transforms.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="650275572" result="Passed" start-time="2022-08-11T21:23:33.6628973Z" end-time="2022-08-11T21:23:33.6634352Z" duration="0.000538" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{} ~&gt; |$|['one', 'two', 'three']|';&#xA; result: error T2011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2011]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{} ~> |$|['one', 'two', 'three']|'
]]></output>
                </test-case>
                <test-case id="0-2587" name="transforms.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1435424841" result="Passed" start-time="2022-08-11T21:23:33.6634458Z" end-time="2022-08-11T21:23:33.6637009Z" duration="0.000255" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; | ** ['hi'] | {'hello': hi}, ['hi'] |';&#xA; result: {&quot;hello&quot;:&quot;world&quot;,&quot;bye&quot;:null}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> | ** ['hi'] | {'hello': hi}, ['hi'] |'
Result: '{"bye":null,"hello":"world"}'
Expected: '{"hello":"world","bye":null}'
]]></output>
                </test-case>
                <test-case id="0-2588" name="transforms.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1018811792" result="Passed" start-time="2022-08-11T21:23:33.6637124Z" end-time="2022-08-11T21:23:33.6638002Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; | ** [hi] | {'hello': hi}, ['hi'] |';&#xA; result: {&quot;bye&quot;:null,&quot;hello&quot;:&quot;world&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> | ** [hi] | {'hello': hi}, ['hi'] |'
Result: '{"bye":null,"hello":"world"}'
Expected: '{"bye":null,"hello":"world"}'
]]></output>
                </test-case>
                <test-case id="0-2589" name="variables.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1988207138" result="Passed" start-time="2022-08-11T21:23:33.6638077Z" end-time="2022-08-11T21:23:33.6639511Z" duration="0.000143" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$price.foo.bar';&#xA; result: 45" />
                  </properties>
                  <output><![CDATA[Expr is '$price.foo.bar'
Result: '45'
Expected: '45'
]]></output>
                </test-case>
                <test-case id="0-2590" name="variables.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="506807064" result="Passed" start-time="2022-08-11T21:23:33.6639602Z" end-time="2022-08-11T21:23:33.6641646Z" duration="0.000204" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$price.foo.bar';&#xA; result: 45" />
                  </properties>
                  <output><![CDATA[Expr is '$price.foo.bar'
Result: '45'
Expected: '45'
]]></output>
                </test-case>
                <test-case id="0-2591" name="variables.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="150293748" result="Passed" start-time="2022-08-11T21:23:33.6643258Z" end-time="2022-08-11T21:23:33.6644752Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$var[1]';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$var[1]'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-2592" name="variables.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1675349204" result="Passed" start-time="2022-08-11T21:23:33.6655734Z" end-time="2022-08-11T21:23:33.6658659Z" duration="0.000293" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.foo.bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is '$.foo.bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2593" name="variables.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="592528847" result="Passed" start-time="2022-08-11T21:23:33.6658900Z" end-time="2022-08-11T21:23:33.6661548Z" duration="0.000265" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$a := 5';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$a := 5'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2594" name="variables.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="157216852" result="Passed" start-time="2022-08-11T21:23:33.6664337Z" end-time="2022-08-11T21:23:33.6668603Z" duration="0.000427" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$a := $b := 5';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$a := $b := 5'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2595" name="variables.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="421540411" result="Passed" start-time="2022-08-11T21:23:33.6668817Z" end-time="2022-08-11T21:23:33.6671329Z" duration="0.000251" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a := $b := 5; $a)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '($a := $b := 5; $a)'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2596" name="variables.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="21322809" result="Passed" start-time="2022-08-11T21:23:33.6673260Z" end-time="2022-08-11T21:23:33.6676792Z" duration="0.000353" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a := $b := 5; $b)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '($a := $b := 5; $b)'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2597" name="variables.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1993748272" result="Passed" start-time="2022-08-11T21:23:33.6679141Z" end-time="2022-08-11T21:23:33.6681305Z" duration="0.000216" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $a := 5; $a := $a + 2; $a )';&#xA; result: 7" />
                  </properties>
                  <output><![CDATA[Expr is '( $a := 5; $a := $a + 2; $a )'
Result: '7'
Expected: '7'
]]></output>
                </test-case>
                <test-case id="0-2598" name="variables.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1655932687" result="Passed" start-time="2022-08-11T21:23:33.6683778Z" end-time="2022-08-11T21:23:33.6684946Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3].$v';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3].$v'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2599" name="variables.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="554068116" result="Passed" start-time="2022-08-11T21:23:33.6686552Z" end-time="2022-08-11T21:23:33.6687325Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $foo := &quot;defined&quot;; ( $foo := nothing ); $foo )';&#xA; result: &quot;defined&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $foo := "defined"; ( $foo := nothing ); $foo )'
Result: '"defined"'
Expected: '"defined"'
]]></output>
                </test-case>
                <test-case id="0-2600" name="variables.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="358912775" result="Passed" start-time="2022-08-11T21:23:33.6689341Z" end-time="2022-08-11T21:23:33.6691735Z" duration="0.000239" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $foo := &quot;defined&quot;; ( $foo := nothing; $foo ) )';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '( $foo := "defined"; ( $foo := nothing; $foo ) )'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2601" name="variables.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1347024588" result="Passed" start-time="2022-08-11T21:23:33.6694108Z" end-time="2022-08-11T21:23:33.6707897Z" duration="0.001379" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($a := [1,2]; $a[1]:=3; $a)';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($a := [1,2]; $a[1]:=3; $a)'
]]></output>
                </test-case>
                <test-case id="0-2602" name="wildcards.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1313276739" result="Passed" start-time="2022-08-11T21:23:33.6708437Z" end-time="2022-08-11T21:23:33.6710309Z" duration="0.000187" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*';&#xA; result: [42,{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;},&quot;here&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*'
Result: '[42,{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"},"here"]'
Expected: '[42,{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"},"here"]'
]]></output>
                </test-case>
                <test-case id="0-2603" name="wildcards.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="425172982" result="Passed" start-time="2022-08-11T21:23:33.6716281Z" end-time="2022-08-11T21:23:33.6717347Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-2604" name="wildcards.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2047744210" result="Passed" start-time="2022-08-11T21:23:33.6717673Z" end-time="2022-08-11T21:23:33.6721989Z" duration="0.000431" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-2605" name="wildcards.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="793777859" result="Passed" start-time="2022-08-11T21:23:33.6724450Z" end-time="2022-08-11T21:23:33.6726898Z" duration="0.000245" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2606" name="wildcards.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="409262485" result="Passed" start-time="2022-08-11T21:23:33.6728640Z" end-time="2022-08-11T21:23:33.6730212Z" duration="0.000157" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2607" name="wildcards.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="629217648" result="Passed" start-time="2022-08-11T21:23:33.6732784Z" end-time="2022-08-11T21:23:33.6733907Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2608" name="wildcards.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="838907737" result="Passed" start-time="2022-08-11T21:23:33.6736171Z" end-time="2022-08-11T21:23:33.6739471Z" duration="0.000330" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '*[type=&quot;home&quot;]';&#xA; result: [{&quot;type&quot;:&quot;home&quot;,&quot;number&quot;:&quot;0203 544 1234&quot;},{&quot;type&quot;:&quot;home&quot;,&quot;address&quot;:[&quot;freddy@my-social.com&quot;,&quot;frederic.smith@very-serious.com&quot;]}]" />
                  </properties>
                  <output><![CDATA[Expr is '*[type="home"]'
Result: '[{"type":"home","number":"0203 544 1234"},{"type":"home","address":["freddy@my-social.com","frederic.smith@very-serious.com"]}]'
Expected: '[{"type":"home","number":"0203 544 1234"},{"type":"home","address":["freddy@my-social.com","frederic.smith@very-serious.com"]}]'
]]></output>
                </test-case>
                <test-case id="0-2609" name="wildcards.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="298624683" result="Passed" start-time="2022-08-11T21:23:33.6740093Z" end-time="2022-08-11T21:23:33.6743691Z" duration="0.000360" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account[$$.Account.&quot;Account Name&quot; = &quot;Firefly&quot;].*[OrderID=&quot;order104&quot;].Product.Price';&#xA; result: [34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account[$$.Account."Account Name" = "Firefly"].*[OrderID="order104"].Product.Price'
Result: '[34.45,107.99]'
Expected: '[34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2610" name="wildcards.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="120817533" result="Passed" start-time="2022-08-11T21:23:33.6743884Z" end-time="2022-08-11T21:23:33.6744956Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account[$$.Account.`Account Name` = &quot;Firefly&quot;].*[OrderID=&quot;order104&quot;].Product.Price';&#xA; result: [34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account[$$.Account.`Account Name` = "Firefly"].*[OrderID="order104"].Product.Price'
Result: '[34.45,107.99]'
Expected: '[34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2611" name="wildcards.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2145515760" result="Passed" start-time="2022-08-11T21:23:33.6745037Z" end-time="2022-08-11T21:23:33.6745753Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '*';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '*'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>