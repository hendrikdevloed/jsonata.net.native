<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="0" name="Jsonata.Net.Native.TestSuite.dll" fullname="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Release\net6.0\Jsonata.Net.Native.TestSuite.dll" runstate="Runnable" testcasecount="1611" result="Failed" total="1611" passed="1220" failed="217" inconclusive="0" skipped="174" asserts="1130" engine-version="3.12.0.0" clr-version="6.0.20" start-time="2023-09-17 20:30:24Z" end-time="2023-09-17 20:30:35Z" duration="11.437126">
  <command-line><![CDATA[F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Release\net6.0\testhost.dll --port 61793 --endpoint 127.0.0.1:061793 --role client --parentprocessid 24268 --telemetryoptedin false]]></command-line>
  <filter>
    <or>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.closures.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.closures.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case034a</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case039</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case040</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case041</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case042</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case043</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case044</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case045</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.large[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.large[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[62]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[63]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[64]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[65]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[62]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[63]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[64]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[65]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[66]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[67]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[68]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[69]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.matchers.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.matchers.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case039</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case040</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case041</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case042</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case043</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case044</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case045</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case046</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case047</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case048</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case049</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case050</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case051</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case052</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case053</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case054</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case055</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case056</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case057</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case058</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case059</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case060</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case061</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case062</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case063</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case064</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case065</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case066</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case067</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case068</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case069</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case070</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case071</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case072</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case073</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case074</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case075</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case076</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case077</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case078</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case079</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case080</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case081</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case082</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case083</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case084</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case085</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case086</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case087</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case088</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case089</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case090</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case091</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case092</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case093</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case094</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case095</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case096</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case097</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case098</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case099</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case100</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case101</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case102</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case103</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case009</test>
    </or>
  </filter>
  <test-suite type="Assembly" id="0-2613" name="Jsonata.Net.Native.TestSuite.dll" fullname="F:/Projects/_NuGet_External/jsonata.net.native/src/Jsonata.Net.Native.TestSuite/bin/Release/net6.0/Jsonata.Net.Native.TestSuite.dll" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2023-09-17T20:30:24.5126202Z" end-time="2023-09-17T20:30:35.7973164Z" duration="11.284758" total="1611" passed="1220" failed="217" warnings="0" inconclusive="0" skipped="174" asserts="1130">
    <environment framework-version="3.13.2.0" clr-version="6.0.20" os-version="Microsoft Windows 10.0.19045" platform="Win32NT" cwd="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Release\net6.0" machine-name="ABC-BARG" user="barg_ma" user-domain="ABC" culture="ru-RU" uiculture="en-US" os-architecture="x64" />
    <settings>
      <setting name="SynchronousEvents" value="False" />
      <setting name="RandomSeed" value="1674126600" />
      <setting name="SkipNonTestAssemblies" value="True" />
      <setting name="ProcessModel" value="InProcess" />
      <setting name="DomainUsage" value="Single" />
      <setting name="DefaultTestNamePattern" value="{m}{a}" />
      <setting name="WorkDirectory" value="F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Release\net6.0" />
      <setting name="NumberOfTestWorkers" value="4" />
    </settings>
    <properties>
      <property name="_PID" value="20572" />
      <property name="_APPDOMAIN" value="testhost" />
    </properties>
    <failure>
      <message><![CDATA[One or more child tests had errors]]></message>
    </failure>
    <test-suite type="TestSuite" id="0-2614" name="Jsonata" fullname="Jsonata" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2023-09-17T20:30:24.5166342Z" end-time="2023-09-17T20:30:35.7973098Z" duration="11.280797" total="1611" passed="1220" failed="217" warnings="0" inconclusive="0" skipped="174" asserts="1130">
      <failure>
        <message><![CDATA[One or more child tests had errors]]></message>
      </failure>
      <test-suite type="TestSuite" id="0-2615" name="Net" fullname="Jsonata.Net" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2023-09-17T20:30:24.5168447Z" end-time="2023-09-17T20:30:35.7973038Z" duration="11.280581" total="1611" passed="1220" failed="217" warnings="0" inconclusive="0" skipped="174" asserts="1130">
        <failure>
          <message><![CDATA[One or more child tests had errors]]></message>
        </failure>
        <test-suite type="TestSuite" id="0-2616" name="Native" fullname="Jsonata.Net.Native" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2023-09-17T20:30:24.5168551Z" end-time="2023-09-17T20:30:35.7972974Z" duration="11.280564" total="1611" passed="1220" failed="217" warnings="0" inconclusive="0" skipped="174" asserts="1130">
          <failure>
            <message><![CDATA[One or more child tests had errors]]></message>
          </failure>
          <test-suite type="TestSuite" id="0-2617" name="TestSuite" fullname="Jsonata.Net.Native.TestSuite" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2023-09-17T20:30:24.5168598Z" end-time="2023-09-17T20:30:35.7972891Z" duration="11.280551" total="1611" passed="1220" failed="217" warnings="0" inconclusive="0" skipped="174" asserts="1130">
            <failure>
              <message><![CDATA[One or more child tests had errors]]></message>
            </failure>
            <test-suite type="TestFixture" id="0-1000" name="Tests" fullname="Jsonata.Net.Native.TestSuite.Tests" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2023-09-17T20:30:24.5178479Z" end-time="2023-09-17T20:30:35.7972652Z" duration="11.279539" total="1611" passed="1220" failed="217" warnings="0" inconclusive="0" skipped="174" asserts="1130">
              <failure>
                <message><![CDATA[One or more child tests had errors]]></message>
              </failure>
              <output><![CDATA[Loaded 27 datasets
]]></output>
              <test-suite type="ParameterizedMethod" id="0-2612" name="Test" fullname="Jsonata.Net.Native.TestSuite.Tests.Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2023-09-17T20:30:24.6712665Z" end-time="2023-09-17T20:30:35.7961592Z" duration="11.125013" total="1611" passed="1220" failed="217" warnings="0" inconclusive="0" skipped="174" asserts="1129">
                <failure>
                  <message><![CDATA[One or more child tests had errors]]></message>
                </failure>
                <test-case id="0-1001" name="array-constructor.array-sequences[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1453100875" result="Passed" start-time="2023-09-17T20:30:24.6713336Z" end-time="2023-09-17T20:30:24.8139086Z" duration="0.142669" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1002" name="array-constructor.array-sequences[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1075419084" result="Passed" start-time="2023-09-17T20:30:24.8158132Z" end-time="2023-09-17T20:30:24.8159812Z" duration="0.000168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600]]'
Expected: '[[3,1578381600]]'
]]></output>
                </test-case>
                <test-case id="0-1003" name="array-constructor.array-sequences[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="805067166" result="Passed" start-time="2023-09-17T20:30:24.8160068Z" end-time="2023-09-17T20:30:24.8160835Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [3,1578381600]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[3,1578381600]'
Expected: '[3,1578381600]'
]]></output>
                </test-case>
                <test-case id="0-1004" name="array-constructor.array-sequences[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1844745145" result="Passed" start-time="2023-09-17T20:30:24.8160993Z" end-time="2023-09-17T20:30:24.8181017Z" duration="0.002003" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'singleArray';&#xA; result: [{&quot;foo&quot;:&quot;bar&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'singleArray'
Result: '[{"foo":"bar"}]'
Expected: '[{"foo":"bar"}]'
]]></output>
                </test-case>
                <test-case id="0-1005" name="array-constructor.array-sequences[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1835650798" result="Passed" start-time="2023-09-17T20:30:24.8181346Z" end-time="2023-09-17T20:30:24.8182580Z" duration="0.000123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'singleArray[]';&#xA; result: [{&quot;foo&quot;:&quot;bar&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'singleArray[]'
Result: '[{"foo":"bar"}]'
Expected: '[{"foo":"bar"}]'
]]></output>
                </test-case>
                <test-case id="0-1006" name="array-constructor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="146848153" result="Passed" start-time="2023-09-17T20:30:24.8182748Z" end-time="2023-09-17T20:30:24.8186396Z" duration="0.000365" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-1007" name="array-constructor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="357529005" result="Passed" start-time="2023-09-17T20:30:24.8186628Z" end-time="2023-09-17T20:30:24.8194319Z" duration="0.000769" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1]';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '[1]'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1008" name="array-constructor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="977889537" result="Passed" start-time="2023-09-17T20:30:24.8194613Z" end-time="2023-09-17T20:30:24.8195771Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2]';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2]'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1009" name="array-constructor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="646459206" result="Passed" start-time="2023-09-17T20:30:24.8195941Z" end-time="2023-09-17T20:30:24.8196785Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2,3]';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2,3]'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1010" name="array-constructor.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1569877202" result="Passed" start-time="2023-09-17T20:30:24.8196936Z" end-time="2023-09-17T20:30:24.8197791Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]]';&#xA; result: [1,2,[3,4]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]]'
Result: '[1,2,[3,4]]'
Expected: '[1,2,[3,4]]'
]]></output>
                </test-case>
                <test-case id="0-1011" name="array-constructor.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2025273625" result="Passed" start-time="2023-09-17T20:30:24.8197940Z" end-time="2023-09-17T20:30:24.8214836Z" duration="0.001690" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, &quot;two&quot;, [&quot;three&quot;, 4]]';&#xA; result: [1,&quot;two&quot;,[&quot;three&quot;,4]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, "two", ["three", 4]]'
Result: '[1,"two",["three",4]]'
Expected: '[1,"two",["three",4]]'
]]></output>
                </test-case>
                <test-case id="0-1012" name="array-constructor.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1373689416" result="Passed" start-time="2023-09-17T20:30:24.8215169Z" end-time="2023-09-17T20:30:24.8217401Z" duration="0.000223" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, $two, [&quot;three&quot;, $four]]';&#xA; result: [1,2,[&quot;three&quot;,&quot;four&quot;]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, $two, ["three", $four]]'
Result: '[1,2,["three","four"]]'
Expected: '[1,2,["three","four"]]'
]]></output>
                </test-case>
                <test-case id="0-1013" name="array-constructor.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1136576681" result="Passed" start-time="2023-09-17T20:30:24.8217588Z" end-time="2023-09-17T20:30:24.8222787Z" duration="0.000520" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;foo.bar&quot;, foo.bar, [&quot;foo.baz&quot;, foo.blah.baz]]';&#xA; result: [&quot;foo.bar&quot;,42,[&quot;foo.baz&quot;,{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]]" />
                  </properties>
                  <output><![CDATA[Expr is '["foo.bar", foo.bar, ["foo.baz", foo.blah.baz]]'
Result: '["foo.bar",42,["foo.baz",{"fud":"hello"},{"fud":"world"}]]'
Expected: '["foo.bar",42,["foo.baz",{"fud":"hello"},{"fud":"world"}]]'
]]></output>
                </test-case>
                <test-case id="0-1014" name="array-constructor.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2138812116" result="Passed" start-time="2023-09-17T20:30:24.8223056Z" end-time="2023-09-17T20:30:24.8258794Z" duration="0.003574" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3][0]';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3][0]'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1015" name="array-constructor.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1269445317" result="Passed" start-time="2023-09-17T20:30:24.8268579Z" end-time="2023-09-17T20:30:24.8284757Z" duration="0.001618" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]][-1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]][-1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-1016" name="array-constructor.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1712392843" result="Passed" start-time="2023-09-17T20:30:24.8325828Z" end-time="2023-09-17T20:30:24.8328680Z" duration="0.000284" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]][-1][-1]';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]][-1][-1]'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1017" name="array-constructor.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1585311115" result="Passed" start-time="2023-09-17T20:30:24.8372615Z" end-time="2023-09-17T20:30:24.8376125Z" duration="0.000351" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.[fud, fud]';&#xA; result: [[&quot;hello&quot;,&quot;hello&quot;],[&quot;world&quot;,&quot;world&quot;]]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.[fud, fud]'
Result: '[["hello","hello"],["world","world"]]'
Expected: '[["hello","hello"],["world","world"]]'
]]></output>
                </test-case>
                <test-case id="0-1018" name="array-constructor.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1441851946" result="Passed" start-time="2023-09-17T20:30:24.8376445Z" end-time="2023-09-17T20:30:24.8377466Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.[[fud, fud]]';&#xA; result: [[[&quot;hello&quot;,&quot;hello&quot;]],[[&quot;world&quot;,&quot;world&quot;]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.[[fud, fud]]'
Result: '[[["hello","hello"]],[["world","world"]]]'
Expected: '[[["hello","hello"]],[["world","world"]]]'
]]></output>
                </test-case>
                <test-case id="0-1019" name="array-constructor.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="491173067" result="Passed" start-time="2023-09-17T20:30:24.8377676Z" end-time="2023-09-17T20:30:24.8378501Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.[baz].fud';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.[baz].fud'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1020" name="array-constructor.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1599634629" result="Passed" start-time="2023-09-17T20:30:24.8455846Z" end-time="2023-09-17T20:30:24.8457717Z" duration="0.000186" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.[baz, buz].fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.[baz, buz].fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1021" name="array-constructor.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1751648597" result="Passed" start-time="2023-09-17T20:30:24.8462296Z" end-time="2023-09-17T20:30:24.8465228Z" duration="0.000293" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[Address, Other.&quot;Alternative.Address&quot;].City';&#xA; result: [&quot;Winchester&quot;,&quot;London&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[Address, Other."Alternative.Address"].City'
Result: '["Winchester","London"]'
Expected: '["Winchester","London"]'
]]></output>
                </test-case>
                <test-case id="0-1022" name="array-constructor.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1071564499" result="Passed" start-time="2023-09-17T20:30:24.8466172Z" end-time="2023-09-17T20:30:24.8471793Z" duration="0.000562" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[Address, Other.`Alternative.Address`].City';&#xA; result: [&quot;Winchester&quot;,&quot;London&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[Address, Other.`Alternative.Address`].City'
Result: '["Winchester","London"]'
Expected: '["Winchester","London"]'
]]></output>
                </test-case>
                <test-case id="0-1023" name="array-constructor.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="883051174" result="Passed" start-time="2023-09-17T20:30:24.8472203Z" end-time="2023-09-17T20:30:24.8514156Z" duration="0.004196" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0,1,2,3,4,5,6,7,8,9][$ % 2 = 0]';&#xA; result: [0,2,4,6,8]" />
                  </properties>
                  <output><![CDATA[Expr is '[0,1,2,3,4,5,6,7,8,9][$ % 2 = 0]'
Result: '[0,2,4,6,8]'
Expected: '[0,2,4,6,8]'
]]></output>
                </test-case>
                <test-case id="0-1024" name="array-constructor.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="511752858" result="Passed" start-time="2023-09-17T20:30:24.8516125Z" end-time="2023-09-17T20:30:24.8517790Z" duration="0.000167" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1025" name="array-constructor.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="732519333" result="Passed" start-time="2023-09-17T20:30:24.8518021Z" end-time="2023-09-17T20:30:24.8518758Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1026" name="array-constructor.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1946410334" result="Passed" start-time="2023-09-17T20:30:24.8518954Z" end-time="2023-09-17T20:30:24.8519836Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1027" name="blocks.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1568571882" result="Passed" start-time="2023-09-17T20:30:24.8520029Z" end-time="2023-09-17T20:30:24.8533568Z" duration="0.001354" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1028" name="blocks.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1067864042" result="Passed" start-time="2023-09-17T20:30:24.8540639Z" end-time="2023-09-17T20:30:24.8541670Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(1; 2; 3)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(1; 2; 3)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1029" name="blocks.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="622648560" result="Passed" start-time="2023-09-17T20:30:24.8541794Z" end-time="2023-09-17T20:30:24.8542368Z" duration="0.000058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(1; 2; 3;)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(1; 2; 3;)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1030" name="blocks.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="406828815" result="Passed" start-time="2023-09-17T20:30:24.8542449Z" end-time="2023-09-17T20:30:24.8546282Z" duration="0.000384" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a:=1; $b:=2; $c:=($a:=4; $a+$b); $a+$c)';&#xA; result: 7" />
                  </properties>
                  <output><![CDATA[Expr is '($a:=1; $b:=2; $c:=($a:=4; $a+$b); $a+$c)'
Result: '7'
Expected: '7'
]]></output>
                </test-case>
                <test-case id="0-1031" name="blocks.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1465161067" result="Passed" start-time="2023-09-17T20:30:24.8546414Z" end-time="2023-09-17T20:30:24.8560223Z" duration="0.001381" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.($var1 := Price ; $var2:=Quantity; $var1 * $var2)';&#xA; result: [68.9,21.67,137.8,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.($var1 := Price ; $var2:=Quantity; $var1 * $var2)'
Result: '[68.9,21.67,137.8,107.99]'
Expected: '[68.9,21.67,137.8,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1032" name="blocks.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2103929416" result="Passed" start-time="2023-09-17T20:30:24.8560403Z" end-time="2023-09-17T20:30:24.8616922Z" duration="0.005652" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $func := function($arg) {$arg.Account.Order[0].OrderID};  $func($))';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $func := function($arg) {$arg.Account.Order[0].OrderID};  $func($))'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1033" name="blocks.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="199946245" result="Passed" start-time="2023-09-17T20:30:24.8617121Z" end-time="2023-09-17T20:30:24.8618771Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $func := function($arg) {$arg.Account.Order[0]};  $func($).OrderID)';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $func := function($arg) {$arg.Account.Order[0]};  $func($).OrderID)'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1034" name="boolean-expresssions.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2142199834" result="Passed" start-time="2023-09-17T20:30:24.8618937Z" end-time="2023-09-17T20:30:24.8623225Z" duration="0.000429" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1035" name="boolean-expresssions.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1773975318" result="Passed" start-time="2023-09-17T20:30:24.8623356Z" end-time="2023-09-17T20:30:24.8624062Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1036" name="boolean-expresssions.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2037777814" result="Passed" start-time="2023-09-17T20:30:24.8624147Z" end-time="2023-09-17T20:30:24.8630904Z" duration="0.000676" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false or false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1037" name="boolean-expresssions.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1325680418" result="Passed" start-time="2023-09-17T20:30:24.8631295Z" end-time="2023-09-17T20:30:24.8632419Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'false or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1038" name="boolean-expresssions.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1487840355" result="Passed" start-time="2023-09-17T20:30:24.8632527Z" end-time="2023-09-17T20:30:24.8633192Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or false';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or false'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1039" name="boolean-expresssions.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="467223073" result="Passed" start-time="2023-09-17T20:30:24.8633273Z" end-time="2023-09-17T20:30:24.8633863Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1040" name="boolean-expresssions.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="883927083" result="Passed" start-time="2023-09-17T20:30:24.8633944Z" end-time="2023-09-17T20:30:24.8634527Z" duration="0.000058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1041" name="boolean-expresssions.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1383393222" result="Passed" start-time="2023-09-17T20:30:24.8634602Z" end-time="2023-09-17T20:30:24.8635165Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and true';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and true'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1042" name="boolean-expresssions.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="759567010" result="Passed" start-time="2023-09-17T20:30:24.8635242Z" end-time="2023-09-17T20:30:24.8635806Z" duration="0.000057" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'true and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1043" name="boolean-expresssions.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="527772309" result="Passed" start-time="2023-09-17T20:30:24.8635882Z" end-time="2023-09-17T20:30:24.8636440Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true and true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1044" name="boolean-expresssions.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="403548906" result="Passed" start-time="2023-09-17T20:30:24.8636512Z" end-time="2023-09-17T20:30:24.8804671Z" duration="0.016816" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(false)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$not(false)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1045" name="boolean-expresssions.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="799397073" result="Passed" start-time="2023-09-17T20:30:24.8848709Z" end-time="2023-09-17T20:30:24.8855434Z" duration="0.000672" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(true)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$not(true)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1046" name="boolean-expresssions.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1547478190" result="Passed" start-time="2023-09-17T20:30:24.8905896Z" end-time="2023-09-17T20:30:24.8924702Z" duration="0.001880" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and=1 and or=2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and=1 and or=2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1047" name="boolean-expresssions.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="896966688" result="Passed" start-time="2023-09-17T20:30:24.8958956Z" end-time="2023-09-17T20:30:24.8966472Z" duration="0.000751" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and&gt;1 or or&lt;=2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and>1 or or<=2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1048" name="boolean-expresssions.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1162275716" result="Passed" start-time="2023-09-17T20:30:24.8973284Z" end-time="2023-09-17T20:30:24.8975568Z" duration="0.000228" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and&gt;1 or or!=2';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'and>1 or or!=2'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1049" name="boolean-expresssions.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1255495061" result="Passed" start-time="2023-09-17T20:30:24.8980640Z" end-time="2023-09-17T20:30:24.8982484Z" duration="0.000184" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and and and';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and and and'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1050" name="boolean-expresssions.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1730430161" result="Passed" start-time="2023-09-17T20:30:24.8994037Z" end-time="2023-09-17T20:30:24.8999260Z" duration="0.000522" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[].content.origin.$lowercase(name)';&#xA; result: [&quot;fakeintegrationname&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$[].content.origin.$lowercase(name)'
Result: '["fakeintegrationname"]'
Expected: '["fakeintegrationname"]'
]]></output>
                </test-case>
                <test-case id="0-1051" name="boolean-expresssions.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="581396289" result="Passed" start-time="2023-09-17T20:30:24.9015955Z" end-time="2023-09-17T20:30:24.9018082Z" duration="0.000212" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or foo';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or foo'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1052" name="boolean-expresssions.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1288120280" result="Passed" start-time="2023-09-17T20:30:24.9024585Z" end-time="2023-09-17T20:30:24.9026924Z" duration="0.000234" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1053" name="boolean-expresssions.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="708768469" result="Passed" start-time="2023-09-17T20:30:24.9033595Z" end-time="2023-09-17T20:30:24.9036363Z" duration="0.000277" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false or foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1054" name="boolean-expresssions.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1516185034" result="Passed" start-time="2023-09-17T20:30:24.9043139Z" end-time="2023-09-17T20:30:24.9044237Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1055" name="boolean-expresssions.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="94395325" result="Passed" start-time="2023-09-17T20:30:24.9044467Z" end-time="2023-09-17T20:30:24.9046279Z" duration="0.000181" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1056" name="boolean-expresssions.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="381536376" result="Passed" start-time="2023-09-17T20:30:24.9046436Z" end-time="2023-09-17T20:30:24.9047061Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'true and foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1057" name="boolean-expresssions.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="192367910" result="Passed" start-time="2023-09-17T20:30:24.9048348Z" end-time="2023-09-17T20:30:24.9049971Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and true';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and true'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1058" name="boolean-expresssions.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="293314308" result="Passed" start-time="2023-09-17T20:30:24.9050142Z" end-time="2023-09-17T20:30:24.9050828Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1059" name="boolean-expresssions.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1112225812" result="Passed" start-time="2023-09-17T20:30:24.9051243Z" end-time="2023-09-17T20:30:24.9053322Z" duration="0.000208" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1060" name="boolean-expresssions.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2036724111" result="Passed" start-time="2023-09-17T20:30:24.9053480Z" end-time="2023-09-17T20:30:24.9054416Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1061" name="boolean-expresssions.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="725759918" result="Passed" start-time="2023-09-17T20:30:24.9054576Z" end-time="2023-09-17T20:30:24.9055303Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$not(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1062" name="boolean-expresssions.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1437148610" result="Passed" start-time="2023-09-17T20:30:24.9069971Z" end-time="2023-09-17T20:30:24.9087901Z" duration="0.001793" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo = '' or $number(foo) = 0';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Description: 'will not evaluate rhs (which would error) because lhs is true'
Expr is 'foo = '' or $number(foo) = 0'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1063" name="boolean-expresssions.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="355240977" result="Passed" start-time="2023-09-17T20:30:24.9093668Z" end-time="2023-09-17T20:30:24.9098240Z" duration="0.000457" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$type(data) = 'number' and data &gt; 10';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Description: 'will not evaluate rhs (which would error) because lhs is false'
Expr is '$type(data) = 'number' and data > 10'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1064" name="boolean-expresssions.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="239630391" result="Passed" start-time="2023-09-17T20:30:24.9105087Z" end-time="2023-09-17T20:30:24.9461291Z" duration="0.035621" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$type(age) = 'number' or $number(age) &gt; 0';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Description: 'throws error on right side of boolean expression (for CC of a catch)'
Expr is '$type(age) = 'number' or $number(age) > 0'
]]></output>
                </test-case>
                <test-case id="0-1065" name="closures.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.closures.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="104716135" result="Passed" start-time="2023-09-17T20:30:24.9461587Z" end-time="2023-09-17T20:30:24.9521225Z" duration="0.005964" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(  $AccName := function() { $.&quot;Account Name&quot; };  Order[OrderID = &quot;order104&quot;].Product{    &quot;Account&quot;: $AccName(),    &quot;SKU-&quot; &amp; $string(ProductID): $.&quot;Product Name&quot;  } )';&#xA; result: {&quot;Account&quot;:&quot;Firefly&quot;,&quot;SKU-858383&quot;:&quot;Bowler Hat&quot;,&quot;SKU-345664&quot;:&quot;Cloak&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(  $AccName := function() { $."Account Name" };  Order[OrderID = "order104"].Product{    "Account": $AccName(),    "SKU-" & $string(ProductID): $."Product Name"  } )'
Result: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
Expected: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
]]></output>
                </test-case>
                <test-case id="0-1066" name="closures.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.closures.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2068827856" result="Passed" start-time="2023-09-17T20:30:24.9521495Z" end-time="2023-09-17T20:30:24.9523389Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(  $AccName := function() { `Account Name` };  Order[OrderID = &quot;order104&quot;].Product{    &quot;Account&quot;: $AccName(),    &quot;SKU-&quot; &amp; $string(ProductID): `Product Name`  } )';&#xA; result: {&quot;Account&quot;:&quot;Firefly&quot;,&quot;SKU-858383&quot;:&quot;Bowler Hat&quot;,&quot;SKU-345664&quot;:&quot;Cloak&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(  $AccName := function() { `Account Name` };  Order[OrderID = "order104"].Product{    "Account": $AccName(),    "SKU-" & $string(ProductID): `Product Name`  } )'
Result: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
Expected: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
]]></output>
                </test-case>
                <test-case id="0-1067" name="comments.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1173743171" result="Passed" start-time="2023-09-17T20:30:24.9523485Z" end-time="2023-09-17T20:30:24.9524255Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '/* header comment */&#xA;1 + 1&#xA;';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '/* header comment */
1 + 1
'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1068" name="comments.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1141860494" result="Passed" start-time="2023-09-17T20:30:24.9524341Z" end-time="2023-09-17T20:30:24.9525883Z" duration="0.000154" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)&#xA;';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)
'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-1069" name="comments.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="364836798" result="Passed" start-time="2023-09-17T20:30:24.9526321Z" end-time="2023-09-17T20:30:24.9535804Z" duration="0.000948" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)&#xA;/* trailing comment - no closing tag should trigger an error&#xA;';&#xA; result: error S0106" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0106.
Actually thrown S0106.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)
/* trailing comment - no closing tag should trigger an error
'
]]></output>
                </test-case>
                <test-case id="0-1070" name="comments.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1379151150" result="Passed" start-time="2023-09-17T20:30:24.9553527Z" end-time="2023-09-17T20:30:24.9582691Z" duration="0.002916" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '/* An expression to return the square root of a number without using the $sqrt function */&#xA;/* Pointless, but demonstrates capability */&#xA;&#xA;(&#xA;  /**&#xA;   * Implements the square root function&#xA;   * Uses the Newton-Raphson method&#xA;   */&#xA;  $my_sqrt := function($n) {(&#xA;&#xA;    $good_enough := function($guess) {&#xA;      $abs($guess * $guess - $n) &lt; 0.000000000001&#xA;    };&#xA;    $improve_guess := function($guess) {&#xA;      ($guess + $n / $guess) / 2&#xA;    };&#xA;&#xA;    /* Iterate using a tail-recursive function until convergence */&#xA;    $sqrt_iter := function($guess) {&#xA;      $good_enough($guess) ? $guess : $sqrt_iter($improve_guess($guess))&#xA;    };&#xA;    $n &gt;= 0 ? $sqrt_iter(1) : &quot;no complex numbers today&quot;&#xA;  )};&#xA;  $my_sqrt($$)&#xA;)&#xA;';&#xA; result: 16" />
                  </properties>
                  <output><![CDATA[Expr is '/* An expression to return the square root of a number without using the $sqrt function */
/* Pointless, but demonstrates capability */

(
  /**
   * Implements the square root function
   * Uses the Newton-Raphson method
   */
  $my_sqrt := function($n) {(

    $good_enough := function($guess) {
      $abs($guess * $guess - $n) < 0.000000000001
    };
    $improve_guess := function($guess) {
      ($guess + $n / $guess) / 2
    };

    /* Iterate using a tail-recursive function until convergence */
    $sqrt_iter := function($guess) {
      $good_enough($guess) ? $guess : $sqrt_iter($improve_guess($guess))
    };
    $n >= 0 ? $sqrt_iter(1) : "no complex numbers today"
  )};
  $my_sqrt($$)
)
'
Result: '16'
Expected: '16'
]]></output>
                </test-case>
                <test-case id="0-1071" name="comparison-operators.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="386712425" result="Passed" start-time="2023-09-17T20:30:24.9582954Z" end-time="2023-09-17T20:30:24.9586362Z" duration="0.000341" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3&gt;-3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '3>-3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1072" name="comparison-operators.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="97470760" result="Passed" start-time="2023-09-17T20:30:24.9586581Z" end-time="2023-09-17T20:30:24.9588311Z" duration="0.000173" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3&gt;3';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '3>3'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1073" name="comparison-operators.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="974628873" result="Passed" start-time="2023-09-17T20:30:24.9596052Z" end-time="2023-09-17T20:30:24.9597392Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3=3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '3=3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1074" name="comparison-operators.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1754729631" result="Passed" start-time="2023-09-17T20:30:24.9610113Z" end-time="2023-09-17T20:30:24.9611328Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;3&quot;=&quot;3&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"3"="3"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1075" name="comparison-operators.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="216241407" result="Passed" start-time="2023-09-17T20:30:24.9611473Z" end-time="2023-09-17T20:30:24.9612073Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;3&quot;=3';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"3"=3'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1076" name="comparison-operators.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="992081587" result="Passed" start-time="2023-09-17T20:30:24.9612156Z" end-time="2023-09-17T20:30:24.9612716Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; = &quot;hello&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" = "hello"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1077" name="comparison-operators.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="543792190" result="Passed" start-time="2023-09-17T20:30:24.9612793Z" end-time="2023-09-17T20:30:24.9613335Z" duration="0.000054" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; != &quot;world&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" != "world"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1078" name="comparison-operators.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="479502268" result="Passed" start-time="2023-09-17T20:30:24.9613410Z" end-time="2023-09-17T20:30:24.9622248Z" duration="0.000884" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; &lt; &quot;world&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" < "world"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1079" name="comparison-operators.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1859839432" result="Passed" start-time="2023-09-17T20:30:24.9634213Z" end-time="2023-09-17T20:30:24.9652997Z" duration="0.001864" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;32&quot; &lt; 42';&#xA; result: error T2009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2009.
Actually thrown T2009.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"32" < 42'
]]></output>
                </test-case>
                <test-case id="0-1080" name="comparison-operators.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1332524790" result="Passed" start-time="2023-09-17T20:30:24.9677388Z" end-time="2023-09-17T20:30:24.9688283Z" duration="0.001089" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'null &lt;= &quot;world&quot;';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010.
Actually thrown T2010.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'null <= "world"'
]]></output>
                </test-case>
                <test-case id="0-1081" name="comparison-operators.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1049443646" result="Passed" start-time="2023-09-17T20:30:24.9688683Z" end-time="2023-09-17T20:30:24.9695819Z" duration="0.000714" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '3 &gt;= true';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010.
Actually thrown T2010.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '3 >= true'
]]></output>
                </test-case>
                <test-case id="0-1082" name="comparison-operators.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="406296166" result="Passed" start-time="2023-09-17T20:30:24.9726659Z" end-time="2023-09-17T20:30:24.9728472Z" duration="0.000181" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar &gt; bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar > bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1083" name="comparison-operators.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1959852628" result="Passed" start-time="2023-09-17T20:30:24.9744804Z" end-time="2023-09-17T20:30:24.9746397Z" duration="0.000159" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar &gt;= bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar >= bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1084" name="comparison-operators.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1039702046" result="Passed" start-time="2023-09-17T20:30:24.9752995Z" end-time="2023-09-17T20:30:24.9754356Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar&lt;bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar<bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1085" name="comparison-operators.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1972916173" result="Passed" start-time="2023-09-17T20:30:24.9772495Z" end-time="2023-09-17T20:30:24.9774507Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar&lt;=bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar<=bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1086" name="comparison-operators.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="177040787" result="Passed" start-time="2023-09-17T20:30:24.9781796Z" end-time="2023-09-17T20:30:24.9783979Z" duration="0.000218" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar&gt;foo.bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'bar>foo.bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1087" name="comparison-operators.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1395160947" result="Passed" start-time="2023-09-17T20:30:24.9804050Z" end-time="2023-09-17T20:30:24.9806189Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar &lt; foo.bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar < foo.bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1088" name="comparison-operators.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="831244858" result="Passed" start-time="2023-09-17T20:30:24.9821961Z" end-time="2023-09-17T20:30:24.9824424Z" duration="0.000246" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar = bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar = bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1089" name="comparison-operators.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2047804509" result="Passed" start-time="2023-09-17T20:30:24.9835836Z" end-time="2023-09-17T20:30:24.9838172Z" duration="0.000233" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar!= bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar!= bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1090" name="comparison-operators.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1392438942" result="Passed" start-time="2023-09-17T20:30:24.9846154Z" end-time="2023-09-17T20:30:24.9850308Z" duration="0.000415" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar = foo.bar + 56';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'bar = foo.bar + 56'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1091" name="comparison-operators.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1845409904" result="Passed" start-time="2023-09-17T20:30:24.9853964Z" end-time="2023-09-17T20:30:24.9855089Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar !=foo.bar + 56';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar !=foo.bar + 56'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1092" name="comparison-operators.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1032366110" result="Passed" start-time="2023-09-17T20:30:24.9880458Z" end-time="2023-09-17T20:30:24.9885697Z" duration="0.000523" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[fud = &quot;hello&quot;]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[fud = "hello"]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1093" name="comparison-operators.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="375614543" result="Passed" start-time="2023-09-17T20:30:24.9900459Z" end-time="2023-09-17T20:30:24.9903406Z" duration="0.000294" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[fud != &quot;world&quot;]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[fud != "world"]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1094" name="comparison-operators.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="577982609" result="Passed" start-time="2023-09-17T20:30:24.9903631Z" end-time="2023-09-17T20:30:24.9905603Z" duration="0.000197" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[Price &gt; 30].Price';&#xA; result: [34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[Price > 30].Price'
Result: '[34.45,34.45,107.99]'
Expected: '[34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1095" name="comparison-operators.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="158167165" result="Passed" start-time="2023-09-17T20:30:24.9905811Z" end-time="2023-09-17T20:30:24.9910525Z" duration="0.000472" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price[$&lt;=35]';&#xA; result: [34.45,21.67,34.45]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price[$<=35]'
Result: '[34.45,21.67,34.45]'
Expected: '[34.45,21.67,34.45]'
]]></output>
                </test-case>
                <test-case id="0-1096" name="comparison-operators.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2093728259" result="Passed" start-time="2023-09-17T20:30:24.9910962Z" end-time="2023-09-17T20:30:24.9920112Z" duration="0.000915" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false &gt; 1';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010.
Actually thrown T2010.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false > 1'
]]></output>
                </test-case>
                <test-case id="0-1097" name="comparison-operators.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="404326033" result="Passed" start-time="2023-09-17T20:30:24.9921745Z" end-time="2023-09-17T20:30:24.9931167Z" duration="0.000942" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false &gt; $x';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010.
Actually thrown T2010.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false > $x'
]]></output>
                </test-case>
                <test-case id="0-1098" name="comparison-operators.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="288141918" result="Passed" start-time="2023-09-17T20:30:24.9931516Z" end-time="2023-09-17T20:30:24.9934351Z" duration="0.000284" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3 &gt; $x';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '3 > $x'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1099" name="comparison-operators.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="298832771" result="Passed" start-time="2023-09-17T20:30:24.9938059Z" end-time="2023-09-17T20:30:24.9939504Z" duration="0.000144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$x &lt;= 'hello'';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$x <= 'hello''
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1100" name="comparison-operators.deep-equals[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="878052864" result="Passed" start-time="2023-09-17T20:30:24.9940814Z" end-time="2023-09-17T20:30:24.9952174Z" duration="0.001136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [1, 2, 3, 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [1, 2, 3, 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1101" name="comparison-operators.deep-equals[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="373735019" result="Passed" start-time="2023-09-17T20:30:24.9961187Z" end-time="2023-09-17T20:30:24.9962612Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2] != [1, 2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2] != [1, 2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1102" name="comparison-operators.deep-equals[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1902589841" result="Passed" start-time="2023-09-17T20:30:24.9973784Z" end-time="2023-09-17T20:30:24.9976002Z" duration="0.000221" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,[3],4] = [1, 2, [3], 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,[3],4] = [1, 2, [3], 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1103" name="comparison-operators.deep-equals[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="797438918" result="Passed" start-time="2023-09-17T20:30:25.0005043Z" end-time="2023-09-17T20:30:25.0007800Z" duration="0.000275" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [1, 2, [3], 4]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [1, 2, [3], 4]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1104" name="comparison-operators.deep-equals[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2023827558" result="Passed" start-time="2023-09-17T20:30:25.0008056Z" end-time="2023-09-17T20:30:25.0008855Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [2, 3, 4]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [2, 3, 4]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1105" name="comparison-operators.deep-equals[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1343717736" result="Passed" start-time="2023-09-17T20:30:25.0009011Z" end-time="2023-09-17T20:30:25.0009782Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'data = [1, 2, 3, 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'data = [1, 2, 3, 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1106" name="comparison-operators.deep-equals[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="483925529" result="Passed" start-time="2023-09-17T20:30:25.0009931Z" end-time="2023-09-17T20:30:25.0010622Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'data[2] = 3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'data[2] = 3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1107" name="comparison-operators.deep-equals[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="313491407" result="Passed" start-time="2023-09-17T20:30:25.0011200Z" end-time="2023-09-17T20:30:25.0066930Z" duration="0.005573" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2 } = { 'two': 2, 'one': 1 }';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2 } = { 'two': 2, 'one': 1 }'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1108" name="comparison-operators.deep-equals[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1101522485" result="Passed" start-time="2023-09-17T20:30:25.0067270Z" end-time="2023-09-17T20:30:25.0069153Z" duration="0.000188" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2 } = { 'too': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2 } = { 'too': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1109" name="comparison-operators.deep-equals[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1299943627" result="Passed" start-time="2023-09-17T20:30:25.0070212Z" end-time="2023-09-17T20:30:25.0071013Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 3 } = { 'two': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 3 } = { 'two': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1110" name="comparison-operators.deep-equals[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1249797385" result="Passed" start-time="2023-09-17T20:30:25.0071113Z" end-time="2023-09-17T20:30:25.0071787Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2, 'three': 3 } = { 'two': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2, 'three': 3 } = { 'two': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1111" name="comparison-operators.deep-equals[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1985227833" result="Passed" start-time="2023-09-17T20:30:25.0074273Z" end-time="2023-09-17T20:30:25.0075216Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'two = 2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'two = 2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1112" name="comparison-operators.deep-equals[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1860349289" result="Passed" start-time="2023-09-17T20:30:25.0075978Z" end-time="2023-09-17T20:30:25.0093409Z" duration="0.001743" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'one + one = two';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'one + one = two'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1113" name="comparison-operators.deep-equals[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="580958523" result="Passed" start-time="2023-09-17T20:30:25.0097442Z" end-time="2023-09-17T20:30:25.0098859Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = null';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'null = null'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1114" name="comparison-operators.deep-equals[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1927184669" result="Passed" start-time="2023-09-17T20:30:25.0112724Z" end-time="2023-09-17T20:30:25.0115639Z" duration="0.000291" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null != null';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null != null'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1115" name="comparison-operators.deep-equals[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="987280465" result="Passed" start-time="2023-09-17T20:30:25.0129062Z" end-time="2023-09-17T20:30:25.0131927Z" duration="0.000286" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = nothing';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null = nothing'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1116" name="comparison-operators.deep-equals[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="319463752" result="Passed" start-time="2023-09-17T20:30:25.0136951Z" end-time="2023-09-17T20:30:25.0138092Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing = nothing';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing = nothing'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1117" name="comparison-operators.deep-equals[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1624779629" result="Passed" start-time="2023-09-17T20:30:25.0140866Z" end-time="2023-09-17T20:30:25.0142369Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Description = Account.Order[1].Product[0].Description';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Description = Account.Order[1].Product[0].Description'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1118" name="comparison-operators.deep-equals[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1463022578" result="Passed" start-time="2023-09-17T20:30:25.0145094Z" end-time="2023-09-17T20:30:25.0146262Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0] = Account.Order[1].Product[0]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0] = Account.Order[1].Product[0]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1119" name="conditionals.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="414197865" result="Passed" start-time="2023-09-17T20:30:25.0165988Z" end-time="2023-09-17T20:30:25.0168758Z" duration="0.000276" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: &quot;Red&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: '"Red"'
Expected: '"Red"'
]]></output>
                </test-case>
                <test-case id="0-1120" name="conditionals.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2075158995" result="Passed" start-time="2023-09-17T20:30:25.0176566Z" end-time="2023-09-17T20:30:25.0182775Z" duration="0.000621" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: &quot;White&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: '"White"'
Expected: '"White"'
]]></output>
                </test-case>
                <test-case id="0-1121" name="conditionals.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="673666909" result="Passed" start-time="2023-09-17T20:30:25.0193763Z" end-time="2023-09-17T20:30:25.0196041Z" duration="0.000227" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1122" name="conditionals.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="342498313" result="Passed" start-time="2023-09-17T20:30:25.0201987Z" end-time="2023-09-17T20:30:25.0222606Z" duration="0.002062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: &quot;Red&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: '"Red"'
Expected: '"Red"'
]]></output>
                </test-case>
                <test-case id="0-1123" name="conditionals.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1241539632" result="Passed" start-time="2023-09-17T20:30:25.0223895Z" end-time="2023-09-17T20:30:25.0226017Z" duration="0.000212" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: &quot;White&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: '"White"'
Expected: '"White"'
]]></output>
                </test-case>
                <test-case id="0-1124" name="conditionals.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1119881503" result="Passed" start-time="2023-09-17T20:30:25.0228655Z" end-time="2023-09-17T20:30:25.0231254Z" duration="0.000260" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1125" name="conditionals.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1681224893" result="Passed" start-time="2023-09-17T20:30:25.0232928Z" end-time="2023-09-17T20:30:25.0235765Z" duration="0.000284" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot;)';&#xA; result: &quot;Cheap&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap")'
Result: '"Cheap"'
Expected: '"Cheap"'
]]></output>
                </test-case>
                <test-case id="0-1126" name="conditionals.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1501829962" result="Passed" start-time="2023-09-17T20:30:25.0235989Z" end-time="2023-09-17T20:30:25.0243299Z" duration="0.000731" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot; : &quot;Expensive&quot;)';&#xA; result: [&quot;Expensive&quot;,&quot;Cheap&quot;,&quot;Expensive&quot;,&quot;Expensive&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap" : "Expensive")'
Result: '["Expensive","Cheap","Expensive","Expensive"]'
Expected: '["Expensive","Cheap","Expensive","Expensive"]'
]]></output>
                </test-case>
                <test-case id="0-1127" name="conditionals.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1869339864" result="Passed" start-time="2023-09-17T20:30:25.0243595Z" end-time="2023-09-17T20:30:25.0246099Z" duration="0.000251" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot; : Price &lt; 100 ? &quot;Expensive&quot; : &quot;Rip off&quot;)';&#xA; result: [&quot;Expensive&quot;,&quot;Cheap&quot;,&quot;Expensive&quot;,&quot;Rip off&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap" : Price < 100 ? "Expensive" : "Rip off")'
Result: '["Expensive","Cheap","Expensive","Rip off"]'
Expected: '["Expensive","Cheap","Expensive","Rip off"]'
]]></output>
                </test-case>
                <test-case id="0-1128" name="context.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="396646264" result="Passed" start-time="2023-09-17T20:30:25.0254460Z" end-time="2023-09-17T20:30:25.0267895Z" duration="0.001344" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number()';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$number()'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-1129" name="context.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1596562466" result="Passed" start-time="2023-09-17T20:30:25.0306399Z" end-time="2023-09-17T20:30:25.0325672Z" duration="0.001927" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..5].$string()';&#xA; result: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..5].$string()'
Result: '["1","2","3","4","5"]'
Expected: '["1","2","3","4","5"]'
]]></output>
                </test-case>
                <test-case id="0-1130" name="context.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="269996795" result="Passed" start-time="2023-09-17T20:30:25.0325971Z" end-time="2023-09-17T20:30:25.0328291Z" duration="0.000232" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..5].(&quot;Item &quot; &amp; $string())';&#xA; result: [&quot;Item 1&quot;,&quot;Item 2&quot;,&quot;Item 3&quot;,&quot;Item 4&quot;,&quot;Item 5&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..5].("Item " & $string())'
Result: '["Item 1","Item 2","Item 3","Item 4","Item 5"]'
Expected: '["Item 1","Item 2","Item 3","Item 4","Item 5"]'
]]></output>
                </test-case>
                <test-case id="0-1131" name="context.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="587755554" result="Passed" start-time="2023-09-17T20:30:25.0328412Z" end-time="2023-09-17T20:30:25.0336957Z" duration="0.000855" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.&quot;Product Name&quot;.$uppercase().$substringBefore(&quot; &quot;)';&#xA; result: [&quot;BOWLER&quot;,&quot;TRILBY&quot;,&quot;BOWLER&quot;,&quot;CLOAK&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product."Product Name".$uppercase().$substringBefore(" ")'
Result: '["BOWLER","TRILBY","BOWLER","CLOAK"]'
Expected: '["BOWLER","TRILBY","BOWLER","CLOAK"]'
]]></output>
                </test-case>
                <test-case id="0-1132" name="descendent-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="255650272" result="Passed" start-time="2023-09-17T20:30:25.0341316Z" end-time="2023-09-17T20:30:25.0356307Z" duration="0.001499" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.blah';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.blah'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-1133" name="descendent-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="180669497" result="Passed" start-time="2023-09-17T20:30:25.0356729Z" end-time="2023-09-17T20:30:25.0376501Z" duration="0.001978" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-1134" name="descendent-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="981786568" result="Passed" start-time="2023-09-17T20:30:25.0377685Z" end-time="2023-09-17T20:30:25.0385677Z" duration="0.000799" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1135" name="descendent-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="958789771" result="Passed" start-time="2023-09-17T20:30:25.0398198Z" end-time="2023-09-17T20:30:25.0405118Z" duration="0.000692" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo".**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1136" name="descendent-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1294337452" result="Passed" start-time="2023-09-17T20:30:25.0407931Z" end-time="2023-09-17T20:30:25.0422038Z" duration="0.001411" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1137" name="descendent-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1756340895" result="Passed" start-time="2023-09-17T20:30:25.0465367Z" end-time="2023-09-17T20:30:25.0471669Z" duration="0.000630" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.**.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo".**."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1138" name="descendent-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2083508717" result="Passed" start-time="2023-09-17T20:30:25.0487401Z" end-time="2023-09-17T20:30:25.0517753Z" duration="0.003035" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1139" name="descendent-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1843467957" result="Passed" start-time="2023-09-17T20:30:25.0518217Z" end-time="2023-09-17T20:30:25.0520350Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.*.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.*.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1140" name="descendent-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1488990644" result="Passed" start-time="2023-09-17T20:30:25.0520563Z" end-time="2023-09-17T20:30:25.0522213Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.**.Colour';&#xA; result: [&quot;Purple&quot;,&quot;Orange&quot;,&quot;Purple&quot;,&quot;Black&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.**.Colour'
Result: '["Purple","Orange","Purple","Black"]'
Expected: '["Purple","Orange","Purple","Black"]'
]]></output>
                </test-case>
                <test-case id="0-1141" name="descendent-operator.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2011033027" result="Passed" start-time="2023-09-17T20:30:25.0522421Z" end-time="2023-09-17T20:30:25.0523605Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.fud[0]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.fud[0]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1142" name="descendent-operator.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="293638462" result="Passed" start-time="2023-09-17T20:30:25.0523799Z" end-time="2023-09-17T20:30:25.0527778Z" duration="0.000398" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.**.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.**.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1143" name="descendent-operator.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1678784878" result="Passed" start-time="2023-09-17T20:30:25.0537503Z" end-time="2023-09-17T20:30:25.0538762Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(**.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(**.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1144" name="descendent-operator.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="798007124" result="Passed" start-time="2023-09-17T20:30:25.0538970Z" end-time="2023-09-17T20:30:25.0540157Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**.Price';&#xA; result: [34.45,21.67,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '**.Price'
Result: '[34.45,21.67,34.45,107.99]'
Expected: '[34.45,21.67,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1145" name="descendent-operator.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1554694756" result="Passed" start-time="2023-09-17T20:30:25.0540864Z" end-time="2023-09-17T20:30:25.0545859Z" duration="0.000500" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**.Price[0]';&#xA; result: [34.45,21.67,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '**.Price[0]'
Result: '[34.45,21.67,34.45,107.99]'
Expected: '[34.45,21.67,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1146" name="descendent-operator.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2132544262" result="Passed" start-time="2023-09-17T20:30:25.0552568Z" end-time="2023-09-17T20:30:25.0565838Z" duration="0.001327" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(**.Price)[0]';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is '(**.Price)[0]'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1147" name="descendent-operator.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="451407587" result="Passed" start-time="2023-09-17T20:30:25.0583700Z" end-time="2023-09-17T20:30:25.0586230Z" duration="0.000252" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.blah.**';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.blah.**'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1148" name="descendent-operator.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="595913521" result="Passed" start-time="2023-09-17T20:30:25.0601355Z" end-time="2023-09-17T20:30:25.0602933Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '**'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1149" name="encoding.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1738185791" result="Passed" start-time="2023-09-17T20:30:25.0612651Z" end-time="2023-09-17T20:30:25.0620918Z" duration="0.000827" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64encode(&quot;hello:world&quot;)';&#xA; result: &quot;aGVsbG86d29ybGQ=&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$base64encode("hello:world")'
Result: '"aGVsbG86d29ybGQ="'
Expected: '"aGVsbG86d29ybGQ="'
]]></output>
                </test-case>
                <test-case id="0-1150" name="encoding.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1986187060" result="Passed" start-time="2023-09-17T20:30:25.0623802Z" end-time="2023-09-17T20:30:25.0626670Z" duration="0.000287" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64encode()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$base64encode()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1151" name="encoding.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="468948630" result="Passed" start-time="2023-09-17T20:30:25.0627801Z" end-time="2023-09-17T20:30:25.0635402Z" duration="0.000760" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64decode(&quot;aGVsbG86d29ybGQ=&quot;)';&#xA; result: &quot;hello:world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$base64decode("aGVsbG86d29ybGQ=")'
Result: '"hello:world"'
Expected: '"hello:world"'
]]></output>
                </test-case>
                <test-case id="0-1152" name="encoding.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1088787102" result="Passed" start-time="2023-09-17T20:30:25.0641239Z" end-time="2023-09-17T20:30:25.0643021Z" duration="0.000178" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64decode()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$base64decode()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1153" name="errors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2021427700" result="Passed" start-time="2023-09-17T20:30:25.0649000Z" end-time="2023-09-17T20:30:25.0666496Z" duration="0.001750" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;s&quot; - 1';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001.
Actually thrown T2001.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"s" - 1'
]]></output>
                </test-case>
                <test-case id="0-1154" name="errors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="371157423" result="Passed" start-time="2023-09-17T20:30:25.0690350Z" end-time="2023-09-17T20:30:25.0710869Z" duration="0.002052" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1 + null';&#xA; result: error T2002" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2002.
Actually thrown T2002.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '1 + null'
]]></output>
                </test-case>
                <test-case id="0-1155" name="errors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="204385955" result="Passed" start-time="2023-09-17T20:30:25.0714522Z" end-time="2023-09-17T20:30:25.0728637Z" duration="0.001411" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;no closing quote';&#xA; result: error S0101" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0101.
Actually thrown S0101.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"no closing quote'
]]></output>
                </test-case>
                <test-case id="0-1156" name="errors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="31236706" result="Passed" start-time="2023-09-17T20:30:25.0729449Z" end-time="2023-09-17T20:30:25.0740623Z" duration="0.001117" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '`no closing backtick';&#xA; result: error S0105" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0105.
Actually thrown S0105.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '`no closing backtick'
]]></output>
                </test-case>
                <test-case id="0-1157" name="errors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="661050209" result="Passed" start-time="2023-09-17T20:30:25.0772551Z" end-time="2023-09-17T20:30:25.0794524Z" duration="0.002200" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '- &quot;s&quot;';&#xA; result: error D1002" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1002.
Actually thrown D1002.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '- "s"'
]]></output>
                </test-case>
                <test-case id="0-1158" name="errors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1825041062" result="Passed" start-time="2023-09-17T20:30:25.0795022Z" end-time="2023-09-17T20:30:25.0822825Z" duration="0.002781" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'unknown(function)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'unknown(function)'
]]></output>
                </test-case>
                <test-case id="0-1159" name="errors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="342602665" result="Passed" start-time="2023-09-17T20:30:25.0893205Z" end-time="2023-09-17T20:30:25.0900805Z" duration="0.000759" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'sum(Account.Order.OrderID)';&#xA; result: error T1005" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1005.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'sum(Account.Order.OrderID)'
]]></output>
                </test-case>
                <test-case id="0-1160" name="errors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1989371421" result="Passed" start-time="2023-09-17T20:30:25.0913702Z" end-time="2023-09-17T20:30:25.0924971Z" duration="0.001127" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2)';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0202.
Actually thrown S0202.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2)'
]]></output>
                </test-case>
                <test-case id="0-1161" name="errors.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="762069312" result="Passed" start-time="2023-09-17T20:30:25.0951661Z" end-time="2023-09-17T20:30:25.0960505Z" duration="0.000884" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1:2]';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0202.
Actually thrown S0202.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1:2]'
]]></output>
                </test-case>
                <test-case id="0-1162" name="errors.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2064328790" result="Passed" start-time="2023-09-17T20:30:25.0985216Z" end-time="2023-09-17T20:30:25.0992985Z" duration="0.000777" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;foo&quot;, &quot;o, &quot;rr&quot;)';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0202.
Actually thrown S0202.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("foo", "o, "rr")'
]]></output>
                </test-case>
                <test-case id="0-1163" name="errors.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1652443666" result="Passed" start-time="2023-09-17T20:30:25.1006273Z" end-time="2023-09-17T20:30:25.1014484Z" duration="0.000821" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1!2]';&#xA; result: error S0204" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0204.
Actually thrown S0202.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1!2]'
]]></output>
                </test-case>
                <test-case id="0-1164" name="errors.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1029946832" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:25.1022537Z" end-time="2023-09-17T20:30:25.1103007Z" duration="0.008048" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '@ bar';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '@ bar'
]]></output>
                </test-case>
                <test-case id="0-1165" name="errors.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="662041831" result="Passed" start-time="2023-09-17T20:30:25.1122053Z" end-time="2023-09-17T20:30:25.1130353Z" duration="0.000830" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2(blah)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2(blah)'
]]></output>
                </test-case>
                <test-case id="0-1166" name="errors.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1729577561" result="Passed" start-time="2023-09-17T20:30:25.1134842Z" end-time="2023-09-17T20:30:25.1144426Z" duration="0.000958" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2()'
]]></output>
                </test-case>
                <test-case id="0-1167" name="errors.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1679679792" result="Passed" start-time="2023-09-17T20:30:25.1153103Z" end-time="2023-09-17T20:30:25.1180621Z" duration="0.002752" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '3(?)';&#xA; result: error T1008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1008.
Actually thrown T1008.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '3(?)'
]]></output>
                </test-case>
                <test-case id="0-1168" name="errors.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1746655602" result="Passed" start-time="2023-09-17T20:30:25.1190258Z" end-time="2023-09-17T20:30:25.1195859Z" duration="0.000560" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1=';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0207.
Actually thrown S0207.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '1='
]]></output>
                </test-case>
                <test-case id="0-1169" name="errors.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="968394898" result="Passed" start-time="2023-09-17T20:30:25.1201100Z" end-time="2023-09-17T20:30:25.1205778Z" duration="0.000468" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'function(x){$x}(3)';&#xA; result: error S0208" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0208.
Actually thrown ????.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'function(x){$x}(3)'
]]></output>
                </test-case>
                <test-case id="0-1170" name="errors.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1840426660" result="Passed" start-time="2023-09-17T20:30:25.1205975Z" end-time="2023-09-17T20:30:25.1212490Z" duration="0.000652" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'x:=1';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212.
Actually thrown S0212.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'x:=1'
]]></output>
                </test-case>
                <test-case id="0-1171" name="errors.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="710606504" result="Passed" start-time="2023-09-17T20:30:25.1212662Z" end-time="2023-09-17T20:30:25.1218626Z" duration="0.000597" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2:=1';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212.
Actually thrown S0212.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2:=1'
]]></output>
                </test-case>
                <test-case id="0-1172" name="errors.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1688754559" result="Passed" start-time="2023-09-17T20:30:25.1218791Z" end-time="2023-09-17T20:30:25.1230841Z" duration="0.001205" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$foo()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$foo()'
]]></output>
                </test-case>
                <test-case id="0-1173" name="errors.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1767038268" result="Passed" start-time="2023-09-17T20:30:25.1253549Z" end-time="2023-09-17T20:30:25.1274215Z" duration="0.002066" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '55=&gt;5';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0211.
Actually thrown S0211.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '55=>5'
]]></output>
                </test-case>
                <test-case id="0-1174" name="errors.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1072690868" result="Passed" start-time="2023-09-17T20:30:25.1285282Z" end-time="2023-09-17T20:30:25.1291263Z" duration="0.000598" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Ssum(:)';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0211.
Actually thrown S0211.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Ssum(:)'
]]></output>
                </test-case>
                <test-case id="0-1175" name="errors.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="64125968" result="Passed" start-time="2023-09-17T20:30:25.1291539Z" end-time="2023-09-17T20:30:25.1301816Z" duration="0.001028" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3]{&quot;num&quot;: $}[true]';&#xA; result: error S0209" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0209.
Actually thrown S0209.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2,3]{"num": $}[true]'
]]></output>
                </test-case>
                <test-case id="0-1176" name="errors.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="380028447" result="Passed" start-time="2023-09-17T20:30:25.1302884Z" end-time="2023-09-17T20:30:25.1311698Z" duration="0.000882" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3]{&quot;num&quot;: $}{&quot;num&quot;: $}';&#xA; result: error S0210" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0210.
Actually thrown S0210.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2,3]{"num": $}{"num": $}'
]]></output>
                </test-case>
                <test-case id="0-1177" name="errors.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="811197082" result="Passed" start-time="2023-09-17T20:30:25.1312979Z" end-time="2023-09-17T20:30:25.1333000Z" duration="0.001977" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product;';&#xA; result: error S0201" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0201.
Actually thrown S0201.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order[0].Product;'
]]></output>
                </test-case>
                <test-case id="0-1178" name="errors.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="443532508" result="Passed" start-time="2023-09-17T20:30:25.1333425Z" end-time="2023-09-17T20:30:25.1351103Z" duration="0.001768" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $A := function(){$min(2, 3)}; $A() )';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '( $A := function(){$min(2, 3)}; $A() )'
]]></output>
                </test-case>
                <test-case id="0-1179" name="errors.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1712670394" result="Passed" start-time="2023-09-17T20:30:25.1356880Z" end-time="2023-09-17T20:30:25.1361994Z" duration="0.000511" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $B := function(){''}; $A := function(){2 + $B()}; $A() )';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '( $B := function(){''}; $A := function(){2 + $B()}; $A() )'
]]></output>
                </test-case>
                <test-case id="0-1180" name="fields.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1696164278" result="Passed" start-time="2023-09-17T20:30:25.1366654Z" end-time="2023-09-17T20:30:25.1368729Z" duration="0.000208" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-1181" name="fields.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1050422375" result="Passed" start-time="2023-09-17T20:30:25.1377077Z" end-time="2023-09-17T20:30:25.1378490Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-1182" name="fields.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1273426343" result="Passed" start-time="2023-09-17T20:30:25.1405921Z" end-time="2023-09-17T20:30:25.1407472Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-1183" name="fields.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="805944120" result="Passed" start-time="2023-09-17T20:30:25.1408219Z" end-time="2023-09-17T20:30:25.1409597Z" duration="0.000138" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-1184" name="fields.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1757859053" result="Passed" start-time="2023-09-17T20:30:25.1409743Z" end-time="2023-09-17T20:30:25.1413842Z" duration="0.000410" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1185" name="fields.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1948531812" result="Passed" start-time="2023-09-17T20:30:25.1417680Z" end-time="2023-09-17T20:30:25.1418683Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Other.Misc';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'Other.Misc'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1186" name="fields.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1646452099" result="Passed" start-time="2023-09-17T20:30:25.1418903Z" end-time="2023-09-17T20:30:25.1419706Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-1187" name="fields.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="381706219" result="Passed" start-time="2023-09-17T20:30:25.1419856Z" end-time="2023-09-17T20:30:25.1427002Z" duration="0.000715" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1188" name="flattening.array-inputs[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1956995721" result="Passed" start-time="2023-09-17T20:30:25.1427191Z" end-time="2023-09-17T20:30:25.1428247Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone';&#xA; result: [{&quot;number&quot;:0},{&quot;number&quot;:1},{&quot;number&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is 'phone'
Result: '[{"number":0},{"number":1},{"number":2}]'
Expected: '[{"number":0},{"number":1},{"number":2}]'
]]></output>
                </test-case>
                <test-case id="0-1189" name="flattening.array-inputs[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="777400613" result="Passed" start-time="2023-09-17T20:30:25.1428403Z" end-time="2023-09-17T20:30:25.1433676Z" duration="0.000527" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0]';&#xA; result: {&quot;number&quot;:0}" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0]'
Result: '{"number":0}'
Expected: '{"number":0}'
]]></output>
                </test-case>
                <test-case id="0-1190" name="flattening.array-inputs[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="927553065" result="Passed" start-time="2023-09-17T20:30:25.1448640Z" end-time="2023-09-17T20:30:25.1454213Z" duration="0.000557" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0][]';&#xA; result: [{&quot;number&quot;:0}]" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0][]'
Result: '[{"number":0}]'
Expected: '[{"number":0}]'
]]></output>
                </test-case>
                <test-case id="0-1191" name="flattening.array-inputs[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="633287243" result="Passed" start-time="2023-09-17T20:30:25.1482097Z" end-time="2023-09-17T20:30:25.1483490Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0].number';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0].number'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1192" name="flattening.array-inputs[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2078783480" result="Passed" start-time="2023-09-17T20:30:25.1487605Z" end-time="2023-09-17T20:30:25.1489174Z" duration="0.000157" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(phone)[0].number';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '(phone)[0].number'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1193" name="flattening.array-inputs[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1740906052" result="Passed" start-time="2023-09-17T20:30:25.1493776Z" end-time="2023-09-17T20:30:25.1494736Z" duration="0.000096" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.phone[0].number';&#xA; result: [0,1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$.phone[0].number'
Result: '[0,1,2]'
Expected: '[0,1,2]'
]]></output>
                </test-case>
                <test-case id="0-1194" name="flattening.array-inputs[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2001580183" result="Passed" start-time="2023-09-17T20:30:25.1499881Z" end-time="2023-09-17T20:30:25.1500729Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'Hello':'World'}';&#xA; result: {&quot;Hello&quot;:&quot;World&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '{'Hello':'World'}'
Result: '{"Hello":"World"}'
Expected: '{"Hello":"World"}'
]]></output>
                </test-case>
                <test-case id="0-1195" name="flattening.array-inputs[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="726921332" result="Passed" start-time="2023-09-17T20:30:25.1500915Z" end-time="2023-09-17T20:30:25.1501536Z" duration="0.000062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.{'Hello':'World'}';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$.{'Hello':'World'}'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1196" name="flattening.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2094187884" result="Passed" start-time="2023-09-17T20:30:25.1501682Z" end-time="2023-09-17T20:30:25.1506250Z" duration="0.000457" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.[Product.Price]';&#xA; result: [[34.45,21.67],[34.45,107.99]]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.[Product.Price]'
Result: '[[34.45,21.67],[34.45,107.99]]'
Expected: '[[34.45,21.67],[34.45,107.99]]'
]]></output>
                </test-case>
                <test-case id="0-1197" name="flattening.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="788678443" result="Passed" start-time="2023-09-17T20:30:25.1509623Z" end-time="2023-09-17T20:30:25.1510521Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.nest0';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$.nest0'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1198" name="flattening.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="648838046" result="Passed" start-time="2023-09-17T20:30:25.1510644Z" end-time="2023-09-17T20:30:25.1511334Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1199" name="flattening.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="135965293" result="Passed" start-time="2023-09-17T20:30:25.1511417Z" end-time="2023-09-17T20:30:25.1512141Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]';&#xA; result: {&quot;nest0&quot;:[1,2]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]'
Result: '{"nest0":[1,2]}'
Expected: '{"nest0":[1,2]}'
]]></output>
                </test-case>
                <test-case id="0-1200" name="flattening.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1972600842" result="Passed" start-time="2023-09-17T20:30:25.1512226Z" end-time="2023-09-17T20:30:25.1513516Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1]';&#xA; result: {&quot;nest0&quot;:[3,4]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[1]'
Result: '{"nest0":[3,4]}'
Expected: '{"nest0":[3,4]}'
]]></output>
                </test-case>
                <test-case id="0-1201" name="flattening.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="452864470" result="Passed" start-time="2023-09-17T20:30:25.1513608Z" end-time="2023-09-17T20:30:25.1514941Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[-1]';&#xA; result: {&quot;nest0&quot;:[3,4]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[-1]'
Result: '{"nest0":[3,4]}'
Expected: '{"nest0":[3,4]}'
]]></output>
                </test-case>
                <test-case id="0-1202" name="flattening.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="852235632" result="Passed" start-time="2023-09-17T20:30:25.1515242Z" end-time="2023-09-17T20:30:25.1516013Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0].nest0';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$[0].nest0'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1203" name="flattening.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1775002270" result="Passed" start-time="2023-09-17T20:30:25.1516098Z" end-time="2023-09-17T20:30:25.1516783Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1].nest0';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[1].nest0'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-1204" name="flattening.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2045242778" result="Passed" start-time="2023-09-17T20:30:25.1516865Z" end-time="2023-09-17T20:30:25.1517536Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0].nest0[0]';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$[0].nest0[0]'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1205" name="flattening.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1275580556" result="Passed" start-time="2023-09-17T20:30:25.1517615Z" end-time="2023-09-17T20:30:25.1518800Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.[nest3]]]';&#xA; result: [[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.[nest3]]]'
Result: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
Expected: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
]]></output>
                </test-case>
                <test-case id="0-1206" name="flattening.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="927677718" result="Passed" start-time="2023-09-17T20:30:25.1518882Z" end-time="2023-09-17T20:30:25.1519993Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.[nest3]]';&#xA; result: [[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.[nest3]]'
Result: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
Expected: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1207" name="flattening.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1469232481" result="Passed" start-time="2023-09-17T20:30:25.1520075Z" end-time="2023-09-17T20:30:25.1521161Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.[nest3]]';&#xA; result: [[[1],[2],[3],[4]],[[5],[6],[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.[nest3]]'
Result: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
Expected: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1208" name="flattening.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="948736832" result="Passed" start-time="2023-09-17T20:30:25.1521242Z" end-time="2023-09-17T20:30:25.1522159Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.nest3]]';&#xA; result: [[[1,2],[3,4]],[[5,6],[7,8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.nest3]]'
Result: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
Expected: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
]]></output>
                </test-case>
                <test-case id="0-1209" name="flattening.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="307031455" result="Passed" start-time="2023-09-17T20:30:25.1522240Z" end-time="2023-09-17T20:30:25.1523071Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.nest3]';&#xA; result: [[1,2,3,4],[5,6,7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.nest3]'
Result: '[[1,2,3,4],[5,6,7,8]]'
Expected: '[[1,2,3,4],[5,6,7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1210" name="flattening.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1971841155" result="Passed" start-time="2023-09-17T20:30:25.1523150Z" end-time="2023-09-17T20:30:25.1536060Z" duration="0.001291" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.nest3]';&#xA; result: [[1,2],[3,4],[5,6],[7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.nest3]'
Result: '[[1,2],[3,4],[5,6],[7,8]]'
Expected: '[[1,2],[3,4],[5,6],[7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1211" name="flattening.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1367523271" result="Passed" start-time="2023-09-17T20:30:25.1556441Z" end-time="2023-09-17T20:30:25.1558319Z" duration="0.000188" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.[nest3]';&#xA; result: [[1],[2],[3],[4],[5],[6],[7],[8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.[nest3]'
Result: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
Expected: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
]]></output>
                </test-case>
                <test-case id="0-1212" name="flattening.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="217517701" result="Passed" start-time="2023-09-17T20:30:25.1558522Z" end-time="2023-09-17T20:30:25.1559655Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.nest3';&#xA; result: [1,2,3,4,5,6,7,8]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.nest3'
Result: '[1,2,3,4,5,6,7,8]'
Expected: '[1,2,3,4,5,6,7,8]'
]]></output>
                </test-case>
                <test-case id="0-1213" name="flattening.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="112370668" result="Passed" start-time="2023-09-17T20:30:25.1559755Z" end-time="2023-09-17T20:30:25.1560898Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.[nest3]]]';&#xA; result: [[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.[nest3]]]'
Result: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
Expected: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
]]></output>
                </test-case>
                <test-case id="0-1214" name="flattening.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="793922034" result="Passed" start-time="2023-09-17T20:30:25.1560983Z" end-time="2023-09-17T20:30:25.1574685Z" duration="0.001371" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.[nest3]]';&#xA; result: [[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.[nest3]]'
Result: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
Expected: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1215" name="flattening.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="938949046" result="Passed" start-time="2023-09-17T20:30:25.1578027Z" end-time="2023-09-17T20:30:25.1585072Z" duration="0.000705" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.[nest3]]';&#xA; result: [[[1],[2],[3],[4]],[[5],[6],[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.[nest3]]'
Result: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
Expected: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1216" name="flattening.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1636126616" result="Passed" start-time="2023-09-17T20:30:25.1593211Z" end-time="2023-09-17T20:30:25.1595174Z" duration="0.000196" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.nest3]]';&#xA; result: [[[1,2],[3,4]],[[5,6],[7,8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.nest3]]'
Result: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
Expected: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
]]></output>
                </test-case>
                <test-case id="0-1217" name="flattening.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1258384670" result="Passed" start-time="2023-09-17T20:30:25.1604893Z" end-time="2023-09-17T20:30:25.1606434Z" duration="0.000154" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.nest3]';&#xA; result: [[1,2,3,4],[5,6,7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.nest3]'
Result: '[[1,2,3,4],[5,6,7,8]]'
Expected: '[[1,2,3,4],[5,6,7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1218" name="flattening.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2042068260" result="Passed" start-time="2023-09-17T20:30:25.1614226Z" end-time="2023-09-17T20:30:25.1622104Z" duration="0.000788" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.nest3]';&#xA; result: [[1,2],[3,4],[5,6],[7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.nest3]'
Result: '[[1,2],[3,4],[5,6],[7,8]]'
Expected: '[[1,2],[3,4],[5,6],[7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1219" name="flattening.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1228898667" result="Passed" start-time="2023-09-17T20:30:25.1627169Z" end-time="2023-09-17T20:30:25.1628515Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.[nest3]';&#xA; result: [[1],[2],[3],[4],[5],[6],[7],[8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.[nest3]'
Result: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
Expected: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
]]></output>
                </test-case>
                <test-case id="0-1220" name="flattening.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1163073379" result="Passed" start-time="2023-09-17T20:30:25.1632690Z" end-time="2023-09-17T20:30:25.1633723Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.nest3';&#xA; result: [1,2,3,4,5,6,7,8]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.nest3'
Result: '[1,2,3,4,5,6,7,8]'
Expected: '[1,2,3,4,5,6,7,8]'
]]></output>
                </test-case>
                <test-case id="0-1221" name="flattening.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1347871342" result="Passed" start-time="2023-09-17T20:30:25.1633852Z" end-time="2023-09-17T20:30:25.1634514Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: 1 }.a';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": 1 }.a'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1222" name="flattening.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1870167718" result="Passed" start-time="2023-09-17T20:30:25.1634603Z" end-time="2023-09-17T20:30:25.1635163Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1223" name="flattening.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="969254989" result="Passed" start-time="2023-09-17T20:30:25.1635238Z" end-time="2023-09-17T20:30:25.1641639Z" duration="0.000640" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: [1] }.a';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": [1] }.a'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1224" name="flattening.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="40841833" result="Passed" start-time="2023-09-17T20:30:25.1645207Z" end-time="2023-09-17T20:30:25.1646172Z" duration="0.000096" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1225" name="flattening.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1207139417" result="Passed" start-time="2023-09-17T20:30:25.1646293Z" end-time="2023-09-17T20:30:25.1646995Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: [[1]] }.a';&#xA; result: [[1]]" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": [[1]] }.a'
Result: '[[1]]'
Expected: '[[1]]'
]]></output>
                </test-case>
                <test-case id="0-1226" name="flattening.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="779306671" result="Passed" start-time="2023-09-17T20:30:25.1647092Z" end-time="2023-09-17T20:30:25.1647737Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [[1]]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[[1]]'
Expected: '[[1]]'
]]></output>
                </test-case>
                <test-case id="0-1227" name="flattening.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2095332154" result="Passed" start-time="2023-09-17T20:30:25.1654395Z" end-time="2023-09-17T20:30:25.1655321Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[{&quot;a&quot;:[1,2]}, {&quot;a&quot;:[3]}].a';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[{"a":[1,2]}, {"a":[3]}].a'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1228" name="flattening.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1912941732" result="Passed" start-time="2023-09-17T20:30:25.1655420Z" end-time="2023-09-17T20:30:25.1656099Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1229" name="flattening.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="345769536" result="Passed" start-time="2023-09-17T20:30:25.1656181Z" end-time="2023-09-17T20:30:25.1657014Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[{&quot;a&quot;:[{&quot;b&quot;:[1]}, {&quot;b&quot;:[2]}]}, {&quot;a&quot;:[{&quot;b&quot;:[3]}, {&quot;b&quot;:[4]}]}].a[0].b';&#xA; result: [1,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[{"a":[{"b":[1]}, {"b":[2]}]}, {"a":[{"b":[3]}, {"b":[4]}]}].a[0].b'
Result: '[1,3]'
Expected: '[1,3]'
]]></output>
                </test-case>
                <test-case id="0-1230" name="flattening.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117421731" result="Passed" start-time="2023-09-17T20:30:25.1657095Z" end-time="2023-09-17T20:30:25.1676362Z" duration="0.001927" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a[0].b';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is 'a[0].b'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1231" name="flattening.case034a" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case034a" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1738833651" result="Passed" start-time="2023-09-17T20:30:25.1676996Z" end-time="2023-09-17T20:30:25.1678165Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.a[0].b';&#xA; result: [1,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$.a[0].b'
Result: '[1,3]'
Expected: '[1,3]'
]]></output>
                </test-case>
                <test-case id="0-1232" name="flattening.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="162359036" result="Passed" start-time="2023-09-17T20:30:25.1678251Z" end-time="2023-09-17T20:30:25.1689174Z" duration="0.001092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a.b[0]';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is 'a.b[0]'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1233" name="flattening.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="307567215" result="Passed" start-time="2023-09-17T20:30:25.1689315Z" end-time="2023-09-17T20:30:25.1690327Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;mobile&quot;].number';&#xA; result: &quot;077 7700 1234&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="mobile"].number'
Result: '"077 7700 1234"'
Expected: '"077 7700 1234"'
]]></output>
                </test-case>
                <test-case id="0-1234" name="flattening.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1887553199" result="Passed" start-time="2023-09-17T20:30:25.1690415Z" end-time="2023-09-17T20:30:25.1693249Z" duration="0.000283" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;mobile&quot;][].number';&#xA; result: [&quot;077 7700 1234&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="mobile"][].number'
Result: '["077 7700 1234"]'
Expected: '["077 7700 1234"]'
]]></output>
                </test-case>
                <test-case id="0-1235" name="flattening.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1243299808" result="Passed" start-time="2023-09-17T20:30:25.1713487Z" end-time="2023-09-17T20:30:25.1716088Z" duration="0.000259" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[][type=&quot;mobile&quot;].number';&#xA; result: [&quot;077 7700 1234&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[][type="mobile"].number'
Result: '["077 7700 1234"]'
Expected: '["077 7700 1234"]'
]]></output>
                </test-case>
                <test-case id="0-1236" name="flattening.case039" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case039" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="198186743" result="Passed" start-time="2023-09-17T20:30:25.1725066Z" end-time="2023-09-17T20:30:25.1727167Z" duration="0.000210" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;office&quot;][].number';&#xA; result: [&quot;01962 001234&quot;,&quot;01962 001235&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="office"][].number'
Result: '["01962 001234","01962 001235"]'
Expected: '["01962 001234","01962 001235"]'
]]></output>
                </test-case>
                <test-case id="0-1237" name="flattening.case040" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case040" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1645907720" result="Passed" start-time="2023-09-17T20:30:25.1732173Z" end-time="2023-09-17T20:30:25.1736875Z" duration="0.000470" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: number}';&#xA; result: {&quot;home&quot;:&quot;0203 544 1234&quot;,&quot;office&quot;:[&quot;01962 001234&quot;,&quot;01962 001235&quot;],&quot;mobile&quot;:&quot;077 7700 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: number}'
Result: '{"home":"0203 544 1234","office":["01962 001234","01962 001235"],"mobile":"077 7700 1234"}'
Expected: '{"home":"0203 544 1234","office":["01962 001234","01962 001235"],"mobile":"077 7700 1234"}'
]]></output>
                </test-case>
                <test-case id="0-1238" name="flattening.case041" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case041" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="908184989" result="Passed" start-time="2023-09-17T20:30:25.1737057Z" end-time="2023-09-17T20:30:25.1738249Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: number[]}';&#xA; result: {&quot;home&quot;:[&quot;0203 544 1234&quot;],&quot;office&quot;:[&quot;01962 001234&quot;,&quot;01962 001235&quot;],&quot;mobile&quot;:[&quot;077 7700 1234&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: number[]}'
Result: '{"home":["0203 544 1234"],"office":["01962 001234","01962 001235"],"mobile":["077 7700 1234"]}'
Expected: '{"home":["0203 544 1234"],"office":["01962 001234","01962 001235"],"mobile":["077 7700 1234"]}'
]]></output>
                </test-case>
                <test-case id="0-1239" name="flattening.case042" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case042" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="482278497" result="Passed" start-time="2023-09-17T20:30:25.1738341Z" end-time="2023-09-17T20:30:25.1739169Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[type='command'][]';&#xA; result: [{&quot;type&quot;:&quot;command&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$[type='command'][]'
Result: '[{"type":"command"}]'
Expected: '[{"type":"command"}]'
]]></output>
                </test-case>
                <test-case id="0-1240" name="flattening.case043" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case043" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1020854094" result="Passed" start-time="2023-09-17T20:30:25.1739254Z" end-time="2023-09-17T20:30:25.1743036Z" duration="0.000378" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[][type='command']';&#xA; result: [{&quot;type&quot;:&quot;command&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$[][type='command']'
Result: '[{"type":"command"}]'
Expected: '[{"type":"command"}]'
]]></output>
                </test-case>
                <test-case id="0-1241" name="flattening.case044" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case044" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="177219618" result="Passed" start-time="2023-09-17T20:30:25.1743133Z" end-time="2023-09-17T20:30:25.1769142Z" duration="0.002601" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter($, function($e) { $e != 0 })[]';&#xA; result: [5]" />
                  </properties>
                  <output><![CDATA[Expr is '$filter($, function($e) { $e != 0 })[]'
Result: '[5]'
Expected: '[5]'
]]></output>
                </test-case>
                <test-case id="0-1242" name="flattening.case045" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case045" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1580453034" result="Passed" start-time="2023-09-17T20:30:25.1769418Z" end-time="2023-09-17T20:30:25.1770890Z" duration="0.000147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.tags[title='example'][]';&#xA; result: [{&quot;title&quot;:&quot;example&quot;,&quot;description&quot;:&quot;Hello&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$.tags[title='example'][]'
Result: '[{"title":"example","description":"Hello"}]'
Expected: '[{"title":"example","description":"Hello"}]'
]]></output>
                </test-case>
                <test-case id="0-1243" name="flattening.large[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.large[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1649964266" result="Passed" start-time="2023-09-17T20:30:25.1770986Z" end-time="2023-09-17T20:30:27.3197296Z" duration="2.142655" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $data := { 'number': [1..2e5].$string() }; $values := $data.number; $count($values) )';&#xA; result: 200000" />
                  </properties>
                  <output><![CDATA[Expr is '( $data := { 'number': [1..2e5].$string() }; $values := $data.number; $count($values) )'
Result: '200000'
Expected: '200000'
]]></output>
                </test-case>
                <test-case id="0-1244" name="flattening.large[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.large[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="953043105" result="Passed" start-time="2023-09-17T20:30:27.3197871Z" end-time="2023-09-17T20:30:29.4341933Z" duration="2.114429" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $data := { 'number': [1..2e5].$string() }; $values := $lookup($data, 'number'); $count($values) )';&#xA; result: 200000" />
                  </properties>
                  <output><![CDATA[Expr is '( $data := { 'number': [1..2e5].$string() }; $values := $lookup($data, 'number'); $count($values) )'
Result: '200000'
Expected: '200000'
]]></output>
                </test-case>
                <test-case id="0-1245" name="flattening.sequence-of-arrays[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1707513441" result="Passed" start-time="2023-09-17T20:30:29.4342305Z" end-time="2023-09-17T20:30:29.4344013Z" duration="0.000171" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1246" name="flattening.sequence-of-arrays[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="415769542" result="Passed" start-time="2023-09-17T20:30:29.4344116Z" end-time="2023-09-17T20:30:29.4344847Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [3,1578381600]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[3,1578381600]'
Expected: '[3,1578381600]'
]]></output>
                </test-case>
                <test-case id="0-1247" name="flattening.sequence-of-arrays[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1966412812" result="Passed" start-time="2023-09-17T20:30:29.4344935Z" end-time="2023-09-17T20:30:29.4345835Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1248" name="flattening.sequence-of-arrays[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="946984018" result="Passed" start-time="2023-09-17T20:30:29.4345911Z" end-time="2023-09-17T20:30:29.4347599Z" duration="0.000169" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600]]'
Expected: '[[3,1578381600]]'
]]></output>
                </test-case>
                <test-case id="0-1249" name="function-abs.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1062631137" result="Passed" start-time="2023-09-17T20:30:29.4359495Z" end-time="2023-09-17T20:30:29.4362111Z" duration="0.000261" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(3.7)';&#xA; result: 3.7" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(3.7)'
Result: '3.7'
Expected: '3.7'
]]></output>
                </test-case>
                <test-case id="0-1250" name="function-abs.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1238278363" result="Passed" start-time="2023-09-17T20:30:29.4362295Z" end-time="2023-09-17T20:30:29.4363150Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(-3.7)';&#xA; result: 3.7" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(-3.7)'
Result: '3.7'
Expected: '3.7'
]]></output>
                </test-case>
                <test-case id="0-1251" name="function-abs.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="835803214" result="Passed" start-time="2023-09-17T20:30:29.4363555Z" end-time="2023-09-17T20:30:29.4368120Z" duration="0.000457" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1252" name="function-abs.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="894093830" result="Passed" start-time="2023-09-17T20:30:29.4369570Z" end-time="2023-09-17T20:30:29.4372540Z" duration="0.000297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1253" name="function-append.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1567423026" result="Passed" start-time="2023-09-17T20:30:29.4373280Z" end-time="2023-09-17T20:30:29.4380701Z" duration="0.000742" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append([1,2], [3,4])';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append([1,2], [3,4])'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1254" name="function-append.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1120375561" result="Passed" start-time="2023-09-17T20:30:29.4383400Z" end-time="2023-09-17T20:30:29.4385665Z" duration="0.000227" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1, [3,4])';&#xA; result: [1,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1, [3,4])'
Result: '[1,3,4]'
Expected: '[1,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1255" name="function-append.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="624729500" result="Passed" start-time="2023-09-17T20:30:29.4389367Z" end-time="2023-09-17T20:30:29.4390569Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1,2)';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1,2)'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1256" name="function-append.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="730180399" result="Passed" start-time="2023-09-17T20:30:29.4390810Z" end-time="2023-09-17T20:30:29.4391781Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1,notexist)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1,notexist)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1257" name="function-append.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2030464290" result="Passed" start-time="2023-09-17T20:30:29.4391863Z" end-time="2023-09-17T20:30:29.4392721Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(notexist, [2,3,4])';&#xA; result: [2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(notexist, [2,3,4])'
Result: '[2,3,4]'
Expected: '[2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1258" name="function-append.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1734160437" result="Passed" start-time="2023-09-17T20:30:29.4392808Z" end-time="2023-09-17T20:30:29.4393767Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($append($data.a, [2]); $data.a)';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '($append($data.a, [2]); $data.a)'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1259" name="function-applications.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="838103361" result="Passed" start-time="2023-09-17T20:30:29.4393839Z" end-time="2023-09-17T20:30:29.4401442Z" duration="0.000760" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].OrderID ~&gt; $uppercase()';&#xA; result: &quot;ORDER103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].OrderID ~> $uppercase()'
Result: '"ORDER103"'
Expected: '"ORDER103"'
]]></output>
                </test-case>
                <test-case id="0-1260" name="function-applications.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="496273885" result="Passed" start-time="2023-09-17T20:30:29.4401676Z" end-time="2023-09-17T20:30:29.4405391Z" duration="0.000372" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].OrderID ~&gt; $uppercase() ~&gt; $lowercase()';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].OrderID ~> $uppercase() ~> $lowercase()'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1261" name="function-applications.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="979829211" result="Passed" start-time="2023-09-17T20:30:29.4405614Z" end-time="2023-09-17T20:30:29.4433729Z" duration="0.002812" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.OrderID ~&gt; $join()';&#xA; result: &quot;order103order104&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.OrderID ~> $join()'
Result: '"order103order104"'
Expected: '"order103order104"'
]]></output>
                </test-case>
                <test-case id="0-1262" name="function-applications.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1703774396" result="Passed" start-time="2023-09-17T20:30:29.4434586Z" end-time="2023-09-17T20:30:29.4436497Z" duration="0.000191" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.OrderID ~&gt; $join(&quot;, &quot;)';&#xA; result: &quot;order103, order104&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.OrderID ~> $join(", ")'
Result: '"order103, order104"'
Expected: '"order103, order104"'
]]></output>
                </test-case>
                <test-case id="0-1263" name="function-applications.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="602967296" result="Passed" start-time="2023-09-17T20:30:29.4436591Z" end-time="2023-09-17T20:30:29.4495249Z" duration="0.005866" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price * Quantity) ~&gt; $sum()';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price * Quantity) ~> $sum()'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1264" name="function-applications.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="189609724" result="Passed" start-time="2023-09-17T20:30:29.4495734Z" end-time="2023-09-17T20:30:29.4594061Z" duration="0.009833" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $uppertrim := $trim ~&gt; $uppercase;  $uppertrim(&quot;   Hello    World   &quot;) )';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $uppertrim := $trim ~> $uppercase;  $uppertrim("   Hello    World   ") )'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-1265" name="function-applications.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="233007504" result="Passed" start-time="2023-09-17T20:30:29.4594279Z" end-time="2023-09-17T20:30:29.4596363Z" duration="0.000209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;john@example.com&quot; ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: &quot;example&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"john@example.com" ~> $substringAfter("@") ~> $substringBefore(".") '
Result: '"example"'
Expected: '"example"'
]]></output>
                </test-case>
                <test-case id="0-1266" name="function-applications.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1205164235" result="Passed" start-time="2023-09-17T20:30:29.4596472Z" end-time="2023-09-17T20:30:29.4597375Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;&quot; ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"" ~> $substringAfter("@") ~> $substringBefore(".") '
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1267" name="function-applications.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2057434133" result="Passed" start-time="2023-09-17T20:30:29.4597460Z" end-time="2023-09-17T20:30:29.4598272Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo ~> $substringAfter("@") ~> $substringBefore(".") '
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1268" name="function-applications.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="372301116" result="Passed" start-time="2023-09-17T20:30:29.4598439Z" end-time="2023-09-17T20:30:29.4623589Z" duration="0.002526" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $domain := $substringAfter(?,&quot;@&quot;) ~&gt; $substringBefore(?,&quot;.&quot;); $domain(&quot;john@example.com&quot;) )';&#xA; result: &quot;example&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $domain := $substringAfter(?,"@") ~> $substringBefore(?,"."); $domain("john@example.com") )'
Result: '"example"'
Expected: '"example"'
]]></output>
                </test-case>
                <test-case id="0-1269" name="function-applications.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1698105873" result="Passed" start-time="2023-09-17T20:30:29.4624136Z" end-time="2023-09-17T20:30:29.4638589Z" duration="0.001445" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $square := function($x){$x*$x}; [1..5] ~&gt; $map($square) ) ';&#xA; result: [1,4,9,16,25]" />
                  </properties>
                  <output><![CDATA[Expr is '( $square := function($x){$x*$x}; [1..5] ~> $map($square) ) '
Result: '[1,4,9,16,25]'
Expected: '[1,4,9,16,25]'
]]></output>
                </test-case>
                <test-case id="0-1270" name="function-applications.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="740762303" result="Passed" start-time="2023-09-17T20:30:29.4639004Z" end-time="2023-09-17T20:30:29.4644174Z" duration="0.000517" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $square := function($x){$x*$x}; [1..5] ~&gt; $map($square) ~&gt; $sum() ) ';&#xA; result: 55" />
                  </properties>
                  <output><![CDATA[Expr is '( $square := function($x){$x*$x}; [1..5] ~> $map($square) ~> $sum() ) '
Result: '55'
Expected: '55'
]]></output>
                </test-case>
                <test-case id="0-1271" name="function-applications.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2137702543" result="Passed" start-time="2023-09-17T20:30:29.4644314Z" end-time="2023-09-17T20:30:29.4646975Z" duration="0.000266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($betweenBackets := $substringAfter(?, &quot;(&quot;) ~&gt; $substringBefore(?, &quot;)&quot;);$betweenBackets(&quot;test(foo)bar&quot;)) ';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($betweenBackets := $substringAfter(?, "(") ~> $substringBefore(?, ")");$betweenBackets("test(foo)bar")) '
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1272" name="function-applications.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="350199681" result="Passed" start-time="2023-09-17T20:30:29.4647085Z" end-time="2023-09-17T20:30:29.4678261Z" duration="0.003118" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){$g($f($x))}};$instructions := [$sum, $square];$sumsq := $instructions ~&gt; $reduce($chain);[1..5] ~&gt; $sumsq()) ';&#xA; result: 225" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){$g($f($x))}};$instructions := [$sum, $square];$sumsq := $instructions ~> $reduce($chain);[1..5] ~> $sumsq()) '
Result: '225'
Expected: '225'
]]></output>
                </test-case>
                <test-case id="0-1273" name="function-applications.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1559789763" result="Passed" start-time="2023-09-17T20:30:29.4678498Z" end-time="2023-09-17T20:30:29.4681643Z" duration="0.000315" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){ $x ~&gt; $f ~&gt; $g }};$instructions := [$sum, $square, $string];$sumsq := $instructions ~&gt; $reduce($chain);[1..5] ~&gt; $sumsq()) ';&#xA; result: &quot;225&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){ $x ~> $f ~> $g }};$instructions := [$sum, $square, $string];$sumsq := $instructions ~> $reduce($chain);[1..5] ~> $sumsq()) '
Result: '"225"'
Expected: '"225"'
]]></output>
                </test-case>
                <test-case id="0-1274" name="function-applications.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="208044573" result="Passed" start-time="2023-09-17T20:30:29.4681770Z" end-time="2023-09-17T20:30:29.4690822Z" duration="0.000905" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$instructions := $sum ~&gt; $square;[1..5] ~&gt; $instructions())  ';&#xA; result: 225" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$instructions := $sum ~> $square;[1..5] ~> $instructions())  '
Result: '225'
Expected: '225'
]]></output>
                </test-case>
                <test-case id="0-1275" name="function-applications.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="985853761" result="Passed" start-time="2023-09-17T20:30:29.4691459Z" end-time="2023-09-17T20:30:29.4717742Z" duration="0.002628" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$sum_of_squares := $map(?, $square) ~&gt; $sum;[1..5] ~&gt; $sum_of_squares())  ';&#xA; result: 55" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$sum_of_squares := $map(?, $square) ~> $sum;[1..5] ~> $sum_of_squares())  '
Result: '55'
Expected: '55'
]]></output>
                </test-case>
                <test-case id="0-1276" name="function-applications.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1914901955" result="Passed" start-time="2023-09-17T20:30:29.4718000Z" end-time="2023-09-17T20:30:29.4719535Z" duration="0.000154" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($times := λ($x, $y) { $x * $y };$product := $reduce(?, $times);$square := function($x){$x*$x};$product_of_squares := $map(?, $square) ~&gt; $product;[1..5] ~&gt; $product_of_squares())';&#xA; result: 14400" />
                  </properties>
                  <output><![CDATA[Expr is '($times := λ($x, $y) { $x * $y };$product := $reduce(?, $times);$square := function($x){$x*$x};$product_of_squares := $map(?, $square) ~> $product;[1..5] ~> $product_of_squares())'
Result: '14400'
Expected: '14400'
]]></output>
                </test-case>
                <test-case id="0-1277" name="function-applications.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="220203452" result="Passed" start-time="2023-09-17T20:30:29.4719630Z" end-time="2023-09-17T20:30:29.4720761Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};[1..5] ~&gt; $map($square) ~&gt; $reduce(λ($x, $y) { $x * $y });)';&#xA; result: 14400" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};[1..5] ~> $map($square) ~> $reduce(λ($x, $y) { $x * $y });)'
Result: '14400'
Expected: '14400'
]]></output>
                </test-case>
                <test-case id="0-1278" name="function-applications.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="16211884" result="Passed" start-time="2023-09-17T20:30:29.4720845Z" end-time="2023-09-17T20:30:29.4748900Z" duration="0.002806" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($prices := Account.Order.Product.Price;$quantities := Account.Order.Product.Quantity;$product := λ($arr) { $arr[0] * $arr[1] };$zip($prices, $quantities) ~&gt; $map($product) ~&gt; $sum())';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is '($prices := Account.Order.Product.Price;$quantities := Account.Order.Product.Quantity;$product := λ($arr) { $arr[0] * $arr[1] };$zip($prices, $quantities) ~> $map($product) ~> $sum())'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1279" name="function-applications.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="480812039" result="Passed" start-time="2023-09-17T20:30:29.4749096Z" end-time="2023-09-17T20:30:29.4757157Z" duration="0.000806" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '42 ~&gt; &quot;hello&quot;';&#xA; result: error T2006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2006.
Actually thrown T2006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '42 ~> "hello"'
]]></output>
                </test-case>
                <test-case id="0-1280" name="function-applications.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="791369875" result="Passed" start-time="2023-09-17T20:30:29.4757318Z" end-time="2023-09-17T20:30:29.4795439Z" duration="0.003813" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$.&quot;Product Name&quot; ~&gt; /hat/i].ProductID';&#xA; result: [858383,858236,858383]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$."Product Name" ~> /hat/i].ProductID'
Result: '[858383,858236,858383]'
Expected: '[858383,858236,858383]'
]]></output>
                </test-case>
                <test-case id="0-1281" name="function-assert.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="960377506" result="Passed" start-time="2023-09-17T20:30:29.4795759Z" end-time="2023-09-17T20:30:29.4806142Z" duration="0.001038" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$assert(Account.Order[0].Product[0].Price &lt; 34, 'Too Expensive')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$assert(Account.Order[0].Product[0].Price < 34, 'Too Expensive')'
]]></output>
                </test-case>
                <test-case id="0-1282" name="function-assert.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1148348136" result="Passed" start-time="2023-09-17T20:30:29.4807030Z" end-time="2023-09-17T20:30:29.4808422Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$assert(Account.Order[0].Product[0].Price &lt; 35, 'Too Expensive')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$assert(Account.Order[0].Product[0].Price < 35, 'Too Expensive')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1283" name="function-assert.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="850310595" result="Passed" start-time="2023-09-17T20:30:29.4808542Z" end-time="2023-09-17T20:30:29.4811142Z" duration="0.000260" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($assert(Account.Order[0].Product[0].Price &lt; 35, 'Too Expensive'); Account.Order[0].Product[0].Price)';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is '($assert(Account.Order[0].Product[0].Price < 35, 'Too Expensive'); Account.Order[0].Product[0].Price)'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1284" name="function-assert.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1254974820" result="Passed" start-time="2023-09-17T20:30:29.4811995Z" end-time="2023-09-17T20:30:29.4815744Z" duration="0.000375" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '($assert(Account.Order[0].Product[0].Price &lt; 34, 'Too Expensive'); Account.Order[0].Product[0].Price)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '($assert(Account.Order[0].Product[0].Price < 34, 'Too Expensive'); Account.Order[0].Product[0].Price)'
]]></output>
                </test-case>
                <test-case id="0-1285" name="function-assert.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1429102164" result="Passed" start-time="2023-09-17T20:30:29.4815879Z" end-time="2023-09-17T20:30:29.4826352Z" duration="0.001047" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$assert(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$assert(null)'
]]></output>
                </test-case>
                <test-case id="0-1286" name="function-assert.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="844739821" result="Passed" start-time="2023-09-17T20:30:29.4826500Z" end-time="2023-09-17T20:30:29.4830838Z" duration="0.000434" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$assert(5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$assert(5)'
]]></output>
                </test-case>
                <test-case id="0-1287" name="function-assert.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="742419657" result="Passed" start-time="2023-09-17T20:30:29.4830968Z" end-time="2023-09-17T20:30:29.4836201Z" duration="0.000524" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$assert(false)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$assert(false)'
]]></output>
                </test-case>
                <test-case id="0-1288" name="function-assert.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1334675301" result="Passed" start-time="2023-09-17T20:30:29.4837448Z" end-time="2023-09-17T20:30:29.4838543Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$assert(true)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$assert(true)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1289" name="function-average.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1262823699" result="Passed" start-time="2023-09-17T20:30:29.4838729Z" end-time="2023-09-17T20:30:29.4857814Z" duration="0.001909" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(Account.Order.Product.(Price * Quantity))';&#xA; result: 84.09" />
                  </properties>
                  <output><![CDATA[Expr is '$average(Account.Order.Product.(Price * Quantity))'
Result: '84.09'
Expected: '84.09'
]]></output>
                </test-case>
                <test-case id="0-1290" name="function-average.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="513119409" result="Passed" start-time="2023-09-17T20:30:29.4858013Z" end-time="2023-09-17T20:30:29.4861943Z" duration="0.000393" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$average(Product.(Price * Quantity))';&#xA; result: [45.285000000000004,122.89500000000001]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$average(Product.(Price * Quantity))'
Result: '[45.285,122.895]'
Expected: '[45.285000000000004,122.89500000000001]'
]]></output>
                </test-case>
                <test-case id="0-1291" name="function-average.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="315206100" result="Passed" start-time="2023-09-17T20:30:29.4862097Z" end-time="2023-09-17T20:30:29.4872471Z" duration="0.001037" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $average(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 45.285&quot;,&quot;order104: 122.895&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $average(Product.(Price*Quantity)))'
Result: '["order103: 45.285","order104: 122.895"]'
Expected: '["order103: 45.285","order104: 122.895"]'
]]></output>
                </test-case>
                <test-case id="0-1292" name="function-average.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2059230930" result="Passed" start-time="2023-09-17T20:30:29.4883973Z" end-time="2023-09-17T20:30:29.4885386Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$average([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1293" name="function-average.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="70081628" result="Passed" start-time="2023-09-17T20:30:29.4887639Z" end-time="2023-09-17T20:30:29.4891226Z" duration="0.000359" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2,3])';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$average([1,2,3])'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1294" name="function-average.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2133488259" result="Passed" start-time="2023-09-17T20:30:29.4891363Z" end-time="2023-09-17T20:30:29.4901816Z" duration="0.001046" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0412.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1295" name="function-average.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="41024883" result="Passed" start-time="2023-09-17T20:30:29.4901973Z" end-time="2023-09-17T20:30:29.4910876Z" duration="0.000890" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0412.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1296" name="function-average.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="620928869" result="Passed" start-time="2023-09-17T20:30:29.4911213Z" end-time="2023-09-17T20:30:29.4912480Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$average(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1297" name="function-average.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="977485738" result="Passed" start-time="2023-09-17T20:30:29.4912589Z" end-time="2023-09-17T20:30:29.4920320Z" duration="0.000773" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([],[])'
]]></output>
                </test-case>
                <test-case id="0-1298" name="function-average.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1460354542" result="Passed" start-time="2023-09-17T20:30:29.4920461Z" end-time="2023-09-17T20:30:29.4928874Z" duration="0.000842" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1299" name="function-average.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="720035601" result="Passed" start-time="2023-09-17T20:30:29.4931841Z" end-time="2023-09-17T20:30:29.4939081Z" duration="0.000724" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1300" name="function-average.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="502349206" result="Passed" start-time="2023-09-17T20:30:29.4939509Z" end-time="2023-09-17T20:30:29.4947161Z" duration="0.000765" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1301" name="function-average.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="505819056" result="Passed" start-time="2023-09-17T20:30:29.4947324Z" end-time="2023-09-17T20:30:29.4950649Z" duration="0.000333" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$average(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1302" name="function-boolean.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1594111696" result="Passed" start-time="2023-09-17T20:30:29.4952553Z" end-time="2023-09-17T20:30:29.5007939Z" duration="0.005539" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(&quot;Hello World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean("Hello World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1303" name="function-boolean.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1396361792" result="Passed" start-time="2023-09-17T20:30:29.5008445Z" end-time="2023-09-17T20:30:29.5009811Z" duration="0.000137" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(&quot;&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean("")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1304" name="function-boolean.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="321868834" result="Passed" start-time="2023-09-17T20:30:29.5009993Z" end-time="2023-09-17T20:30:29.5011726Z" duration="0.000173" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(true)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(true)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1305" name="function-boolean.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1248059467" result="Passed" start-time="2023-09-17T20:30:29.5011839Z" end-time="2023-09-17T20:30:29.5014976Z" duration="0.000314" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(false)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(false)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1306" name="function-boolean.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="485603533" result="Passed" start-time="2023-09-17T20:30:29.5015089Z" end-time="2023-09-17T20:30:29.5018069Z" duration="0.000298" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(0)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(0)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1307" name="function-boolean.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1481787714" result="Passed" start-time="2023-09-17T20:30:29.5018384Z" end-time="2023-09-17T20:30:29.5019265Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(10)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(10)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1308" name="function-boolean.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1359378453" result="Passed" start-time="2023-09-17T20:30:29.5019344Z" end-time="2023-09-17T20:30:29.5021649Z" duration="0.000231" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(-0.5)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(-0.5)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1309" name="function-boolean.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="134521800" result="Passed" start-time="2023-09-17T20:30:29.5021739Z" end-time="2023-09-17T20:30:29.5023015Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(null)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(null)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1310" name="function-boolean.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="857311192" result="Passed" start-time="2023-09-17T20:30:29.5023102Z" end-time="2023-09-17T20:30:29.5023882Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1311" name="function-boolean.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="509976947" result="Passed" start-time="2023-09-17T20:30:29.5023961Z" end-time="2023-09-17T20:30:29.5024632Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([0])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([0])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1312" name="function-boolean.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2014252406" result="Passed" start-time="2023-09-17T20:30:29.5024703Z" end-time="2023-09-17T20:30:29.5025354Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([1])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([1])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1313" name="function-boolean.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1253348398" result="Passed" start-time="2023-09-17T20:30:29.5033886Z" end-time="2023-09-17T20:30:29.5036842Z" duration="0.000296" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([1,2,3])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([1,2,3])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1314" name="function-boolean.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="46733486" result="Passed" start-time="2023-09-17T20:30:29.5036989Z" end-time="2023-09-17T20:30:29.5039496Z" duration="0.000251" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([0,0])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([0,0])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1315" name="function-boolean.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1683380026" result="Passed" start-time="2023-09-17T20:30:29.5042838Z" end-time="2023-09-17T20:30:29.5043795Z" duration="0.000096" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[]])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[]])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1316" name="function-boolean.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1978964722" result="Passed" start-time="2023-09-17T20:30:29.5044445Z" end-time="2023-09-17T20:30:29.5051365Z" duration="0.000692" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[null]])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[null]])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1317" name="function-boolean.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="853463801" result="Passed" start-time="2023-09-17T20:30:29.5053935Z" end-time="2023-09-17T20:30:29.5061703Z" duration="0.000777" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[[true]]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[[true]]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1318" name="function-boolean.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1495476123" result="Passed" start-time="2023-09-17T20:30:29.5065937Z" end-time="2023-09-17T20:30:29.5068181Z" duration="0.000224" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean({})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean({})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1319" name="function-boolean.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="907991207" result="Passed" start-time="2023-09-17T20:30:29.5069614Z" end-time="2023-09-17T20:30:29.5071576Z" duration="0.000196" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean({"hello":"world"})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1320" name="function-boolean.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1535751330" result="Passed" start-time="2023-09-17T20:30:29.5071818Z" end-time="2023-09-17T20:30:29.5074608Z" duration="0.000279" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1321" name="function-boolean.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="462744578" result="Passed" start-time="2023-09-17T20:30:29.5074835Z" end-time="2023-09-17T20:30:29.5076194Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account.Order.Product.Price)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account.Order.Product.Price)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1322" name="function-boolean.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="722758832" result="Passed" start-time="2023-09-17T20:30:29.5076294Z" end-time="2023-09-17T20:30:29.5077392Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account.blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account.blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1323" name="function-boolean.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1256961064" result="Passed" start-time="2023-09-17T20:30:29.5078120Z" end-time="2023-09-17T20:30:29.5081860Z" duration="0.000374" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean($boolean)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean($boolean)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1324" name="function-boolean.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1184986464" result="Passed" start-time="2023-09-17T20:30:29.5081989Z" end-time="2023-09-17T20:30:29.5082830Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(function(){true})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(function(){true})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1325" name="function-boolean.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="425556203" result="Passed" start-time="2023-09-17T20:30:29.5082910Z" end-time="2023-09-17T20:30:29.5094118Z" duration="0.001121" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$boolean(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$boolean(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1326" name="function-ceil.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="78471613" result="Passed" start-time="2023-09-17T20:30:29.5094399Z" end-time="2023-09-17T20:30:29.5096536Z" duration="0.000214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(3.7)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(3.7)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1327" name="function-ceil.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="280118053" result="Passed" start-time="2023-09-17T20:30:29.5096642Z" end-time="2023-09-17T20:30:29.5104509Z" duration="0.000787" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(-3.7)';&#xA; result: -3" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(-3.7)'
Result: '-3'
Expected: '-3'
]]></output>
                </test-case>
                <test-case id="0-1328" name="function-ceil.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1573785151" result="Passed" start-time="2023-09-17T20:30:29.5104606Z" end-time="2023-09-17T20:30:29.5105509Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1329" name="function-ceil.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="167019690" result="Passed" start-time="2023-09-17T20:30:29.5105585Z" end-time="2023-09-17T20:30:29.5106142Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1330" name="function-contains.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="364924892" result="Passed" start-time="2023-09-17T20:30:29.5106210Z" end-time="2023-09-17T20:30:29.5109545Z" duration="0.000334" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;lo&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "lo")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1331" name="function-contains.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="937416217" result="Passed" start-time="2023-09-17T20:30:29.5109636Z" end-time="2023-09-17T20:30:29.5110304Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1332" name="function-contains.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="907332557" result="Passed" start-time="2023-09-17T20:30:29.5110916Z" end-time="2023-09-17T20:30:29.5112308Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;world&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "world")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1333" name="function-contains.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1443659930" result="Passed" start-time="2023-09-17T20:30:29.5112399Z" end-time="2023-09-17T20:30:29.5121083Z" duration="0.000869" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;Word&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "Word")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1334" name="function-contains.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2125946480" result="Passed" start-time="2023-09-17T20:30:29.5121235Z" end-time="2023-09-17T20:30:29.5122282Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(nothing, &quot;World&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$contains(nothing, "World")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1335" name="function-contains.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="285550819" result="Passed" start-time="2023-09-17T20:30:29.5122734Z" end-time="2023-09-17T20:30:29.5134459Z" duration="0.001173" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$contains(23, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$contains(23, 3)'
]]></output>
                </test-case>
                <test-case id="0-1336" name="function-contains.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1513749457" result="Passed" start-time="2023-09-17T20:30:29.5138120Z" end-time="2023-09-17T20:30:29.5145759Z" duration="0.000764" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;23&quot;, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$contains("23", 3)'
]]></output>
                </test-case>
                <test-case id="0-1337" name="function-count.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1899469991" result="Passed" start-time="2023-09-17T20:30:29.5145917Z" end-time="2023-09-17T20:30:29.5147178Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order.Product.(Price * Quantity))';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order.Product.(Price * Quantity))'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1338" name="function-count.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="528441761" result="Passed" start-time="2023-09-17T20:30:29.5147270Z" end-time="2023-09-17T20:30:29.5152785Z" duration="0.000552" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$count(Product.(Price * Quantity))';&#xA; result: [2,2]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$count(Product.(Price * Quantity))'
Result: '[2,2]'
Expected: '[2,2]'
]]></output>
                </test-case>
                <test-case id="0-1339" name="function-count.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="6915353" result="Passed" start-time="2023-09-17T20:30:29.5153274Z" end-time="2023-09-17T20:30:29.5154422Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $count(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 2&quot;,&quot;order104: 2&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $count(Product.(Price*Quantity)))'
Result: '["order103: 2","order104: 2"]'
Expected: '["order103: 2","order104: 2"]'
]]></output>
                </test-case>
                <test-case id="0-1340" name="function-count.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="943498631" result="Passed" start-time="2023-09-17T20:30:29.5154508Z" end-time="2023-09-17T20:30:29.5159560Z" duration="0.000505" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([])';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$count([])'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1341" name="function-count.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1510435754" result="Passed" start-time="2023-09-17T20:30:29.5159780Z" end-time="2023-09-17T20:30:29.5165728Z" duration="0.000595" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count([1,2,3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1342" name="function-count.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1530524851" result="Passed" start-time="2023-09-17T20:30:29.5166107Z" end-time="2023-09-17T20:30:29.5167078Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count(["1","2","3"])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1343" name="function-count.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1200153501" result="Passed" start-time="2023-09-17T20:30:29.5167500Z" end-time="2023-09-17T20:30:29.5172245Z" duration="0.000475" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count(["1","2",3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1344" name="function-count.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="405512507" result="Passed" start-time="2023-09-17T20:30:29.5172691Z" end-time="2023-09-17T20:30:29.5173376Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$count(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1345" name="function-count.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="3142462" result="Passed" start-time="2023-09-17T20:30:29.5173460Z" end-time="2023-09-17T20:30:29.5195331Z" duration="0.002188" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([],[])'
]]></output>
                </test-case>
                <test-case id="0-1346" name="function-count.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="448437341" result="Passed" start-time="2023-09-17T20:30:29.5195553Z" end-time="2023-09-17T20:30:29.5208921Z" duration="0.001337" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1347" name="function-count.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="805882532" result="Passed" start-time="2023-09-17T20:30:29.5209106Z" end-time="2023-09-17T20:30:29.5217497Z" duration="0.000839" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1348" name="function-count.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="23348142" result="Passed" start-time="2023-09-17T20:30:29.5221939Z" end-time="2023-09-17T20:30:29.5230911Z" duration="0.000897" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1349" name="function-count.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="450108233" result="Passed" start-time="2023-09-17T20:30:29.5231615Z" end-time="2023-09-17T20:30:29.5232616Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(undefined)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$count(undefined)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1350" name="function-count.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="209543808" result="Passed" start-time="2023-09-17T20:30:29.5232854Z" end-time="2023-09-17T20:30:29.5237810Z" duration="0.000496" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3,4]) / 2';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$count([1,2,3,4]) / 2'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1351" name="function-decodeUrl.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1914948715" result="Passed" start-time="2023-09-17T20:30:29.5237951Z" end-time="2023-09-17T20:30:29.5241285Z" duration="0.000333" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl(&quot;https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B&quot;)';&#xA; result: &quot;https://mozilla.org/?x=шеллы&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrl("https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B")'
Result: '"https://mozilla.org/?x=шеллы"'
Expected: '"https://mozilla.org/?x=шеллы"'
]]></output>
                </test-case>
                <test-case id="0-1352" name="function-decodeUrl.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1629493262" result="Passed" start-time="2023-09-17T20:30:29.5241680Z" end-time="2023-09-17T20:30:29.5242723Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrl(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1353" name="function-decodeUrl.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="552363335" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.5242815Z" end-time="2023-09-17T20:30:29.5260014Z" duration="0.001720" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl('%E0%A4%A')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURI throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decodeUrl('%E0%A4%A')'
Result: '"%E0%A4%A"'
]]></output>
                </test-case>
                <test-case id="0-1354" name="function-decodeUrlComponent.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1331767918" result="Passed" start-time="2023-09-17T20:30:29.5263421Z" end-time="2023-09-17T20:30:29.5267791Z" duration="0.000437" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent(&quot;%3Fx%3Dtest&quot;)';&#xA; result: &quot;?x=test&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrlComponent("%3Fx%3Dtest")'
Result: '"?x=test"'
Expected: '"?x=test"'
]]></output>
                </test-case>
                <test-case id="0-1355" name="function-decodeUrlComponent.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="39604628" result="Passed" start-time="2023-09-17T20:30:29.5270833Z" end-time="2023-09-17T20:30:29.5273296Z" duration="0.000246" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrlComponent(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1356" name="function-decodeUrlComponent.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1930543871" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.5274216Z" end-time="2023-09-17T20:30:29.5293658Z" duration="0.001944" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent('%E0%A4%A')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURIComponent throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decodeUrlComponent('%E0%A4%A')'
Result: '"%E0%A4%A"'
]]></output>
                </test-case>
                <test-case id="0-1357" name="function-distinct.distinct[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="337150632" result="Passed" start-time="2023-09-17T20:30:29.5295263Z" end-time="2023-09-17T20:30:29.5311927Z" duration="0.001667" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct([1,2,3,4])';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct([1,2,3,4])'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1358" name="function-distinct.distinct[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="211375328" result="Passed" start-time="2023-09-17T20:30:29.5312216Z" end-time="2023-09-17T20:30:29.5314169Z" duration="0.000195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1359" name="function-distinct.distinct[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2043796278" result="Passed" start-time="2023-09-17T20:30:29.5314284Z" end-time="2023-09-17T20:30:29.5316018Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1360" name="function-distinct.distinct[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1169587854" result="Passed" start-time="2023-09-17T20:30:29.5316638Z" end-time="2023-09-17T20:30:29.5319076Z" duration="0.000244" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(null)';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(null)'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1361" name="function-distinct.distinct[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="205485480" result="Passed" start-time="2023-09-17T20:30:29.5319968Z" end-time="2023-09-17T20:30:29.5320745Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct('hello')';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct('hello')'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1362" name="function-distinct.distinct[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2055486210" result="Passed" start-time="2023-09-17T20:30:29.5320834Z" end-time="2023-09-17T20:30:29.5322803Z" duration="0.000197" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.SKU)';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.SKU)'
Result: '["0406654608","0406634348","040657863","0406654603"]'
Expected: '["0406654608","0406634348","040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-1363" name="function-distinct.distinct[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1192358763" result="Passed" start-time="2023-09-17T20:30:29.5322897Z" end-time="2023-09-17T20:30:29.5323826Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.`Product Name`)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.`Product Name`)'
Result: '["Bowler Hat","Trilby hat","Cloak"]'
Expected: '["Bowler Hat","Trilby hat","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-1364" name="function-distinct.distinct[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1917080555" result="Passed" start-time="2023-09-17T20:30:29.5323905Z" end-time="2023-09-17T20:30:29.5326201Z" duration="0.000230" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.Description)';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.Description)'
Result: '[{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2}]'
Expected: '[{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2}]'
]]></output>
                </test-case>
                <test-case id="0-1365" name="function-each.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2067378622" result="Passed" start-time="2023-09-17T20:30:29.5326292Z" end-time="2023-09-17T20:30:29.5336087Z" duration="0.000980" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(Address, λ($v, $k) {$k &amp; &quot;: &quot; &amp; $v})';&#xA; result: [&quot;Street: Hursley Park&quot;,&quot;City: Winchester&quot;,&quot;Postcode: SO21 2JN&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each(Address, λ($v, $k) {$k & ": " & $v})'
Result: '["Street: Hursley Park","City: Winchester","Postcode: SO21 2JN"]'
Expected: '["Street: Hursley Park","City: Winchester","Postcode: SO21 2JN"]'
]]></output>
                </test-case>
                <test-case id="0-1366" name="function-each.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1750128037" result="Passed" start-time="2023-09-17T20:30:29.5336241Z" end-time="2023-09-17T20:30:29.5337309Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each({'a': 'hello', 'b': 'world'}, $uppercase)';&#xA; result: [&quot;HELLO&quot;,&quot;WORLD&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each({'a': 'hello', 'b': 'world'}, $uppercase)'
Result: '["HELLO","WORLD"]'
Expected: '["HELLO","WORLD"]'
]]></output>
                </test-case>
                <test-case id="0-1367" name="function-each.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="570592476" result="Passed" start-time="2023-09-17T20:30:29.5337398Z" end-time="2023-09-17T20:30:29.5341339Z" duration="0.000394" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(function($v, $k) {$k[$v&gt;2]})';&#xA; result: [&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each(function($v, $k) {$k[$v>2]})'
Result: '["c","d"]'
Expected: '["c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1368" name="function-encodeUrl.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1274885565" result="Passed" start-time="2023-09-17T20:30:29.5341473Z" end-time="2023-09-17T20:30:29.5346663Z" duration="0.000519" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl(&quot;https://mozilla.org/?x=шеллы&quot;)';&#xA; result: &quot;https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrl("https://mozilla.org/?x=шеллы")'
Result: '"https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B"'
Expected: '"https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B"'
]]></output>
                </test-case>
                <test-case id="0-1369" name="function-encodeUrl.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1908666314" result="Passed" start-time="2023-09-17T20:30:29.5347099Z" end-time="2023-09-17T20:30:29.5348280Z" duration="0.000118" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrl(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1370" name="function-encodeUrl.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="169630569" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.5352873Z" end-time="2023-09-17T20:30:29.5362760Z" duration="0.000989" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl('�')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURI throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$encodeUrl('�')'
Result: '"%EF%BF%BD"'
]]></output>
                </test-case>
                <test-case id="0-1371" name="function-encodeUrlComponent.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="79494731" result="Passed" start-time="2023-09-17T20:30:29.5366645Z" end-time="2023-09-17T20:30:29.5372476Z" duration="0.000583" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent(&quot;?x=test&quot;)';&#xA; result: &quot;%3Fx%3Dtest&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrlComponent("?x=test")'
Result: '"%3Fx%3Dtest"'
Expected: '"%3Fx%3Dtest"'
]]></output>
                </test-case>
                <test-case id="0-1372" name="function-encodeUrlComponent.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="325022040" result="Passed" start-time="2023-09-17T20:30:29.5372634Z" end-time="2023-09-17T20:30:29.5375012Z" duration="0.000238" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrlComponent(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1373" name="function-encodeUrlComponent.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1488560770" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.5375965Z" end-time="2023-09-17T20:30:29.5382981Z" duration="0.000702" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent('�')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURIComponent throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$encodeUrlComponent('�')'
Result: '"%EF%BF%BD"'
]]></output>
                </test-case>
                <test-case id="0-1374" name="function-error.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2111976223" result="Passed" start-time="2023-09-17T20:30:29.5383693Z" end-time="2023-09-17T20:30:29.5392524Z" duration="0.000883" asserts="2">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 35 ? Account.Order[0].Product[0].Price : $error('Too Expensive')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 35 ? Account.Order[0].Product[0].Price : $error('Too Expensive')'
]]></output>
                </test-case>
                <test-case id="0-1375" name="function-error.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="25315576" result="Passed" start-time="2023-09-17T20:30:29.5392703Z" end-time="2023-09-17T20:30:29.5398327Z" duration="0.000563" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 34 ? Account.Order[0].Product[0].Price : $error('Too Expensive')';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 34 ? Account.Order[0].Product[0].Price : $error('Too Expensive')'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1376" name="function-error.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1079703374" result="Passed" start-time="2023-09-17T20:30:29.5398473Z" end-time="2023-09-17T20:30:29.5410885Z" duration="0.001242" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 35 ? $error('Too Expensive') : Account.Order[0].Product[0].Price';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 35 ? $error('Too Expensive') : Account.Order[0].Product[0].Price'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1377" name="function-error.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1670088978" result="Passed" start-time="2023-09-17T20:30:29.5411022Z" end-time="2023-09-17T20:30:29.5416448Z" duration="0.000543" asserts="2">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 34 ? $error('Too Expensive') : Account.Order[0].Product[0].Price';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 34 ? $error('Too Expensive') : Account.Order[0].Product[0].Price'
]]></output>
                </test-case>
                <test-case id="0-1378" name="function-error.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="851448557" result="Passed" start-time="2023-09-17T20:30:29.5416923Z" end-time="2023-09-17T20:30:29.5419367Z" duration="0.000244" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order[0].Product) &lt; 2 ? $error('Not enough products in orders')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order[0].Product) < 2 ? $error('Not enough products in orders')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1379" name="function-error.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1181844002" result="Passed" start-time="2023-09-17T20:30:29.5419601Z" end-time="2023-09-17T20:30:29.5425210Z" duration="0.000561" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order[0].Product) &lt; 3 ? $error('Not enough products in orders')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order[0].Product) < 3 ? $error('Not enough products in orders')'
]]></output>
                </test-case>
                <test-case id="0-1380" name="function-error.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2124602509" result="Passed" start-time="2023-09-17T20:30:29.5425334Z" end-time="2023-09-17T20:30:29.5439018Z" duration="0.001378" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '($msg:='My Message'; $error($msg); true)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '($msg:='My Message'; $error($msg); true)'
]]></output>
                </test-case>
                <test-case id="0-1381" name="function-error.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1420072728" result="Passed" start-time="2023-09-17T20:30:29.5443003Z" end-time="2023-09-17T20:30:29.5450894Z" duration="0.000789" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$error(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$error(null)'
]]></output>
                </test-case>
                <test-case id="0-1382" name="function-error.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="256769911" result="Passed" start-time="2023-09-17T20:30:29.5451056Z" end-time="2023-09-17T20:30:29.5461396Z" duration="0.001034" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$error(5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$error(5)'
]]></output>
                </test-case>
                <test-case id="0-1383" name="function-error.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1123676918" result="Passed" start-time="2023-09-17T20:30:29.5466310Z" end-time="2023-09-17T20:30:29.5471180Z" duration="0.000487" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$error()';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$error()'
]]></output>
                </test-case>
                <test-case id="0-1384" name="function-error.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2104959529" result="Passed" start-time="2023-09-17T20:30:29.5471331Z" end-time="2023-09-17T20:30:29.5476036Z" duration="0.000471" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$error(foo)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$error(foo)'
]]></output>
                </test-case>
                <test-case id="0-1385" name="function-eval.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="597459824" result="Passed" start-time="2023-09-17T20:30:29.5476187Z" end-time="2023-09-17T20:30:29.5479794Z" duration="0.000361" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,2,3]')';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$eval('[1,2,3]')'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1386" name="function-eval.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1455406602" result="Passed" start-time="2023-09-17T20:30:29.5479926Z" end-time="2023-09-17T20:30:29.5481499Z" duration="0.000157" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$eval(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1387" name="function-eval.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="354969222" result="Passed" start-time="2023-09-17T20:30:29.5481954Z" end-time="2023-09-17T20:30:29.5484534Z" duration="0.000258" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,$string(2),3]')';&#xA; result: [1,&quot;2&quot;,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$eval('[1,$string(2),3]')'
Result: '[1,"2",3]'
Expected: '[1,"2",3]'
]]></output>
                </test-case>
                <test-case id="0-1388" name="function-eval.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="111892012" result="Passed" start-time="2023-09-17T20:30:29.5485004Z" end-time="2023-09-17T20:30:29.5488479Z" duration="0.000348" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval('Account.Order.Product.Quantity ~&gt; $sum()')';&#xA; result: 8" />
                  </properties>
                  <output><![CDATA[Expr is '$eval('Account.Order.Product.Quantity ~> $sum()')'
Result: '8'
Expected: '8'
]]></output>
                </test-case>
                <test-case id="0-1389" name="function-eval.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2086341852" result="Passed" start-time="2023-09-17T20:30:29.5488587Z" end-time="2023-09-17T20:30:29.5492923Z" duration="0.000434" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{'Name': `Product Name`, 'Total': $eval('Price * Quantity')}';&#xA; result: [{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Total&quot;:68.9},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;Total&quot;:21.67},{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Total&quot;:137.8},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;Total&quot;:107.99}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{'Name': `Product Name`, 'Total': $eval('Price * Quantity')}'
Result: '[{"Name":"Bowler Hat","Total":68.9},{"Name":"Trilby hat","Total":21.67},{"Name":"Bowler Hat","Total":137.8},{"Name":"Cloak","Total":107.99}]'
Expected: '[{"Name":"Bowler Hat","Total":68.9},{"Name":"Trilby hat","Total":21.67},{"Name":"Bowler Hat","Total":137.8},{"Name":"Cloak","Total":107.99}]'
]]></output>
                </test-case>
                <test-case id="0-1390" name="function-eval.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="502490595" result="Passed" start-time="2023-09-17T20:30:29.5495692Z" end-time="2023-09-17T20:30:29.5509515Z" duration="0.001382" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{'Name': `Product Name`, 'Volume': $eval('Width*Height*Depth', Description)}';&#xA; result: [{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;Volume&quot;:126000}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{'Name': `Product Name`, 'Volume': $eval('Width*Height*Depth', Description)}'
Result: '[{"Name":"Bowler Hat","Volume":12600000},{"Name":"Trilby hat","Volume":12600000},{"Name":"Bowler Hat","Volume":12600000},{"Name":"Cloak","Volume":126000}]'
Expected: '[{"Name":"Bowler Hat","Volume":12600000},{"Name":"Trilby hat","Volume":12600000},{"Name":"Bowler Hat","Volume":12600000},{"Name":"Cloak","Volume":126000}]'
]]></output>
                </test-case>
                <test-case id="0-1391" name="function-eval.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1176598825" result="Passed" start-time="2023-09-17T20:30:29.5509728Z" end-time="2023-09-17T20:30:29.5526208Z" duration="0.001648" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,string(2),3]')';&#xA; result: error D3121" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3121.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$eval('[1,string(2),3]')'
]]></output>
                </test-case>
                <test-case id="0-1392" name="function-eval.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1688094663" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.5526395Z" end-time="2023-09-17T20:30:29.5544487Z" duration="0.001809" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,#string(2),3]')';&#xA; result: error D3120" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'eval': Not supported yet: #
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$eval('[1,#string(2),3]')'
]]></output>
                </test-case>
                <test-case id="0-1393" name="function-eval.case008[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="632129130" result="Passed" start-time="2023-09-17T20:30:29.5544675Z" end-time="2023-09-17T20:30:29.5545991Z" duration="0.000132" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;, [])';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }", [])'
Result: '{"test":1}'
Expected: '{"test":1}'
]]></output>
                </test-case>
                <test-case id="0-1394" name="function-eval.case008[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="984811146" result="Passed" start-time="2023-09-17T20:30:29.5546082Z" end-time="2023-09-17T20:30:29.5547877Z" duration="0.000180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;)';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }")'
Result: '{"test":1}'
Expected: '{"test":1}'
]]></output>
                </test-case>
                <test-case id="0-1395" name="function-eval.case008[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="738013151" result="Passed" start-time="2023-09-17T20:30:29.5547984Z" end-time="2023-09-17T20:30:29.5552168Z" duration="0.000418" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;, [1,2,3])';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }", [1,2,3])'
Result: '{"test":1}'
Expected: '{"test":1}'
]]></output>
                </test-case>
                <test-case id="0-1396" name="function-eval.case008[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1602433191" result="Passed" start-time="2023-09-17T20:30:29.5552500Z" end-time="2023-09-17T20:30:29.5570806Z" duration="0.001831" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;)';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }")'
Result: '{"test":1}'
Expected: '{"test":1}'
]]></output>
                </test-case>
                <test-case id="0-1397" name="function-exists.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="338166088" result="Passed" start-time="2023-09-17T20:30:29.5571041Z" end-time="2023-09-17T20:30:29.5572840Z" duration="0.000180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(&quot;Hello World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists("Hello World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1398" name="function-exists.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1430556593" result="Passed" start-time="2023-09-17T20:30:29.5572946Z" end-time="2023-09-17T20:30:29.5573769Z" duration="0.000082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(&quot;&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists("")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1399" name="function-exists.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="485617532" result="Passed" start-time="2023-09-17T20:30:29.5573851Z" end-time="2023-09-17T20:30:29.5574558Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(true)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(true)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1400" name="function-exists.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="400498072" result="Passed" start-time="2023-09-17T20:30:29.5574630Z" end-time="2023-09-17T20:30:29.5575287Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(false)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(false)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1401" name="function-exists.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2025328512" result="Passed" start-time="2023-09-17T20:30:29.5575356Z" end-time="2023-09-17T20:30:29.5575981Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(0)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(0)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1402" name="function-exists.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1678480614" result="Passed" start-time="2023-09-17T20:30:29.5576055Z" end-time="2023-09-17T20:30:29.5576938Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(-0.5)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(-0.5)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1403" name="function-exists.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="262165475" result="Passed" start-time="2023-09-17T20:30:29.5577099Z" end-time="2023-09-17T20:30:29.5593454Z" duration="0.001636" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(null)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(null)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1404" name="function-exists.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="280477664" result="Passed" start-time="2023-09-17T20:30:29.5596397Z" end-time="2023-09-17T20:30:29.5598452Z" duration="0.000205" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1405" name="function-exists.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="130049077" result="Passed" start-time="2023-09-17T20:30:29.5598591Z" end-time="2023-09-17T20:30:29.5599873Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([0])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([0])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1406" name="function-exists.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1589926675" result="Passed" start-time="2023-09-17T20:30:29.5600072Z" end-time="2023-09-17T20:30:29.5603648Z" duration="0.000358" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([1,2,3])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([1,2,3])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1407" name="function-exists.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="140932492" result="Passed" start-time="2023-09-17T20:30:29.5606515Z" end-time="2023-09-17T20:30:29.5614344Z" duration="0.000783" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1408" name="function-exists.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="587870759" result="Passed" start-time="2023-09-17T20:30:29.5616995Z" end-time="2023-09-17T20:30:29.5618112Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[null]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[null]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1409" name="function-exists.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1306452342" result="Passed" start-time="2023-09-17T20:30:29.5618247Z" end-time="2023-09-17T20:30:29.5619015Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[[true]]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[[true]]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1410" name="function-exists.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1107384901" result="Passed" start-time="2023-09-17T20:30:29.5619088Z" end-time="2023-09-17T20:30:29.5626662Z" duration="0.000758" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists({})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists({})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1411" name="function-exists.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="260454893" result="Passed" start-time="2023-09-17T20:30:29.5626807Z" end-time="2023-09-17T20:30:29.5628106Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists({"hello":"world"})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1412" name="function-exists.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1633185722" result="Passed" start-time="2023-09-17T20:30:29.5629399Z" end-time="2023-09-17T20:30:29.5631164Z" duration="0.000176" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1413" name="function-exists.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1177014973" result="Passed" start-time="2023-09-17T20:30:29.5631431Z" end-time="2023-09-17T20:30:29.5634386Z" duration="0.000295" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order.Product.Price)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order.Product.Price)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1414" name="function-exists.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2066677416" result="Passed" start-time="2023-09-17T20:30:29.5634513Z" end-time="2023-09-17T20:30:29.5635668Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists($exists)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists($exists)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1415" name="function-exists.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1896998773" result="Passed" start-time="2023-09-17T20:30:29.5635765Z" end-time="2023-09-17T20:30:29.5638537Z" duration="0.000277" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(function(){true})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(function(){true})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1416" name="function-exists.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2096199216" result="Passed" start-time="2023-09-17T20:30:29.5638641Z" end-time="2023-09-17T20:30:29.5641332Z" duration="0.000269" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1417" name="function-exists.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="931809292" result="Passed" start-time="2023-09-17T20:30:29.5641976Z" end-time="2023-09-17T20:30:29.5650052Z" duration="0.000808" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1418" name="function-exists.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1234882881" result="Passed" start-time="2023-09-17T20:30:29.5657948Z" end-time="2023-09-17T20:30:29.5660544Z" duration="0.000259" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order[2])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order[2])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1419" name="function-exists.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1319620731" result="Passed" start-time="2023-09-17T20:30:29.5660686Z" end-time="2023-09-17T20:30:29.5663096Z" duration="0.000241" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order[0].blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order[0].blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1420" name="function-exists.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="611972020" result="Passed" start-time="2023-09-17T20:30:29.5663433Z" end-time="2023-09-17T20:30:29.5683360Z" duration="0.001993" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$exists(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$exists(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1421" name="function-exists.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1395158815" result="Passed" start-time="2023-09-17T20:30:29.5689276Z" end-time="2023-09-17T20:30:29.5694717Z" duration="0.000544" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$exists()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$exists()'
]]></output>
                </test-case>
                <test-case id="0-1422" name="function-floor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="458700464" result="Passed" start-time="2023-09-17T20:30:29.5694879Z" end-time="2023-09-17T20:30:29.5696829Z" duration="0.000195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(3.7)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(3.7)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1423" name="function-floor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1336027360" result="Passed" start-time="2023-09-17T20:30:29.5696938Z" end-time="2023-09-17T20:30:29.5700254Z" duration="0.000332" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(-3.7)';&#xA; result: -4" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(-3.7)'
Result: '-4'
Expected: '-4'
]]></output>
                </test-case>
                <test-case id="0-1424" name="function-floor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1406175719" result="Passed" start-time="2023-09-17T20:30:29.5700481Z" end-time="2023-09-17T20:30:29.5702586Z" duration="0.000210" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1425" name="function-floor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1140515391" result="Passed" start-time="2023-09-17T20:30:29.5703173Z" end-time="2023-09-17T20:30:29.5703989Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1426" name="function-formatBase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="538883715" result="Passed" start-time="2023-09-17T20:30:29.5704091Z" end-time="2023-09-17T20:30:29.5709003Z" duration="0.000491" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100)';&#xA; result: &quot;100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(100)'
Result: '"100"'
Expected: '"100"'
]]></output>
                </test-case>
                <test-case id="0-1427" name="function-formatBase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1840376557" result="Passed" start-time="2023-09-17T20:30:29.5709114Z" end-time="2023-09-17T20:30:29.5713931Z" duration="0.000482" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1428" name="function-formatBase.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="503749624" result="Passed" start-time="2023-09-17T20:30:29.5716691Z" end-time="2023-09-17T20:30:29.5717803Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 2)';&#xA; result: &quot;1100100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(100, 2)'
Result: '"1100100"'
Expected: '"1100100"'
]]></output>
                </test-case>
                <test-case id="0-1429" name="function-formatBase.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1373963072" result="Passed" start-time="2023-09-17T20:30:29.5719984Z" end-time="2023-09-17T20:30:29.5721682Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(-100, 2)';&#xA; result: &quot;-1100100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(-100, 2)'
Result: '"-1100100"'
Expected: '"-1100100"'
]]></output>
                </test-case>
                <test-case id="0-1430" name="function-formatBase.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="570366032" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.5724796Z" end-time="2023-09-17T20:30:29.5736554Z" duration="0.001176" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 36)';&#xA; result: &quot;2s&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatBase': No support for radix=36 in formatBase() yet
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 36)'
]]></output>
                </test-case>
                <test-case id="0-1431" name="function-formatBase.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="741537286" result="Failed" start-time="2023-09-17T20:30:29.5736918Z" end-time="2023-09-17T20:30:29.5886282Z" duration="0.014937" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(99.5, 2.5)';&#xA; result: &quot;1100100&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1100100"', got '"1100011"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatBase(99.5, 2.5)'
Result: '"1100011"'
Expected: '"1100100"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1100100"', got '"1100011"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1432" name="function-formatBase.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="239532385" result="Passed" start-time="2023-09-17T20:30:29.5886527Z" end-time="2023-09-17T20:30:29.5907973Z" duration="0.002145" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 1)';&#xA; result: error D3100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3100.
Actually thrown D3100.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 1)'
]]></output>
                </test-case>
                <test-case id="0-1433" name="function-formatBase.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="365831025" result="Passed" start-time="2023-09-17T20:30:29.5908179Z" end-time="2023-09-17T20:30:29.5917498Z" duration="0.000932" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 37)';&#xA; result: error D3100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3100.
Actually thrown D3100.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 37)'
]]></output>
                </test-case>
                <test-case id="0-1434" name="function-formatInteger.formatInteger[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="781345930" result="Passed" start-time="2023-09-17T20:30:29.5917655Z" end-time="2023-09-17T20:30:29.5921770Z" duration="0.000412" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(undefined, '0')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Description: 'should return result object'
Expr is '$formatInteger(undefined, '0')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1435" name="function-formatInteger.formatInteger[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="99273997" result="Passed" start-time="2023-09-17T20:30:29.5924514Z" end-time="2023-09-17T20:30:29.5928708Z" duration="0.000419" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '000')';&#xA; result: &quot;123&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should format a number'
Expr is '$formatInteger(123, '000')'
Result: '"123"'
Expected: '"123"'
]]></output>
                </test-case>
                <test-case id="0-1436" name="function-formatInteger.formatInteger[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1889075761" result="Passed" start-time="2023-09-17T20:30:29.5928863Z" end-time="2023-09-17T20:30:29.5931448Z" duration="0.000259" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '0000')';&#xA; result: &quot;0123&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(123, '0000')'
Result: '"0123"'
Expected: '"0123"'
]]></output>
                </test-case>
                <test-case id="0-1437" name="function-formatInteger.formatInteger[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2142088083" result="Passed" start-time="2023-09-17T20:30:29.5933919Z" end-time="2023-09-17T20:30:29.5934805Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(-3, '0000')';&#xA; result: &quot;-0003&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(-3, '0000')'
Result: '"-0003"'
Expected: '"-0003"'
]]></output>
                </test-case>
                <test-case id="0-1438" name="function-formatInteger.formatInteger[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="843199254" result="Passed" start-time="2023-09-17T20:30:29.5934932Z" end-time="2023-09-17T20:30:29.5935548Z" duration="0.000062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '0;c')';&#xA; result: &quot;1234&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '0;c')'
Result: '"1234"'
Expected: '"1234"'
]]></output>
                </test-case>
                <test-case id="0-1439" name="function-formatInteger.formatInteger[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1974910452" result="Passed" start-time="2023-09-17T20:30:29.5935626Z" end-time="2023-09-17T20:30:29.5936188Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '###0')';&#xA; result: &quot;1234&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '###0')'
Result: '"1234"'
Expected: '"1234"'
]]></output>
                </test-case>
                <test-case id="0-1440" name="function-formatInteger.formatInteger[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1155016796" result="Passed" start-time="2023-09-17T20:30:29.5936258Z" end-time="2023-09-17T20:30:29.5937601Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '###0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(12, '###0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1441" name="function-formatInteger.formatInteger[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1314474110" result="Passed" start-time="2023-09-17T20:30:29.5937682Z" end-time="2023-09-17T20:30:29.5942901Z" duration="0.000522" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12.6, '###0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should round down floats'
Expr is '$formatInteger(12.6, '###0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1442" name="function-formatInteger.formatInteger[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1914582110" result="Failed" start-time="2023-09-17T20:30:29.5943036Z" end-time="2023-09-17T20:30:29.5974403Z" duration="0.003137" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '000;o')';&#xA; result: &quot;123rd&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"123rd"', got '"123"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format a number'
Expr is '$formatInteger(123, '000;o')'
Result: '"123"'
Expected: '"123rd"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"123rd"', got '"123"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1443" name="function-formatInteger.formatInteger[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="952923317" result="Failed" start-time="2023-09-17T20:30:29.5974615Z" end-time="2023-09-17T20:30:29.5987216Z" duration="0.001260" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1, '0;o')';&#xA; result: &quot;1st&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1st"', got '"1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1, '0;o')'
Result: '"1"'
Expected: '"1st"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1st"', got '"1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1444" name="function-formatInteger.formatInteger[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="978956951" result="Failed" start-time="2023-09-17T20:30:29.5987402Z" end-time="2023-09-17T20:30:29.5995601Z" duration="0.000820" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(28, '#0;o')';&#xA; result: &quot;28th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"28th"', got '"28"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(28, '#0;o')'
Result: '"28"'
Expected: '"28th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"28th"', got '"28"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1445" name="function-formatInteger.formatInteger[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="242035702" result="Failed" start-time="2023-09-17T20:30:29.5996033Z" end-time="2023-09-17T20:30:29.6003543Z" duration="0.000751" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '###0;o')';&#xA; result: &quot;1234th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1234th"', got '"1234"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '###0;o')'
Result: '"1234"'
Expected: '"1234th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1234th"', got '"1234"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1446" name="function-formatInteger.formatInteger[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1690896750" result="Failed" start-time="2023-09-17T20:30:29.6003948Z" end-time="2023-09-17T20:30:29.6011625Z" duration="0.000768" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '###0;o')';&#xA; result: &quot;12th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12th"', got '"12"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(12, '###0;o')'
Result: '"12"'
Expected: '"12th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12th"', got '"12"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1447" name="function-formatInteger.formatInteger[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="511079690" result="Failed" start-time="2023-09-17T20:30:29.6011779Z" end-time="2023-09-17T20:30:29.6019739Z" duration="0.000796" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '###١')';&#xA; result: &quot;١٢٣٤٠&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"١٢٣٤٠"', got '"12340١"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12340, '###١')'
Result: '"12340١"'
Expected: '"١٢٣٤٠"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"١٢٣٤٠"', got '"12340١"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1448" name="function-formatInteger.formatInteger[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="712935361" result="Failed" start-time="2023-09-17T20:30:29.6020331Z" end-time="2023-09-17T20:30:29.6027611Z" duration="0.000728" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '###０')';&#xA; result: &quot;１２３４０&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"１２３４０"', got '"12340０"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12340, '###０')'
Result: '"12340０"'
Expected: '"１２３４０"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"１２３４０"', got '"12340０"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1449" name="function-formatInteger.formatInteger[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1235296020" result="Failed" start-time="2023-09-17T20:30:29.6027886Z" end-time="2023-09-17T20:30:29.6037491Z" duration="0.000961" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '##0０')';&#xA; result: error D3131" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3131 (), got '"12340０"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should throw error with mixed integer groups'
Expr is '$formatInteger(12340, '##0０')'
Result: '"12340０"'
Expected error D3131
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3131 (), got '"12340０"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1450" name="function-formatInteger.formatInteger[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="789297582" result="Passed" start-time="2023-09-17T20:30:29.6037729Z" end-time="2023-09-17T20:30:29.6038661Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '#,##0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12, '#,##0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1451" name="function-formatInteger.formatInteger[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="670623899" result="Passed" start-time="2023-09-17T20:30:29.6038753Z" end-time="2023-09-17T20:30:29.6039543Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1200, '#,##0')';&#xA; result: &quot;1,200&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1200, '#,##0')'
Result: '"1,200"'
Expected: '"1,200"'
]]></output>
                </test-case>
                <test-case id="0-1452" name="function-formatInteger.formatInteger[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1250766854" result="Passed" start-time="2023-09-17T20:30:29.6039717Z" end-time="2023-09-17T20:30:29.6042214Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(120000, '#,##0')';&#xA; result: &quot;120,000&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(120000, '#,##0')'
Result: '"120,000"'
Expected: '"120,000"'
]]></output>
                </test-case>
                <test-case id="0-1453" name="function-formatInteger.formatInteger[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="110935862" result="Passed" start-time="2023-09-17T20:30:29.6042361Z" end-time="2023-09-17T20:30:29.6044072Z" duration="0.000171" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12345678, '#,##0')';&#xA; result: &quot;12,345,678&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12345678, '#,##0')'
Result: '"12,345,678"'
Expected: '"12,345,678"'
]]></output>
                </test-case>
                <test-case id="0-1454" name="function-formatInteger.formatInteger[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2021129159" result="Passed" start-time="2023-09-17T20:30:29.6044175Z" end-time="2023-09-17T20:30:29.6044862Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#,##0')';&#xA; result: &quot;1,234,567,890&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1234567890, '#,##0')'
Result: '"1,234,567,890"'
Expected: '"1,234,567,890"'
]]></output>
                </test-case>
                <test-case id="0-1455" name="function-formatInteger.formatInteger[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1152822904" result="Passed" start-time="2023-09-17T20:30:29.6044944Z" end-time="2023-09-17T20:30:29.6045631Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#,###,##0')';&#xA; result: &quot;1,234,567,890&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1234567890, '#,###,##0')'
Result: '"1,234,567,890"'
Expected: '"1,234,567,890"'
]]></output>
                </test-case>
                <test-case id="0-1456" name="function-formatInteger.formatInteger[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1566628048" result="Failed" start-time="2023-09-17T20:30:29.6045709Z" end-time="2023-09-17T20:30:29.6069234Z" duration="0.002353" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#:###,##0')';&#xA; result: &quot;1234:567,890&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1234:567,890"', got '"1,234,:567,890"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert non-regular groups - different chars'
Expr is '$formatInteger(1234567890, '#:###,##0')'
Result: '"1,234,:567,890"'
Expected: '"1234:567,890"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1234:567,890"', got '"1,234,:567,890"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1457" name="function-formatInteger.formatInteger[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="342453254" result="Failed" start-time="2023-09-17T20:30:29.6070367Z" end-time="2023-09-17T20:30:29.6086838Z" duration="0.001647" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '##,##,##0')';&#xA; result: &quot;12345,67,890&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12345,67,890"', got '"1,234,567,890"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert non-regular groups - different positions'
Expr is '$formatInteger(1234567890, '##,##,##0')'
Result: '"1,234,567,890"'
Expected: '"12345,67,890"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12345,67,890"', got '"1,234,567,890"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1458" name="function-formatInteger.formatInteger[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1003473403" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6087030Z" end-time="2023-09-17T20:30:29.6104428Z" duration="0.001740" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(0, 'I')';&#xA; result: &quot;&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '0'
Expr is '$formatInteger(0, 'I')'
]]></output>
                </test-case>
                <test-case id="0-1459" name="function-formatInteger.formatInteger[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1287445920" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6104614Z" end-time="2023-09-17T20:30:29.6114555Z" duration="0.000994" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1984, 'I')';&#xA; result: &quot;MCMLXXXIV&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1984'
Expr is '$formatInteger(1984, 'I')'
]]></output>
                </test-case>
                <test-case id="0-1460" name="function-formatInteger.formatInteger[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1738649009" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6114720Z" end-time="2023-09-17T20:30:29.6142343Z" duration="0.002763" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'i')';&#xA; result: &quot;xcix&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'i')'
]]></output>
                </test-case>
                <test-case id="0-1461" name="function-formatInteger.formatInteger[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1897033765" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6145644Z" end-time="2023-09-17T20:30:29.6158926Z" duration="0.001328" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'w')';&#xA; result: &quot;twelve&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1462" name="function-formatInteger.formatInteger[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1784666515" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6159123Z" end-time="2023-09-17T20:30:29.6173422Z" duration="0.001430" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(20, 'w')';&#xA; result: &quot;twenty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$formatInteger(20, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1463" name="function-formatInteger.formatInteger[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1361391334" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6173618Z" end-time="2023-09-17T20:30:29.6183754Z" duration="0.001014" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(34, 'w')';&#xA; result: &quot;thirty-four&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$formatInteger(34, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1464" name="function-formatInteger.formatInteger[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="736086310" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6183919Z" end-time="2023-09-17T20:30:29.6193338Z" duration="0.000942" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'W')';&#xA; result: &quot;NINETY-NINE&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'W')'
]]></output>
                </test-case>
                <test-case id="0-1465" name="function-formatInteger.formatInteger[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="365847615" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6193513Z" end-time="2023-09-17T20:30:29.6203143Z" duration="0.000963" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(100, 'w')';&#xA; result: &quot;one hundred&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$formatInteger(100, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1466" name="function-formatInteger.formatInteger[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="20922508" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6203398Z" end-time="2023-09-17T20:30:29.6226249Z" duration="0.002285" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'W')';&#xA; result: &quot;FIVE HUNDRED AND FIFTY-FIVE&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'W')'
]]></output>
                </test-case>
                <test-case id="0-1467" name="function-formatInteger.formatInteger[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1267354697" result="Failed" start-time="2023-09-17T20:30:29.6226470Z" end-time="2023-09-17T20:30:29.6237913Z" duration="0.001145" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'Ww')';&#xA; result: &quot;Five Hundred and Fifty-Five&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Five Hundred and Fifty-Five"', got '"Ww"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'Ww')'
Result: '"Ww"'
Expected: '"Five Hundred and Fifty-Five"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Five Hundred and Fifty-Five"', got '"Ww"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1468" name="function-formatInteger.formatInteger[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="395669043" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6238083Z" end-time="2023-09-17T20:30:29.6247671Z" duration="0.000959" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(919, 'w')';&#xA; result: &quot;nine hundred and nineteen&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$formatInteger(919, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1469" name="function-formatInteger.formatInteger[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1967403419" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6248490Z" end-time="2023-09-17T20:30:29.6261410Z" duration="0.001292" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(730, 'w')';&#xA; result: &quot;seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$formatInteger(730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1470" name="function-formatInteger.formatInteger[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="7923012" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6261607Z" end-time="2023-09-17T20:30:29.6281669Z" duration="0.002007" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000, 'w')';&#xA; result: &quot;one thousand&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$formatInteger(1000, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1471" name="function-formatInteger.formatInteger[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2101594780" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6281873Z" end-time="2023-09-17T20:30:29.6294131Z" duration="0.001226" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(3730, 'w')';&#xA; result: &quot;three thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$formatInteger(3730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1472" name="function-formatInteger.formatInteger[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="88610038" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6294316Z" end-time="2023-09-17T20:30:29.6303808Z" duration="0.000949" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(327730, 'w')';&#xA; result: &quot;three hundred and twenty-seven thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$formatInteger(327730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1473" name="function-formatInteger.formatInteger[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1407456076" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6303979Z" end-time="2023-09-17T20:30:29.6313430Z" duration="0.000945" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(4327730, 'w')';&#xA; result: &quot;four million, three hundred and twenty-seven thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$formatInteger(4327730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1474" name="function-formatInteger.formatInteger[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="164603935" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6314157Z" end-time="2023-09-17T20:30:29.6332712Z" duration="0.001855" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000001, 'w')';&#xA; result: &quot;one trillion and one&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$formatInteger(1000000000001, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1475" name="function-formatInteger.formatInteger[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1444981557" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6332897Z" end-time="2023-09-17T20:30:29.6340757Z" duration="0.000786" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890123, 'w')';&#xA; result: &quot;one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123'
Expr is '$formatInteger(1234567890123, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1476" name="function-formatInteger.formatInteger[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1628060352" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6340919Z" end-time="2023-09-17T20:30:29.6348520Z" duration="0.000760" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000000000, 'w')';&#xA; result: &quot;one thousand trillion&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e15'
Expr is '$formatInteger(1000000000000000, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1477" name="function-formatInteger.formatInteger[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1653260794" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6348671Z" end-time="2023-09-17T20:30:29.6358290Z" duration="0.000962" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1e+46, 'w')';&#xA; result: &quot;ten billion trillion trillion trillion&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e46'
Expr is '$formatInteger(1e+46, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1478" name="function-formatInteger.formatInteger[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="357070409" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6358448Z" end-time="2023-09-17T20:30:29.6366150Z" duration="0.000770" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890123456, 'w')';&#xA; result: &quot;one thousand, two hundred and thirty-four trillion, five hundred and sixty-seven billion, eight hundred and ninety million, one hundred and twenty-three thousand, four hundred and fifty-six&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123456'
Expr is '$formatInteger(1234567890123456, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1479" name="function-formatInteger.formatInteger[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1164140017" result="Failed" start-time="2023-09-17T20:30:29.6366654Z" end-time="2023-09-17T20:30:29.6384158Z" duration="0.001751" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'w;o')';&#xA; result: &quot;twelfth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"twelfth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'w;o')'
Result: '"w"'
Expected: '"twelfth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"twelfth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1480" name="function-formatInteger.formatInteger[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1597102288" result="Failed" start-time="2023-09-17T20:30:29.6385393Z" end-time="2023-09-17T20:30:29.6397074Z" duration="0.001168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(20, 'w;o')';&#xA; result: &quot;twentieth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"twentieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '20'
Expr is '$formatInteger(20, 'w;o')'
Result: '"w"'
Expected: '"twentieth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"twentieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1481" name="function-formatInteger.formatInteger[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="27804025" result="Failed" start-time="2023-09-17T20:30:29.6404746Z" end-time="2023-09-17T20:30:29.6416178Z" duration="0.001143" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(34, 'w;o')';&#xA; result: &quot;thirty-fourth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"thirty-fourth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '34'
Expr is '$formatInteger(34, 'w;o')'
Result: '"w"'
Expected: '"thirty-fourth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"thirty-fourth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1482" name="function-formatInteger.formatInteger[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1127441196" result="Failed" start-time="2023-09-17T20:30:29.6416379Z" end-time="2023-09-17T20:30:29.6425259Z" duration="0.000888" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'W;o')';&#xA; result: &quot;NINETY-NINTH&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"NINETY-NINTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'W;o')'
Result: '"W"'
Expected: '"NINETY-NINTH"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"NINETY-NINTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1483" name="function-formatInteger.formatInteger[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1415937251" result="Failed" start-time="2023-09-17T20:30:29.6425414Z" end-time="2023-09-17T20:30:29.6433773Z" duration="0.000836" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(100, 'w;o')';&#xA; result: &quot;one hundredth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one hundredth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '100'
Expr is '$formatInteger(100, 'w;o')'
Result: '"w"'
Expected: '"one hundredth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one hundredth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1484" name="function-formatInteger.formatInteger[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="584665490" result="Failed" start-time="2023-09-17T20:30:29.6433925Z" end-time="2023-09-17T20:30:29.6443226Z" duration="0.000930" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'W;o')';&#xA; result: &quot;FIVE HUNDRED AND FIFTY-FIFTH&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"FIVE HUNDRED AND FIFTY-FIFTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'W;o')'
Result: '"W"'
Expected: '"FIVE HUNDRED AND FIFTY-FIFTH"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"FIVE HUNDRED AND FIFTY-FIFTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1485" name="function-formatInteger.formatInteger[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2047225780" result="Failed" start-time="2023-09-17T20:30:29.6443401Z" end-time="2023-09-17T20:30:29.6454210Z" duration="0.001081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(919, 'w;o')';&#xA; result: &quot;nine hundred and nineteenth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"nine hundred and nineteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '919'
Expr is '$formatInteger(919, 'w;o')'
Result: '"w"'
Expected: '"nine hundred and nineteenth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"nine hundred and nineteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1486" name="function-formatInteger.formatInteger[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1638254079" result="Failed" start-time="2023-09-17T20:30:29.6454389Z" end-time="2023-09-17T20:30:29.6462342Z" duration="0.000795" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(730, 'w;o')';&#xA; result: &quot;seven hundred and thirtieth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"seven hundred and thirtieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '730'
Expr is '$formatInteger(730, 'w;o')'
Result: '"w"'
Expected: '"seven hundred and thirtieth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"seven hundred and thirtieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1487" name="function-formatInteger.formatInteger[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="128596523" result="Failed" start-time="2023-09-17T20:30:29.6463239Z" end-time="2023-09-17T20:30:29.6481387Z" duration="0.001815" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000, 'w;o')';&#xA; result: &quot;one thousandth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one thousandth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1000'
Expr is '$formatInteger(1000, 'w;o')'
Result: '"w"'
Expected: '"one thousandth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one thousandth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1488" name="function-formatInteger.formatInteger[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="492185513" result="Failed" start-time="2023-09-17T20:30:29.6481562Z" end-time="2023-09-17T20:30:29.6490551Z" duration="0.000899" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(3731, 'w;o')';&#xA; result: &quot;three thousand, seven hundred and thirty-first&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"three thousand, seven hundred and thirty-first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '3730'
Expr is '$formatInteger(3731, 'w;o')'
Result: '"w"'
Expected: '"three thousand, seven hundred and thirty-first"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"three thousand, seven hundred and thirty-first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1489" name="function-formatInteger.formatInteger[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1776006673" result="Failed" start-time="2023-09-17T20:30:29.6493283Z" end-time="2023-09-17T20:30:29.6502754Z" duration="0.000947" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(327713, 'w;o')';&#xA; result: &quot;three hundred and twenty-seven thousand, seven hundred and thirteenth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"three hundred and twenty-seven thousand, seven hundred and thirteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '327730'
Expr is '$formatInteger(327713, 'w;o')'
Result: '"w"'
Expected: '"three hundred and twenty-seven thousand, seven hundred and thirteenth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"three hundred and twenty-seven thousand, seven hundred and thirteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1490" name="function-formatInteger.formatInteger[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="680129596" result="Failed" start-time="2023-09-17T20:30:29.6502920Z" end-time="2023-09-17T20:30:29.6514016Z" duration="0.001110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(4327732, 'w;o')';&#xA; result: &quot;four million, three hundred and twenty-seven thousand, seven hundred and thirty-second&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '4327730'
Expr is '$formatInteger(4327732, 'w;o')'
Result: '"w"'
Expected: '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1491" name="function-formatInteger.formatInteger[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1546622507" result="Failed" start-time="2023-09-17T20:30:29.6514301Z" end-time="2023-09-17T20:30:29.6530033Z" duration="0.001574" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000001, 'w;o')';&#xA; result: &quot;one trillion and first&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one trillion and first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$formatInteger(1000000000001, 'w;o')'
Result: '"w"'
Expected: '"one trillion and first"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one trillion and first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1492" name="function-formatInteger.formatInteger[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1138614680" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6530243Z" end-time="2023-09-17T20:30:29.6539207Z" duration="0.000897" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1, 'A')';&#xA; result: &quot;A&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1'
Expr is '$formatInteger(1, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1493" name="function-formatInteger.formatInteger[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1703236981" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6539590Z" end-time="2023-09-17T20:30:29.6548962Z" duration="0.000937" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'a')';&#xA; result: &quot;l&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1494" name="function-formatInteger.formatInteger[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="236261443" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6549123Z" end-time="2023-09-17T20:30:29.6558929Z" duration="0.000981" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(26, 'a')';&#xA; result: &quot;z&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '26'
Expr is '$formatInteger(26, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1495" name="function-formatInteger.formatInteger[62]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[62]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1405466678" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6559090Z" end-time="2023-09-17T20:30:29.6567782Z" duration="0.000869" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(27, 'a')';&#xA; result: &quot;aa&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '27'
Expr is '$formatInteger(27, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1496" name="function-formatInteger.formatInteger[63]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[63]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1677291242" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6568173Z" end-time="2023-09-17T20:30:29.6580209Z" duration="0.001204" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(300, 'A')';&#xA; result: &quot;KN&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '300'
Expr is '$formatInteger(300, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1497" name="function-formatInteger.formatInteger[64]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[64]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="553190776" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:29.6586711Z" end-time="2023-09-17T20:30:29.6598123Z" duration="0.001141" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123456, 'A')';&#xA; result: &quot;FZPH&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '123456'
Expr is '$formatInteger(123456, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1498" name="function-formatInteger.formatInteger[65]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[65]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="216837007" result="Failed" start-time="2023-09-17T20:30:29.6598310Z" end-time="2023-09-17T20:30:29.6612370Z" duration="0.001407" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123456, 'α')';&#xA; result: error D3130" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3130 (), got '"α"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'sequence starting with greek alpha, α'
Expr is '$formatInteger(123456, 'α')'
Result: '"α"'
Expected error D3130
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3130 (), got '"α"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1499" name="function-formatNumber.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="613109336" result="Passed" start-time="2023-09-17T20:30:29.6613162Z" end-time="2023-09-17T20:30:29.6623406Z" duration="0.001024" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(12345.6, &quot;#,###.00&quot;)';&#xA; result: &quot;12,345.60&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(12345.6, "#,###.00")'
Result: '"12,345.60"'
Expected: '"12,345.60"'
]]></output>
                </test-case>
                <test-case id="0-1500" name="function-formatNumber.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="221113194" result="Failed" start-time="2023-09-17T20:30:29.6623578Z" end-time="2023-09-17T20:30:29.6632399Z" duration="0.000882" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(12345678.9, &quot;9,999.99&quot;)';&#xA; result: &quot;12,345,678.90&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12,345,678.90"', got '"12345,678.90"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(12345678.9, "9,999.99")'
Result: '"12345,678.90"'
Expected: '"12,345,678.90"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12,345,678.90"', got '"12345,678.90"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1501" name="function-formatNumber.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="423542053" result="Passed" start-time="2023-09-17T20:30:29.6632559Z" end-time="2023-09-17T20:30:29.6633656Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(123412345678.9, &quot;9,9,99.99&quot;)';&#xA; result: &quot;123412345,6,78.90&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(123412345678.9, "9,9,99.99")'
Result: '"123412345,6,78.90"'
Expected: '"123412345,6,78.90"'
]]></output>
                </test-case>
                <test-case id="0-1502" name="function-formatNumber.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="115410647" result="Passed" start-time="2023-09-17T20:30:29.6633747Z" end-time="2023-09-17T20:30:29.6634533Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.56789, &quot;9,999.999,999&quot;)';&#xA; result: &quot;1,234.567,890&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.56789, "9,999.999,999")'
Result: '"1,234.567,890"'
Expected: '"1,234.567,890"'
]]></output>
                </test-case>
                <test-case id="0-1503" name="function-formatNumber.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="893015589" result="Passed" start-time="2023-09-17T20:30:29.6634615Z" end-time="2023-09-17T20:30:29.6636861Z" duration="0.000225" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(123.9, &quot;9999&quot;)';&#xA; result: &quot;0124&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(123.9, "9999")'
Result: '"0124"'
Expected: '"0124"'
]]></output>
                </test-case>
                <test-case id="0-1504" name="function-formatNumber.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1227373008" result="Passed" start-time="2023-09-17T20:30:29.6636953Z" end-time="2023-09-17T20:30:29.6641449Z" duration="0.000450" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.14, &quot;01%&quot;)';&#xA; result: &quot;14%&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.14, "01%")'
Result: '"14%"'
Expected: '"14%"'
]]></output>
                </test-case>
                <test-case id="0-1505" name="function-formatNumber.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="835186449" result="Passed" start-time="2023-09-17T20:30:29.6642664Z" end-time="2023-09-17T20:30:29.6646252Z" duration="0.000359" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.4857,&quot;###.###‰&quot;)';&#xA; result: &quot;485.7‰&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.4857,"###.###‰")'
Result: '"485.7‰"'
Expected: '"485.7‰"'
]]></output>
                </test-case>
                <test-case id="0-1506" name="function-formatNumber.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="582013861" result="Failed" start-time="2023-09-17T20:30:29.6647101Z" end-time="2023-09-17T20:30:29.6660551Z" duration="0.001345" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.14, &quot;###pm&quot;, {&quot;per-mille&quot;: &quot;pm&quot;})';&#xA; result: &quot;140pm&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"140pm"', got '"pm"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.14, "###pm", {"per-mille": "pm"})'
Result: '"pm"'
Expected: '"140pm"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"140pm"', got '"pm"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1507" name="function-formatNumber.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1990794425" result="Passed" start-time="2023-09-17T20:30:29.6660953Z" end-time="2023-09-17T20:30:29.6662225Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(-6, &quot;000&quot;)';&#xA; result: &quot;-006&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(-6, "000")'
Result: '"-006"'
Expected: '"-006"'
]]></output>
                </test-case>
                <test-case id="0-1508" name="function-formatNumber.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2093815574" result="Passed" start-time="2023-09-17T20:30:29.6662321Z" end-time="2023-09-17T20:30:29.6663126Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;00.000e0&quot;)';&#xA; result: &quot;12.346e2&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "00.000e0")'
Result: '"12.346e2"'
Expected: '"12.346e2"'
]]></output>
                </test-case>
                <test-case id="0-1509" name="function-formatNumber.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="576147602" result="Passed" start-time="2023-09-17T20:30:29.6663208Z" end-time="2023-09-17T20:30:29.6663880Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;00.000e000&quot;)';&#xA; result: &quot;12.346e002&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "00.000e000")'
Result: '"12.346e002"'
Expected: '"12.346e002"'
]]></output>
                </test-case>
                <test-case id="0-1510" name="function-formatNumber.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1672246199" result="Failed" start-time="2023-09-17T20:30:29.6663959Z" end-time="2023-09-17T20:30:29.6675821Z" duration="0.001186" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;①①.①①①e①&quot;, {&quot;zero-digit&quot;: &quot;⑟&quot;})';&#xA; result: &quot;①②.③④⑥e②&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"①②.③④⑥e②"', got '"①①1235①①①e①"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "①①.①①①e①", {"zero-digit": "⑟"})'
Result: '"①①1235①①①e①"'
Expected: '"①②.③④⑥e②"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"①②.③④⑥e②"', got '"①①1235①①①e①"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1511" name="function-formatNumber.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2060850901" result="Passed" start-time="2023-09-17T20:30:29.6675996Z" end-time="2023-09-17T20:30:29.6677021Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;0.0e0&quot;)';&#xA; result: &quot;2.3e-1&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.234, "0.0e0")'
Result: '"2.3e-1"'
Expected: '"2.3e-1"'
]]></output>
                </test-case>
                <test-case id="0-1512" name="function-formatNumber.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2132866492" result="Failed" start-time="2023-09-17T20:30:29.6677110Z" end-time="2023-09-17T20:30:29.6683095Z" duration="0.000599" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;#.00e0&quot;)';&#xA; result: &quot;0.23e0&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"0.23e0"', got '"2.34e-1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.234, "#.00e0")'
Result: '"2.34e-1"'
Expected: '"0.23e0"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"0.23e0"', got '"2.34e-1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1513" name="function-formatNumber.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1986817033" result="Failed" start-time="2023-09-17T20:30:29.6683230Z" end-time="2023-09-17T20:30:29.6691178Z" duration="0.000795" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.123, &quot;#.e9&quot;)';&#xA; result: &quot;0.1e0&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"0.1e0"', got '"1e-1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.123, "#.e9")'
Result: '"1e-1"'
Expected: '"0.1e0"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"0.1e0"', got '"1e-1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1514" name="function-formatNumber.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1837827279" result="Passed" start-time="2023-09-17T20:30:29.6696298Z" end-time="2023-09-17T20:30:29.6697521Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;.00e0&quot;)';&#xA; result: &quot;.23e0&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.234, ".00e0")'
Result: '".23e0"'
Expected: '".23e0"'
]]></output>
                </test-case>
                <test-case id="0-1515" name="function-formatNumber.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1710844984" result="Passed" start-time="2023-09-17T20:30:29.6697620Z" end-time="2023-09-17T20:30:29.6698555Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2392.14*(-36.58), &quot;000,000.000###;###,###.000###&quot;)';&#xA; result: &quot;87,504.4812&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2392.14*(-36.58), "000,000.000###;###,###.000###")'
Result: '"87,504.4812"'
Expected: '"87,504.4812"'
]]></output>
                </test-case>
                <test-case id="0-1516" name="function-formatNumber.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="769592569" result="Passed" start-time="2023-09-17T20:30:29.6698642Z" end-time="2023-09-17T20:30:29.6714403Z" duration="0.001576" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2.14*86.58,&quot;PREFIX##00.000###SUFFIX&quot;)';&#xA; result: &quot;PREFIX185.2812SUFFIX&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2.14*86.58,"PREFIX##00.000###SUFFIX")'
Result: '"PREFIX185.2812SUFFIX"'
Expected: '"PREFIX185.2812SUFFIX"'
]]></output>
                </test-case>
                <test-case id="0-1517" name="function-formatNumber.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="368729264" result="Failed" start-time="2023-09-17T20:30:29.6714553Z" end-time="2023-09-17T20:30:29.6730043Z" duration="0.001549" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1E20,&quot;#,######&quot;)';&#xA; result: &quot;100,000000,000000,000000&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"100,000000,000000,000000"', got '"100000000000000,000000"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(1E20,"#,######")'
Result: '"100000000000000,000000"'
Expected: '"100,000000,000000,000000"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"100,000000,000000,000000"', got '"100000000000000,000000"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1518" name="function-formatNumber.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="776725844" result="Failed" start-time="2023-09-17T20:30:29.6730978Z" end-time="2023-09-17T20:30:29.6744469Z" duration="0.001349" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#;#;#&quot;)';&#xA; result: error D3080" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3080 (), got '"20"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#;#;#")'
Result: '"20"'
Expected error D3080
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3080 (), got '"20"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1519" name="function-formatNumber.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="836344177" result="Failed" start-time="2023-09-17T20:30:29.6754657Z" end-time="2023-09-17T20:30:29.6763869Z" duration="0.000921" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#.0.0&quot;)';&#xA; result: error D3081" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3081 (), got '"20.00"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#.0.0")'
Result: '"20.00"'
Expected error D3081
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3081 (), got '"20.00"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1520" name="function-formatNumber.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="875077183" result="Failed" start-time="2023-09-17T20:30:29.6764058Z" end-time="2023-09-17T20:30:29.6773193Z" duration="0.000914" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0%%&quot;)';&#xA; result: error D3082" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3082 (), got '"200000%%"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0%%")'
Result: '"200000%%"'
Expected error D3082
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3082 (), got '"200000%%"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1521" name="function-formatNumber.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2039809632" result="Failed" start-time="2023-09-17T20:30:29.6773350Z" end-time="2023-09-17T20:30:29.6781171Z" duration="0.000782" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0‰‰&quot;)';&#xA; result: error D3083" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3083 (), got '"20000000‰‰"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0‰‰")'
Result: '"20000000‰‰"'
Expected error D3083
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3083 (), got '"20000000‰‰"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1522" name="function-formatNumber.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="775169184" result="Failed" start-time="2023-09-17T20:30:29.6781323Z" end-time="2023-09-17T20:30:29.6789040Z" duration="0.000772" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0%‰&quot;)';&#xA; result: error D3084" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3084 (), got '"2000000%‰"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0%‰")'
Result: '"2000000%‰"'
Expected error D3084
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3084 (), got '"2000000%‰"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1523" name="function-formatNumber.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="767146017" result="Failed" start-time="2023-09-17T20:30:29.6789305Z" end-time="2023-09-17T20:30:29.6798201Z" duration="0.000890" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;.e0&quot;)';&#xA; result: error D3085" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3085 (), got '"e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,".e0")'
Result: '"e0"'
Expected error D3085
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3085 (), got '"e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1524" name="function-formatNumber.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1287273823" result="Failed" start-time="2023-09-17T20:30:29.6798360Z" end-time="2023-09-17T20:30:29.6811866Z" duration="0.001351" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0+.e0&quot;)';&#xA; result: error D3086" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3086 (), got '"2+e1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0+.e0")'
Result: '"2+e1"'
Expected error D3086
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3086 (), got '"2+e1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1525" name="function-formatNumber.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="608784152" result="Failed" start-time="2023-09-17T20:30:29.6812044Z" end-time="2023-09-17T20:30:29.6826697Z" duration="0.001466" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,.e0&quot;)';&#xA; result: error D3087" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3087 (), got '"2,e1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,.e0")'
Result: '"2,e1"'
Expected error D3087
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3087 (), got '"2,e1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1526" name="function-formatNumber.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="962980100" result="Failed" start-time="2023-09-17T20:30:29.6828770Z" end-time="2023-09-17T20:30:29.6837367Z" duration="0.000860" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,&quot;)';&#xA; result: error D3088" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3088 (), got '"20,"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,")'
Result: '"20,"'
Expected error D3088
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3088 (), got '"20,"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1527" name="function-formatNumber.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="532856704" result="Failed" start-time="2023-09-17T20:30:29.6838234Z" end-time="2023-09-17T20:30:29.6846110Z" duration="0.000788" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,,0&quot;)';&#xA; result: error D3089" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3089 (), got '"2,,0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,,0")'
Result: '"2,,0"'
Expected error D3089
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3089 (), got '"2,,0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1528" name="function-formatNumber.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1171194633" result="Failed" start-time="2023-09-17T20:30:29.6846263Z" end-time="2023-09-17T20:30:29.6853599Z" duration="0.000734" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0#.e0&quot;)';&#xA; result: error D3090" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3090 (), got '"20e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0#.e0")'
Result: '"20e0"'
Expected error D3090
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3090 (), got '"20e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1529" name="function-formatNumber.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="906620904" result="Failed" start-time="2023-09-17T20:30:29.6853751Z" end-time="2023-09-17T20:30:29.6861767Z" duration="0.000802" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.#0e0&quot;)';&#xA; result: error D3091" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3091 (), got '"20.00e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.#0e0")'
Result: '"20.00e0"'
Expected error D3091
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3091 (), got '"20.00e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1530" name="function-formatNumber.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1915173962" result="Failed" start-time="2023-09-17T20:30:29.6861909Z" end-time="2023-09-17T20:30:29.6869558Z" duration="0.000765" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.0e0%&quot;)';&#xA; result: error D3092" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3092 (), got '"20.0e2%"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.0e0%")'
Result: '"20.0e2%"'
Expected error D3092
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3092 (), got '"20.0e2%"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1531" name="function-formatNumber.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1074869576" result="Failed" start-time="2023-09-17T20:30:29.6869775Z" end-time="2023-09-17T20:30:29.6886940Z" duration="0.001716" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.0e0,0&quot;)';&#xA; result: error D3093" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3093 (), got '"20.0e0,0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.0e0,0")'
Result: '"20.0e0,0"'
Expected error D3093
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3093 (), got '"20.0e0,0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1532" name="function-formatNumber.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1436423787" result="Passed" start-time="2023-09-17T20:30:29.6887103Z" end-time="2023-09-17T20:30:29.6888977Z" duration="0.000188" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2, '000.000')';&#xA; result: &quot;002.000&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2, '000.000')'
Result: '"002.000"'
Expected: '"002.000"'
]]></output>
                </test-case>
                <test-case id="0-1533" name="function-formatNumber.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1891444720" result="Failed" start-time="2023-09-17T20:30:29.6889081Z" end-time="2023-09-17T20:30:29.6901106Z" duration="0.001203" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2, 'AAA.AAA', {'zero-digit': 'A'})';&#xA; result: &quot;AAC.AAA&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"AAC.AAA"', got '"AAA2AAA"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(2, 'AAA.AAA', {'zero-digit': 'A'})'
Result: '"AAA2AAA"'
Expected: '"AAC.AAA"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"AAC.AAA"', got '"AAA2AAA"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1534" name="function-formatNumber.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="943026823" result="Failed" start-time="2023-09-17T20:30:29.6906126Z" end-time="2023-09-17T20:30:29.6916380Z" duration="0.001025" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.1, 'AeAAA', {'zero-digit': 'A'})';&#xA; result: &quot;Be-AAB&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Be-AAB"', got '"AeAAA"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.1, 'AeAAA', {'zero-digit': 'A'})'
Result: '"AeAAA"'
Expected: '"Be-AAB"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Be-AAB"', got '"AeAAA"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1535" name="function-formatNumber.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1173560235" result="Passed" start-time="2023-09-17T20:30:29.6917449Z" end-time="2023-09-17T20:30:29.6918418Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(foo, '#0.00')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(foo, '#0.00')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1536" name="function-fromMillis.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2059877025" result="Failed" start-time="2023-09-17T20:30:29.6918842Z" end-time="2023-09-17T20:30:29.6991004Z" duration="0.007217" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1)';&#xA; result: &quot;1970-01-01T00:00:00.001Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1970-01-01T00:00:00.001Z"', got '"1970-01-01T00:00:00.001+00:00"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$fromMillis(1)'
Result: '"1970-01-01T00:00:00.001+00:00"'
Expected: '"1970-01-01T00:00:00.001Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1970-01-01T00:00:00.001Z"', got '"1970-01-01T00:00:00.001+00:00"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1537" name="function-fromMillis.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="234425607" result="Failed" start-time="2023-09-17T20:30:29.6991352Z" end-time="2023-09-17T20:30:29.7004657Z" duration="0.001330" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1509380732935)';&#xA; result: &quot;2017-10-30T16:25:32.935Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2017-10-30T16:25:32.935Z"', got '"2017-10-30T16:25:32.935+00:00"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$fromMillis(1509380732935)'
Result: '"2017-10-30T16:25:32.935+00:00"'
Expected: '"2017-10-30T16:25:32.935Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2017-10-30T16:25:32.935Z"', got '"2017-10-30T16:25:32.935+00:00"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1538" name="function-fromMillis.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="188564243" result="Passed" start-time="2023-09-17T20:30:29.7007553Z" end-time="2023-09-17T20:30:29.7011166Z" duration="0.000361" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(foo)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$fromMillis(foo)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1539" name="function-fromMillis.formatDateTime[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1896962688" result="Passed" start-time="2023-09-17T20:30:29.7016563Z" end-time="2023-09-17T20:30:29.7020104Z" duration="0.000354" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(undefined, 'undefined')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Description: 'should return nothing'
Expr is '$fromMillis(undefined, 'undefined')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1540" name="function-fromMillis.formatDateTime[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1465211919" result="Failed" start-time="2023-09-17T20:30:29.7024701Z" end-time="2023-09-17T20:30:29.7043720Z" duration="0.001902" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Hello')';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Hello"', got '"10ello"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, 'Hello')'
Result: '"10ello"'
Expected: '"Hello"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Hello"', got '"10ello"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1541" name="function-fromMillis.formatDateTime[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1794943301" result="Failed" start-time="2023-09-17T20:30:29.7054390Z" end-time="2023-09-17T20:30:29.7092599Z" duration="0.003734" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: [Y0001]')';&#xA; result: &quot;Year: 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Year: 2018"', got '"Year: [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year'
Expr is '$fromMillis(1521801216617, 'Year: [Y0001]')'
Result: '"Year: [Y0001]"'
Expected: '"Year: 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Year: 2018"', got '"Year: [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1542" name="function-fromMillis.formatDateTime[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="182264596" result="Failed" start-time="2023-09-17T20:30:29.7132443Z" end-time="2023-09-17T20:30:29.7147343Z" duration="0.001489" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: &lt;[Y0001]&gt;')';&#xA; result: &quot;Year: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Year: <2018>"', got '"Year: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year'
Expr is '$fromMillis(1521801216617, 'Year: <[Y0001]>')'
Result: '"Year: <[Y0001]>"'
Expected: '"Year: <2018>"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Year: <2018>"', got '"Year: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1543" name="function-fromMillis.formatDateTime[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2063521558" result="Failed" start-time="2023-09-17T20:30:29.7176613Z" end-time="2023-09-17T20:30:29.7189923Z" duration="0.001330" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: &lt;[Y9,999,*]&gt;')';&#xA; result: &quot;Year: &lt;2,018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Year: <2,018>"', got '"Year: <[Y9,999,*]>"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year with grouping separator'
Expr is '$fromMillis(1521801216617, 'Year: <[Y9,999,*]>')'
Result: '"Year: <[Y9,999,*]>"'
Expected: '"Year: <2,018>"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Year: <2,018>"', got '"Year: <[Y9,999,*]>"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1544" name="function-fromMillis.formatDateTime[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="103760474" result="Failed" start-time="2023-09-17T20:30:29.7236800Z" end-time="2023-09-17T20:30:29.7253060Z" duration="0.001626" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[[Year: &lt;[Y0001]&gt;')';&#xA; result: &quot;[Year: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"[Year: <2018>"', got '"[[Year: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle opening square bracket literal'
Expr is '$fromMillis(1521801216617, '[[Year: <[Y0001]>')'
Result: '"[[Year: <[Y0001]>"'
Expected: '"[Year: <2018>"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"[Year: <2018>"', got '"[[Year: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1545" name="function-fromMillis.formatDateTime[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="766762342" result="Failed" start-time="2023-09-17T20:30:29.7305899Z" end-time="2023-09-17T20:30:29.7319819Z" duration="0.001391" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year]]: &lt;[Y0001]&gt;')';&#xA; result: &quot;Year]: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Year]: <2018>"', got '"Year]]: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle closing square bracket literal'
Expr is '$fromMillis(1521801216617, 'Year]]: <[Y0001]>')'
Result: '"Year]]: <[Y0001]>"'
Expected: '"Year]: <2018>"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Year]: <2018>"', got '"Year]]: <[Y0001]>"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1546" name="function-fromMillis.formatDateTime[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1561239662" result="Failed" start-time="2023-09-17T20:30:29.7343629Z" end-time="2023-09-17T20:30:29.7360883Z" duration="0.001725" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[[Year]]: [[[Y0001]]]')';&#xA; result: &quot;[Year]: [2018]&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"[Year]: [2018]"', got '"[[Year]]: [[[Y0001]]]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle opening and closing square bracket literal'
Expr is '$fromMillis(1521801216617, '[[Year]]: [[[Y0001]]]')'
Result: '"[[Year]]: [[[Y0001]]]"'
Expected: '"[Year]: [2018]"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"[Year]: [2018]"', got '"[[Year]]: [[[Y0001]]]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1547" name="function-fromMillis.formatDateTime[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1299281294" result="Failed" start-time="2023-09-17T20:30:29.7395262Z" end-time="2023-09-17T20:30:29.7422032Z" duration="0.002677" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1]/[M#1]/[Y0001]')';&#xA; result: &quot;23/3/2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/3/2018"', got '"[D#1].[3#1].[Y0001]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date in European style'
Expr is '$fromMillis(1521801216617, '[D#1]/[M#1]/[Y0001]')'
Result: '"[D#1].[3#1].[Y0001]"'
Expected: '"23/3/2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/3/2018"', got '"[D#1].[3#1].[Y0001]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1548" name="function-fromMillis.formatDateTime[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2012893349" result="Failed" start-time="2023-09-17T20:30:29.7429648Z" end-time="2023-09-17T20:30:29.7445590Z" duration="0.001599" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1522616700000, '[F0] [FNn]')';&#xA; result: &quot;7 Sunday&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"7 Sunday"', got '"[0] [Nn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday should be day 7'
Expr is '$fromMillis(1522616700000, '[F0] [FNn]')'
Result: '"[0] [Nn]"'
Expected: '"7 Sunday"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"7 Sunday"', got '"[0] [Nn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1549" name="function-fromMillis.formatDateTime[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="672900106" result="Failed" start-time="2023-09-17T20:30:29.7455011Z" end-time="2023-09-17T20:30:29.7466680Z" duration="0.001167" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1522703100000, '[F0] [FNn]')';&#xA; result: &quot;1 Monday&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1 Monday"', got '"[0] [Nn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Monday should be day 1'
Expr is '$fromMillis(1522703100000, '[F0] [FNn]')'
Result: '"[0] [Nn]"'
Expected: '"1 Monday"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1 Monday"', got '"[0] [Nn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1550" name="function-fromMillis.formatDateTime[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="635874109" result="Failed" start-time="2023-09-17T20:30:29.7500317Z" end-time="2023-09-17T20:30:29.7509398Z" duration="0.000907" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y0001]-[M01]-[D01]')';&#xA; result: &quot;2018-03-23&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-03-23"', got '"[Y0001]-[301]-[D01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date in ISO 8601 style'
Expr is '$fromMillis(1521801216617, '[Y0001]-[M01]-[D01]')'
Result: '"[Y0001]-[301]-[D01]"'
Expected: '"2018-03-23"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-03-23"', got '"[Y0001]-[301]-[D01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1551" name="function-fromMillis.formatDateTime[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1308561978" result="Failed" start-time="2023-09-17T20:30:29.7528207Z" end-time="2023-09-17T20:30:29.7543528Z" duration="0.001532" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]')';&#xA; result: &quot;03/23/2018 at 10:33:36&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"03/23/2018 at 10:33:36"', got '"[301].[D01].[Y0001] a [1001]:[3301]:[3601]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date & time in US style'
Expr is '$fromMillis(1521801216617, '[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]')'
Result: '"[301].[D01].[Y0001] a [1001]:[3301]:[3601]"'
Expected: '"03/23/2018 at 10:33:36"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"03/23/2018 at 10:33:36"', got '"[301].[D01].[Y0001] a [1001]:[3301]:[3601]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1552" name="function-fromMillis.formatDateTime[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1923948579" result="Failed" start-time="2023-09-17T20:30:29.7562613Z" end-time="2023-09-17T20:30:29.7577851Z" duration="0.001524" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z01:01t]')';&#xA; result: &quot;2018-03-23T10:33:36.617Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-03-23T10:33:36.617Z"', got '"[Y]-[301]-[D01]T[1001]:[33]:[36].[6001][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date & time in ISO 8601 style'
Expr is '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z01:01t]')'
Result: '"[Y]-[301]-[D01]T[1001]:[33]:[36].[6001][Z01:01]"'
Expected: '"2018-03-23T10:33:36.617Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-03-23T10:33:36.617Z"', got '"[Y]-[301]-[D01]T[1001]:[33]:[36].[6001][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1553" name="function-fromMillis.formatDateTime[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1527976477" result="Failed" start-time="2023-09-17T20:30:29.7587458Z" end-time="2023-09-17T20:30:29.7600352Z" duration="0.001289" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[ M01]-[D 01]T[H01 ]:[ m   ]:[s].[f0  01][Z01:&#xA; 01t]')';&#xA; result: &quot;2018-03-23T10:33:36.617Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-03-23T10:33:36.617Z"', got '"[Y]-[ 301]-[D 01]T[1001 ]:[ 33   ]:[36].[60  01][Z01:\n 01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should ignore whitespace in variable markers'
Expr is '$fromMillis(1521801216617, '[Y]-[ M01]-[D 01]T[H01 ]:[ m   ]:[s].[f0  01][Z01:
 01t]')'
Result: '"[Y]-[ 301]-[D 01]T[1001 ]:[ 33   ]:[36].[60  01][Z01:\n 01]"'
Expected: '"2018-03-23T10:33:36.617Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-03-23T10:33:36.617Z"', got '"[Y]-[ 301]-[D 01]T[1001 ]:[ 33   ]:[36].[60  01][Z01:\n 01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1554" name="function-fromMillis.formatDateTime[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1885515800" result="Failed" start-time="2023-09-17T20:30:29.7622750Z" end-time="2023-09-17T20:30:29.7632132Z" duration="0.000938" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0100')';&#xA; result: &quot;2018-03-23T13:33:36.617+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-03-23T13:33:36.617+03:00"', got '"[Y]-[301]-[D01]T[1101]:[33]:[36].[6001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for BST +0100'
Expr is '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0100')'
Result: '"[Y]-[301]-[D01]T[1101]:[33]:[36].[6001][Z0101]"'
Expected: '"2018-03-23T13:33:36.617+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-03-23T13:33:36.617+03:00"', got '"[Y]-[301]-[D01]T[1101]:[33]:[36].[6001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1555" name="function-fromMillis.formatDateTime[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="328787209" result="Failed" start-time="2023-09-17T20:30:29.7632397Z" end-time="2023-09-17T20:30:29.7639340Z" duration="0.000694" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01]')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01]')'
Result: '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
Expected: '"2018-07-11T15:00:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1556" name="function-fromMillis.formatDateTime[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1795856516" result="Failed" start-time="2023-09-17T20:30:29.7646690Z" end-time="2023-09-17T20:30:29.7657804Z" duration="0.001111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01t]')';&#xA; result: &quot;2018-07-11T12:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T12:00:00Z"', got '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for Z'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01t]')'
Result: '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
Expected: '"2018-07-11T12:00:00Z"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T12:00:00Z"', got '"[Y]-[701]-[D01]T[1201]:[0]:[0][Z01:01]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1557" name="function-fromMillis.formatDateTime[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1495748277" result="Failed" start-time="2023-09-17T20:30:29.7658070Z" end-time="2023-09-17T20:30:29.7665123Z" duration="0.000705" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '-0500')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][Z]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '-0500')'
Result: '"[Y]-[701]-[D01]T[701]:[0]:[0][Z]"'
Expected: '"2018-07-11T15:00:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][Z]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1558" name="function-fromMillis.formatDateTime[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1753225413" result="Failed" start-time="2023-09-17T20:30:29.7665375Z" end-time="2023-09-17T20:30:29.7674725Z" duration="0.000935" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '-0500')';&#xA; result: &quot;2018-07-11T07:00:00-5&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T07:00:00-5"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '-0500')'
Result: '"[Y]-[701]-[D01]T[701]:[0]:[0][Z0]"'
Expected: '"2018-07-11T07:00:00-5"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T07:00:00-5"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1559" name="function-fromMillis.formatDateTime[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="618588856" result="Failed" start-time="2023-09-17T20:30:29.7674969Z" end-time="2023-09-17T20:30:29.7685619Z" duration="0.001065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '+1000')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '+1000')'
Result: '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z]"'
Expected: '"2018-07-11T15:00:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1560" name="function-fromMillis.formatDateTime[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2019689996" result="Failed" start-time="2023-09-17T20:30:29.7691353Z" end-time="2023-09-17T20:30:29.7701599Z" duration="0.001025" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+1000')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+1000')'
Result: '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z0]"'
Expected: '"2018-07-11T15:00:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T15:00:00+03:00"', got '"[Y]-[701]-[D01]T[2201]:[0]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1561" name="function-fromMillis.formatDateTime[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="49157157" result="Failed" start-time="2023-09-17T20:30:29.7702220Z" end-time="2023-09-17T20:30:29.7722459Z" duration="0.002024" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+0530')';&#xA; result: &quot;2018-07-11T17:30:00+5:30&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T17:30:00+5:30"', got '"[Y]-[701]-[D01]T[1701]:[30]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+0530')'
Result: '"[Y]-[701]-[D01]T[1701]:[30]:[0][Z0]"'
Expected: '"2018-07-11T17:30:00+5:30"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T17:30:00+5:30"', got '"[Y]-[701]-[D01]T[1701]:[30]:[0][Z0]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1562" name="function-fromMillis.formatDateTime[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="819599792" result="Failed" start-time="2023-09-17T20:30:29.7722729Z" end-time="2023-09-17T20:30:29.7730083Z" duration="0.000736" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][z]', '-0500')';&#xA; result: &quot;2018-07-11T07:00:00GMT-05:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2018-07-11T07:00:00GMT-05:00"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][-5]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][z]', '-0500')'
Result: '"[Y]-[701]-[D01]T[701]:[0]:[0][-5]"'
Expected: '"2018-07-11T07:00:00GMT-05:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2018-07-11T07:00:00GMT-05:00"', got '"[Y]-[701]-[D01]T[701]:[0]:[0][-5]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1563" name="function-fromMillis.formatDateTime[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1187194670" result="Failed" start-time="2023-09-17T20:30:29.7732183Z" end-time="2023-09-17T20:30:29.7741184Z" duration="0.000900" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1204405500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')';&#xA; result: &quot;2008-03-02T00:05:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2008-03-02T00:05:00+03:00"', got '"[Y]-[301]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should rollover day boundaries'
Expr is '$fromMillis(1204405500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')'
Result: '"[Y]-[301]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
Expected: '"2008-03-02T00:05:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2008-03-02T00:05:00+03:00"', got '"[Y]-[301]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1564" name="function-fromMillis.formatDateTime[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="808457287" result="Failed" start-time="2023-09-17T20:30:29.7743020Z" end-time="2023-09-17T20:30:29.7756065Z" duration="0.001304" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')';&#xA; result: &quot;2009-01-01T00:05:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"2009-01-01T00:05:00+03:00"', got '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should rollover year boundaries'
Expr is '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')'
Result: '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
Expected: '"2009-01-01T00:05:00+03:00"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"2009-01-01T00:05:00+03:00"', got '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z0101]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1565" name="function-fromMillis.formatDateTime[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="597376623" result="Failed" start-time="2023-09-17T20:30:29.7756361Z" end-time="2023-09-17T20:30:29.7764146Z" duration="0.000779" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z010101t]', '+0530')';&#xA; result: error D3134" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3134 (), got '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z010101]"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'picture string has 6 digit timezone - error'
Expr is '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z010101t]', '+0530')'
Result: '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z010101]"'
Expected error D3134
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3134 (), got '"[Y]-[101]-[D01]T[201]:[35]:[0].[0001][Z010101]"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1566" name="function-fromMillis.formatDateTime[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="624427114" result="Failed" start-time="2023-09-17T20:30:29.7764372Z" end-time="2023-09-17T20:30:29.7772820Z" duration="0.000845" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y,2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y,2]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y,2]')'
Result: '"[D#1,2].[31,2].[Y,2]"'
Expected: '"23/03/18"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y,2]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1567" name="function-fromMillis.formatDateTime[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="241421772" result="Failed" start-time="2023-09-17T20:30:29.7773159Z" end-time="2023-09-17T20:30:29.7781005Z" duration="0.000785" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2]')';&#xA; result: &quot;23/03/2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/03/2018"', got '"[D#1,2].[31,2].[Y0001,2]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2]')'
Result: '"[D#1,2].[31,2].[Y0001,2]"'
Expected: '"23/03/2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/03/2018"', got '"[D#1,2].[31,2].[Y0001,2]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1568" name="function-fromMillis.formatDateTime[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1043790210" result="Failed" start-time="2023-09-17T20:30:29.7781258Z" end-time="2023-09-17T20:30:29.7791481Z" duration="0.001022" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y##01,2-2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y##01,2-2]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'width modifier should override pattern'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y##01,2-2]')'
Result: '"[D#1,2].[31,2].[Y##01,2-2]"'
Expected: '"23/03/18"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y##01,2-2]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1569" name="function-fromMillis.formatDateTime[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="664267044" result="Failed" start-time="2023-09-17T20:30:29.7792827Z" end-time="2023-09-17T20:30:29.7799335Z" duration="0.000651" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2-2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y0001,2-2]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'width modifier should override pattern'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2-2]')'
Result: '"[D#1,2].[31,2].[Y0001,2-2]"'
Expected: '"23/03/18"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23/03/18"', got '"[D#1,2].[31,2].[Y0001,2-2]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1570" name="function-fromMillis.formatDateTime[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1798451606" result="Failed" start-time="2023-09-17T20:30:29.7799896Z" end-time="2023-09-17T20:30:29.7809486Z" duration="0.000959" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1] [M01] [YI]')';&#xA; result: &quot;23 03 MMXVIII&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23 03 MMXVIII"', got '"[D1] [301] [YI]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'year in roman numerals'
Expr is '$fromMillis(1521801216617, '[D1] [M01] [YI]')'
Result: '"[D1] [301] [YI]"'
Expected: '"23 03 MMXVIII"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23 03 MMXVIII"', got '"[D1] [301] [YI]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1571" name="function-fromMillis.formatDateTime[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="535166962" result="Failed" start-time="2023-09-17T20:30:29.7813158Z" end-time="2023-09-17T20:30:29.7824055Z" duration="0.001090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Da] [MA] [Yi]')';&#xA; result: &quot;w C mmxviii&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"w C mmxviii"', got '"[Da] [3A] [Yi]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$fromMillis(1521801216617, '[Da] [MA] [Yi]')'
Result: '"[Da] [3A] [Yi]"'
Expected: '"w C mmxviii"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"w C mmxviii"', got '"[Da] [3A] [Yi]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1572" name="function-fromMillis.formatDateTime[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="180165021" result="Failed" start-time="2023-09-17T20:30:29.7824897Z" end-time="2023-09-17T20:30:29.7833131Z" duration="0.000823" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [M01] [Y]')';&#xA; result: &quot;23rd 03 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23rd 03 2018"', got '"[D1o] [301] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day in ordinal numerals'
Expr is '$fromMillis(1521801216617, '[D1o] [M01] [Y]')'
Result: '"[D1o] [301] [Y]"'
Expected: '"23rd 03 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23rd 03 2018"', got '"[D1o] [301] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1573" name="function-fromMillis.formatDateTime[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1027246803" result="Failed" start-time="2023-09-17T20:30:29.7834591Z" end-time="2023-09-17T20:30:29.7842436Z" duration="0.000784" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Yw]')';&#xA; result: &quot;two thousand and eighteen&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"two thousand and eighteen"', got '"[Yw]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'year in words'
Expr is '$fromMillis(1521801216617, '[Yw]')'
Result: '"[Yw]"'
Expected: '"two thousand and eighteen"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"two thousand and eighteen"', got '"[Yw]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1574" name="function-fromMillis.formatDateTime[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1518615905" result="Failed" start-time="2023-09-17T20:30:29.7845892Z" end-time="2023-09-17T20:30:29.7853648Z" duration="0.000776" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Dwo] [M01] [Y]')';&#xA; result: &quot;twenty-third 03 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"twenty-third 03 2018"', got '"[Dwo] [301] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day of month in ordinal words'
Expr is '$fromMillis(1521801216617, '[Dwo] [M01] [Y]')'
Result: '"[Dwo] [301] [Y]"'
Expected: '"twenty-third 03 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"twenty-third 03 2018"', got '"[Dwo] [301] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1575" name="function-fromMillis.formatDateTime[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1227617529" result="Failed" start-time="2023-09-17T20:30:29.7855336Z" end-time="2023-09-17T20:30:29.7863410Z" duration="0.000807" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [MNn] [Y]')';&#xA; result: &quot;23rd March 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23rd March 2018"', got '"[D1o] [3Nn] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'month in words'
Expr is '$fromMillis(1521801216617, '[D1o] [MNn] [Y]')'
Result: '"[D1o] [3Nn] [Y]"'
Expected: '"23rd March 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23rd March 2018"', got '"[D1o] [3Nn] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1576" name="function-fromMillis.formatDateTime[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1857545036" result="Failed" start-time="2023-09-17T20:30:29.7864356Z" end-time="2023-09-17T20:30:29.7881333Z" duration="0.001698" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [MN] [Y]')';&#xA; result: &quot;23rd MARCH 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"23rd MARCH 2018"', got '"[D1o] [3N] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'month in uppercase words'
Expr is '$fromMillis(1521801216617, '[D1o] [MN] [Y]')'
Result: '"[D1o] [3N] [Y]"'
Expected: '"23rd MARCH 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"23rd MARCH 2018"', got '"[D1o] [3N] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1577" name="function-fromMillis.formatDateTime[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="859131273" result="Failed" start-time="2023-09-17T20:30:29.7881521Z" end-time="2023-09-17T20:30:29.7888758Z" duration="0.000724" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn], [D1o] [MNn] [Y]')';&#xA; result: &quot;Friday, 23rd March 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Friday, 23rd March 2018"', got '"[6Nn], [D1o] [3Nn] [Y]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in words'
Expr is '$fromMillis(1521801216617, '[FNn], [D1o] [MNn] [Y]')'
Result: '"[6Nn], [D1o] [3Nn] [Y]"'
Expected: '"Friday, 23rd March 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Friday, 23rd March 2018"', got '"[6Nn], [D1o] [3Nn] [Y]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1578" name="function-fromMillis.formatDateTime[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="663385543" result="Failed" start-time="2023-09-17T20:30:29.7889209Z" end-time="2023-09-17T20:30:29.7899066Z" duration="0.000986" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn], the [Dwo] of [MNn] [Y] [E]')';&#xA; result: &quot;Friday, the twenty-third of March 2018 ISO&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Friday, the twenty-third of March 2018 ISO"', got '"[6Nn], 10e [Dwo] o6 [3Nn] [Y] [E]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/date/month in words'
Expr is '$fromMillis(1521801216617, '[FNn], the [Dwo] of [MNn] [Y] [E]')'
Result: '"[6Nn], 10e [Dwo] o6 [3Nn] [Y] [E]"'
Expected: '"Friday, the twenty-third of March 2018 ISO"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Friday, the twenty-third of March 2018 ISO"', got '"[6Nn], 10e [Dwo] o6 [3Nn] [Y] [E]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1579" name="function-fromMillis.formatDateTime[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="520511481" result="Failed" start-time="2023-09-17T20:30:29.7900744Z" end-time="2023-09-17T20:30:29.7915813Z" duration="0.001507" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn,3-3], [D1o] [MNn,3-3] [Y] [C]')';&#xA; result: &quot;Fri, 23rd Mar 2018 ISO&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Fri, 23rd Mar 2018 ISO"', got '"[6Nn,3-3], [D1o] [3Nn,3-3] [Y] [C]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'abbreviated day/month in words'
Expr is '$fromMillis(1521801216617, '[FNn,3-3], [D1o] [MNn,3-3] [Y] [C]')'
Result: '"[6Nn,3-3], [D1o] [3Nn,3-3] [Y] [C]"'
Expected: '"Fri, 23rd Mar 2018 ISO"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Fri, 23rd Mar 2018 ISO"', got '"[6Nn,3-3], [D1o] [3Nn,3-3] [Y] [C]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1580" name="function-fromMillis.formatDateTime[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1195028137" result="Failed" start-time="2023-09-17T20:30:29.7923323Z" end-time="2023-09-17T20:30:29.7933300Z" duration="0.000997" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;friday, 23/3/2018 10:33:36 am&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"friday, 23/3/2018 10:33:36 am"', got '"[6], [D].[3].[Y] [10]:[33]:[36] [P]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time'
Expr is '$fromMillis(1521801216617, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
Result: '"[6], [D].[3].[Y] [10]:[33]:[36] [P]"'
Expected: '"friday, 23/3/2018 10:33:36 am"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"friday, 23/3/2018 10:33:36 am"', got '"[6], [D].[3].[Y] [10]:[33]:[36] [P]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1581" name="function-fromMillis.formatDateTime[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1811182453" result="Failed" start-time="2023-09-17T20:30:29.7934512Z" end-time="2023-09-17T20:30:29.7945511Z" duration="0.001100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1204405500000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;saturday, 1/3/2008 9:05:00 pm&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"saturday, 1/3/2008 9:05:00 pm"', got '"[], [D].[3].[Y] [9]:[5]:[0] [P]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time 12hr pm'
Expr is '$fromMillis(1204405500000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
Result: '"[], [D].[3].[Y] [9]:[5]:[0] [P]"'
Expected: '"saturday, 1/3/2008 9:05:00 pm"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"saturday, 1/3/2008 9:05:00 pm"', got '"[], [D].[3].[Y] [9]:[5]:[0] [P]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1582" name="function-fromMillis.formatDateTime[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="667447002" result="Failed" start-time="2023-09-17T20:30:29.7949604Z" end-time="2023-09-17T20:30:29.7959087Z" duration="0.000948" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1199664000000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;monday, 7/1/2008 12:00:00 am&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"monday, 7/1/2008 12:00:00 am"', got '"[], [D].[1].[Y] [12]:[0]:[0] [P]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time 12hr midnight'
Expr is '$fromMillis(1199664000000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
Result: '"[], [D].[1].[Y] [12]:[0]:[0] [P]"'
Expected: '"monday, 7/1/2008 12:00:00 am"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"monday, 7/1/2008 12:00:00 am"', got '"[], [D].[1].[Y] [12]:[0]:[0] [P]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1583" name="function-fromMillis.formatDateTime[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="498294527" result="Failed" start-time="2023-09-17T20:30:29.7963118Z" end-time="2023-09-17T20:30:29.7971732Z" duration="0.000861" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, '[dwo] day of the year')';&#xA; result: &quot;first day of the year&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"first day of the year"', got '"[1wo] 1a18 o0 12e 18ear"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1st Jan should be day 1'
Expr is '$fromMillis(1514808000000, '[dwo] day of the year')'
Result: '"[1wo] 1a18 o0 12e 18ear"'
Expected: '"first day of the year"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"first day of the year"', got '"[1wo] 1a18 o0 12e 18ear"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1584" name="function-fromMillis.formatDateTime[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="270746795" result="Failed" start-time="2023-09-17T20:30:29.7972586Z" end-time="2023-09-17T20:30:29.7979593Z" duration="0.000700" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1546257600000, '[d] days in [Y0001]')';&#xA; result: &quot;365 days in 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"365 days in 2018"', got '"[31] 31a180 in [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '31st Dec should be day 365'
Expr is '$fromMillis(1546257600000, '[d] days in [Y0001]')'
Result: '"[31] 31a180 in [Y0001]"'
Expected: '"365 days in 2018"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"365 days in 2018"', got '"[31] 31a180 in [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1585" name="function-fromMillis.formatDateTime[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="606611984" result="Failed" start-time="2023-09-17T20:30:29.7983418Z" end-time="2023-09-17T20:30:29.7991847Z" duration="0.000843" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1483185600000, '[d] days in [Y0001]')';&#xA; result: &quot;366 days in 2016&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"366 days in 2016"', got '"[31] 31a160 in [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '31st Dec should be day 366 in a leap year'
Expr is '$fromMillis(1483185600000, '[d] days in [Y0001]')'
Result: '"[31] 31a160 in [Y0001]"'
Expected: '"366 days in 2016"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"366 days in 2016"', got '"[31] 31a160 in [Y0001]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1586" name="function-fromMillis.formatDateTime[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1298404644" result="Failed" start-time="2023-09-17T20:30:29.7996530Z" end-time="2023-09-17T20:30:29.8016683Z" duration="0.002015" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Monday 1st Jan should be in the first week of 2018'
Expr is '$fromMillis(1514808000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1587" name="function-fromMillis.formatDateTime[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2055930957" result="Failed" start-time="2023-09-17T20:30:29.8022120Z" end-time="2023-09-17T20:30:29.8030376Z" duration="0.000825" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1515326400000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday 7st Jan should be in the first week of 2018'
Expr is '$fromMillis(1515326400000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1588" name="function-fromMillis.formatDateTime[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="5928920" result="Failed" start-time="2023-09-17T20:30:29.8036041Z" end-time="2023-09-17T20:30:29.8047807Z" duration="0.001177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1545739200000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday 25th Dec should be in week 52 of 2018'
Expr is '$fromMillis(1545739200000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 52"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1589" name="function-fromMillis.formatDateTime[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="614239614" result="Failed" start-time="2023-09-17T20:30:29.8055879Z" end-time="2023-09-17T20:30:29.8069904Z" duration="0.001363" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1388577600000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Wed 1st Jan 2014 should be in week 1'
Expr is '$fromMillis(1388577600000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1590" name="function-fromMillis.formatDateTime[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1525187366" result="Failed" start-time="2023-09-17T20:30:29.8081921Z" end-time="2023-09-17T20:30:29.8101187Z" duration="0.001926" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419854400000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 29th Dec 2014 should be in week 1 of 2015'
Expr is '$fromMillis(1419854400000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1591" name="function-fromMillis.formatDateTime[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="564128748" result="Failed" start-time="2023-09-17T20:30:29.8101533Z" end-time="2023-09-17T20:30:29.8109492Z" duration="0.000796" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419768000000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 28th Dec 2014 should be in week 52 of 2014'
Expr is '$fromMillis(1419768000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 52"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1592" name="function-fromMillis.formatDateTime[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="628683841" result="Failed" start-time="2023-09-17T20:30:29.8109744Z" end-time="2023-09-17T20:30:29.8121327Z" duration="0.001158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419336000000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 23th Dec 2014 should be in week 52 of 2014'
Expr is '$fromMillis(1419336000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 52"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 52"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1593" name="function-fromMillis.formatDateTime[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1717459034" result="Failed" start-time="2023-09-17T20:30:29.8122234Z" end-time="2023-09-17T20:30:29.8132728Z" duration="0.001049" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1420113600000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 1st Jan 2015 should be in week 1 of 2015'
Expr is '$fromMillis(1420113600000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 1"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1594" name="function-fromMillis.formatDateTime[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2024756339" result="Failed" start-time="2023-09-17T20:30:29.8133001Z" end-time="2023-09-17T20:30:29.8144947Z" duration="0.001195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1420459200000, 'Week: [W]')';&#xA; result: &quot;Week: 2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 2"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 5th Jan 2015 should be in week 2 of 2015'
Expr is '$fromMillis(1420459200000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 2"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 2"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1595" name="function-fromMillis.formatDateTime[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1416054762" result="Failed" start-time="2023-09-17T20:30:29.8145207Z" end-time="2023-09-17T20:30:29.8153557Z" duration="0.000835" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451304000000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 28th Dec 2015 should be in week 53 of 2015'
Expr is '$fromMillis(1451304000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 53"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1596" name="function-fromMillis.formatDateTime[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="975343509" result="Failed" start-time="2023-09-17T20:30:29.8154075Z" end-time="2023-09-17T20:30:29.8162847Z" duration="0.000877" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451563200000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 31th Dec 2015 should be in week 53 of 2015'
Expr is '$fromMillis(1451563200000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 53"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1597" name="function-fromMillis.formatDateTime[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1142553573" result="Failed" start-time="2023-09-17T20:30:29.8167060Z" end-time="2023-09-17T20:30:29.8177691Z" duration="0.001063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451736000000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 2nd Jan 2016 should be in week 53 of 2015'
Expr is '$fromMillis(1451736000000, 'Week: [W]')'
Result: '"Week: [W]"'
Expected: '"Week: 53"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 53"', got '"Week: [W]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1598" name="function-fromMillis.formatDateTime[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1255064271" result="Failed" start-time="2023-09-17T20:30:29.8187691Z" end-time="2023-09-17T20:30:29.8200511Z" duration="0.001282" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359460800000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 29th Jan 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359460800000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 5 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1599" name="function-fromMillis.formatDateTime[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1653867498" result="Failed" start-time="2023-09-17T20:30:29.8200785Z" end-time="2023-09-17T20:30:29.8209465Z" duration="0.000868" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359633600000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 31st Jan 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359633600000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 5 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1600" name="function-fromMillis.formatDateTime[62]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[62]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="142335228" result="Failed" start-time="2023-09-17T20:30:29.8209730Z" end-time="2023-09-17T20:30:29.8221210Z" duration="0.001148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359720000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 1st Feb 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359720000000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 5 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 5 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1601" name="function-fromMillis.formatDateTime[63]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[63]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1319817890" result="Failed" start-time="2023-09-17T20:30:29.8222800Z" end-time="2023-09-17T20:30:29.8234432Z" duration="0.001163" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 1st Jan 2018 should be in week 1 of Jan'
Expr is '$fromMillis(1514808000000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 1 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1602" name="function-fromMillis.formatDateTime[64]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[64]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="255491084" result="Failed" start-time="2023-09-17T20:30:29.8235220Z" end-time="2023-09-17T20:30:29.8245651Z" duration="0.001043" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1483272000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of December&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 5 of December"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 1st Jan 2017 should be in week 5 of Dec'
Expr is '$fromMillis(1483272000000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 5 of December"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 5 of December"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1603" name="function-fromMillis.formatDateTime[65]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[65]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1348626305" result="Failed" start-time="2023-09-17T20:30:29.8250620Z" end-time="2023-09-17T20:30:29.8260682Z" duration="0.001006" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1533038400000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of August&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1 of August"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 31st July 2018 should be in week 1 of Aug'
Expr is '$fromMillis(1533038400000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 1 of August"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1 of August"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1604" name="function-fromMillis.formatDateTime[66]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[66]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1021932147" result="Failed" start-time="2023-09-17T20:30:29.8260958Z" end-time="2023-09-17T20:30:29.8286518Z" duration="0.002557" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Week: 1 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 30th Dec 2014 should be in week 1 of Jan'
Expr is '$fromMillis(1419940800000, 'Week: [w] of [xNn]')'
Result: '"Week: [w] o0 [xNn]"'
Expected: '"Week: 1 of January"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Week: 1 of January"', got '"Week: [w] o0 [xNn]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1605" name="function-fromMillis.formatDateTime[67]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[67]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="100707147" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8299773Z" end-time="2023-09-17T20:30:29.8353899Z" duration="0.005413" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-10-21T13:05:00Z').[$fromMillis(), $fromMillis($, (),'-0500'), $fromMillis($, (),'0000')] ';&#xA; result: [&quot;2018-10-21T13:05:00Z&quot;,&quot;2018-10-21T16:05:00+03:00&quot;,&quot;2018-10-21T13:05:00Z&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018-10-21T13:05:00Z']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1279
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1243
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Undefined picture string defaults to ISO 8601'
Expr is '$toMillis('2018-10-21T13:05:00Z').[$fromMillis(), $fromMillis($, (),'-0500'), $fromMillis($, (),'0000')] '
]]></output>
                </test-case>
                <test-case id="0-1606" name="function-fromMillis.formatDateTime[68]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[68]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1128396957" result="Failed" start-time="2023-09-17T20:30:29.8372869Z" end-time="2023-09-17T20:30:29.8382340Z" duration="0.000947" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, '[YN]-[M]-[D]')';&#xA; result: error D3133" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3133 (), got '"[YN]-[12]-[D]"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'throws error asking for year name'
Expr is '$fromMillis(1419940800000, '[YN]-[M]-[D]')'
Result: '"[YN]-[12]-[D]"'
Expected error D3133
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3133 (), got '"[YN]-[12]-[D]"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1607" name="function-fromMillis.formatDateTime[69]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[69]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="896701776" result="Failed" start-time="2023-09-17T20:30:29.8402561Z" end-time="2023-09-17T20:30:29.8411597Z" duration="0.000903" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, '[YN]-[M')';&#xA; result: error D3135" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3135 (), got '"[YN]-[12"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'throws error for component with no closing bracket'
Expr is '$fromMillis(1419940800000, '[YN]-[M')'
Result: '"[YN]-[12"'
Expected error D3135
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3135 (), got '"[YN]-[12"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1608" name="function-fromMillis.isoWeekDate[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="9360572" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8447529Z" end-time="2023-09-17T20:30:29.8458853Z" duration="0.001132" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2004-W53-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2005-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 1 Jan 2005'
Expr is '($ts := $toMillis('2005-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1609" name="function-fromMillis.isoWeekDate[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="657898271" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8487584Z" end-time="2023-09-17T20:30:29.8497126Z" duration="0.000953" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2004-W53-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2005-01-02']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 2 Jan 2005'
Expr is '($ts := $toMillis('2005-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1610" name="function-fromMillis.isoWeekDate[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="618725820" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8529225Z" end-time="2023-09-17T20:30:29.8550100Z" duration="0.002087" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2005-W52-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2005-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 31 Dec 2005'
Expr is '($ts := $toMillis('2005-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1611" name="function-fromMillis.isoWeekDate[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="936725243" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8582002Z" end-time="2023-09-17T20:30:29.8591486Z" duration="0.000948" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2005-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2006-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 1 Jan 2006'
Expr is '($ts := $toMillis('2006-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1612" name="function-fromMillis.isoWeekDate[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="832362734" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8591935Z" end-time="2023-09-17T20:30:29.8600670Z" duration="0.000874" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2006-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2006-01-02']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 2 Jan 2006'
Expr is '($ts := $toMillis('2006-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1613" name="function-fromMillis.isoWeekDate[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1232713932" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8635153Z" end-time="2023-09-17T20:30:29.8648410Z" duration="0.001325" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2006-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2006-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 31 Dec 2006'
Expr is '($ts := $toMillis('2006-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1614" name="function-fromMillis.isoWeekDate[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1571044366" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8661376Z" end-time="2023-09-17T20:30:29.8679809Z" duration="0.001843" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2007-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2007-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 1 Jan 2007'
Expr is '($ts := $toMillis('2007-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1615" name="function-fromMillis.isoWeekDate[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="208507543" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8681604Z" end-time="2023-09-17T20:30:29.8701171Z" duration="0.001957" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2007-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2007-12-30']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 30 Dec 2007'
Expr is '($ts := $toMillis('2007-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1616" name="function-fromMillis.isoWeekDate[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1529193802" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8701556Z" end-time="2023-09-17T20:30:29.8707267Z" duration="0.000571" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2007-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 31 Dec 2007'
Expr is '($ts := $toMillis('2007-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1617" name="function-fromMillis.isoWeekDate[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="321305265" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8708325Z" end-time="2023-09-17T20:30:29.8717673Z" duration="0.000935" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W01-2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 1 Jan 2008'
Expr is '($ts := $toMillis('2008-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1618" name="function-fromMillis.isoWeekDate[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="916447875" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8718540Z" end-time="2023-09-17T20:30:29.8729817Z" duration="0.001128" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-28', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-12-28']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 28 Dec 2008'
Expr is '($ts := $toMillis('2008-12-28', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1619" name="function-fromMillis.isoWeekDate[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="201845303" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8730991Z" end-time="2023-09-17T20:30:29.8750910Z" duration="0.001992" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-29', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-12-29']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 29 Dec 2008'
Expr is '($ts := $toMillis('2008-12-29', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1620" name="function-fromMillis.isoWeekDate[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1446455626" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8751695Z" end-time="2023-09-17T20:30:29.8761608Z" duration="0.000991" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-12-30']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 30 Dec 2008'
Expr is '($ts := $toMillis('2008-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1621" name="function-fromMillis.isoWeekDate[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="715979804" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8763901Z" end-time="2023-09-17T20:30:29.8771342Z" duration="0.000744" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-3&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2008-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Wed 31 Dec 2008'
Expr is '($ts := $toMillis('2008-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1622" name="function-fromMillis.isoWeekDate[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="235492852" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8771773Z" end-time="2023-09-17T20:30:29.8781351Z" duration="0.000958" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2009-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-4&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2009-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thu 1 Jan 2009'
Expr is '($ts := $toMillis('2009-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1623" name="function-fromMillis.isoWeekDate[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="429550596" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8784777Z" end-time="2023-09-17T20:30:29.8791552Z" duration="0.000677" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2009-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-4&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2009-12-31']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thu 31 Dec 2009'
Expr is '($ts := $toMillis('2009-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1624" name="function-fromMillis.isoWeekDate[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1286563325" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8799812Z" end-time="2023-09-17T20:30:29.8811573Z" duration="0.001176" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-5&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2010-01-01']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Fri 1 Jan 2010'
Expr is '($ts := $toMillis('2010-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1625" name="function-fromMillis.isoWeekDate[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1234322858" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8816209Z" end-time="2023-09-17T20:30:29.8829558Z" duration="0.001327" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2010-01-02']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 2 Jan 2010'
Expr is '($ts := $toMillis('2010-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1626" name="function-fromMillis.isoWeekDate[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2053966768" result="Failed" label="Error" start-time="2023-09-17T20:30:29.8829836Z" end-time="2023-09-17T20:30:29.8841392Z" duration="0.001165" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-03', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2010-01-03']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 3 Jan 2010'
Expr is '($ts := $toMillis('2010-01-03', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1627" name="function-join.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="610189634" result="Passed" start-time="2023-09-17T20:30:29.8842479Z" end-time="2023-09-17T20:30:29.8843468Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(&quot;hello&quot;)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join("hello")'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1628" name="function-join.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1149974111" result="Passed" start-time="2023-09-17T20:30:29.8844057Z" end-time="2023-09-17T20:30:29.8850770Z" duration="0.000671" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;])';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello"])'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1629" name="function-join.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="102561143" result="Passed" start-time="2023-09-17T20:30:29.9181731Z" end-time="2023-09-17T20:30:29.9185396Z" duration="0.000365" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;, &quot;world&quot;])';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello", "world"])'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-1630" name="function-join.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="252274020" result="Passed" start-time="2023-09-17T20:30:29.9190430Z" end-time="2023-09-17T20:30:29.9191533Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;, &quot;world&quot;], &quot;, &quot;)';&#xA; result: &quot;hello, world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello", "world"], ", ")'
Result: '"hello, world"'
Expected: '"hello, world"'
]]></output>
                </test-case>
                <test-case id="0-1631" name="function-join.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="714991463" result="Passed" start-time="2023-09-17T20:30:29.9198777Z" end-time="2023-09-17T20:30:29.9200827Z" duration="0.000205" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([], &quot;, &quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join([], ", ")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1632" name="function-join.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1751550649" result="Passed" start-time="2023-09-17T20:30:29.9201276Z" end-time="2023-09-17T20:30:29.9205962Z" duration="0.000469" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.Order.Product.Description.Colour, &quot;, &quot;)';&#xA; result: &quot;Purple, Orange, Purple, Black&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.Order.Product.Description.Colour, ", ")'
Result: '"Purple, Orange, Purple, Black"'
Expected: '"Purple, Orange, Purple, Black"'
]]></output>
                </test-case>
                <test-case id="0-1633" name="function-join.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1157001692" result="Passed" start-time="2023-09-17T20:30:29.9214687Z" end-time="2023-09-17T20:30:29.9216815Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.Order.Product.Description.Colour, no.sep)';&#xA; result: &quot;PurpleOrangePurpleBlack&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.Order.Product.Description.Colour, no.sep)'
Result: '"PurpleOrangePurpleBlack"'
Expected: '"PurpleOrangePurpleBlack"'
]]></output>
                </test-case>
                <test-case id="0-1634" name="function-join.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="378176253" result="Passed" start-time="2023-09-17T20:30:29.9234565Z" end-time="2023-09-17T20:30:29.9236456Z" duration="0.000189" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.blah.Product.Description.Colour, &quot;, &quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.blah.Product.Description.Colour, ", ")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1635" name="function-join.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2022693894" result="Passed" start-time="2023-09-17T20:30:29.9244136Z" end-time="2023-09-17T20:30:29.9273593Z" duration="0.002946" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join(true, &quot;, &quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join(true, ", ")'
]]></output>
                </test-case>
                <test-case id="0-1636" name="function-join.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1555691369" result="Passed" start-time="2023-09-17T20:30:29.9273921Z" end-time="2023-09-17T20:30:29.9280929Z" duration="0.000697" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join([1,2,3], &quot;, &quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0412.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join([1,2,3], ", ")'
]]></output>
                </test-case>
                <test-case id="0-1637" name="function-join.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1466304344" result="Passed" start-time="2023-09-17T20:30:29.9282345Z" end-time="2023-09-17T20:30:29.9294295Z" duration="0.001195" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;], 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join(["hello"], 3)'
]]></output>
                </test-case>
                <test-case id="0-1638" name="function-join.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1623846027" result="Passed" start-time="2023-09-17T20:30:29.9307283Z" end-time="2023-09-17T20:30:29.9317086Z" duration="0.000980" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join()'
]]></output>
                </test-case>
                <test-case id="0-1639" name="function-keys.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="170039648" result="Passed" start-time="2023-09-17T20:30:29.9327608Z" end-time="2023-09-17T20:30:29.9352531Z" duration="0.002492" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(Account)';&#xA; result: [&quot;Account Name&quot;,&quot;Order&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(Account)'
Result: '["Account Name","Order"]'
Expected: '["Account Name","Order"]'
]]></output>
                </test-case>
                <test-case id="0-1640" name="function-keys.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1625698674" result="Passed" start-time="2023-09-17T20:30:29.9352997Z" end-time="2023-09-17T20:30:29.9367043Z" duration="0.001404" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(Account.Order.Product)';&#xA; result: [&quot;Product Name&quot;,&quot;ProductID&quot;,&quot;SKU&quot;,&quot;Description&quot;,&quot;Price&quot;,&quot;Quantity&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(Account.Order.Product)'
Result: '["Product Name","ProductID","SKU","Description","Price","Quantity"]'
Expected: '["Product Name","ProductID","SKU","Description","Price","Quantity"]'
]]></output>
                </test-case>
                <test-case id="0-1641" name="function-keys.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="401702868" result="Passed" start-time="2023-09-17T20:30:29.9372205Z" end-time="2023-09-17T20:30:29.9373478Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys({})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys({})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1642" name="function-keys.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2046570385" result="Passed" start-time="2023-09-17T20:30:29.9373774Z" end-time="2023-09-17T20:30:29.9374905Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys({&quot;foo&quot;:{}})';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$keys({"foo":{}})'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1643" name="function-keys.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1495514296" result="Passed" start-time="2023-09-17T20:30:29.9375299Z" end-time="2023-09-17T20:30:29.9376948Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(&quot;foo&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys("foo")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1644" name="function-keys.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2142997441" result="Passed" start-time="2023-09-17T20:30:29.9383927Z" end-time="2023-09-17T20:30:29.9384851Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(function(){1})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(function(){1})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1645" name="function-keys.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="588462123" result="Passed" start-time="2023-09-17T20:30:29.9393798Z" end-time="2023-09-17T20:30:29.9396459Z" duration="0.000266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys([&quot;foo&quot;, &quot;bar&quot;])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(["foo", "bar"])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1646" name="function-length.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1879249661" result="Passed" start-time="2023-09-17T20:30:29.9409468Z" end-time="2023-09-17T20:30:29.9412413Z" duration="0.000294" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;&quot;)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$length("")'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1647" name="function-length.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1543453556" result="Passed" start-time="2023-09-17T20:30:29.9413870Z" end-time="2023-09-17T20:30:29.9417020Z" duration="0.000315" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;hello&quot;)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$length("hello")'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-1648" name="function-length.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="146414668" result="Passed" start-time="2023-09-17T20:30:29.9418196Z" end-time="2023-09-17T20:30:29.9420501Z" duration="0.000240" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(missing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$length(missing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1649" name="function-length.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1816248796" result="Passed" start-time="2023-09-17T20:30:29.9422125Z" end-time="2023-09-17T20:30:29.9425773Z" duration="0.000365" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\u03BB-calculus&quot;)';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\u03BB-calculus")'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1650" name="function-length.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2034344607" result="Failed" start-time="2023-09-17T20:30:29.9426711Z" end-time="2023-09-17T20:30:29.9463263Z" duration="0.003655" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\uD834\uDD1E&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("\uD834\uDD1E")'
Result: '2'
Expected: '1'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1651" name="function-length.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="654038244" result="Failed" start-time="2023-09-17T20:30:29.9464025Z" end-time="2023-09-17T20:30:29.9479259Z" duration="0.001524" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;𝄞&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("𝄞")'
Result: '2'
Expected: '1'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1652" name="function-length.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="226105698" result="Passed" start-time="2023-09-17T20:30:29.9479795Z" end-time="2023-09-17T20:30:29.9481095Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;超明體繁&quot;)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$length("超明體繁")'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1653" name="function-length.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1053218968" result="Passed" start-time="2023-09-17T20:30:29.9481434Z" end-time="2023-09-17T20:30:29.9482387Z" duration="0.000095" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\t&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\t")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1654" name="function-length.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="207411872" result="Passed" start-time="2023-09-17T20:30:29.9482629Z" end-time="2023-09-17T20:30:29.9483367Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\n&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\n")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1655" name="function-length.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1573839071" result="Passed" start-time="2023-09-17T20:30:29.9484522Z" end-time="2023-09-17T20:30:29.9496181Z" duration="0.001166" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(1234)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(1234)'
]]></output>
                </test-case>
                <test-case id="0-1656" name="function-length.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1084325038" result="Passed" start-time="2023-09-17T20:30:29.9497505Z" end-time="2023-09-17T20:30:29.9506038Z" duration="0.000853" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(null)'
]]></output>
                </test-case>
                <test-case id="0-1657" name="function-length.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1973424135" result="Passed" start-time="2023-09-17T20:30:29.9507483Z" end-time="2023-09-17T20:30:29.9515774Z" duration="0.000829" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(true)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(true)'
]]></output>
                </test-case>
                <test-case id="0-1658" name="function-length.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="62062980" result="Passed" start-time="2023-09-17T20:30:29.9516862Z" end-time="2023-09-17T20:30:29.9527468Z" duration="0.001061" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length([&quot;str&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(["str"])'
]]></output>
                </test-case>
                <test-case id="0-1659" name="function-length.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1935092936" result="Passed" start-time="2023-09-17T20:30:29.9531864Z" end-time="2023-09-17T20:30:29.9543279Z" duration="0.001142" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length()';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length()'
]]></output>
                </test-case>
                <test-case id="0-1660" name="function-length.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="194224026" result="Passed" start-time="2023-09-17T20:30:29.9543931Z" end-time="2023-09-17T20:30:29.9552173Z" duration="0.000824" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length()';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length()'
]]></output>
                </test-case>
                <test-case id="0-1661" name="function-length.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="518207323" result="Passed" start-time="2023-09-17T20:30:29.9553075Z" end-time="2023-09-17T20:30:29.9567085Z" duration="0.001401" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;Hello&quot;, &quot;World&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length("Hello", "World")'
]]></output>
                </test-case>
                <test-case id="0-1662" name="function-length.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1894211312" result="Failed" start-time="2023-09-17T20:30:29.9567714Z" end-time="2023-09-17T20:30:29.9598310Z" duration="0.003060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;𝄞💩&quot;)';&#xA; result: 2" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '2', got '4'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("𝄞💩")'
Result: '4'
Expected: '2'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '2', got '4'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1663" name="function-lookup.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2054283076" result="Passed" start-time="2023-09-17T20:30:29.9598665Z" end-time="2023-09-17T20:30:29.9600281Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account, &quot;Account Name&quot;)';&#xA; result: &quot;Firefly&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account, "Account Name")'
Result: '"Firefly"'
Expected: '"Firefly"'
]]></output>
                </test-case>
                <test-case id="0-1664" name="function-lookup.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="405624251" result="Passed" start-time="2023-09-17T20:30:29.9604711Z" end-time="2023-09-17T20:30:29.9605985Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account.Order.Product, &quot;Product Name&quot;)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;,&quot;Bowler Hat&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account.Order.Product, "Product Name")'
Result: '["Bowler Hat","Trilby hat","Bowler Hat","Cloak"]'
Expected: '["Bowler Hat","Trilby hat","Bowler Hat","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-1665" name="function-lookup.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2051218004" result="Passed" start-time="2023-09-17T20:30:29.9608353Z" end-time="2023-09-17T20:30:29.9610660Z" duration="0.000231" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account.Order.Product.ProductID, &quot;Product Name&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account.Order.Product.ProductID, "Product Name")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1666" name="function-lookup.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1332658241" result="Passed" start-time="2023-09-17T20:30:29.9611670Z" end-time="2023-09-17T20:30:29.9613177Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup($$, &quot;gust&quot;)';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup($$, "gust")'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1667" name="function-lowercase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1822844689" result="Passed" start-time="2023-09-17T20:30:29.9613873Z" end-time="2023-09-17T20:30:29.9621090Z" duration="0.000722" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Hello World&quot;)';&#xA; result: &quot;hello world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase("Hello World")'
Result: '"hello world"'
Expected: '"hello world"'
]]></output>
                </test-case>
                <test-case id="0-1668" name="function-lowercase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="854537679" result="Passed" start-time="2023-09-17T20:30:29.9634850Z" end-time="2023-09-17T20:30:29.9643696Z" duration="0.000884" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1669" name="function-max.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1695834119" result="Passed" start-time="2023-09-17T20:30:29.9655705Z" end-time="2023-09-17T20:30:29.9681513Z" duration="0.002581" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(Account.Order.Product.(Price * Quantity))';&#xA; result: 137.8" />
                  </properties>
                  <output><![CDATA[Expr is '$max(Account.Order.Product.(Price * Quantity))'
Result: '137.8'
Expected: '137.8'
]]></output>
                </test-case>
                <test-case id="0-1670" name="function-max.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="800299821" result="Passed" start-time="2023-09-17T20:30:29.9681960Z" end-time="2023-09-17T20:30:29.9685004Z" duration="0.000304" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$max(Product.(Price * Quantity))';&#xA; result: [68.9,137.8]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$max(Product.(Price * Quantity))'
Result: '[68.9,137.8]'
Expected: '[68.9,137.8]'
]]></output>
                </test-case>
                <test-case id="0-1671" name="function-max.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="62889458" result="Passed" start-time="2023-09-17T20:30:29.9688937Z" end-time="2023-09-17T20:30:29.9691665Z" duration="0.000273" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $count(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 2&quot;,&quot;order104: 2&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $count(Product.(Price*Quantity)))'
Result: '["order103: 2","order104: 2"]'
Expected: '["order103: 2","order104: 2"]'
]]></output>
                </test-case>
                <test-case id="0-1672" name="function-max.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="844942885" result="Passed" start-time="2023-09-17T20:30:29.9693126Z" end-time="2023-09-17T20:30:29.9696444Z" duration="0.000332" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$max([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1673" name="function-max.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="746408227" result="Passed" start-time="2023-09-17T20:30:29.9696717Z" end-time="2023-09-17T20:30:29.9699709Z" duration="0.000299" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$max([1,2,3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1674" name="function-max.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="723630276" result="Passed" start-time="2023-09-17T20:30:29.9701909Z" end-time="2023-09-17T20:30:29.9712449Z" duration="0.001054" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0412.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1675" name="function-max.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1044752758" result="Passed" start-time="2023-09-17T20:30:29.9712944Z" end-time="2023-09-17T20:30:29.9723892Z" duration="0.001095" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0412.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1676" name="function-max.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="816893066" result="Passed" start-time="2023-09-17T20:30:29.9724134Z" end-time="2023-09-17T20:30:29.9725379Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$max(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1677" name="function-max.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="887462203" result="Passed" start-time="2023-09-17T20:30:29.9725555Z" end-time="2023-09-17T20:30:29.9731013Z" duration="0.000546" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([-1,-5])';&#xA; result: -1" />
                  </properties>
                  <output><![CDATA[Expr is '$max([-1,-5])'
Result: '-1'
Expected: '-1'
]]></output>
                </test-case>
                <test-case id="0-1678" name="function-max.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="434036802" result="Passed" start-time="2023-09-17T20:30:29.9731607Z" end-time="2023-09-17T20:30:29.9747073Z" duration="0.001547" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([],[])'
]]></output>
                </test-case>
                <test-case id="0-1679" name="function-max.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="698101202" result="Passed" start-time="2023-09-17T20:30:29.9757505Z" end-time="2023-09-17T20:30:29.9768990Z" duration="0.001148" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1680" name="function-max.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1502556844" result="Passed" start-time="2023-09-17T20:30:29.9770883Z" end-time="2023-09-17T20:30:29.9786927Z" duration="0.001604" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1681" name="function-max.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="510513212" result="Passed" start-time="2023-09-17T20:30:29.9803022Z" end-time="2023-09-17T20:30:29.9813051Z" duration="0.001003" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1682" name="function-max.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="463774966" result="Passed" start-time="2023-09-17T20:30:29.9829190Z" end-time="2023-09-17T20:30:29.9830694Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$max(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1683" name="function-max.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1481208962" result="Passed" start-time="2023-09-17T20:30:29.9831824Z" end-time="2023-09-17T20:30:29.9847704Z" duration="0.001588" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(Account.Order.Product.(Price * Quantity))';&#xA; result: 21.67" />
                  </properties>
                  <output><![CDATA[Expr is '$min(Account.Order.Product.(Price * Quantity))'
Result: '21.67'
Expected: '21.67'
]]></output>
                </test-case>
                <test-case id="0-1684" name="function-max.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="215700183" result="Passed" start-time="2023-09-17T20:30:29.9850121Z" end-time="2023-09-17T20:30:29.9853419Z" duration="0.000330" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$min(Product.(Price * Quantity))';&#xA; result: [21.67,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$min(Product.(Price * Quantity))'
Result: '[21.67,107.99]'
Expected: '[21.67,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1685" name="function-max.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1745719423" result="Passed" start-time="2023-09-17T20:30:29.9875757Z" end-time="2023-09-17T20:30:29.9878025Z" duration="0.000226" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $min(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 21.67&quot;,&quot;order104: 107.99&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $min(Product.(Price*Quantity)))'
Result: '["order103: 21.67","order104: 107.99"]'
Expected: '["order103: 21.67","order104: 107.99"]'
]]></output>
                </test-case>
                <test-case id="0-1686" name="function-max.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="488885765" result="Passed" start-time="2023-09-17T20:30:29.9897319Z" end-time="2023-09-17T20:30:29.9898870Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$min([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1687" name="function-max.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="698331681" result="Passed" start-time="2023-09-17T20:30:29.9920476Z" end-time="2023-09-17T20:30:29.9923561Z" duration="0.000308" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2,3])';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$min([1,2,3])'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1688" name="function-max.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="949589820" result="Passed" start-time="2023-09-17T20:30:29.9924332Z" end-time="2023-09-17T20:30:29.9938915Z" duration="0.001458" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0412.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1689" name="function-max.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="951820829" result="Passed" start-time="2023-09-17T20:30:29.9955976Z" end-time="2023-09-17T20:30:29.9964071Z" duration="0.000809" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0412.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1690" name="function-max.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="938368856" result="Passed" start-time="2023-09-17T20:30:29.9964384Z" end-time="2023-09-17T20:30:29.9965368Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$min(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1691" name="function-max.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1729750881" result="Passed" start-time="2023-09-17T20:30:29.9965587Z" end-time="2023-09-17T20:30:29.9972466Z" duration="0.000688" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([],[])'
]]></output>
                </test-case>
                <test-case id="0-1692" name="function-max.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1404241364" result="Passed" start-time="2023-09-17T20:30:29.9977462Z" end-time="2023-09-17T20:30:29.9984187Z" duration="0.000672" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1693" name="function-max.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1836236738" result="Passed" start-time="2023-09-17T20:30:29.9985264Z" end-time="2023-09-17T20:30:29.9993897Z" duration="0.000863" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1694" name="function-max.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2123299269" result="Passed" start-time="2023-09-17T20:30:29.9994045Z" end-time="2023-09-17T20:30:29.9999998Z" duration="0.000596" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1695" name="function-max.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1107491351" result="Passed" start-time="2023-09-17T20:30:30.0000135Z" end-time="2023-09-17T20:30:30.0000935Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$min(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1696" name="function-merge.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="654975203" result="Passed" start-time="2023-09-17T20:30:30.0001029Z" end-time="2023-09-17T20:30:30.0001907Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$merge(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1697" name="function-merge.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2139770956" result="Passed" start-time="2023-09-17T20:30:30.0002216Z" end-time="2023-09-17T20:30:30.0012108Z" duration="0.000989" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge({&quot;a&quot;:1})';&#xA; result: {&quot;a&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge({"a":1})'
Result: '{"a":1}'
Expected: '{"a":1}'
]]></output>
                </test-case>
                <test-case id="0-1698" name="function-merge.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1089890045" result="Passed" start-time="2023-09-17T20:30:30.0012266Z" end-time="2023-09-17T20:30:30.0013455Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;:1}, {&quot;b&quot;:2}])';&#xA; result: {&quot;a&quot;:1,&quot;b&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a":1}, {"b":2}])'
Result: '{"a":1,"b":2}'
Expected: '{"a":1,"b":2}'
]]></output>
                </test-case>
                <test-case id="0-1699" name="function-merge.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="91779437" result="Passed" start-time="2023-09-17T20:30:30.0013590Z" end-time="2023-09-17T20:30:30.0014832Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;: 1}, {&quot;b&quot;: 2, &quot;c&quot;: 3}])';&#xA; result: {&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a": 1}, {"b": 2, "c": 3}])'
Result: '{"a":1,"b":2,"c":3}'
Expected: '{"a":1,"b":2,"c":3}'
]]></output>
                </test-case>
                <test-case id="0-1700" name="function-merge.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1403287529" result="Passed" start-time="2023-09-17T20:30:30.0014919Z" end-time="2023-09-17T20:30:30.0015992Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;: 1}, {&quot;b&quot;: 2, &quot;a&quot;: 3}])';&#xA; result: {&quot;a&quot;:3,&quot;b&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a": 1}, {"b": 2, "a": 3}])'
Result: '{"a":3,"b":2}'
Expected: '{"a":3,"b":2}'
]]></output>
                </test-case>
                <test-case id="0-1701" name="function-number.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="56404972" result="Passed" start-time="2023-09-17T20:30:30.0016232Z" end-time="2023-09-17T20:30:30.0016874Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1702" name="function-number.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="688915877" result="Passed" start-time="2023-09-17T20:30:30.0016955Z" end-time="2023-09-17T20:30:30.0017656Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(10)';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$number(10)'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1703" name="function-number.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="598064196" result="Passed" start-time="2023-09-17T20:30:30.0017951Z" end-time="2023-09-17T20:30:30.0018818Z" duration="0.000087" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(-0.05)';&#xA; result: -0.05" />
                  </properties>
                  <output><![CDATA[Expr is '$number(-0.05)'
Result: '-0.05'
Expected: '-0.05'
]]></output>
                </test-case>
                <test-case id="0-1704" name="function-number.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1015948975" result="Passed" start-time="2023-09-17T20:30:30.0018902Z" end-time="2023-09-17T20:30:30.0019625Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;0&quot;)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number("0")'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1705" name="function-number.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1971455149" result="Passed" start-time="2023-09-17T20:30:30.0020753Z" end-time="2023-09-17T20:30:30.0021417Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;-0.05&quot;)';&#xA; result: -0.05" />
                  </properties>
                  <output><![CDATA[Expr is '$number("-0.05")'
Result: '-0.05'
Expected: '-0.05'
]]></output>
                </test-case>
                <test-case id="0-1706" name="function-number.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1956579006" result="Passed" start-time="2023-09-17T20:30:30.0021500Z" end-time="2023-09-17T20:30:30.0022050Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1e2&quot;)';&#xA; result: 100" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1e2")'
Result: '100'
Expected: '100'
]]></output>
                </test-case>
                <test-case id="0-1707" name="function-number.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1627181118" result="Passed" start-time="2023-09-17T20:30:30.0022907Z" end-time="2023-09-17T20:30:30.0024561Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1.0e-2&quot;)';&#xA; result: 0.01" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1.0e-2")'
Result: '0.01'
Expected: '0.01'
]]></output>
                </test-case>
                <test-case id="0-1708" name="function-number.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="329588692" result="Passed" start-time="2023-09-17T20:30:30.0025335Z" end-time="2023-09-17T20:30:30.0035660Z" duration="0.001033" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1e0&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1e0")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1709" name="function-number.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1310142761" result="Passed" start-time="2023-09-17T20:30:30.0040664Z" end-time="2023-09-17T20:30:30.0060750Z" duration="0.002009" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;10e500&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("10e500")'
]]></output>
                </test-case>
                <test-case id="0-1710" name="function-number.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="756946005" result="Passed" start-time="2023-09-17T20:30:30.0061995Z" end-time="2023-09-17T20:30:30.0069089Z" duration="0.000709" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;Hello world&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("Hello world")'
]]></output>
                </test-case>
                <test-case id="0-1711" name="function-number.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="196862835" result="Passed" start-time="2023-09-17T20:30:30.0069403Z" end-time="2023-09-17T20:30:30.0093726Z" duration="0.002433" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1/2&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("1/2")'
]]></output>
                </test-case>
                <test-case id="0-1712" name="function-number.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1539387333" result="Passed" start-time="2023-09-17T20:30:30.0095156Z" end-time="2023-09-17T20:30:30.0117093Z" duration="0.002194" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1234 hello&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("1234 hello")'
]]></output>
                </test-case>
                <test-case id="0-1713" name="function-number.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1511445425" result="Passed" start-time="2023-09-17T20:30:30.0121820Z" end-time="2023-09-17T20:30:30.0139292Z" duration="0.001747" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("")'
]]></output>
                </test-case>
                <test-case id="0-1714" name="function-number.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="432536092" result="Passed" start-time="2023-09-17T20:30:30.0148431Z" end-time="2023-09-17T20:30:30.0154156Z" duration="0.000572" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(true)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$number(true)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1715" name="function-number.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1831194461" result="Passed" start-time="2023-09-17T20:30:30.0154356Z" end-time="2023-09-17T20:30:30.0155430Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(false)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number(false)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1716" name="function-number.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="54432357" result="Passed" start-time="2023-09-17T20:30:30.0155771Z" end-time="2023-09-17T20:30:30.0159806Z" duration="0.000400" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(Account.blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$number(Account.blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1717" name="function-number.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="413002350" result="Passed" start-time="2023-09-17T20:30:30.0160169Z" end-time="2023-09-17T20:30:30.0171006Z" duration="0.001084" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(null)'
]]></output>
                </test-case>
                <test-case id="0-1718" name="function-number.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1838582893" result="Passed" start-time="2023-09-17T20:30:30.0171265Z" end-time="2023-09-17T20:30:30.0181323Z" duration="0.001006" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number([])'
]]></output>
                </test-case>
                <test-case id="0-1719" name="function-number.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="807388475" result="Passed" start-time="2023-09-17T20:30:30.0181658Z" end-time="2023-09-17T20:30:30.0202588Z" duration="0.002093" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;[1]&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("[1]")'
]]></output>
                </test-case>
                <test-case id="0-1720" name="function-number.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1562332239" result="Passed" start-time="2023-09-17T20:30:30.0202817Z" end-time="2023-09-17T20:30:30.0214973Z" duration="0.001216" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([1,2])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number([1,2])'
]]></output>
                </test-case>
                <test-case id="0-1721" name="function-number.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="634326560" result="Passed" start-time="2023-09-17T20:30:30.0217784Z" end-time="2023-09-17T20:30:30.0230292Z" duration="0.001251" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([&quot;hello&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(["hello"])'
]]></output>
                </test-case>
                <test-case id="0-1722" name="function-number.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="873254869" result="Passed" start-time="2023-09-17T20:30:30.0235047Z" end-time="2023-09-17T20:30:30.0254509Z" duration="0.001946" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([&quot;2&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(["2"])'
]]></output>
                </test-case>
                <test-case id="0-1723" name="function-number.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2050200497" result="Passed" start-time="2023-09-17T20:30:30.0260394Z" end-time="2023-09-17T20:30:30.0271086Z" duration="0.001069" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number({})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number({})'
]]></output>
                </test-case>
                <test-case id="0-1724" name="function-number.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="757465263" result="Passed" start-time="2023-09-17T20:30:30.0271274Z" end-time="2023-09-17T20:30:30.0277197Z" duration="0.000592" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number({"hello":"world"})'
]]></output>
                </test-case>
                <test-case id="0-1725" name="function-number.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1218032587" result="Passed" start-time="2023-09-17T20:30:30.0277425Z" end-time="2023-09-17T20:30:30.0282179Z" duration="0.000475" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number($number)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number($number)'
]]></output>
                </test-case>
                <test-case id="0-1726" name="function-number.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="806131741" result="Passed" start-time="2023-09-17T20:30:30.0282325Z" end-time="2023-09-17T20:30:30.0286830Z" duration="0.000451" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(function(){5})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(function(){5})'
]]></output>
                </test-case>
                <test-case id="0-1727" name="function-number.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1156189794" result="Passed" start-time="2023-09-17T20:30:30.0287487Z" end-time="2023-09-17T20:30:30.0294391Z" duration="0.000690" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(1,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(1,2)'
]]></output>
                </test-case>
                <test-case id="0-1728" name="function-number.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="770592605" result="Passed" start-time="2023-09-17T20:30:30.0316585Z" end-time="2023-09-17T20:30:30.0319292Z" duration="0.000270" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('00')';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number('00')'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1729" name="function-number.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1763622572" result="Passed" start-time="2023-09-17T20:30:30.0325233Z" end-time="2023-09-17T20:30:30.0326370Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('0123')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Expr is '$number('0123')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1730" name="function-number.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="389777555" result="Passed" start-time="2023-09-17T20:30:30.0326497Z" end-time="2023-09-17T20:30:30.0328093Z" duration="0.000160" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('-007')';&#xA; result: -7" />
                  </properties>
                  <output><![CDATA[Expr is '$number('-007')'
Result: '-7'
Expected: '-7'
]]></output>
                </test-case>
                <test-case id="0-1731" name="function-number.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="824605757" result="Passed" start-time="2023-09-17T20:30:30.0328188Z" end-time="2023-09-17T20:30:30.0331225Z" duration="0.000304" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('000.00123000')';&#xA; result: 0.00123" />
                  </properties>
                  <output><![CDATA[Expr is '$number('000.00123000')'
Result: '0.00123'
Expected: '0.00123'
]]></output>
                </test-case>
                <test-case id="0-1732" name="function-pad.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1945055805" result="Passed" start-time="2023-09-17T20:30:30.0331540Z" end-time="2023-09-17T20:30:30.0358543Z" duration="0.002701" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 5)';&#xA; result: &quot;foo  &quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 5)'
Result: '"foo  "'
Expected: '"foo  "'
]]></output>
                </test-case>
                <test-case id="0-1733" name="function-pad.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="342257365" result="Passed" start-time="2023-09-17T20:30:30.0368152Z" end-time="2023-09-17T20:30:30.0370526Z" duration="0.000237" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, -5)';&#xA; result: &quot;  foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", -5)'
Result: '"  foo"'
Expected: '"  foo"'
]]></output>
                </test-case>
                <test-case id="0-1734" name="function-pad.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1442297320" result="Passed" start-time="2023-09-17T20:30:30.0371760Z" end-time="2023-09-17T20:30:30.0384308Z" duration="0.001255" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, -5, &quot;#&quot;)';&#xA; result: &quot;##foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", -5, "#")'
Result: '"##foo"'
Expected: '"##foo"'
]]></output>
                </test-case>
                <test-case id="0-1735" name="function-pad.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1446151872" result="Passed" start-time="2023-09-17T20:30:30.0384552Z" end-time="2023-09-17T20:30:30.0385964Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 5, &quot;&quot;)';&#xA; result: &quot;foo  &quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 5, "")'
Result: '"foo  "'
Expected: '"foo  "'
]]></output>
                </test-case>
                <test-case id="0-1736" name="function-pad.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1969080982" result="Passed" start-time="2023-09-17T20:30:30.0386810Z" end-time="2023-09-17T20:30:30.0390252Z" duration="0.000344" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 1)';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 1)'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1737" name="function-pad.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2013194417" result="Passed" start-time="2023-09-17T20:30:30.0394355Z" end-time="2023-09-17T20:30:30.0396360Z" duration="0.000200" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 8, &quot;-+&quot;)';&#xA; result: &quot;foo-+-+-&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 8, "-+")'
Result: '"foo-+-+-"'
Expected: '"foo-+-+-"'
]]></output>
                </test-case>
                <test-case id="0-1738" name="function-pad.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="465259987" result="Passed" start-time="2023-09-17T20:30:30.0403910Z" end-time="2023-09-17T20:30:30.0405036Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(nothing, 1)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$pad(nothing, 1)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1739" name="function-pad.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="391728681" result="Failed" start-time="2023-09-17T20:30:30.0437519Z" end-time="2023-09-17T20:30:30.0461557Z" duration="0.002402" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 7)';&#xA; result: &quot;a𝄞💩    &quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩    "', got '"a𝄞💩  "'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 7)'
Result: '"a𝄞💩  "'
Expected: '"a𝄞💩    "'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩    "', got '"a𝄞💩  "'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1740" name="function-pad.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1936624064" result="Failed" start-time="2023-09-17T20:30:30.0477391Z" end-time="2023-09-17T20:30:30.0488926Z" duration="0.001153" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('𝄞💩', -7)';&#xA; result: &quot;     𝄞💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"     𝄞💩"', got '"   𝄞💩"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('𝄞💩', -7)'
Result: '"   𝄞💩"'
Expected: '"     𝄞💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"     𝄞💩"', got '"   𝄞💩"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1741" name="function-pad.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1009188294" result="Failed" start-time="2023-09-17T20:30:30.0509661Z" end-time="2023-09-17T20:30:30.0525644Z" duration="0.001598" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 7, '💩')';&#xA; result: &quot;a𝄞💩💩💩💩💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩💩💩💩💩"', got '"a𝄞💩💩"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 7, '💩')'
Result: '"a𝄞💩💩"'
Expected: '"a𝄞💩💩💩💩💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩💩💩💩💩"', got '"a𝄞💩💩"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1742" name="function-pad.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="368742989" result="Failed" start-time="2023-09-17T20:30:30.0538576Z" end-time="2023-09-17T20:30:30.0553259Z" duration="0.001468" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 6, '💩')';&#xA; result: &quot;a𝄞💩💩💩💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩💩💩💩"', got '"a𝄞💩\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 6, '💩')'
Result: '"a𝄞💩\ud83d"'
Expected: '"a𝄞💩💩💩💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩💩💩💩"', got '"a𝄞💩\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1743" name="function-parseInteger.parseInteger[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1786930706" result="Passed" start-time="2023-09-17T20:30:30.0577106Z" end-time="2023-09-17T20:30:30.0579570Z" duration="0.000246" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger(undefined, '0')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Description: 'should return result object'
Expr is '$parseInteger(undefined, '0')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1744" name="function-parseInteger.parseInteger[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="194874824" result="Passed" start-time="2023-09-17T20:30:30.0591111Z" end-time="2023-09-17T20:30:30.0594970Z" duration="0.000386" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('123', '000')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Description: 'should parse a number'
Expr is '$parseInteger('123', '000')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1745" name="function-parseInteger.parseInteger[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="741506021" result="Passed" start-time="2023-09-17T20:30:30.0601064Z" end-time="2023-09-17T20:30:30.0603629Z" duration="0.000256" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('0123', '0000')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number padded with zeros'
Expr is '$parseInteger('0123', '0000')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1746" name="function-parseInteger.parseInteger[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="190363548" result="Passed" start-time="2023-09-17T20:30:30.0609885Z" end-time="2023-09-17T20:30:30.0612165Z" duration="0.000228" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234', '0')';&#xA; result: 1234" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number'
Expr is '$parseInteger('1234', '0')'
Result: '1234'
Expected: '1234'
]]></output>
                </test-case>
                <test-case id="0-1747" name="function-parseInteger.parseInteger[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2040279586" result="Passed" start-time="2023-09-17T20:30:30.0620663Z" end-time="2023-09-17T20:30:30.0623476Z" duration="0.000281" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234', '###0')';&#xA; result: 1234" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number with optional digits'
Expr is '$parseInteger('1234', '###0')'
Result: '1234'
Expected: '1234'
]]></output>
                </test-case>
                <test-case id="0-1748" name="function-parseInteger.parseInteger[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1403700646" result="Passed" start-time="2023-09-17T20:30:30.0650319Z" end-time="2023-09-17T20:30:30.0652163Z" duration="0.000183" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12', '###0')';&#xA; result: 12" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number with optional digits'
Expr is '$parseInteger('12', '###0')'
Result: '12'
Expected: '12'
]]></output>
                </test-case>
                <test-case id="0-1749" name="function-parseInteger.parseInteger[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="292104808" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0659842Z" end-time="2023-09-17T20:30:30.0678530Z" duration="0.001869" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('123rd', '000;o')';&#xA; result: 123" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should parse a number'
Expr is '$parseInteger('123rd', '000;o')'
]]></output>
                </test-case>
                <test-case id="0-1750" name="function-parseInteger.parseInteger[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1053058994" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0702218Z" end-time="2023-09-17T20:30:30.0715717Z" duration="0.001350" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1st', '0;o')';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('1st', '0;o')'
]]></output>
                </test-case>
                <test-case id="0-1751" name="function-parseInteger.parseInteger[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="241972853" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0717795Z" end-time="2023-09-17T20:30:30.0733010Z" duration="0.001522" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('28th', '#0;o')';&#xA; result: 28" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('28th', '#0;o')'
]]></output>
                </test-case>
                <test-case id="0-1752" name="function-parseInteger.parseInteger[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="301188063" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0744650Z" end-time="2023-09-17T20:30:30.0760386Z" duration="0.001574" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234th', '###0;o')';&#xA; result: 1234" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('1234th', '###0;o')'
]]></output>
                </test-case>
                <test-case id="0-1753" name="function-parseInteger.parseInteger[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="282501570" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0767910Z" end-time="2023-09-17T20:30:30.0781145Z" duration="0.001324" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12th', '###0;o')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('12th', '###0;o')'
]]></output>
                </test-case>
                <test-case id="0-1754" name="function-parseInteger.parseInteger[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="676930845" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0803562Z" end-time="2023-09-17T20:30:30.0822002Z" duration="0.001844" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('١٢٣٤٠', '###١')';&#xA; result: 12340" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('١٢٣٤٠', '###١')'
]]></output>
                </test-case>
                <test-case id="0-1755" name="function-parseInteger.parseInteger[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="768960969" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0834439Z" end-time="2023-09-17T20:30:30.0848126Z" duration="0.001368" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('１２３４０', '###０')';&#xA; result: 12340" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('１２３４０', '###０')'
]]></output>
                </test-case>
                <test-case id="0-1756" name="function-parseInteger.parseInteger[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1330633750" result="Passed" start-time="2023-09-17T20:30:30.0873106Z" end-time="2023-09-17T20:30:30.0875504Z" duration="0.000239" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12', '#,##0')';&#xA; result: 12" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('12', '#,##0')'
Result: '12'
Expected: '12'
]]></output>
                </test-case>
                <test-case id="0-1757" name="function-parseInteger.parseInteger[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="786199027" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0907213Z" end-time="2023-09-17T20:30:30.0918797Z" duration="0.001158" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,200', '#,##0')';&#xA; result: 1200" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,200', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1758" name="function-parseInteger.parseInteger[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1988082580" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0931529Z" end-time="2023-09-17T20:30:30.0955230Z" duration="0.002370" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12,345,678', '#,##0')';&#xA; result: 12345678" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('12,345,678', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1759" name="function-parseInteger.parseInteger[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1945400035" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0975941Z" end-time="2023-09-17T20:30:30.0990910Z" duration="0.001497" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,234,567,890', '#,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,234,567,890', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1760" name="function-parseInteger.parseInteger[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1165323408" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.0991256Z" end-time="2023-09-17T20:30:30.1002619Z" duration="0.001136" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,234,567,890', '#,###,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,234,567,890', '#,###,##0')'
]]></output>
                </test-case>
                <test-case id="0-1761" name="function-parseInteger.parseInteger[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="800389212" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1021684Z" end-time="2023-09-17T20:30:30.1040068Z" duration="0.001838" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234:567,890', '#:###,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert non-regular groups - different chars'
Expr is '$parseInteger('1234:567,890', '#:###,##0')'
]]></output>
                </test-case>
                <test-case id="0-1762" name="function-parseInteger.parseInteger[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="856588513" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1041541Z" end-time="2023-09-17T20:30:30.1054615Z" duration="0.001307" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12345,67,890', '##,##,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert non-regular groups - different positions'
Expr is '$parseInteger('12345,67,890', '##,##,##0')'
]]></output>
                </test-case>
                <test-case id="0-1763" name="function-parseInteger.parseInteger[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="713449767" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1072927Z" end-time="2023-09-17T20:30:30.1087970Z" duration="0.001504" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('', 'I')';&#xA; result: 0" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '0'
Expr is '$parseInteger('', 'I')'
]]></output>
                </test-case>
                <test-case id="0-1764" name="function-parseInteger.parseInteger[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="920365206" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1104349Z" end-time="2023-09-17T20:30:30.1117406Z" duration="0.001305" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('MCMLXXXIV', 'I')';&#xA; result: 1984" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1984'
Expr is '$parseInteger('MCMLXXXIV', 'I')'
]]></output>
                </test-case>
                <test-case id="0-1765" name="function-parseInteger.parseInteger[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2079823895" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1117724Z" end-time="2023-09-17T20:30:30.1147585Z" duration="0.002987" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('xcix', 'i')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('xcix', 'i')'
]]></output>
                </test-case>
                <test-case id="0-1766" name="function-parseInteger.parseInteger[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="399290677" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1152591Z" end-time="2023-09-17T20:30:30.1208644Z" duration="0.005606" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twelve', 'w')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('twelve', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1767" name="function-parseInteger.parseInteger[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1197129968" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1219408Z" end-time="2023-09-17T20:30:30.1227932Z" duration="0.000852" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twenty', 'w')';&#xA; result: 20" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$parseInteger('twenty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1768" name="function-parseInteger.parseInteger[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="69148105" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1229167Z" end-time="2023-09-17T20:30:30.1245615Z" duration="0.001645" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('thirty-four', 'w')';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$parseInteger('thirty-four', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1769" name="function-parseInteger.parseInteger[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1133867867" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1245858Z" end-time="2023-09-17T20:30:30.1264498Z" duration="0.001864" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('NINETY-NINE', 'W')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('NINETY-NINE', 'W')'
]]></output>
                </test-case>
                <test-case id="0-1770" name="function-parseInteger.parseInteger[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2009597126" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1271716Z" end-time="2023-09-17T20:30:30.1289044Z" duration="0.001733" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one hundred', 'w')';&#xA; result: 100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$parseInteger('one hundred', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1771" name="function-parseInteger.parseInteger[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="188721587" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1289949Z" end-time="2023-09-17T20:30:30.1305179Z" duration="0.001523" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FIVE HUNDRED AND FIFTY-FIVE', 'W')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('FIVE HUNDRED AND FIFTY-FIVE', 'W')'
]]></output>
                </test-case>
                <test-case id="0-1772" name="function-parseInteger.parseInteger[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2095226010" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1307652Z" end-time="2023-09-17T20:30:30.1327502Z" duration="0.001985" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('Five Hundred and Fifty-Five', 'Ww')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('Five Hundred and Fifty-Five', 'Ww')'
]]></output>
                </test-case>
                <test-case id="0-1773" name="function-parseInteger.parseInteger[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1446854212" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1328102Z" end-time="2023-09-17T20:30:30.1345251Z" duration="0.001715" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('nine hundred and nineteen', 'w')';&#xA; result: 919" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$parseInteger('nine hundred and nineteen', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1774" name="function-parseInteger.parseInteger[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1018248058" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1345457Z" end-time="2023-09-17T20:30:30.1365533Z" duration="0.002008" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('seven hundred and thirty', 'w')';&#xA; result: 730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$parseInteger('seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1775" name="function-parseInteger.parseInteger[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="553143945" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1387855Z" end-time="2023-09-17T20:30:30.1414389Z" duration="0.002653" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousand', 'w')';&#xA; result: 1000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$parseInteger('one thousand', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1776" name="function-parseInteger.parseInteger[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="265583571" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1414640Z" end-time="2023-09-17T20:30:30.1446269Z" duration="0.003163" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three thousand, seven hundred and thirty', 'w')';&#xA; result: 3730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$parseInteger('three thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1777" name="function-parseInteger.parseInteger[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1233807810" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1447087Z" end-time="2023-09-17T20:30:30.1456171Z" duration="0.000908" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirty', 'w')';&#xA; result: 327730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1778" name="function-parseInteger.parseInteger[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1855325673" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1456580Z" end-time="2023-09-17T20:30:30.1475251Z" duration="0.001867" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty', 'w')';&#xA; result: 4327730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1779" name="function-parseInteger.parseInteger[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="15959242" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1488464Z" end-time="2023-09-17T20:30:30.1502817Z" duration="0.001435" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion and one', 'w')';&#xA; result: 1000000000001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$parseInteger('one trillion and one', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1780" name="function-parseInteger.parseInteger[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1027669039" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1504524Z" end-time="2023-09-17T20:30:30.1517425Z" duration="0.001290" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three', 'w')';&#xA; result: 1234567890123" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123'
Expr is '$parseInteger('one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1781" name="function-parseInteger.parseInteger[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="913335802" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1518439Z" end-time="2023-09-17T20:30:30.1529715Z" duration="0.001128" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousand trillion', 'w')';&#xA; result: 1000000000000000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e15'
Expr is '$parseInteger('one thousand trillion', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1782" name="function-parseInteger.parseInteger[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1899972795" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1529910Z" end-time="2023-09-17T20:30:30.1536755Z" duration="0.000685" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('ten billion trillion trillion trillion', 'w')';&#xA; result: 1E+46" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e46'
Expr is '$parseInteger('ten billion trillion trillion trillion', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1783" name="function-parseInteger.parseInteger[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="478487797" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1537694Z" end-time="2023-09-17T20:30:30.1557181Z" duration="0.001949" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twelfth', 'w;o')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('twelfth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1784" name="function-parseInteger.parseInteger[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="710563578" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1557365Z" end-time="2023-09-17T20:30:30.1567407Z" duration="0.001004" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twentieth', 'w;o')';&#xA; result: 20" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$parseInteger('twentieth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1785" name="function-parseInteger.parseInteger[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="147804702" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1582599Z" end-time="2023-09-17T20:30:30.1593669Z" duration="0.001107" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('thirty-fourth', 'w;o')';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$parseInteger('thirty-fourth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1786" name="function-parseInteger.parseInteger[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="523417694" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1610056Z" end-time="2023-09-17T20:30:30.1626357Z" duration="0.001630" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('NINETY-NINTH', 'W;o')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('NINETY-NINTH', 'W;o')'
]]></output>
                </test-case>
                <test-case id="0-1787" name="function-parseInteger.parseInteger[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1662554235" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1626563Z" end-time="2023-09-17T20:30:30.1647499Z" duration="0.002094" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one hundredth', 'w;o')';&#xA; result: 100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$parseInteger('one hundredth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1788" name="function-parseInteger.parseInteger[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1812810167" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1651667Z" end-time="2023-09-17T20:30:30.1665485Z" duration="0.001382" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FIVE HUNDRED AND FIFTY-FIFTH', 'W;o')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('FIVE HUNDRED AND FIFTY-FIFTH', 'W;o')'
]]></output>
                </test-case>
                <test-case id="0-1789" name="function-parseInteger.parseInteger[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="673336351" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1665737Z" end-time="2023-09-17T20:30:30.1678900Z" duration="0.001316" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('nine hundred and nineteenth', 'w;o')';&#xA; result: 919" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$parseInteger('nine hundred and nineteenth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1790" name="function-parseInteger.parseInteger[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="115518122" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1679388Z" end-time="2023-09-17T20:30:30.1690249Z" duration="0.001086" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('seven hundred and thirtieth', 'w;o')';&#xA; result: 730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$parseInteger('seven hundred and thirtieth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1791" name="function-parseInteger.parseInteger[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1182881955" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1690418Z" end-time="2023-09-17T20:30:30.1701538Z" duration="0.001112" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('Seven Hundred and Thirty-Third', 'Ww;o')';&#xA; result: 733" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '733'
Expr is '$parseInteger('Seven Hundred and Thirty-Third', 'Ww;o')'
]]></output>
                </test-case>
                <test-case id="0-1792" name="function-parseInteger.parseInteger[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="25111837" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1701707Z" end-time="2023-09-17T20:30:30.1713436Z" duration="0.001173" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousandth', 'w;o')';&#xA; result: 1000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$parseInteger('one thousandth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1793" name="function-parseInteger.parseInteger[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="667343599" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1713613Z" end-time="2023-09-17T20:30:30.1727116Z" duration="0.001351" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three thousand, seven hundred and thirty-first', 'w;o')';&#xA; result: 3731" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$parseInteger('three thousand, seven hundred and thirty-first', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1794" name="function-parseInteger.parseInteger[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1373888920" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1740563Z" end-time="2023-09-17T20:30:30.1758947Z" duration="0.001838" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirteenth', 'w;o')';&#xA; result: 327713" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirteenth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1795" name="function-parseInteger.parseInteger[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1136234852" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1771854Z" end-time="2023-09-17T20:30:30.1783626Z" duration="0.001177" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty-second', 'w;o')';&#xA; result: 4327732" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty-second', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1796" name="function-parseInteger.parseInteger[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="152599781" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1783979Z" end-time="2023-09-17T20:30:30.1798176Z" duration="0.001420" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion and first', 'w;o')';&#xA; result: 1000000000001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$parseInteger('one trillion and first', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1797" name="function-parseInteger.parseInteger[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1802776869" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1798369Z" end-time="2023-09-17T20:30:30.1824831Z" duration="0.002647" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('A', 'A')';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '1'
Expr is '$parseInteger('A', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1798" name="function-parseInteger.parseInteger[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="866565500" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1830829Z" end-time="2023-09-17T20:30:30.1841560Z" duration="0.001073" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('l', 'a')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('l', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1799" name="function-parseInteger.parseInteger[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="262534576" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1847314Z" end-time="2023-09-17T20:30:30.1862457Z" duration="0.001514" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('z', 'a')';&#xA; result: 26" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '26'
Expr is '$parseInteger('z', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1800" name="function-parseInteger.parseInteger[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="342215344" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1863656Z" end-time="2023-09-17T20:30:30.1881315Z" duration="0.001762" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('aa', 'a')';&#xA; result: 27" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '27'
Expr is '$parseInteger('aa', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1801" name="function-parseInteger.parseInteger[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1140717227" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1881487Z" end-time="2023-09-17T20:30:30.1892935Z" duration="0.001145" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('KN', 'A')';&#xA; result: 300" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '300'
Expr is '$parseInteger('KN', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1802" name="function-parseInteger.parseInteger[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1971131481" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.1894708Z" end-time="2023-09-17T20:30:30.1919232Z" duration="0.002437" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FZPH', 'A')';&#xA; result: 123456" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Description: '123456'
Expr is '$parseInteger('FZPH', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1803" name="function-parseInteger.parseInteger[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="269832779" result="Failed" start-time="2023-09-17T20:30:30.1919450Z" end-time="2023-09-17T20:30:30.1927139Z" duration="0.000769" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('50', '#')';&#xA; result: error D3130" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3130 (), got '50']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'unsupported picture string'
Expr is '$parseInteger('50', '#')'
Result: '50'
Expected error D3130
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3130 (), got '50']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1804" name="function-power.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="429991329" result="Passed" start-time="2023-09-17T20:30:30.1927300Z" end-time="2023-09-17T20:30:30.1929185Z" duration="0.000189" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(4, 2)';&#xA; result: 16" />
                  </properties>
                  <output><![CDATA[Expr is '$power(4, 2)'
Result: '16'
Expected: '16'
]]></output>
                </test-case>
                <test-case id="0-1805" name="function-power.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="864337407" result="Passed" start-time="2023-09-17T20:30:30.1929286Z" end-time="2023-09-17T20:30:30.1932798Z" duration="0.000351" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(4, 0.5)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$power(4, 0.5)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1806" name="function-power.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="294230490" result="Passed" start-time="2023-09-17T20:30:30.1936454Z" end-time="2023-09-17T20:30:30.1941651Z" duration="0.000520" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(10, -2)';&#xA; result: 0.01" />
                  </properties>
                  <output><![CDATA[Expr is '$power(10, -2)'
Result: '0.01'
Expected: '0.01'
]]></output>
                </test-case>
                <test-case id="0-1807" name="function-power.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1001817498" result="Passed" start-time="2023-09-17T20:30:30.1944759Z" end-time="2023-09-17T20:30:30.1945912Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(-2, 3)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$power(-2, 3)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1808" name="function-power.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1411737159" result="Passed" start-time="2023-09-17T20:30:30.1946066Z" end-time="2023-09-17T20:30:30.1947623Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(nothing, 3)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$power(nothing, 3)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1809" name="function-power.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="123786900" result="Passed" start-time="2023-09-17T20:30:30.1949124Z" end-time="2023-09-17T20:30:30.1956418Z" duration="0.000729" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$power(-2, 1/3)';&#xA; result: error D3061" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3061.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$power(-2, 1/3)'
]]></output>
                </test-case>
                <test-case id="0-1810" name="function-power.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="503377398" result="Passed" start-time="2023-09-17T20:30:30.1956568Z" end-time="2023-09-17T20:30:30.1975229Z" duration="0.001867" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$power(100, 1000)';&#xA; result: error D3061" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3061.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$power(100, 1000)'
]]></output>
                </test-case>
                <test-case id="0-1811" name="function-replace.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="96825940" result="Passed" start-time="2023-09-17T20:30:30.1975503Z" end-time="2023-09-17T20:30:30.2037790Z" duration="0.006229" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;Hello World&quot;, &quot;World&quot;, &quot;Everyone&quot;)';&#xA; result: &quot;Hello Everyone&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("Hello World", "World", "Everyone")'
Result: '"Hello Everyone"'
Expected: '"Hello Everyone"'
]]></output>
                </test-case>
                <test-case id="0-1812" name="function-replace.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1078357001" result="Passed" start-time="2023-09-17T20:30:30.2038198Z" end-time="2023-09-17T20:30:30.2041074Z" duration="0.000288" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;)';&#xA; result: &quot;the cit sit on the mit&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it")'
Result: '"the cit sit on the mit"'
Expected: '"the cit sit on the mit"'
]]></output>
                </test-case>
                <test-case id="0-1813" name="function-replace.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1972123338" result="Passed" start-time="2023-09-17T20:30:30.2044608Z" end-time="2023-09-17T20:30:30.2046329Z" duration="0.000172" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;, 0)';&#xA; result: &quot;the cat sat on the mat&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it", 0)'
Result: '"the cat sat on the mat"'
Expected: '"the cat sat on the mat"'
]]></output>
                </test-case>
                <test-case id="0-1814" name="function-replace.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="917730996" result="Passed" start-time="2023-09-17T20:30:30.2046471Z" end-time="2023-09-17T20:30:30.2047346Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;, 2)';&#xA; result: &quot;the cit sit on the mat&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it", 2)'
Result: '"the cit sit on the mat"'
Expected: '"the cit sit on the mat"'
]]></output>
                </test-case>
                <test-case id="0-1815" name="function-replace.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="251987606" result="Passed" start-time="2023-09-17T20:30:30.2047427Z" end-time="2023-09-17T20:30:30.2048057Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(nothing, &quot;at&quot;, &quot;it&quot;, 2)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$replace(nothing, "at", "it", 2)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1816" name="function-replace.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1047900064" result="Passed" start-time="2023-09-17T20:30:30.2053009Z" end-time="2023-09-17T20:30:30.2075270Z" duration="0.002226" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello")'
]]></output>
                </test-case>
                <test-case id="0-1817" name="function-replace.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="378100716" result="Passed" start-time="2023-09-17T20:30:30.2081989Z" end-time="2023-09-17T20:30:30.2088213Z" duration="0.000622" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;l&quot;, &quot;1&quot;, null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "l", "1", null)'
]]></output>
                </test-case>
                <test-case id="0-1818" name="function-replace.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2886189" result="Passed" start-time="2023-09-17T20:30:30.2093112Z" end-time="2023-09-17T20:30:30.2101380Z" duration="0.000827" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;l&quot;, &quot;1&quot;, -2)';&#xA; result: error D3011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3011.
Actually thrown D3011.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "l", "1", -2)'
]]></output>
                </test-case>
                <test-case id="0-1819" name="function-replace.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="772560504" result="Passed" start-time="2023-09-17T20:30:30.2101707Z" end-time="2023-09-17T20:30:30.2110226Z" duration="0.000852" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", 1)'
]]></output>
                </test-case>
                <test-case id="0-1820" name="function-replace.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1556406201" result="Passed" start-time="2023-09-17T20:30:30.2110677Z" end-time="2023-09-17T20:30:30.2128246Z" duration="0.001757" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;&quot;, &quot;bye&quot;)';&#xA; result: error D3010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3010.
Actually thrown D3010.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "", "bye")'
]]></output>
                </test-case>
                <test-case id="0-1821" name="function-replace.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="884220089" result="Passed" start-time="2023-09-17T20:30:30.2135518Z" end-time="2023-09-17T20:30:30.2145153Z" duration="0.000963" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, 2, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", 2, 1)'
]]></output>
                </test-case>
                <test-case id="0-1822" name="function-replace.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1531803448" result="Passed" start-time="2023-09-17T20:30:30.2158404Z" end-time="2023-09-17T20:30:30.2166267Z" duration="0.000786" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(123, 2, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace(123, 2, 1)'
]]></output>
                </test-case>
                <test-case id="0-1823" name="function-reverse.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1543295401" result="Passed" start-time="2023-09-17T20:30:30.2166433Z" end-time="2023-09-17T20:30:30.2179586Z" duration="0.001316" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse([1..5])';&#xA; result: [5,4,3,2,1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse([1..5])'
Result: '[5,4,3,2,1]'
Expected: '[5,4,3,2,1]'
]]></output>
                </test-case>
                <test-case id="0-1824" name="function-reverse.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1018349745" result="Passed" start-time="2023-09-17T20:30:30.2180996Z" end-time="2023-09-17T20:30:30.2183094Z" duration="0.000209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[[$], [$reverse($)], [$]]';&#xA; result: [[1,2,3],[3,2,1],[1,2,3]]" />
                  </properties>
                  <output><![CDATA[Expr is '[[$], [$reverse($)], [$]]'
Result: '[[1,2,3],[3,2,1],[1,2,3]]'
Expected: '[[1,2,3],[3,2,1],[1,2,3]]'
]]></output>
                </test-case>
                <test-case id="0-1825" name="function-reverse.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="826715171" result="Passed" start-time="2023-09-17T20:30:30.2184620Z" end-time="2023-09-17T20:30:30.2187339Z" duration="0.000272" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1826" name="function-reverse.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="163609750" result="Passed" start-time="2023-09-17T20:30:30.2187618Z" end-time="2023-09-17T20:30:30.2188522Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1827" name="function-round.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1427882411" result="Passed" start-time="2023-09-17T20:30:30.2190405Z" end-time="2023-09-17T20:30:30.2195180Z" duration="0.000477" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1828" name="function-round.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="72965292" result="Passed" start-time="2023-09-17T20:30:30.2195326Z" end-time="2023-09-17T20:30:30.2196724Z" duration="0.000140" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.3)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.3)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1829" name="function-round.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2029496853" result="Passed" start-time="2023-09-17T20:30:30.2208531Z" end-time="2023-09-17T20:30:30.2209620Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.7)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.7)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1830" name="function-round.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="400544164" result="Passed" start-time="2023-09-17T20:30:30.2215654Z" end-time="2023-09-17T20:30:30.2216646Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.5)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.5)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1831" name="function-round.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="610290349" result="Passed" start-time="2023-09-17T20:30:30.2220244Z" end-time="2023-09-17T20:30:30.2222076Z" duration="0.000183" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(3.5)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$round(3.5)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1832" name="function-round.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="367242310" result="Passed" start-time="2023-09-17T20:30:30.2230780Z" end-time="2023-09-17T20:30:30.2231912Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-0.5)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-0.5)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1833" name="function-round.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1592791097" result="Passed" start-time="2023-09-17T20:30:30.2242474Z" end-time="2023-09-17T20:30:30.2246152Z" duration="0.000367" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-0.3)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-0.3)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1834" name="function-round.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1821227545" result="Passed" start-time="2023-09-17T20:30:30.2252928Z" end-time="2023-09-17T20:30:30.2255158Z" duration="0.000223" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(0.5)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(0.5)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1835" name="function-round.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2034435459" result="Passed" start-time="2023-09-17T20:30:30.2259701Z" end-time="2023-09-17T20:30:30.2261475Z" duration="0.000177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-7.5)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-7.5)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1836" name="function-round.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1089687968" result="Passed" start-time="2023-09-17T20:30:30.2269627Z" end-time="2023-09-17T20:30:30.2271781Z" duration="0.000215" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-8.5)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-8.5)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1837" name="function-round.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1630140016" result="Passed" start-time="2023-09-17T20:30:30.2280185Z" end-time="2023-09-17T20:30:30.2282096Z" duration="0.000191" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.49, 1)';&#xA; result: 4.5" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.49, 1)'
Result: '4.5'
Expected: '4.5'
]]></output>
                </test-case>
                <test-case id="0-1838" name="function-round.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="48496468" result="Passed" start-time="2023-09-17T20:30:30.2287042Z" end-time="2023-09-17T20:30:30.2288548Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.525, 2)';&#xA; result: 4.52" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.525, 2)'
Result: '4.52'
Expected: '4.52'
]]></output>
                </test-case>
                <test-case id="0-1839" name="function-round.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1993709818" result="Passed" start-time="2023-09-17T20:30:30.2289163Z" end-time="2023-09-17T20:30:30.2299466Z" duration="0.001030" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.515, 2)';&#xA; result: 4.52" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.515, 2)'
Result: '4.52'
Expected: '4.52'
]]></output>
                </test-case>
                <test-case id="0-1840" name="function-round.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2001057859" result="Passed" start-time="2023-09-17T20:30:30.2305650Z" end-time="2023-09-17T20:30:30.2306909Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12345, -2)';&#xA; result: 12300" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12345, -2)'
Result: '12300'
Expected: '12300'
]]></output>
                </test-case>
                <test-case id="0-1841" name="function-round.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1669083843" result="Passed" start-time="2023-09-17T20:30:30.2312678Z" end-time="2023-09-17T20:30:30.2331916Z" duration="0.001924" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12450, -2)';&#xA; result: 12400" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12450, -2)'
Result: '12400'
Expected: '12400'
]]></output>
                </test-case>
                <test-case id="0-1842" name="function-round.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="250817076" result="Passed" start-time="2023-09-17T20:30:30.2332107Z" end-time="2023-09-17T20:30:30.2333627Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12350, -2)';&#xA; result: 12400" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12350, -2)'
Result: '12400'
Expected: '12400'
]]></output>
                </test-case>
                <test-case id="0-1843" name="function-round.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1689023267" result="Passed" start-time="2023-09-17T20:30:30.2333726Z" end-time="2023-09-17T20:30:30.2334696Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(6.022e-23, 24)';&#xA; result: 6E-23" />
                  </properties>
                  <output><![CDATA[Expr is '$round(6.022e-23, 24)'
Result: '0.000000000000000000000060'
Expected: '6E-23'
]]></output>
                </test-case>
                <test-case id="0-1844" name="function-round.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="169958953" result="Passed" start-time="2023-09-17T20:30:30.2337986Z" end-time="2023-09-17T20:30:30.2340199Z" duration="0.000221" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(unknown)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$round(unknown)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1845" name="function-shuffle.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="18692182" result="Passed" start-time="2023-09-17T20:30:30.2341264Z" end-time="2023-09-17T20:30:30.2359398Z" duration="0.001814" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count($shuffle([1..10]))';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$count($shuffle([1..10]))'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1846" name="function-shuffle.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="104524954" result="Passed" start-time="2023-09-17T20:30:30.2359601Z" end-time="2023-09-17T20:30:30.2369561Z" duration="0.000996" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort($shuffle([1..10]))';&#xA; result: [1,2,3,4,5,6,7,8,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort($shuffle([1..10]))'
Result: '[1,2,3,4,5,6,7,8,9,10]'
Expected: '[1,2,3,4,5,6,7,8,9,10]'
]]></output>
                </test-case>
                <test-case id="0-1847" name="function-shuffle.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="200472146" result="Passed" start-time="2023-09-17T20:30:30.2370750Z" end-time="2023-09-17T20:30:30.2371923Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$shuffle(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$shuffle(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1848" name="function-shuffle.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1897096250" result="Passed" start-time="2023-09-17T20:30:30.2372001Z" end-time="2023-09-17T20:30:30.2372693Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$shuffle([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$shuffle([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1849" name="function-sift.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1121901314" result="Passed" start-time="2023-09-17T20:30:30.2385072Z" end-time="2023-09-17T20:30:30.2401055Z" duration="0.001598" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift(λ($v){$v.**.Postcode})';&#xA; result: {&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;},&quot;Other&quot;:{&quot;Over 18 ?&quot;:true,&quot;Misc&quot;:null,&quot;Alternative.Address&quot;:{&quot;Street&quot;:&quot;Brick Lane&quot;,&quot;City&quot;:&quot;London&quot;,&quot;Postcode&quot;:&quot;E1 6RF&quot;}}}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift(λ($v){$v.**.Postcode})'
Result: '{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"},"Other":{"Over 18 ?":true,"Misc":null,"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}}'
Expected: '{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"},"Other":{"Over 18 ?":true,"Misc":null,"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}}'
]]></output>
                </test-case>
                <test-case id="0-1850" name="function-sift.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="88334788" result="Passed" start-time="2023-09-17T20:30:30.2421927Z" end-time="2023-09-17T20:30:30.2432507Z" duration="0.001058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**[*].$sift(λ($v){$v.Postcode})';&#xA; result: [{&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;}},{&quot;Alternative.Address&quot;:{&quot;Street&quot;:&quot;Brick Lane&quot;,&quot;City&quot;:&quot;London&quot;,&quot;Postcode&quot;:&quot;E1 6RF&quot;}}]" />
                  </properties>
                  <output><![CDATA[Expr is '**[*].$sift(λ($v){$v.Postcode})'
Result: '[{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}},{"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}]'
Expected: '[{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}},{"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}]'
]]></output>
                </test-case>
                <test-case id="0-1851" name="function-sift.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1921982712" result="Passed" start-time="2023-09-17T20:30:30.2452026Z" end-time="2023-09-17T20:30:30.2468660Z" duration="0.001663" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift(λ($v, $k){$k ~&gt; /^A/})';&#xA; result: {&quot;Age&quot;:28,&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift(λ($v, $k){$k ~> /^A/})'
Result: '{"Age":28,"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}}'
Expected: '{"Age":28,"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}}'
]]></output>
                </test-case>
                <test-case id="0-1852" name="function-sift.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1799890680" result="Passed" start-time="2023-09-17T20:30:30.2470820Z" end-time="2023-09-17T20:30:30.2474435Z" duration="0.000361" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift({'a': 1, 'b': 0}, $boolean)';&#xA; result: {&quot;a&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift({'a': 1, 'b': 0}, $boolean)'
Result: '{"a":1}'
Expected: '{"a":1}'
]]></output>
                </test-case>
                <test-case id="0-1853" name="function-sift.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="94004996" result="Passed" start-time="2023-09-17T20:30:30.2484089Z" end-time="2023-09-17T20:30:30.2485887Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift({'a': 'hello', 'b': 'world', 'hello': 'again'}, λ($v,$k,$o){$lookup($o, $v)})';&#xA; result: {&quot;a&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift({'a': 'hello', 'b': 'world', 'hello': 'again'}, λ($v,$k,$o){$lookup($o, $v)})'
Result: '{"a":"hello"}'
Expected: '{"a":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1854" name="function-signatures.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="853612022" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2491646Z" end-time="2023-09-17T20:30:30.2571239Z" duration="0.007960" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;b:b&gt;{$not($arg)}(true)';&#xA; result: false" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<b:b>{$not($arg)}(true)'
]]></output>
                </test-case>
                <test-case id="0-1855" name="function-signatures.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1605478902" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2571481Z" end-time="2023-09-17T20:30:30.2576324Z" duration="0.000485" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;b:b&gt;{$not($arg)}(foo)';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<b:b>{$not($arg)}(foo)'
]]></output>
                </test-case>
                <test-case id="0-1856" name="function-signatures.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1756397426" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2577641Z" end-time="2023-09-17T20:30:30.2587992Z" duration="0.001035" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;x:b&gt;{$not($arg)}(null)';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<x:b>{$not($arg)}(null)'
]]></output>
                </test-case>
                <test-case id="0-1857" name="function-signatures.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="427836080" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2604024Z" end-time="2023-09-17T20:30:30.2618608Z" duration="0.001458" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'function($x,$y)&lt;n-n:n&gt;{$x+$y}(2, 6)';&#xA; result: 8" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'function($x,$y)<n-n:n>{$x+$y}(2, 6)'
]]></output>
                </test-case>
                <test-case id="0-1858" name="function-signatures.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1398966681" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2618905Z" end-time="2023-09-17T20:30:30.2628398Z" duration="0.000950" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].function($x,$y)&lt;n-n:n&gt;{$x+$y}(6)';&#xA; result: [7,8,9,10,11]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1279
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1243
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].function($x,$y)<n-n:n>{$x+$y}(6)'
]]></output>
                </test-case>
                <test-case id="0-1859" name="function-signatures.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1750759805" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2628959Z" end-time="2023-09-17T20:30:30.2637273Z" duration="0.000831" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].function($x,$y)&lt;n-n:n&gt;{$x+$y}(2, 6)';&#xA; result: [8,8,8,8,8]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1279
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1243
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].function($x,$y)<n-n:n>{$x+$y}(2, 6)'
]]></output>
                </test-case>
                <test-case id="0-1860" name="function-signatures.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="700727657" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2637439Z" end-time="2023-09-17T20:30:30.2645632Z" duration="0.000820" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Age.function($x,$y)&lt;n-n:n&gt;{$x+$y}(6)';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1279
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1243
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Age.function($x,$y)<n-n:n>{$x+$y}(6)'
]]></output>
                </test-case>
                <test-case id="0-1861" name="function-signatures.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1013831726" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2645955Z" end-time="2023-09-17T20:30:30.2664146Z" duration="0.001819" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($str)&lt;s-&gt;{$uppercase($str)}(&quot;hello&quot;)';&#xA; result: &quot;HELLO&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($str)<s->{$uppercase($str)}("hello")'
]]></output>
                </test-case>
                <test-case id="0-1862" name="function-signatures.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="928852206" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2673004Z" end-time="2023-09-17T20:30:30.2685441Z" duration="0.001244" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.Colour.λ($str)&lt;s-&gt;{$uppercase($str)}()';&#xA; result: [&quot;PURPLE&quot;,&quot;ORANGE&quot;,&quot;PURPLE&quot;,&quot;BLACK&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1279
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1243
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.Colour.λ($str)<s->{$uppercase($str)}()'
]]></output>
                </test-case>
                <test-case id="0-1863" name="function-signatures.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1529723953" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2701898Z" end-time="2023-09-17T20:30:30.2711169Z" duration="0.000927" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($str, $prefix)&lt;s-s&gt;{$prefix &amp; $str}(&quot;World&quot;, &quot;Hello &quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($str, $prefix)<s-s>{$prefix & $str}("World", "Hello ")'
]]></output>
                </test-case>
                <test-case id="0-1864" name="function-signatures.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1870726383" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2711344Z" end-time="2023-09-17T20:30:30.2721016Z" duration="0.000968" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'FirstName.λ($str, $prefix)&lt;s-s&gt;{$prefix &amp; $str}(&quot;Hello &quot;)';&#xA; result: &quot;Hello Fred&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1279
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1243
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'FirstName.λ($str, $prefix)<s-s>{$prefix & $str}("Hello ")'
]]></output>
                </test-case>
                <test-case id="0-1865" name="function-signatures.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2040570696" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2721863Z" end-time="2023-09-17T20:30:30.2733733Z" duration="0.001187" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(&quot;a&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}("a")'
]]></output>
                </test-case>
                <test-case id="0-1866" name="function-signatures.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1877067277" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2743767Z" end-time="2023-09-17T20:30:30.2750309Z" duration="0.000654" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;])';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a"])'
]]></output>
                </test-case>
                <test-case id="0-1867" name="function-signatures.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1633049551" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2750464Z" end-time="2023-09-17T20:30:30.2763969Z" duration="0.001351" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(&quot;a&quot;, &quot;-&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}("a", "-")'
]]></output>
                </test-case>
                <test-case id="0-1868" name="function-signatures.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="150895793" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2764491Z" end-time="2023-09-17T20:30:30.2773058Z" duration="0.000857" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;], &quot;-&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1869" name="function-signatures.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1030779184" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2774832Z" end-time="2023-09-17T20:30:30.2785325Z" duration="0.001049" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;, &quot;b&quot;], &quot;-&quot;)';&#xA; result: &quot;a-b&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a", "b"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1870" name="function-signatures.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1309783285" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2785500Z" end-time="2023-09-17T20:30:30.2801454Z" duration="0.001596" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;as?:s&gt;{$join($arr, $sep)}([&quot;a&quot;, &quot;b&quot;], &quot;-&quot;)';&#xA; result: &quot;a-b&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<as?:s>{$join($arr, $sep)}(["a", "b"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1871" name="function-signatures.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1565243695" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2801643Z" end-time="2023-09-17T20:30:30.2809496Z" duration="0.000786" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([], &quot;-&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}([], "-")'
]]></output>
                </test-case>
                <test-case id="0-1872" name="function-signatures.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="329604248" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2809669Z" end-time="2023-09-17T20:30:30.2817600Z" duration="0.000794" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(foo, &quot;-&quot;)';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(foo, "-")'
]]></output>
                </test-case>
                <test-case id="0-1873" name="function-signatures.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="156660018" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2817761Z" end-time="2023-09-17T20:30:30.2824670Z" duration="0.000691" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($obj)&lt;o&gt;{$obj}({&quot;hello&quot;: &quot;world&quot;})';&#xA; result: {&quot;hello&quot;:&quot;world&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($obj)<o>{$obj}({"hello": "world"})'
]]></output>
                </test-case>
                <test-case id="0-1874" name="function-signatures.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="918986292" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2824830Z" end-time="2023-09-17T20:30:30.2834610Z" duration="0.000978" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;a&lt;n&gt;&gt;&gt;{$arr}([[1]])';&#xA; result: [[1]]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<a<n>>>{$arr}([[1]])'
]]></output>
                </test-case>
                <test-case id="0-1875" name="function-signatures.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2034806005" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2835999Z" end-time="2023-09-17T20:30:30.2843646Z" duration="0.000765" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($num)&lt;(ns)-:n&gt;{$number($num)}(5)';&#xA; result: 5" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($num)<(ns)-:n>{$number($num)}(5)'
]]></output>
                </test-case>
                <test-case id="0-1876" name="function-signatures.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="633403013" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2848905Z" end-time="2023-09-17T20:30:30.2859766Z" duration="0.001086" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($num)&lt;(ns)-:n&gt;{$number($num)}(&quot;5&quot;)';&#xA; result: 5" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($num)<(ns)-:n>{$number($num)}("5")'
]]></output>
                </test-case>
                <test-case id="0-1877" name="function-signatures.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1990263828" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2862286Z" end-time="2023-09-17T20:30:30.2879455Z" duration="0.001717" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].λ($num)&lt;(ns)-:n&gt;{$number($num)}()';&#xA; result: [1,2,3,4,5]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, EvaluationEnvironment env, Boolean lastStep) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1279
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 1243
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].λ($num)<(ns)-:n>{$number($num)}()'
]]></output>
                </test-case>
                <test-case id="0-1878" name="function-signatures.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1373336448" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2879653Z" end-time="2023-09-17T20:30:30.2891175Z" duration="0.001152" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($twice := function($f)&lt;f:f&gt;{function($x)&lt;n:n&gt;{$f($f($x))}};$add2 := function($x)&lt;n:n&gt;{$x+2};$add4 := $twice($add2);$add4(5))';&#xA; result: 9" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($twice := function($f)<f:f>{function($x)<n:n>{$f($f($x))}};$add2 := function($x)<n:n>{$x+2};$add4 := $twice($add2);$add4(5))'
]]></output>
                </test-case>
                <test-case id="0-1879" name="function-signatures.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="999657563" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2891501Z" end-time="2023-09-17T20:30:30.2900004Z" duration="0.000850" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($twice := function($f)&lt;f&lt;n:n&gt;:f&lt;n:n&gt;&gt;{function($x)&lt;n:n&gt;{$f($f($x))}};$add2 := function($x)&lt;n:n&gt;{$x+2};$add4 := $twice($add2);$add4(5))';&#xA; result: 9" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 427
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($twice := function($f)<f<n:n>:f<n:n>>{function($x)<n:n>{$f($f($x))}};$add2 := function($x)<n:n>{$x+2};$add4 := $twice($add2);$add4(5))'
]]></output>
                </test-case>
                <test-case id="0-1880" name="function-signatures.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="722190217" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2900174Z" end-time="2023-09-17T20:30:30.2912208Z" duration="0.001204" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;n&lt;n&gt;&gt;{$arg}(5)';&#xA; result: error S0401" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<n<n>>{$arg}(5)'
]]></output>
                </test-case>
                <test-case id="0-1881" name="function-signatures.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2110621251" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2913158Z" end-time="2023-09-17T20:30:30.2929360Z" duration="0.001620" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn:a&gt;{[$arg1, $arg2]}(1,&quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn:a>{[$arg1, $arg2]}(1,"2")'
]]></output>
                </test-case>
                <test-case id="0-1882" name="function-signatures.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1678269808" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2929548Z" end-time="2023-09-17T20:30:30.2937617Z" duration="0.000807" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn:a&gt;{[$arg1, $arg2]}(1,3,&quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn:a>{[$arg1, $arg2]}(1,3,"2")'
]]></output>
                </test-case>
                <test-case id="0-1883" name="function-signatures.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1098547625" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2938027Z" end-time="2023-09-17T20:30:30.2946225Z" duration="0.000820" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn+:a&gt;{[$arg1, $arg2]}(1,3, 2,&quot;g&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn+:a>{[$arg1, $arg2]}(1,3, 2,"g")'
]]></output>
                </test-case>
                <test-case id="0-1884" name="function-signatures.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1941162065" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2946703Z" end-time="2023-09-17T20:30:30.2953414Z" duration="0.000671" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}([&quot;3&quot;]) ';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}(["3"]) '
]]></output>
                </test-case>
                <test-case id="0-1885" name="function-signatures.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="626045099" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2953591Z" end-time="2023-09-17T20:30:30.2958512Z" duration="0.000492" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}([1, 2, &quot;3&quot;]) ';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}([1, 2, "3"]) '
]]></output>
                </test-case>
                <test-case id="0-1886" name="function-signatures.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="957883316" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2958657Z" end-time="2023-09-17T20:30:30.2968300Z" duration="0.000965" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}(&quot;f&quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}("f")'
]]></output>
                </test-case>
                <test-case id="0-1887" name="function-signatures.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="273237314" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2968946Z" end-time="2023-09-17T20:30:30.2979149Z" duration="0.001020" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($fun := λ($arr)&lt;a&lt;n&gt;&gt;{$arr};$fun(&quot;f&quot;))';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($fun := λ($arr)<a<n>>{$arr};$fun("f"))'
]]></output>
                </test-case>
                <test-case id="0-1888" name="function-signatures.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="739179075" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.2979322Z" end-time="2023-09-17T20:30:30.2991435Z" duration="0.001212" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;(sa&lt;n&gt;)&gt;&gt;{$arr}([[1]])';&#xA; result: error S0402" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to parse lambda signature: Unexpected param type char '<'. Remainder string '<n>)>', Whole string was: '<(sa<n>)>'
(Exception)
   at Jsonata.Net.Native.Parsing.SignatureParser.Parse(String str) in /_/src/Jsonata.Net.Native/Parsing/SignatureParser.cs:line 32
   at Jsonata.Net.Native.Parsing.Parser.ParseLambdaDefinition(Boolean isShorthand) in /_/src/Jsonata.Net.Native/Parsing/Parser_Leds.cs:line 58
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 231
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<(sa<n>)>>{$arr}([[1]])'
]]></output>
                </test-case>
                <test-case id="0-1889" name="function-sort.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="215748643" result="Passed" start-time="2023-09-17T20:30:30.2992878Z" end-time="2023-09-17T20:30:30.2997367Z" duration="0.000449" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1890" name="function-sort.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="278038033" result="Passed" start-time="2023-09-17T20:30:30.3001379Z" end-time="2023-09-17T20:30:30.3004110Z" duration="0.000273" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(1)';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(1)'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1891" name="function-sort.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="661851888" result="Passed" start-time="2023-09-17T20:30:30.3013897Z" end-time="2023-09-17T20:30:30.3015582Z" duration="0.000168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort([1,3,2])';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort([1,3,2])'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1892" name="function-sort.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="231173335" result="Passed" start-time="2023-09-17T20:30:30.3023390Z" end-time="2023-09-17T20:30:30.3024798Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort([1,3,22,11])';&#xA; result: [1,3,11,22]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort([1,3,22,11])'
Result: '[1,3,11,22]'
Expected: '[1,3,11,22]'
]]></output>
                </test-case>
                <test-case id="0-1893" name="function-sort.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="445220310" result="Passed" start-time="2023-09-17T20:30:30.3033066Z" end-time="2023-09-17T20:30:30.3034277Z" duration="0.000121" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[[$], [$sort($)], [$]]';&#xA; result: [[1,3,2],[1,2,3],[1,3,2]]" />
                  </properties>
                  <output><![CDATA[Expr is '[[$], [$sort($)], [$]]'
Result: '[[1,3,2],[1,2,3],[1,3,2]]'
Expected: '[[1,3,2],[1,2,3],[1,3,2]]'
]]></output>
                </test-case>
                <test-case id="0-1894" name="function-sort.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1292982161" result="Passed" start-time="2023-09-17T20:30:30.3040246Z" end-time="2023-09-17T20:30:30.3042045Z" duration="0.000180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product.Price)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product.Price)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1895" name="function-sort.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="987226133" result="Passed" start-time="2023-09-17T20:30:30.3045982Z" end-time="2023-09-17T20:30:30.3054794Z" duration="0.000881" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product.&quot;Product Name&quot;)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Bowler Hat&quot;,&quot;Cloak&quot;,&quot;Trilby hat&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product."Product Name")'
Result: '["Bowler Hat","Bowler Hat","Cloak","Trilby hat"]'
Expected: '["Bowler Hat","Bowler Hat","Cloak","Trilby hat"]'
]]></output>
                </test-case>
                <test-case id="0-1896" name="function-sort.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="740231637" result="Passed" start-time="2023-09-17T20:30:30.3054967Z" end-time="2023-09-17T20:30:30.3074585Z" duration="0.001962" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product)';&#xA; result: error D3070" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3070.
Actually thrown D3070.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product)'
]]></output>
                </test-case>
                <test-case id="0-1897" name="function-sort.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="868576770" result="Passed" start-time="2023-09-17T20:30:30.3083165Z" end-time="2023-09-17T20:30:30.3089061Z" duration="0.000590" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product, function($a, $b) { $a.(Price * Quantity) &gt; $b.(Price * Quantity) }).(Price &amp; &quot; x &quot; &amp; Quantity)';&#xA; result: [&quot;21.67 x 1&quot;,&quot;34.45 x 2&quot;,&quot;107.99 x 1&quot;,&quot;34.45 x 4&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product, function($a, $b) { $a.(Price * Quantity) > $b.(Price * Quantity) }).(Price & " x " & Quantity)'
Result: '["21.67 x 1","34.45 x 2","107.99 x 1","34.45 x 4"]'
Expected: '["21.67 x 1","34.45 x 2","107.99 x 1","34.45 x 4"]'
]]></output>
                </test-case>
                <test-case id="0-1898" name="function-sort.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1965780531" result="Failed" start-time="2023-09-17T20:30:30.3090705Z" end-time="2023-09-17T20:30:30.3103840Z" duration="0.001314" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product, function($a, $b) { $a.Price &gt; $b.Price }).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '["0406634348","0406654608","040657863","0406654603"]', got '["0406634348","040657863","0406654608","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product, function($a, $b) { $a.Price > $b.Price }).SKU'
Result: '["0406634348","040657863","0406654608","0406654603"]'
Expected: '["0406634348","0406654608","040657863","0406654603"]'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '["0406634348","0406654608","040657863","0406654603"]', got '["0406634348","040657863","0406654608","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1899" name="function-sort.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="276871904" result="Failed" start-time="2023-09-17T20:30:30.3104044Z" end-time="2023-09-17T20:30:30.3113464Z" duration="0.000942" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&#xA;                (Account.Order.Product&#xA;                  ~&gt; $sort(λ($a,$b){$a.Quantity &lt; $b.Quantity})&#xA;                  ~&gt; $sort(λ($a,$b){$a.Price &gt; $b.Price})&#xA;                ).SKU&#xA;            ';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654608&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '["0406634348","040657863","0406654608","0406654603"]', got '["0406634348","0406654608","040657863","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '
                (Account.Order.Product
                  ~> $sort(λ($a,$b){$a.Quantity < $b.Quantity})
                  ~> $sort(λ($a,$b){$a.Price > $b.Price})
                ).SKU
            '
Result: '["0406634348","0406654608","040657863","0406654603"]'
Expected: '["0406634348","040657863","0406654608","0406654603"]'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '["0406634348","040657863","0406654608","0406654603"]', got '["0406634348","0406654608","040657863","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1900" name="function-split.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="289108552" result="Passed" start-time="2023-09-17T20:30:30.3113631Z" end-time="2023-09-17T20:30:30.3154020Z" duration="0.004039" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;,&quot;World&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello World", " ")'
Result: '["Hello","World"]'
Expected: '["Hello","World"]'
]]></output>
                </test-case>
                <test-case id="0-1901" name="function-split.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="618959050" result="Passed" start-time="2023-09-17T20:30:30.3154232Z" end-time="2023-09-17T20:30:30.3167405Z" duration="0.001318" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello", " ")'
Result: '["Hello"]'
Expected: '["Hello"]'
]]></output>
                </test-case>
                <test-case id="0-1902" name="function-split.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="49576353" result="Passed" start-time="2023-09-17T20:30:30.3167564Z" end-time="2023-09-17T20:30:30.3168971Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello  World&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;,&quot;&quot;,&quot;World&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello  World", " ")'
Result: '["Hello","","World"]'
Expected: '["Hello","","World"]'
]]></output>
                </test-case>
                <test-case id="0-1903" name="function-split.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="866317066" result="Passed" start-time="2023-09-17T20:30:30.3169483Z" end-time="2023-09-17T20:30:30.3170363Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello&quot;, &quot;&quot;)';&#xA; result: [&quot;H&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello", "")'
Result: '["H","e","l","l","o"]'
Expected: '["H","e","l","l","o"]'
]]></output>
                </test-case>
                <test-case id="0-1904" name="function-split.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1959601676" result="Passed" start-time="2023-09-17T20:30:30.3170448Z" end-time="2023-09-17T20:30:30.3171387Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum($split(&quot;12345&quot;, &quot;&quot;).$number($))';&#xA; result: 15" />
                  </properties>
                  <output><![CDATA[Expr is '$sum($split("12345", "").$number($))'
Result: '15'
Expected: '15'
]]></output>
                </test-case>
                <test-case id="0-1905" name="function-split.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="670574740" result="Passed" start-time="2023-09-17T20:30:30.3171747Z" end-time="2023-09-17T20:30:30.3182641Z" duration="0.001089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;)';&#xA; result: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ")'
Result: '["a","b","c","d"]'
Expected: '["a","b","c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1906" name="function-split.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1592378464" result="Passed" start-time="2023-09-17T20:30:30.3185370Z" end-time="2023-09-17T20:30:30.3187502Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 2)';&#xA; result: [&quot;a&quot;,&quot;b&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 2)'
Result: '["a","b"]'
Expected: '["a","b"]'
]]></output>
                </test-case>
                <test-case id="0-1907" name="function-split.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1643230662" result="Passed" start-time="2023-09-17T20:30:30.3188818Z" end-time="2023-09-17T20:30:30.3191360Z" duration="0.000254" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 2.5)';&#xA; result: [&quot;a&quot;,&quot;b&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 2.5)'
Result: '["a","b"]'
Expected: '["a","b"]'
]]></output>
                </test-case>
                <test-case id="0-1908" name="function-split.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1322502351" result="Passed" start-time="2023-09-17T20:30:30.3191830Z" end-time="2023-09-17T20:30:30.3192760Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 10)';&#xA; result: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 10)'
Result: '["a","b","c","d"]'
Expected: '["a","b","c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1909" name="function-split.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="966289664" result="Passed" start-time="2023-09-17T20:30:30.3192859Z" end-time="2023-09-17T20:30:30.3197940Z" duration="0.000508" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 0)';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 0)'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-1910" name="function-split.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="972075889" result="Passed" start-time="2023-09-17T20:30:30.3198071Z" end-time="2023-09-17T20:30:30.3198724Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(nothing, &quot; &quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$split(nothing, " ")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1911" name="function-split.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1913617245" result="Passed" start-time="2023-09-17T20:30:30.3198800Z" end-time="2023-09-17T20:30:30.3230051Z" duration="0.003126" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, -3)';&#xA; result: error D3020" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3020.
Actually thrown D3020.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", -3)'
]]></output>
                </test-case>
                <test-case id="0-1912" name="function-split.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1201983279" result="Passed" start-time="2023-09-17T20:30:30.3238134Z" end-time="2023-09-17T20:30:30.3251963Z" duration="0.001383" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", null)'
]]></output>
                </test-case>
                <test-case id="0-1913" name="function-split.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="399309118" result="Passed" start-time="2023-09-17T20:30:30.3259145Z" end-time="2023-09-17T20:30:30.3274435Z" duration="0.001529" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, -5)';&#xA; result: error D3020" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3020.
Actually thrown D3020.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", -5)'
]]></output>
                </test-case>
                <test-case id="0-1914" name="function-split.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1028569588" result="Passed" start-time="2023-09-17T20:30:30.3295094Z" end-time="2023-09-17T20:30:30.3310644Z" duration="0.001555" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, &quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", "2")'
]]></output>
                </test-case>
                <test-case id="0-1915" name="function-split.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="737590053" result="Passed" start-time="2023-09-17T20:30:30.3321418Z" end-time="2023-09-17T20:30:30.3351730Z" duration="0.003031" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, true)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", true)'
]]></output>
                </test-case>
                <test-case id="0-1916" name="function-split.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1483045565" result="Passed" start-time="2023-09-17T20:30:30.3362804Z" end-time="2023-09-17T20:30:30.3381943Z" duration="0.001914" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(12345, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split(12345, 3)'
]]></output>
                </test-case>
                <test-case id="0-1917" name="function-split.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1977788228" result="Passed" start-time="2023-09-17T20:30:30.3386773Z" end-time="2023-09-17T20:30:30.3392205Z" duration="0.000543" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(12345)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split(12345)'
]]></output>
                </test-case>
                <test-case id="0-1918" name="function-split.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1736045535" result="Passed" start-time="2023-09-17T20:30:30.3392369Z" end-time="2023-09-17T20:30:30.3393580Z" duration="0.000121" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split('12💩345💩6', '💩')';&#xA; result: [&quot;12&quot;,&quot;345&quot;,&quot;6&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split('12💩345💩6', '💩')'
Result: '["12","345","6"]'
Expected: '["12","345","6"]'
]]></output>
                </test-case>
                <test-case id="0-1919" name="function-spread.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1244681284" result="Passed" start-time="2023-09-17T20:30:30.3393679Z" end-time="2023-09-17T20:30:30.3416347Z" duration="0.002267" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread(&quot;Hello World&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$spread("Hello World")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1920" name="function-spread.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1082687380" result="Passed" start-time="2023-09-17T20:30:30.3416656Z" end-time="2023-09-17T20:30:30.3422126Z" duration="0.000547" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread((Account.Order.Product.Description))';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Orange&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.6},{&quot;Colour&quot;:&quot;Purple&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Black&quot;},{&quot;Width&quot;:30},{&quot;Height&quot;:20},{&quot;Depth&quot;:210},{&quot;Weight&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is '$spread((Account.Order.Product.Description))'
Result: '[{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Orange"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.6},{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Black"},{"Width":30},{"Height":20},{"Depth":210},{"Weight":2}]'
Expected: '[{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Orange"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.6},{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Black"},{"Width":30},{"Height":20},{"Depth":210},{"Weight":2}]'
]]></output>
                </test-case>
                <test-case id="0-1921" name="function-spread.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1603829963" result="Passed" start-time="2023-09-17T20:30:30.3422274Z" end-time="2023-09-17T20:30:30.3423261Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$spread(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1922" name="function-spread.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="893870476" result="Passed" start-time="2023-09-17T20:30:30.3423354Z" end-time="2023-09-17T20:30:30.3428546Z" duration="0.000519" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string($spread(function($x){$x*$x}))';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string($spread(function($x){$x*$x}))'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1923" name="function-sqrt.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2082630797" result="Passed" start-time="2023-09-17T20:30:30.3428877Z" end-time="2023-09-17T20:30:30.3432157Z" duration="0.000328" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(4)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(4)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1924" name="function-sqrt.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="752741151" result="Passed" start-time="2023-09-17T20:30:30.3442960Z" end-time="2023-09-17T20:30:30.3444571Z" duration="0.000161" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(2)';&#xA; result: 1.4142135623730951" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(2)'
Result: '1.4142135623731'
Expected: '1.4142135623730951'
]]></output>
                </test-case>
                <test-case id="0-1925" name="function-sqrt.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="647931397" result="Passed" start-time="2023-09-17T20:30:30.3444718Z" end-time="2023-09-17T20:30:30.3446192Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1926" name="function-sqrt.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1334070360" result="Passed" start-time="2023-09-17T20:30:30.3446285Z" end-time="2023-09-17T20:30:30.3451951Z" duration="0.000567" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(-2)';&#xA; result: error D3060" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3060.
Actually thrown D3030.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sqrt(-2)'
]]></output>
                </test-case>
                <test-case id="0-1927" name="function-string.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2031867585" result="Passed" start-time="2023-09-17T20:30:30.3452096Z" end-time="2023-09-17T20:30:30.3453951Z" duration="0.000186" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(5)';&#xA; result: &quot;5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(5)'
Result: '"5"'
Expected: '"5"'
]]></output>
                </test-case>
                <test-case id="0-1928" name="function-string.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1011161504" result="Passed" start-time="2023-09-17T20:30:30.3454057Z" end-time="2023-09-17T20:30:30.3455455Z" duration="0.000140" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(22/7)';&#xA; result: &quot;3.14285714285714&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(22/7)'
Result: '"3.14285714285714"'
Expected: '"3.14285714285714"'
]]></output>
                </test-case>
                <test-case id="0-1929" name="function-string.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2079243806" result="Passed" start-time="2023-09-17T20:30:30.3455796Z" end-time="2023-09-17T20:30:30.3458893Z" duration="0.000310" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e100)';&#xA; result: &quot;1e+100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(1e100)'
Result: '"1e+100"'
Expected: '"1e+100"'
]]></output>
                </test-case>
                <test-case id="0-1930" name="function-string.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1294574368" result="Failed" start-time="2023-09-17T20:30:30.3459005Z" end-time="2023-09-17T20:30:30.3479209Z" duration="0.002021" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-100)';&#xA; result: &quot;1e-100&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e-100"', got '"0"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e-100)'
Result: '"0"'
Expected: '"1e-100"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e-100"', got '"0"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1931" name="function-string.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1912309890" result="Passed" start-time="2023-09-17T20:30:30.3479403Z" end-time="2023-09-17T20:30:30.3481729Z" duration="0.000233" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-6)';&#xA; result: &quot;0.000001&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(1e-6)'
Result: '"0.000001"'
Expected: '"0.000001"'
]]></output>
                </test-case>
                <test-case id="0-1932" name="function-string.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="24483297" result="Failed" start-time="2023-09-17T20:30:30.3481847Z" end-time="2023-09-17T20:30:30.3489683Z" duration="0.000784" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-7)';&#xA; result: &quot;1e-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e-7"', got '"0.0000001"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e-7)'
Result: '"0.0000001"'
Expected: '"1e-7"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e-7"', got '"0.0000001"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1933" name="function-string.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1096464544" result="Passed" start-time="2023-09-17T20:30:30.3489841Z" end-time="2023-09-17T20:30:30.3490723Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e20)';&#xA; result: &quot;100000000000000000000&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(1e20)'
Result: '"100000000000000000000"'
Expected: '"100000000000000000000"'
]]></output>
                </test-case>
                <test-case id="0-1934" name="function-string.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="710549011" result="Failed" start-time="2023-09-17T20:30:30.3490815Z" end-time="2023-09-17T20:30:30.3496423Z" duration="0.000561" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e21)';&#xA; result: &quot;1e+21&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e+21"', got '"1000000000000000000000"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e21)'
Result: '"1000000000000000000000"'
Expected: '"1e+21"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e+21"', got '"1000000000000000000000"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1935" name="function-string.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="103231167" result="Passed" start-time="2023-09-17T20:30:30.3496565Z" end-time="2023-09-17T20:30:30.3497765Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$string($sum(Product.(Price* Quantity)))';&#xA; result: [&quot;90.57&quot;,&quot;245.79&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$string($sum(Product.(Price* Quantity)))'
Result: '["90.57","245.79"]'
Expected: '["90.57","245.79"]'
]]></output>
                </test-case>
                <test-case id="0-1936" name="function-string.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2061044898" result="Passed" start-time="2023-09-17T20:30:30.3497847Z" end-time="2023-09-17T20:30:30.3498565Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(true)';&#xA; result: &quot;true&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(true)'
Result: '"true"'
Expected: '"true"'
]]></output>
                </test-case>
                <test-case id="0-1937" name="function-string.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="811952742" result="Passed" start-time="2023-09-17T20:30:30.3498645Z" end-time="2023-09-17T20:30:30.3499304Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(false)';&#xA; result: &quot;false&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(false)'
Result: '"false"'
Expected: '"false"'
]]></output>
                </test-case>
                <test-case id="0-1938" name="function-string.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1286429596" result="Passed" start-time="2023-09-17T20:30:30.3499373Z" end-time="2023-09-17T20:30:30.3500015Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(null)';&#xA; result: &quot;null&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(null)'
Result: '"null"'
Expected: '"null"'
]]></output>
                </test-case>
                <test-case id="0-1939" name="function-string.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1270587325" result="Passed" start-time="2023-09-17T20:30:30.3500082Z" end-time="2023-09-17T20:30:30.3500716Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$string(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1940" name="function-string.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1181150282" result="Passed" start-time="2023-09-17T20:30:30.3500783Z" end-time="2023-09-17T20:30:30.3501395Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string($string)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string($string)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1941" name="function-string.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1462136301" result="Passed" start-time="2023-09-17T20:30:30.3501461Z" end-time="2023-09-17T20:30:30.3502101Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(function(){true})';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(function(){true})'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1942" name="function-string.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1098218610" result="Passed" start-time="2023-09-17T20:30:30.3502167Z" end-time="2023-09-17T20:30:30.3502797Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(function(){1})';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(function(){1})'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1943" name="function-string.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1920373058" result="Passed" start-time="2023-09-17T20:30:30.3502873Z" end-time="2023-09-17T20:30:30.3541106Z" duration="0.003824" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;})';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({"string": "hello"})'
Result: '"{\"string\":\"hello\"}"'
Expected: '"{\"string\":\"hello\"}"'
]]></output>
                </test-case>
                <test-case id="0-1944" name="function-string.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1391156401" result="Passed" start-time="2023-09-17T20:30:30.3545347Z" end-time="2023-09-17T20:30:30.3560294Z" duration="0.001495" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5])';&#xA; result: &quot;[\&quot;string\&quot;,5]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(["string", 5])'
Result: '"[\"string\",5]"'
Expected: '"[\"string\",5]"'
]]></output>
                </test-case>
                <test-case id="0-1945" name="function-string.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="511904435" result="Passed" start-time="2023-09-17T20:30:30.3560510Z" end-time="2023-09-17T20:30:30.3564015Z" duration="0.000351" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []})';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;,\&quot;number\&quot;:39.4,\&quot;null\&quot;:null,\&quot;boolean\&quot;:false,\&quot;function\&quot;:\&quot;\&quot;,\&quot;lambda\&quot;:\&quot;\&quot;,\&quot;object\&quot;:{\&quot;str\&quot;:\&quot;another\&quot;,\&quot;lambda2\&quot;:\&quot;\&quot;},\&quot;array\&quot;:[]}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []})'
Result: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
Expected: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
]]></output>
                </test-case>
                <test-case id="0-1946" name="function-string.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1607352256" result="Passed" start-time="2023-09-17T20:30:30.3564900Z" end-time="2023-09-17T20:30:30.3584560Z" duration="0.001966" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string(1/0)';&#xA; result: error D3001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3001.
Actually thrown S0102.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$string(1/0)'
]]></output>
                </test-case>
                <test-case id="0-1947" name="function-string.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1979347864" result="Passed" start-time="2023-09-17T20:30:30.3588262Z" end-time="2023-09-17T20:30:30.3597574Z" duration="0.000931" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;inf&quot;: 1/0})';&#xA; result: error D1001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1001.
Actually thrown S0102.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$string({"inf": 1/0})'
]]></output>
                </test-case>
                <test-case id="0-1948" name="function-string.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1564134369" result="Passed" start-time="2023-09-17T20:30:30.3597747Z" end-time="2023-09-17T20:30:30.3606386Z" duration="0.000864" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$string(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1949" name="function-string.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="555392108" result="Passed" start-time="2023-09-17T20:30:30.3606554Z" end-time="2023-09-17T20:30:30.3607646Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$string()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1950" name="function-string.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1651664215" result="Passed" start-time="2023-09-17T20:30:30.3607735Z" end-time="2023-09-17T20:30:30.3608502Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;}, false)';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({"string": "hello"}, false)'
Result: '"{\"string\":\"hello\"}"'
Expected: '"{\"string\":\"hello\"}"'
]]></output>
                </test-case>
                <test-case id="0-1951" name="function-string.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="909927056" result="Passed" start-time="2023-09-17T20:30:30.3608578Z" end-time="2023-09-17T20:30:30.3638151Z" duration="0.002958" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;}, true)';&#xA; result: &quot;{\n  \&quot;string\&quot;: \&quot;hello\&quot;\n}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({"string": "hello"}, true)'
Result: '"{\n  \"string\": \"hello\"\n}"'
Expected: '"{\n  \"string\": \"hello\"\n}"'
]]></output>
                </test-case>
                <test-case id="0-1952" name="function-string.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1280014882" result="Passed" start-time="2023-09-17T20:30:30.3638375Z" end-time="2023-09-17T20:30:30.3640088Z" duration="0.000172" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5], false)';&#xA; result: &quot;[\&quot;string\&quot;,5]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(["string", 5], false)'
Result: '"[\"string\",5]"'
Expected: '"[\"string\",5]"'
]]></output>
                </test-case>
                <test-case id="0-1953" name="function-string.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="721099247" result="Passed" start-time="2023-09-17T20:30:30.3640218Z" end-time="2023-09-17T20:30:30.3653566Z" duration="0.001335" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5], true)';&#xA; result: &quot;[\n  \&quot;string\&quot;,\n  5\n]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(["string", 5], true)'
Result: '"[\n  \"string\",\n  5\n]"'
Expected: '"[\n  \"string\",\n  5\n]"'
]]></output>
                </test-case>
                <test-case id="0-1954" name="function-string.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1341668171" result="Passed" start-time="2023-09-17T20:30:30.3653754Z" end-time="2023-09-17T20:30:30.3656310Z" duration="0.000256" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []}, false)';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;,\&quot;number\&quot;:39.4,\&quot;null\&quot;:null,\&quot;boolean\&quot;:false,\&quot;function\&quot;:\&quot;\&quot;,\&quot;lambda\&quot;:\&quot;\&quot;,\&quot;object\&quot;:{\&quot;str\&quot;:\&quot;another\&quot;,\&quot;lambda2\&quot;:\&quot;\&quot;},\&quot;array\&quot;:[]}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []}, false)'
Result: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
Expected: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
]]></output>
                </test-case>
                <test-case id="0-1955" name="function-string.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="832762236" result="Passed" start-time="2023-09-17T20:30:30.3657086Z" end-time="2023-09-17T20:30:30.3660393Z" duration="0.000330" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []}, true)';&#xA; result: &quot;{\n  \&quot;string\&quot;: \&quot;hello\&quot;,\n  \&quot;number\&quot;: 39.4,\n  \&quot;null\&quot;: null,\n  \&quot;boolean\&quot;: false,\n  \&quot;function\&quot;: \&quot;\&quot;,\n  \&quot;lambda\&quot;: \&quot;\&quot;,\n  \&quot;object\&quot;: {\n    \&quot;str\&quot;: \&quot;another\&quot;,\n    \&quot;lambda2\&quot;: \&quot;\&quot;\n  },\n  \&quot;array\&quot;: []\n}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []}, true)'
Result: '"{\n  \"string\": \"hello\",\n  \"number\": 39.4,\n  \"null\": null,\n  \"boolean\": false,\n  \"function\": \"\",\n  \"lambda\": \"\",\n  \"object\": {\n    \"str\": \"another\",\n    \"lambda2\": \"\"\n  },\n  \"array\": []\n}"'
Expected: '"{\n  \"string\": \"hello\",\n  \"number\": 39.4,\n  \"null\": null,\n  \"boolean\": false,\n  \"function\": \"\",\n  \"lambda\": \"\",\n  \"object\": {\n    \"str\": \"another\",\n    \"lambda2\": \"\"\n  },\n  \"array\": []\n}"'
]]></output>
                </test-case>
                <test-case id="0-1956" name="function-string.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1872572221" result="Failed" start-time="2023-09-17T20:30:30.3660596Z" end-time="2023-09-17T20:30:30.3680567Z" duration="0.001997" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string()';&#xA; result: &quot;[4,true]&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"[4,true]"', got '"[[4,true]]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string()'
Result: '"[[4,true]]"'
Expected: '"[4,true]"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"[4,true]"', got '"[[4,true]]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1957" name="function-substring.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="114429203" result="Passed" start-time="2023-09-17T20:30:30.3680758Z" end-time="2023-09-17T20:30:30.3683315Z" duration="0.000256" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 0, 5)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 0, 5)'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1958" name="function-substring.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="113575915" result="Passed" start-time="2023-09-17T20:30:30.3683435Z" end-time="2023-09-17T20:30:30.3685360Z" duration="0.000193" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1959" name="function-substring.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1311670279" result="Passed" start-time="2023-09-17T20:30:30.3686451Z" end-time="2023-09-17T20:30:30.3694343Z" duration="0.000789" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 6)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 6)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1960" name="function-substring.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1483988027" result="Passed" start-time="2023-09-17T20:30:30.3698726Z" end-time="2023-09-17T20:30:30.3700610Z" duration="0.000188" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(blah, 6)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(blah, 6)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1961" name="function-substring.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1707994526" result="Failed" start-time="2023-09-17T20:30:30.3700740Z" end-time="2023-09-17T20:30:30.3709272Z" duration="0.000853" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 0, 2)';&#xA; result: &quot;𝄞💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"𝄞💩"', got '"𝄞"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 0, 2)'
Result: '"𝄞"'
Expected: '"𝄞💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"𝄞💩"', got '"𝄞"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1962" name="function-substring.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="632069158" result="Failed" start-time="2023-09-17T20:30:30.3709428Z" end-time="2023-09-17T20:30:30.3717913Z" duration="0.000849" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 0, 1)';&#xA; result: &quot;𝄞&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"𝄞"', got '"\ud834"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 0, 1)'
Result: '"\ud834"'
Expected: '"𝄞"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"𝄞"', got '"\ud834"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1963" name="function-substring.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1390742192" result="Failed" start-time="2023-09-17T20:30:30.3718064Z" end-time="2023-09-17T20:30:30.3725774Z" duration="0.000771" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 1, 1)';&#xA; result: &quot;💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"💩"', got '"\udd1e"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 1, 1)'
Result: '"\udd1e"'
Expected: '"💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"💩"', got '"\udd1e"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1964" name="function-substring.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1819198943" result="Passed" start-time="2023-09-17T20:30:30.3725926Z" end-time="2023-09-17T20:30:30.3726986Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1965" name="function-substring.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1207249646" result="Passed" start-time="2023-09-17T20:30:30.3727074Z" end-time="2023-09-17T20:30:30.3727834Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1966" name="function-substring.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1889133948" result="Passed" start-time="2023-09-17T20:30:30.3727913Z" end-time="2023-09-17T20:30:30.3730417Z" duration="0.000251" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 4)';&#xA; result: &quot;worl&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 4)'
Result: '"worl"'
Expected: '"worl"'
]]></output>
                </test-case>
                <test-case id="0-1967" name="function-substring.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="105518735" result="Passed" start-time="2023-09-17T20:30:30.3730511Z" end-time="2023-09-17T20:30:30.3732200Z" duration="0.000169" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 1)';&#xA; result: &quot;w&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 1)'
Result: '"w"'
Expected: '"w"'
]]></output>
                </test-case>
                <test-case id="0-1968" name="function-substring.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1836243754" result="Passed" start-time="2023-09-17T20:30:30.3732299Z" end-time="2023-09-17T20:30:30.3733080Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 0)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 0)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1969" name="function-substring.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="925338421" result="Passed" start-time="2023-09-17T20:30:30.3733161Z" end-time="2023-09-17T20:30:30.3733880Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, -1)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, -1)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1970" name="function-substring.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="824028802" result="Passed" start-time="2023-09-17T20:30:30.3733954Z" end-time="2023-09-17T20:30:30.3735505Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 0, -6)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 0, -6)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1971" name="function-substring.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="671092823" result="Passed" start-time="2023-09-17T20:30:30.3745681Z" end-time="2023-09-17T20:30:30.3754012Z" duration="0.000833" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -100, 3)';&#xA; result: &quot;hel&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -100, 3)'
Result: '"hel"'
Expected: '"hel"'
]]></output>
                </test-case>
                <test-case id="0-1972" name="function-substring.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="691358632" result="Failed" start-time="2023-09-17T20:30:30.3754225Z" end-time="2023-09-17T20:30:30.3771722Z" duration="0.001750" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -2, 1)';&#xA; result: &quot;😁&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😁"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -2, 1)'
Result: '"\ud83d"'
Expected: '"😁"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😁"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1973" name="function-substring.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="465458210" result="Failed" start-time="2023-09-17T20:30:30.3771995Z" end-time="2023-09-17T20:30:30.3782624Z" duration="0.001063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -3, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ude01"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -3, 1)'
Result: '"\ude01"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ude01"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1974" name="function-substring.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="63531002" result="Failed" start-time="2023-09-17T20:30:30.3786509Z" end-time="2023-09-17T20:30:30.3797304Z" duration="0.001080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -4, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -4, 1)'
Result: '"\ud83d"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1975" name="function-substring.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1768034726" result="Failed" start-time="2023-09-17T20:30:30.3798651Z" end-time="2023-09-17T20:30:30.3806463Z" duration="0.000781" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -5, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ude02"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -5, 1)'
Result: '"\ude02"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ude02"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1976" name="function-substringAfter.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="505611353" result="Passed" start-time="2023-09-17T20:30:30.3806680Z" end-time="2023-09-17T20:30:30.3812323Z" duration="0.000564" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: &quot;World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", " ")'
Result: '"World"'
Expected: '"World"'
]]></output>
                </test-case>
                <test-case id="0-1977" name="function-substringAfter.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1120981065" result="Passed" start-time="2023-09-17T20:30:30.3812464Z" end-time="2023-09-17T20:30:30.3813455Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;l&quot;)';&#xA; result: &quot;lo World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "l")'
Result: '"lo World"'
Expected: '"lo World"'
]]></output>
                </test-case>
                <test-case id="0-1978" name="function-substringAfter.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="691474396" result="Passed" start-time="2023-09-17T20:30:30.3813582Z" end-time="2023-09-17T20:30:30.3816033Z" duration="0.000245" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;f&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "f")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1979" name="function-substringAfter.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="240836716" result="Passed" start-time="2023-09-17T20:30:30.3816142Z" end-time="2023-09-17T20:30:30.3819269Z" duration="0.000313" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;ld&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "ld")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1980" name="function-substringAfter.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1188062788" result="Passed" start-time="2023-09-17T20:30:30.3819398Z" end-time="2023-09-17T20:30:30.3820160Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(blah, &quot;ld&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(blah, "ld")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1981" name="function-substringBefore.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1502206143" result="Passed" start-time="2023-09-17T20:30:30.3820238Z" end-time="2023-09-17T20:30:30.3822519Z" duration="0.000228" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", " ")'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-1982" name="function-substringBefore.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="467733216" result="Passed" start-time="2023-09-17T20:30:30.3822613Z" end-time="2023-09-17T20:30:30.3825465Z" duration="0.000285" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;l&quot;)';&#xA; result: &quot;He&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "l")'
Result: '"He"'
Expected: '"He"'
]]></output>
                </test-case>
                <test-case id="0-1983" name="function-substringBefore.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="455769396" result="Passed" start-time="2023-09-17T20:30:30.3825696Z" end-time="2023-09-17T20:30:30.3826586Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;f&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "f")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1984" name="function-substringBefore.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="427579591" result="Passed" start-time="2023-09-17T20:30:30.3826671Z" end-time="2023-09-17T20:30:30.3828104Z" duration="0.000144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;He&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "He")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1985" name="function-substringBefore.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="384647312" result="Passed" start-time="2023-09-17T20:30:30.3828200Z" end-time="2023-09-17T20:30:30.3829279Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(blah, &quot;He&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore(blah, "He")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1986" name="function-sum.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="632295008" result="Passed" start-time="2023-09-17T20:30:30.3829370Z" end-time="2023-09-17T20:30:30.3836041Z" duration="0.000667" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(Account.Order.Product.(Price * Quantity))';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(Account.Order.Product.(Price * Quantity))'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1987" name="function-sum.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1450867697" result="Passed" start-time="2023-09-17T20:30:30.3839068Z" end-time="2023-09-17T20:30:30.3841565Z" duration="0.000243" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$sum(Product.(Price * Quantity))';&#xA; result: [90.57000000000001,245.79000000000002]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$sum(Product.(Price * Quantity))'
Result: '[90.57,245.79]'
Expected: '[90.57000000000001,245.79000000000002]'
]]></output>
                </test-case>
                <test-case id="0-1988" name="function-sum.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1902280020" result="Passed" start-time="2023-09-17T20:30:30.3841695Z" end-time="2023-09-17T20:30:30.3855069Z" duration="0.001338" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $sum(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 90.57&quot;,&quot;order104: 245.79&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $sum(Product.(Price*Quantity)))'
Result: '["order103: 90.57","order104: 245.79"]'
Expected: '["order103: 90.57","order104: 245.79"]'
]]></output>
                </test-case>
                <test-case id="0-1989" name="function-sum.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2025270422" result="Passed" start-time="2023-09-17T20:30:30.3861993Z" end-time="2023-09-17T20:30:30.3875205Z" duration="0.001321" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sum()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sum()'
]]></output>
                </test-case>
                <test-case id="0-1990" name="function-sum.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="378142593" result="Passed" start-time="2023-09-17T20:30:30.3875543Z" end-time="2023-09-17T20:30:30.3891486Z" duration="0.001594" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1991" name="function-sum.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1946615695" result="Passed" start-time="2023-09-17T20:30:30.3891623Z" end-time="2023-09-17T20:30:30.3900030Z" duration="0.000841" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sum(Account.Order)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412.
Actually thrown T0412.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sum(Account.Order)'
]]></output>
                </test-case>
                <test-case id="0-1992" name="function-sum.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="698376827" result="Passed" start-time="2023-09-17T20:30:30.3903546Z" end-time="2023-09-17T20:30:30.3905983Z" duration="0.000244" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1993" name="function-tomillis.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2122242964" result="Failed" label="Error" start-time="2023-09-17T20:30:30.3908909Z" end-time="2023-09-17T20:30:30.3923190Z" duration="0.001428" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;1970-01-01T00:00:00.001Z&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '1970-01-01T00:00:00.001Z']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("1970-01-01T00:00:00.001Z")'
]]></output>
                </test-case>
                <test-case id="0-1994" name="function-tomillis.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1934082945" result="Passed" start-time="2023-09-17T20:30:30.3923597Z" end-time="2023-09-17T20:30:30.3926580Z" duration="0.000298" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018-02-01T09:42:13.123+0000&quot;)';&#xA; result: 1517478133123" />
                  </properties>
                  <output><![CDATA[Expr is '$toMillis("2018-02-01T09:42:13.123+0000")'
Result: '1517478133123'
Expected: '1517478133123'
]]></output>
                </test-case>
                <test-case id="0-1995" name="function-tomillis.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1620639403" result="Failed" label="Error" start-time="2023-09-17T20:30:30.3926691Z" end-time="2023-09-17T20:30:30.3933961Z" duration="0.000727" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2017-10-30&quot;)';&#xA; result: 1509321600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2017-10-30']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2017-10-30")'
]]></output>
                </test-case>
                <test-case id="0-1996" name="function-tomillis.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="830067143" result="Failed" label="Error" start-time="2023-09-17T20:30:30.3934983Z" end-time="2023-09-17T20:30:30.3941146Z" duration="0.000616" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2017-10-30T15:28:34Z&quot;)';&#xA; result: 1509377314000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2017-10-30T15:28:34Z']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2017-10-30T15:28:34Z")'
]]></output>
                </test-case>
                <test-case id="0-1997" name="function-tomillis.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1854960065" result="Failed" label="Error" start-time="2023-09-17T20:30:30.3941298Z" end-time="2023-09-17T20:30:30.3961417Z" duration="0.002012" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018&quot;)';&#xA; result: 1514764800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2018")'
]]></output>
                </test-case>
                <test-case id="0-1998" name="function-tomillis.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="101174115" result="Failed" label="Error" start-time="2023-09-17T20:30:30.3961624Z" end-time="2023-09-17T20:30:30.3970035Z" duration="0.000841" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(foo)';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T0410: Argument 1 ('timestamp') of function toMillis should be String but incompatible value of type Undefined was specified]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.ConvertFunctionArg(Int32 parameterIndex, JToken argToken, ArgumentInfo argumentInfo, Boolean& returnUndefined) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 297
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.TryBindFunctionArguments(List`1 args, JToken context, EvaluationEnvironment env, Boolean& returnUndefined) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 183
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.BindFunctionArguments(List`1 args, JToken context, EvaluationEnvironment env, Boolean& returnUndefined) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 130
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis(foo)'
]]></output>
                </test-case>
                <test-case id="0-1999" name="function-tomillis.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="183906755" result="Passed" start-time="2023-09-17T20:30:30.3970200Z" end-time="2023-09-17T20:30:30.3978040Z" duration="0.000784" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;foo&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("foo")'
]]></output>
                </test-case>
                <test-case id="0-2000" name="function-tomillis.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="770254134" result="Passed" start-time="2023-09-17T20:30:30.3978197Z" end-time="2023-09-17T20:30:30.3988064Z" duration="0.000987" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;01-02-2018&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("01-02-2018")'
]]></output>
                </test-case>
                <test-case id="0-2001" name="function-tomillis.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1501833521" result="Passed" start-time="2023-09-17T20:30:30.3988226Z" end-time="2023-09-17T20:30:30.4004938Z" duration="0.001672" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018-02-03 11:15:33&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("2018-02-03 11:15:33")'
]]></output>
                </test-case>
                <test-case id="0-2002" name="function-tomillis.parseDateTime[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="143104110" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4009267Z" end-time="2023-09-17T20:30:30.4017105Z" duration="0.000784" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(undefined, 'pic')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T0410: Argument 1 ('timestamp') of function toMillis should be String but incompatible value of type Undefined was specified]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.ConvertFunctionArg(Int32 parameterIndex, JToken argToken, ArgumentInfo argumentInfo, Boolean& returnUndefined) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 297
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.TryBindFunctionArguments(List`1 args, JToken context, EvaluationEnvironment env, Boolean& returnUndefined) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 183
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.BindFunctionArguments(List`1 args, JToken context, EvaluationEnvironment env, Boolean& returnUndefined) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 130
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return undefined'
Expr is '$toMillis(undefined, 'pic')'
]]></output>
                </test-case>
                <test-case id="0-2003" name="function-tomillis.parseDateTime[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="638795948" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4017690Z" end-time="2023-09-17T20:30:30.4028091Z" duration="0.001040" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Hello', 'Hello')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'Hello']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse string literal'
Expr is '$toMillis('Hello', 'Hello')'
]]></output>
                </test-case>
                <test-case id="0-2004" name="function-tomillis.parseDateTime[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1878846953" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4029003Z" end-time="2023-09-17T20:30:30.4035615Z" duration="0.000661" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018', '[Y1]')';&#xA; result: 1514764800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year'
Expr is '$toMillis('2018', '[Y1]')'
]]></output>
                </test-case>
                <test-case id="0-2005" name="function-tomillis.parseDateTime[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="980571392" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4035761Z" end-time="2023-09-17T20:30:30.4042118Z" duration="0.000636" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-03-27', '[Y1]-[M01]-[D01]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018-03-27']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2018-03-27', '[Y1]-[M01]-[D01]')'
]]></output>
                </test-case>
                <test-case id="0-2006" name="function-tomillis.parseDateTime[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="218568424" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4042265Z" end-time="2023-09-17T20:30:30.4048943Z" duration="0.000668" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-03-27T14:03:00.123Z', '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f001]Z')';&#xA; result: 1522159380123" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018-03-27T14:03:00.123Z']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ISO 8601 format'
Expr is '$toMillis('2018-03-27T14:03:00.123Z', '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f001]Z')'
]]></output>
                </test-case>
                <test-case id="0-2007" name="function-tomillis.parseDateTime[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="814556672" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4049090Z" end-time="2023-09-17T20:30:30.4063636Z" duration="0.001455" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27th 3 1976', '[D1o] [M#1] [Y0001]')';&#xA; result: 196732800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '27th 3 1976']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27th 3 1976', '[D1o] [M#1] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2008" name="function-tomillis.parseDateTime[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="657568245" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4063788Z" end-time="2023-09-17T20:30:30.4070583Z" duration="0.000680" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('21st 12 1881', '[D1o] [M01] [Y0001]')';&#xA; result: -2777932800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '21st 12 1881']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('21st 12 1881', '[D1o] [M01] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2009" name="function-tomillis.parseDateTime[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1721117092" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4070728Z" end-time="2023-09-17T20:30:30.4077313Z" duration="0.000659" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2nd 12 2012', '[D1o] [M01] [Y0001]')';&#xA; result: 1354406400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2nd 12 2012']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2nd 12 2012', '[D1o] [M01] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2010" name="function-tomillis.parseDateTime[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="327150883" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4077827Z" end-time="2023-09-17T20:30:30.4087361Z" duration="0.000953" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('MCMLXXXIV', '[YI]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'MCMLXXXIV']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year'
Expr is '$toMillis('MCMLXXXIV', '[YI]')'
]]></output>
                </test-case>
                <test-case id="0-2011" name="function-tomillis.parseDateTime[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="751591156" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4092161Z" end-time="2023-09-17T20:30:30.4099667Z" duration="0.000750" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27 03 MMXVIII', '[D1] [M01] [YI]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '27 03 MMXVIII']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27 03 MMXVIII', '[D1] [M01] [YI]')'
]]></output>
                </test-case>
                <test-case id="0-2012" name="function-tomillis.parseDateTime[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1570438454" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4099843Z" end-time="2023-09-17T20:30:30.4109633Z" duration="0.000979" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27 iii MMXVIII', '[D1] [Mi] [YI]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '27 iii MMXVIII']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27 iii MMXVIII', '[D1] [Mi] [YI]')'
]]></output>
                </test-case>
                <test-case id="0-2013" name="function-tomillis.parseDateTime[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2020222846" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4111586Z" end-time="2023-09-17T20:30:30.4122072Z" duration="0.001048" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('w C mmxviii', '[Da] [MA] [Yi]')';&#xA; result: 1521763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'w C mmxviii']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$toMillis('w C mmxviii', '[Da] [MA] [Yi]')'
]]></output>
                </test-case>
                <test-case id="0-2014" name="function-tomillis.parseDateTime[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="123607491" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4122453Z" end-time="2023-09-17T20:30:30.4130211Z" duration="0.000776" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('ae C mmxviii', '[Da] [MA] [Yi]')';&#xA; result: 1522454400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'ae C mmxviii']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$toMillis('ae C mmxviii', '[Da] [MA] [Yi]')'
]]></output>
                </test-case>
                <test-case id="0-2015" name="function-tomillis.parseDateTime[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2129265531" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4130537Z" end-time="2023-09-17T20:30:30.4137821Z" duration="0.000729" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27th April 2008', '[D1o] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '27th April 2008']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27th April 2008', '[D1o] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2016" name="function-tomillis.parseDateTime[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1240261310" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4138127Z" end-time="2023-09-17T20:30:30.4145101Z" duration="0.000697" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('21 August 2017', '[D1] [MNn] [Y0001]')';&#xA; result: 1503273600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '21 August 2017']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('21 August 2017', '[D1] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2017" name="function-tomillis.parseDateTime[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="176299762" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4145260Z" end-time="2023-09-17T20:30:30.4151574Z" duration="0.000632" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2 Feb 2012', '[D1] [MNn,3-3] [Y0001]')';&#xA; result: 1328140800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2 Feb 2012']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2 Feb 2012', '[D1] [MNn,3-3] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2018" name="function-tomillis.parseDateTime[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="963162601" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4151715Z" end-time="2023-09-17T20:30:30.4166528Z" duration="0.001482" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('one thousand, nine hundred and eighty-four', '[Yw]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'one thousand, nine hundred and eighty-four']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year in words'
Expr is '$toMillis('one thousand, nine hundred and eighty-four', '[Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2019" name="function-tomillis.parseDateTime[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1434551631" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4174716Z" end-time="2023-09-17T20:30:30.4182919Z" duration="0.000820" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('nineteen hundred and eighty-four', '[Yw]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'nineteen hundred and eighty-four']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year in words'
Expr is '$toMillis('nineteen hundred and eighty-four', '[Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2020" name="function-tomillis.parseDateTime[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="574954638" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4192522Z" end-time="2023-09-17T20:30:30.4201192Z" duration="0.000867" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-seven April 2008', '[Dw] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'twenty-seven April 2008']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse date/month in words'
Expr is '$toMillis('twenty-seven April 2008', '[Dw] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2021" name="function-tomillis.parseDateTime[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="438266251" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4201363Z" end-time="2023-09-17T20:30:30.4206311Z" duration="0.000495" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-seventh April 2008', '[Dw] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'twenty-seventh April 2008']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse date/month in ordinal words'
Expr is '$toMillis('twenty-seventh April 2008', '[Dw] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2022" name="function-tomillis.parseDateTime[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="350722362" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4206457Z" end-time="2023-09-17T20:30:30.4219845Z" duration="0.001339" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-first August two thousand and seventeen', '[Dw] [MNn] [Yw]')';&#xA; result: 1503273600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'twenty-first August two thousand and seventeen']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('twenty-first August two thousand and seventeen', '[Dw] [MNn] [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2023" name="function-tomillis.parseDateTime[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1958456979" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4220012Z" end-time="2023-09-17T20:30:30.4229915Z" duration="0.000991" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('TWENTY-SECOND August two thousand and seventeen', '[DW] [MNn] [Yw]')';&#xA; result: 1503360000000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'TWENTY-SECOND August two thousand and seventeen']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('TWENTY-SECOND August two thousand and seventeen', '[DW] [MNn] [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2024" name="function-tomillis.parseDateTime[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="547195828" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4230086Z" end-time="2023-09-17T20:30:30.4237213Z" duration="0.000713" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Twentieth of August, two thousand and seventeen', '[DW] of [MNn], [Yw]')';&#xA; result: 1503187200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'Twentieth of August, two thousand and seventeen']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('Twentieth of August, two thousand and seventeen', '[DW] of [MNn], [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2025" name="function-tomillis.parseDateTime[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1024896754" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4237643Z" end-time="2023-09-17T20:30:30.4245176Z" duration="0.000753" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 12:06 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522800360000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '4/4/2018 12:06 am']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just after midnight'
Expr is '$toMillis('4/4/2018 12:06 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2026" name="function-tomillis.parseDateTime[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2120199643" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4245339Z" end-time="2023-09-17T20:30:30.4257714Z" duration="0.001238" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 06:30 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522823400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '4/4/2018 06:30 am']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'breakfast time'
Expr is '$toMillis('4/4/2018 06:30 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2027" name="function-tomillis.parseDateTime[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="716599315" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4257981Z" end-time="2023-09-17T20:30:30.4265278Z" duration="0.000730" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 12:06 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522843560000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '4/4/2018 12:06 pm']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just after midday'
Expr is '$toMillis('4/4/2018 12:06 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2028" name="function-tomillis.parseDateTime[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="678858912" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4265868Z" end-time="2023-09-17T20:30:30.4276010Z" duration="0.001014" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 11:30 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522884600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '4/4/2018 11:30 pm']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just before midnight'
Expr is '$toMillis('4/4/2018 11:30 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2029" name="function-tomillis.parseDateTime[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="590375246" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4281221Z" end-time="2023-09-17T20:30:30.4290374Z" duration="0.000915" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-094', '[Y0001]-[d001]')';&#xA; result: 1522800000000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018-094']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'ordinal date: day 94 of the year 2018'
Expr is '$toMillis('2018-094', '[Y0001]-[d001]')'
]]></output>
                </test-case>
                <test-case id="0-2030" name="function-tomillis.parseDateTime[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="937967583" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4290546Z" end-time="2023-09-17T20:30:30.4302387Z" duration="0.001185" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('13:45', '[H]:[m]') ~&gt; $fromMillis() ~&gt; $substringBefore('T') = $substringBefore($now(), 'T')';&#xA; result: true" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '13:45']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalComparisonOperator(ComparisonOperatorNode comparisonOperatorNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 646
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'time only defaults to todays date'
Expr is '$toMillis('13:45', '[H]:[m]') ~> $fromMillis() ~> $substringBefore('T') = $substringBefore($now(), 'T')'
]]></output>
                </test-case>
                <test-case id="0-2031" name="function-tomillis.parseDateTime[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="798134935" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4302907Z" end-time="2023-09-17T20:30:30.4310851Z" duration="0.000794" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('13:45', '[H]:[m]') ~&gt; $fromMillis() ~&gt; $substringAfter('T')';&#xA; result: &quot;13:45:00.000Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '13:45']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'hours/minutes only defaults seconds to zero'
Expr is '$toMillis('13:45', '[H]:[m]') ~> $fromMillis() ~> $substringAfter('T')'
]]></output>
                </test-case>
                <test-case id="0-2032" name="function-tomillis.parseDateTime[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1019806950" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4311002Z" end-time="2023-09-17T20:30:30.4329340Z" duration="0.001834" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Wednesday, 14th November 2018', '[FNn], [D1o] [MNn] [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-11-14T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'Wednesday, 14th November 2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'date only defaults time to midnight'
Expr is '$toMillis('Wednesday, 14th November 2018', '[FNn], [D1o] [MNn] [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2033" name="function-tomillis.parseDateTime[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="507567641" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4329660Z" end-time="2023-09-17T20:30:30.4337109Z" duration="0.000745" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Mon, Twelfth November 2018', '[FNn,*-3], [DWwo] [MNn] [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-11-12T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'Mon, Twelfth November 2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'date only defaults time to midnight'
Expr is '$toMillis('Mon, Twelfth November 2018', '[FNn,*-3], [DWwo] [MNn] [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2034" name="function-tomillis.parseDateTime[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1618066229" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4337275Z" end-time="2023-09-17T20:30:30.4345264Z" duration="0.000799" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018--180', '[Y]--[d]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-06-29T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2018--180']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '180th day of 2018 is 29th June'
Expr is '$toMillis('2018--180', '[Y]--[d]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2035" name="function-tomillis.parseDateTime[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1833712914" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4345422Z" end-time="2023-09-17T20:30:30.4352422Z" duration="0.000700" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('three hundred and sixty-fifth day of 2018', '[dwo] day of [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-12-31T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'three hundred and sixty-fifth day of 2018']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '365th day of 2018 is 31st December'
Expr is '$toMillis('three hundred and sixty-fifth day of 2018', '[dwo] day of [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2036" name="function-tomillis.parseDateTime[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1359102033" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4352578Z" end-time="2023-09-17T20:30:30.4359792Z" duration="0.000722" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('irrelevent string', '[Y]-[M]-[D]')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from 'irrelevent string']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'parsing a non-date string returns undefined'
Expr is '$toMillis('irrelevent string', '[Y]-[M]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2037" name="function-tomillis.parseDateTime[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1976420915" result="Passed" start-time="2023-09-17T20:30:30.4359924Z" end-time="2023-09-17T20:30:30.4381580Z" duration="0.002166" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-05-22', '[Y]-[M]-[q]')';&#xA; result: error D3132" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3132.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Description: 'picture string contains an unknown component'
Expr is '$toMillis('2018-05-22', '[Y]-[M]-[q]')'
]]></output>
                </test-case>
                <test-case id="0-2038" name="function-tomillis.parseDateTime[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="724406090" result="Passed" start-time="2023-09-17T20:30:30.4385963Z" end-time="2023-09-17T20:30:30.4394289Z" duration="0.000833" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-05-22', '[YN]-[M]-[D]')';&#xA; result: error D3133" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3133.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Description: 'picture string contains a named year'
Expr is '$toMillis('2018-05-22', '[YN]-[M]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2039" name="function-tomillis.parseDateTime[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1594491846" result="Passed" start-time="2023-09-17T20:30:30.4394469Z" end-time="2023-09-17T20:30:30.4407325Z" duration="0.001286" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-22', '[Y]-[D]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Description: 'year/date with no month'
Expr is '$toMillis('2018-22', '[Y]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2040" name="function-tomillis.parseDateTime[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="166078888" result="Passed" start-time="2023-09-17T20:30:30.4407931Z" end-time="2023-09-17T20:30:30.4420677Z" duration="0.001275" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('5-22 23:59', '[M]-[D] [m]:[s]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Description: 'month/date, min/sec with no hours'
Expr is '$toMillis('5-22 23:59', '[M]-[D] [m]:[s]')'
]]></output>
                </test-case>
                <test-case id="0-2041" name="function-tomillis.parseDateTime[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1965221983" result="Passed" start-time="2023-09-17T20:30:30.4421036Z" end-time="2023-09-17T20:30:30.4428201Z" duration="0.000717" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-3-2-5', '[X]-[x]-[w]-[F1]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Description: 'currently no support for year/month-of-year/week-of-month/day-of-week'
Expr is '$toMillis('2018-3-2-5', '[X]-[x]-[w]-[F1]')'
]]></output>
                </test-case>
                <test-case id="0-2042" name="function-tomillis.parseDateTime[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="793299452" result="Passed" start-time="2023-09-17T20:30:30.4428363Z" end-time="2023-09-17T20:30:30.4434930Z" duration="0.000657" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-32-5', '[X]-[W]-[F1]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136.
Actually thrown D3136.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Description: 'currently no support for year/week-of-year/day-of-week'
Expr is '$toMillis('2018-32-5', '[X]-[W]-[F1]')'
]]></output>
                </test-case>
                <test-case id="0-2043" name="function-tomillis.parseDateTime[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="181162928" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4435195Z" end-time="2023-09-17T20:30:30.4442687Z" duration="0.000749" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 08:00:00 +02:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 08:00:00 +02:00']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 08:00:00 +02:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2044" name="function-tomillis.parseDateTime[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1698119539" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4442841Z" end-time="2023-09-17T20:30:30.4449616Z" duration="0.000678" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 08:00:00 GMT-05:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T13:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 08:00:00 GMT-05:00']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 08:00:00 GMT-05:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2045" name="function-tomillis.parseDateTime[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1774035084" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4449768Z" end-time="2023-09-17T20:30:30.4457959Z" duration="0.000819" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 +05:30', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:30:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 12:00:00 +05:30']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 +05:30', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2046" name="function-tomillis.parseDateTime[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="376177241" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4458107Z" end-time="2023-09-17T20:30:30.4476828Z" duration="0.001873" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 GMT-5', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z01]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T17:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 12:00:00 GMT-5']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 GMT-5', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z01]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2047" name="function-tomillis.parseDateTime[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="825637628" result="Failed" label="Error" start-time="2023-09-17T20:30:30.4477179Z" end-time="2023-09-17T20:30:30.4496395Z" duration="0.001922" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 +0530', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z0001]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:30:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : D3136: Failed to parse tdate/time from '2020-09-09 12:00:00 +0530']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.toMillis(String timestamp, String picture) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 1842
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 319
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 +0530', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z0001]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2048" name="function-trim.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1998635473" result="Passed" start-time="2023-09-17T20:30:30.4496600Z" end-time="2023-09-17T20:30:30.4498057Z" duration="0.000146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim(&quot;Hello World&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$trim("Hello World")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-2049" name="function-trim.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1952301061" result="Passed" start-time="2023-09-17T20:30:30.4498161Z" end-time="2023-09-17T20:30:30.4499648Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim(&quot;   Hello  &#xA;  &#x9; World  &#x9; &quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$trim("   Hello  
  	 World  	 ")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-2050" name="function-trim.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="380378093" result="Passed" start-time="2023-09-17T20:30:30.4499761Z" end-time="2023-09-17T20:30:30.4500843Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$trim()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2051" name="function-typeOf.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="653767381" result="Passed" start-time="2023-09-17T20:30:30.4500940Z" end-time="2023-09-17T20:30:30.4504674Z" duration="0.000374" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= undefined; $type($var))';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= undefined; $type($var))'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2052" name="function-typeOf.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="891797464" result="Passed" start-time="2023-09-17T20:30:30.4504785Z" end-time="2023-09-17T20:30:30.4507587Z" duration="0.000280" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= null; $type($var))';&#xA; result: &quot;null&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= null; $type($var))'
Result: '"null"'
Expected: '"null"'
]]></output>
                </test-case>
                <test-case id="0-2053" name="function-typeOf.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="814106131" result="Passed" start-time="2023-09-17T20:30:30.4507686Z" end-time="2023-09-17T20:30:30.4511142Z" duration="0.000346" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= 123; $type($var))';&#xA; result: &quot;number&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= 123; $type($var))'
Result: '"number"'
Expected: '"number"'
]]></output>
                </test-case>
                <test-case id="0-2054" name="function-typeOf.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1756435764" result="Passed" start-time="2023-09-17T20:30:30.4511404Z" end-time="2023-09-17T20:30:30.4514500Z" duration="0.000310" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= '123'; $type($var))';&#xA; result: &quot;string&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= '123'; $type($var))'
Result: '"string"'
Expected: '"string"'
]]></output>
                </test-case>
                <test-case id="0-2055" name="function-typeOf.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="331987883" result="Passed" start-time="2023-09-17T20:30:30.4514602Z" end-time="2023-09-17T20:30:30.4516593Z" duration="0.000199" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= true; $type($var))';&#xA; result: &quot;boolean&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= true; $type($var))'
Result: '"boolean"'
Expected: '"boolean"'
]]></output>
                </test-case>
                <test-case id="0-2056" name="function-typeOf.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1151111159" result="Passed" start-time="2023-09-17T20:30:30.4516694Z" end-time="2023-09-17T20:30:30.4517792Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= 'true'; $type($var))';&#xA; result: &quot;string&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= 'true'; $type($var))'
Result: '"string"'
Expected: '"string"'
]]></output>
                </test-case>
                <test-case id="0-2057" name="function-typeOf.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="332130778" result="Passed" start-time="2023-09-17T20:30:30.4517879Z" end-time="2023-09-17T20:30:30.4519784Z" duration="0.000191" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= []; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= []; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2058" name="function-typeOf.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="91600120" result="Passed" start-time="2023-09-17T20:30:30.4519878Z" end-time="2023-09-17T20:30:30.4520706Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= ['a']; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= ['a']; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2059" name="function-typeOf.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="853950199" result="Passed" start-time="2023-09-17T20:30:30.4528334Z" end-time="2023-09-17T20:30:30.4531415Z" duration="0.000308" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= ['a','b']; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= ['a','b']; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2060" name="function-typeOf.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1007855396" result="Passed" start-time="2023-09-17T20:30:30.4539350Z" end-time="2023-09-17T20:30:30.4551580Z" duration="0.001223" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= function(){true}; $type($var))';&#xA; result: &quot;function&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= function(){true}; $type($var))'
Result: '"function"'
Expected: '"function"'
]]></output>
                </test-case>
                <test-case id="0-2061" name="function-typeOf.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1649452756" result="Passed" start-time="2023-09-17T20:30:30.4554013Z" end-time="2023-09-17T20:30:30.4559013Z" duration="0.000500" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= (λ($v, $i, $a) {$v.price = $max($a.price)}); $type($var))';&#xA; result: &quot;function&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= (λ($v, $i, $a) {$v.price = $max($a.price)}); $type($var))'
Result: '"function"'
Expected: '"function"'
]]></output>
                </test-case>
                <test-case id="0-2062" name="function-typeOf.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="135697760" result="Passed" start-time="2023-09-17T20:30:30.4563743Z" end-time="2023-09-17T20:30:30.4565242Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= {}; $type($var))';&#xA; result: &quot;object&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= {}; $type($var))'
Result: '"object"'
Expected: '"object"'
]]></output>
                </test-case>
                <test-case id="0-2063" name="function-typeOf.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="67192999" result="Passed" start-time="2023-09-17T20:30:30.4565383Z" end-time="2023-09-17T20:30:30.4566446Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= {&quot;foo&quot;:&quot;bar&quot;}; $type($var))';&#xA; result: &quot;object&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= {"foo":"bar"}; $type($var))'
Result: '"object"'
Expected: '"object"'
]]></output>
                </test-case>
                <test-case id="0-2064" name="function-uppercase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="783149509" result="Passed" start-time="2023-09-17T20:30:30.4566536Z" end-time="2023-09-17T20:30:30.4567441Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello World&quot;)';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello World")'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-2065" name="function-uppercase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1676499595" result="Passed" start-time="2023-09-17T20:30:30.4569001Z" end-time="2023-09-17T20:30:30.4570112Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2066" name="function-zip.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1879267853" result="Passed" start-time="2023-09-17T20:30:30.4570197Z" end-time="2023-09-17T20:30:30.4571209Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5,6])';&#xA; result: [[1,4],[2,5],[3,6]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5,6])'
Result: '[[1,4],[2,5],[3,6]]'
Expected: '[[1,4],[2,5],[3,6]]'
]]></output>
                </test-case>
                <test-case id="0-2067" name="function-zip.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1062870813" result="Passed" start-time="2023-09-17T20:30:30.4571459Z" end-time="2023-09-17T20:30:30.4572505Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5,6],[7,8,9])';&#xA; result: [[1,4,7],[2,5,8],[3,6,9]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5,6],[7,8,9])'
Result: '[[1,4,7],[2,5,8],[3,6,9]]'
Expected: '[[1,4,7],[2,5,8],[3,6,9]]'
]]></output>
                </test-case>
                <test-case id="0-2068" name="function-zip.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="402156617" result="Passed" start-time="2023-09-17T20:30:30.4572589Z" end-time="2023-09-17T20:30:30.4573658Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5],[7,8,9])';&#xA; result: [[1,4,7],[2,5,8]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5],[7,8,9])'
Result: '[[1,4,7],[2,5,8]]'
Expected: '[[1,4,7],[2,5,8]]'
]]></output>
                </test-case>
                <test-case id="0-2069" name="function-zip.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="437378224" result="Passed" start-time="2023-09-17T20:30:30.4573753Z" end-time="2023-09-17T20:30:30.4584466Z" duration="0.001072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3])';&#xA; result: [[1],[2],[3]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3])'
Result: '[[1],[2],[3]]'
Expected: '[[1],[2],[3]]'
]]></output>
                </test-case>
                <test-case id="0-2070" name="function-zip.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="770163498" result="Passed" start-time="2023-09-17T20:30:30.4586811Z" end-time="2023-09-17T20:30:30.4590218Z" duration="0.000341" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip(1,2,3)';&#xA; result: [[1,2,3]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip(1,2,3)'
Result: '[[1,2,3]]'
Expected: '[[1,2,3]]'
]]></output>
                </test-case>
                <test-case id="0-2071" name="function-zip.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1411324042" result="Passed" start-time="2023-09-17T20:30:30.4594245Z" end-time="2023-09-17T20:30:30.4600810Z" duration="0.000656" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3], [4,5,6], nothing)';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3], [4,5,6], nothing)'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2072" name="higher-order-functions.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1599377319" result="Passed" start-time="2023-09-17T20:30:30.4613745Z" end-time="2023-09-17T20:30:30.4615099Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($twice:=function($f){function($x){$f($f($x))}}; $add3:=function($y){$y+3}; $add6:=$twice($add3); $add6(7))';&#xA; result: 13" />
                  </properties>
                  <output><![CDATA[Expr is '($twice:=function($f){function($x){$f($f($x))}}; $add3:=function($y){$y+3}; $add6:=$twice($add3); $add6(7))'
Result: '13'
Expected: '13'
]]></output>
                </test-case>
                <test-case id="0-2073" name="higher-order-functions.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1516154402" result="Passed" start-time="2023-09-17T20:30:30.4618692Z" end-time="2023-09-17T20:30:30.4620257Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n &lt; 2 ? 1 : $n * $f($n - 1) } })(6)';&#xA; result: 720" />
                  </properties>
                  <output><![CDATA[Expr is 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n < 2 ? 1 : $n * $f($n - 1) } })(6)'
Result: '720'
Expected: '720'
]]></output>
                </test-case>
                <test-case id="0-2074" name="higher-order-functions.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1268472743" result="Passed" start-time="2023-09-17T20:30:30.4621963Z" end-time="2023-09-17T20:30:30.4635094Z" duration="0.001313" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n &lt;= 1 ? $n : $f($n-1) + $f($n-2) } })(6) ';&#xA; result: 8" />
                  </properties>
                  <output><![CDATA[Expr is 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n <= 1 ? $n : $f($n-1) + $f($n-2) } })(6) '
Result: '8'
Expected: '8'
]]></output>
                </test-case>
                <test-case id="0-2075" name="hof-filter.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="757216302" result="Passed" start-time="2023-09-17T20:30:30.4642551Z" end-time="2023-09-17T20:30:30.4650616Z" duration="0.000806" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(library.books~&gt;$filter(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn';&#xA; result: &quot;9780262510875&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(library.books~>$filter(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn'
Result: '"9780262510875"'
Expected: '"9780262510875"'
]]></output>
                </test-case>
                <test-case id="0-2076" name="hof-filter.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1792450446" result="Passed" start-time="2023-09-17T20:30:30.4650773Z" end-time="2023-09-17T20:30:30.4658574Z" duration="0.000781" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing~&gt;$filter(λ($v, $i, $a) {$v.price = $max($a.price)})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing~>$filter(λ($v, $i, $a) {$v.price = $max($a.price)})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2077" name="hof-filter.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="169559434" result="Passed" start-time="2023-09-17T20:30:30.4658733Z" end-time="2023-09-17T20:30:30.4659857Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter(data, function($d) { true })';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$filter(data, function($d) { true })'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2078" name="hof-filter.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="260337440" result="Passed" start-time="2023-09-17T20:30:30.4659950Z" end-time="2023-09-17T20:30:30.4660999Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter([0, 1, 2], $boolean)';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$filter([0, 1, 2], $boolean)'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2079" name="hof-map.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="920644391" result="Passed" start-time="2023-09-17T20:30:30.4661105Z" end-time="2023-09-17T20:30:30.4667564Z" duration="0.000646" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($data.one, $add) )  ';&#xA; result: [1,4,9,16,25]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($data.one, $add) )  '
Result: '[1,4,9,16,25]'
Expected: '[1,4,9,16,25]'
]]></output>
                </test-case>
                <test-case id="0-2080" name="hof-map.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="648719513" result="Passed" start-time="2023-09-17T20:30:30.4667695Z" end-time="2023-09-17T20:30:30.4683336Z" duration="0.001564" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($add) )  ';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($add) )  '
]]></output>
                </test-case>
                <test-case id="0-2081" name="hof-map.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1294562015" result="Passed" start-time="2023-09-17T20:30:30.4683772Z" end-time="2023-09-17T20:30:30.4685042Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map([1,2,3], $string)';&#xA; result: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$map([1,2,3], $string)'
Result: '["1","2","3"]'
Expected: '["1","2","3"]'
]]></output>
                </test-case>
                <test-case id="0-2082" name="hof-map.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="865447489" result="Passed" start-time="2023-09-17T20:30:30.4685155Z" end-time="2023-09-17T20:30:30.4689178Z" duration="0.000402" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product ~&gt; $map(λ($prod, $index) { $index+1 &amp; &quot;: &quot; &amp; $prod.&quot;Product Name&quot; })';&#xA; result: [&quot;1: Bowler Hat&quot;,&quot;2: Trilby hat&quot;,&quot;3: Bowler Hat&quot;,&quot;4: Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product ~> $map(λ($prod, $index) { $index+1 & ": " & $prod."Product Name" })'
Result: '["1: Bowler Hat","2: Trilby hat","3: Bowler Hat","4: Cloak"]'
Expected: '["1: Bowler Hat","2: Trilby hat","3: Bowler Hat","4: Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2083" name="hof-map.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="874041498" result="Passed" start-time="2023-09-17T20:30:30.4689858Z" end-time="2023-09-17T20:30:30.4692378Z" duration="0.000252" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product ~&gt; $map(λ($prod, $index, $arr) { $index+1 &amp; &quot;/&quot; &amp; $count($arr) &amp; &quot;: &quot; &amp; $prod.&quot;Product Name&quot; })';&#xA; result: [&quot;1/4: Bowler Hat&quot;,&quot;2/4: Trilby hat&quot;,&quot;3/4: Bowler Hat&quot;,&quot;4/4: Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product ~> $map(λ($prod, $index, $arr) { $index+1 & "/" & $count($arr) & ": " & $prod."Product Name" })'
Result: '["1/4: Bowler Hat","2/4: Trilby hat","3/4: Bowler Hat","4/4: Cloak"]'
Expected: '["1/4: Bowler Hat","2/4: Trilby hat","3/4: Bowler Hat","4/4: Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2084" name="hof-map.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="209997153" result="Passed" start-time="2023-09-17T20:30:30.4692473Z" end-time="2023-09-17T20:30:30.4698450Z" duration="0.000598" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$i[$v.type=&quot;office&quot;]})';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$i[$v.type="office"]})'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2085" name="hof-map.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="284200202" result="Passed" start-time="2023-09-17T20:30:30.4699539Z" end-time="2023-09-17T20:30:30.4700803Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i})';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i})'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2086" name="hof-map.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2053821118" result="Passed" start-time="2023-09-17T20:30:30.4700924Z" end-time="2023-09-17T20:30:30.4704005Z" duration="0.000308" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i: null})';&#xA; result: [null,1,2,null]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i: null})'
Result: '[null,1,2,null]'
Expected: '[null,1,2,null]'
]]></output>
                </test-case>
                <test-case id="0-2087" name="hof-map.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="205700819" result="Passed" start-time="2023-09-17T20:30:30.4704136Z" end-time="2023-09-17T20:30:30.4705079Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i: null})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i: null})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2088" name="hof-map.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="898615524" result="Passed" start-time="2023-09-17T20:30:30.4705164Z" end-time="2023-09-17T20:30:30.4706080Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map([0, 1, 2], $boolean)';&#xA; result: [false,true,true]" />
                  </properties>
                  <output><![CDATA[Expr is '$map([0, 1, 2], $boolean)'
Result: '[false,true,true]'
Expected: '[false,true,true]'
]]></output>
                </test-case>
                <test-case id="0-2089" name="hof-reduce.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1286078346" result="Passed" start-time="2023-09-17T20:30:30.4706155Z" end-time="2023-09-17T20:30:30.4706896Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y})) ';&#xA; result: 15" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y})) '
Result: '15'
Expected: '15'
]]></output>
                </test-case>
                <test-case id="0-2090" name="hof-reduce.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="682601755" result="Passed" start-time="2023-09-17T20:30:30.4706966Z" end-time="2023-09-17T20:30:30.4707817Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $concat := function($s){function($a, $b){$string($a) &amp; $s &amp; $string($b)}};  $comma_join := $concat(' ... ');  $reduce([1,2,3,4,5], $comma_join))      ';&#xA; result: &quot;1 ... 2 ... 3 ... 4 ... 5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $concat := function($s){function($a, $b){$string($a) & $s & $string($b)}};  $comma_join := $concat(' ... ');  $reduce([1,2,3,4,5], $comma_join))      '
Result: '"1 ... 2 ... 3 ... 4 ... 5"'
Expected: '"1 ... 2 ... 3 ... 4 ... 5"'
]]></output>
                </test-case>
                <test-case id="0-2091" name="hof-reduce.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1026971255" result="Passed" start-time="2023-09-17T20:30:30.4707888Z" end-time="2023-09-17T20:30:30.4708642Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y}, 2))';&#xA; result: 17" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y}, 2))'
Result: '17'
Expected: '17'
]]></output>
                </test-case>
                <test-case id="0-2092" name="hof-reduce.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1884820795" result="Passed" start-time="2023-09-17T20:30:30.4708717Z" end-time="2023-09-17T20:30:30.4709293Z" duration="0.000058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-2093" name="hof-reduce.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2017939538" result="Passed" start-time="2023-09-17T20:30:30.4709360Z" end-time="2023-09-17T20:30:30.4709913Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-2094" name="hof-reduce.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="586636450" result="Passed" start-time="2023-09-17T20:30:30.4709980Z" end-time="2023-09-17T20:30:30.4710778Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reduce(Account.Order.Product.Quantity, $append)';&#xA; result: [2,1,4,1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reduce(Account.Order.Product.Quantity, $append)'
Result: '[2,1,4,1]'
Expected: '[2,1,4,1]'
]]></output>
                </test-case>
                <test-case id="0-2095" name="hof-reduce.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="664109779" result="Passed" start-time="2023-09-17T20:30:30.4710849Z" end-time="2023-09-17T20:30:30.4711492Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reduce(Account.Order.Product.Quantity, $append)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$reduce(Account.Order.Product.Quantity, $append)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2096" name="hof-reduce.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1829524223" result="Passed" start-time="2023-09-17T20:30:30.4711558Z" end-time="2023-09-17T20:30:30.4712541Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($product := function($a, $b) { $a * $b };$power := function($x, $n) { $n = 0 ? 1 : $reduce([1..$n].($x), $product) };[0..5].$power(2, $))';&#xA; result: [1,2,4,8,16,32]" />
                  </properties>
                  <output><![CDATA[Expr is '($product := function($a, $b) { $a * $b };$power := function($x, $n) { $n = 0 ? 1 : $reduce([1..$n].($x), $product) };[0..5].$power(2, $))'
Result: '[1,2,4,8,16,32]'
Expected: '[1,2,4,8,16,32]'
]]></output>
                </test-case>
                <test-case id="0-2097" name="hof-reduce.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="726106453" result="Passed" start-time="2023-09-17T20:30:30.4712613Z" end-time="2023-09-17T20:30:30.4746767Z" duration="0.003424" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x){$x}))';&#xA; result: error D3050" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3050.
Actually thrown D3050.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x){$x}))'
]]></output>
                </test-case>
                <test-case id="0-2098" name="hof-reduce.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1545497066" result="Passed" start-time="2023-09-17T20:30:30.4747291Z" end-time="2023-09-17T20:30:30.4753098Z" duration="0.000581" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(&#xA; $months := [&#xA;        &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;,&#xA;        &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;&#xA; ];&#xA; $indexof := λ($array, $value) {&#xA;  $reduce($array, λ($acc, $v, $i) {&#xA;   $v=$value ? $i : $acc&#xA;  })&#xA; };&#xA; $indexof($months, 'May')&#xA;)&#xA;';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '(
 $months := [
        "Jan", "Feb", "Mar", "Apr", "May", "Jun",
        "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
 ];
 $indexof := λ($array, $value) {
  $reduce($array, λ($acc, $v, $i) {
   $v=$value ? $i : $acc
  })
 };
 $indexof($months, 'May')
)
'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-2099" name="hof-reduce.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="21619944" result="Passed" start-time="2023-09-17T20:30:30.4773571Z" end-time="2023-09-17T20:30:30.4779481Z" duration="0.000591" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(&#xA;  $mean := $reduce(?, λ($acc, $v, $i, $arr) {(&#xA;    $total := $acc + $v;&#xA;    $length := $count($arr);&#xA;    $i = $length - 1 ? $total / $length : $total&#xA;  )});&#xA;&#xA;  $mean([7,3,8])&#xA;)&#xA;';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(
  $mean := $reduce(?, λ($acc, $v, $i, $arr) {(
    $total := $acc + $v;
    $length := $count($arr);
    $i = $length - 1 ? $total / $length : $total
  )});

  $mean([7,3,8])
)
'
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2100" name="hof-single.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2042250878" result="Passed" start-time="2023-09-17T20:30:30.4779754Z" end-time="2023-09-17T20:30:30.4792163Z" duration="0.001241" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(library.books~&gt;$single(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn';&#xA; result: &quot;9780262510875&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(library.books~>$single(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn'
Result: '"9780262510875"'
Expected: '"9780262510875"'
]]></output>
                </test-case>
                <test-case id="0-2101" name="hof-single.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1460790075" result="Passed" start-time="2023-09-17T20:30:30.4792340Z" end-time="2023-09-17T20:30:30.4799470Z" duration="0.000713" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing~&gt;$single(λ($v, $i, $a) {$v.price = $max($a.price)})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing~>$single(λ($v, $i, $a) {$v.price = $max($a.price)})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2102" name="hof-single.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="423481011" result="Passed" start-time="2023-09-17T20:30:30.4808587Z" end-time="2023-09-17T20:30:30.4810405Z" duration="0.000182" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single(data, function($d) { true })';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$single(data, function($d) { true })'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2103" name="hof-single.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1561257249" result="Passed" start-time="2023-09-17T20:30:30.4823760Z" end-time="2023-09-17T20:30:30.4832847Z" duration="0.000909" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2], $boolean)';&#xA; result: error D3138" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3138.
Actually thrown D3138.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2], $boolean)'
]]></output>
                </test-case>
                <test-case id="0-2104" name="hof-single.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1182137563" result="Passed" start-time="2023-09-17T20:30:30.4833176Z" end-time="2023-09-17T20:30:30.4840474Z" duration="0.000730" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2], function($v) {$v = 3})';&#xA; result: error D3139" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3139.
Actually thrown D3139.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2], function($v) {$v = 3})'
]]></output>
                </test-case>
                <test-case id="0-2105" name="hof-single.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1116537698" result="Passed" start-time="2023-09-17T20:30:30.4840634Z" end-time="2023-09-17T20:30:30.4847919Z" duration="0.000729" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2])';&#xA; result: error D3138" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3138.
Actually thrown D3138.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2])'
]]></output>
                </test-case>
                <test-case id="0-2106" name="hof-single.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1201873709" result="Passed" start-time="2023-09-17T20:30:30.4848072Z" end-time="2023-09-17T20:30:30.4848955Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single([0])';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$single([0])'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-2107" name="hof-single.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1523126709" result="Passed" start-time="2023-09-17T20:30:30.4849222Z" end-time="2023-09-17T20:30:30.4858265Z" duration="0.000904" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([])';&#xA; result: error D3139" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3139.
Actually thrown D3139.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([])'
]]></output>
                </test-case>
                <test-case id="0-2108" name="hof-single.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1693117035" result="Passed" start-time="2023-09-17T20:30:30.4858421Z" end-time="2023-09-17T20:30:30.4860438Z" duration="0.000202" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single([true, false, true], function($v) {$v=false})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$single([true, false, true], function($v) {$v=false})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2109" name="hof-single.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="999219462" result="Passed" start-time="2023-09-17T20:30:30.4860542Z" end-time="2023-09-17T20:30:30.4871455Z" duration="0.001091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single(['zero', 'one', 'two'], function($v, $i, $k) {$i=1})';&#xA; result: &quot;one&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$single(['zero', 'one', 'two'], function($v, $i, $k) {$i=1})'
Result: '"one"'
Expected: '"one"'
]]></output>
                </test-case>
                <test-case id="0-2110" name="hof-single.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="687021084" result="Passed" start-time="2023-09-17T20:30:30.4876169Z" end-time="2023-09-17T20:30:30.4878107Z" duration="0.000194" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone ~&gt; $filter(function($p) {$p.type = 'home'}) ~&gt; $single(function($p) {$p.number = '0203 544 1234'})';&#xA; result: {&quot;type&quot;:&quot;home&quot;,&quot;number&quot;:&quot;0203 544 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone ~> $filter(function($p) {$p.type = 'home'}) ~> $single(function($p) {$p.number = '0203 544 1234'})'
Result: '{"type":"home","number":"0203 544 1234"}'
Expected: '{"type":"home","number":"0203 544 1234"}'
]]></output>
                </test-case>
                <test-case id="0-2111" name="hof-zip-map.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="981551725" result="Passed" start-time="2023-09-17T20:30:30.4883368Z" end-time="2023-09-17T20:30:30.4885061Z" duration="0.000169" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $map($zip($data.one, $data.two), $sum)) ';&#xA; result: [6,6,6,6,6]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $map($zip($data.one, $data.two), $sum)) '
Result: '[6,6,6,6,6]'
Expected: '[6,6,6,6,6]'
]]></output>
                </test-case>
                <test-case id="0-2112" name="hof-zip-map.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="71793338" result="Passed" start-time="2023-09-17T20:30:30.4885196Z" end-time="2023-09-17T20:30:30.4887203Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: [6,6,6,6,6]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '[6,6,6,6,6]'
Expected: '[6,6,6,6,6]'
]]></output>
                </test-case>
                <test-case id="0-2113" name="hof-zip-map.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1318439376" result="Passed" start-time="2023-09-17T20:30:30.4888298Z" end-time="2023-09-17T20:30:30.4890447Z" duration="0.000215" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1],    &quot;two&quot;: [5]  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1],    "two": [5]  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2114" name="hof-zip-map.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="205230686" result="Passed" start-time="2023-09-17T20:30:30.4890609Z" end-time="2023-09-17T20:30:30.4891993Z" duration="0.000138" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: 1,    &quot;two&quot;: 5  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": 1,    "two": 5  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2115" name="inclusion-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1860777028" result="Passed" start-time="2023-09-17T20:30:30.4902889Z" end-time="2023-09-17T20:30:30.4907284Z" duration="0.000439" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1 in [1,2]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '1 in [1,2]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2116" name="inclusion-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="784005267" result="Passed" start-time="2023-09-17T20:30:30.4908045Z" end-time="2023-09-17T20:30:30.4909277Z" duration="0.000123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3 in [1,2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '3 in [1,2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2117" name="inclusion-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1409139909" result="Passed" start-time="2023-09-17T20:30:30.4909376Z" end-time="2023-09-17T20:30:30.4912976Z" duration="0.000360" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; in [1,2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" in [1,2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2118" name="inclusion-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2004679493" result="Passed" start-time="2023-09-17T20:30:30.4913086Z" end-time="2023-09-17T20:30:30.4914017Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;world&quot; in [&quot;hello&quot;, &quot;world&quot;]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"world" in ["hello", "world"]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2119" name="inclusion-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="498949307" result="Passed" start-time="2023-09-17T20:30:30.4914111Z" end-time="2023-09-17T20:30:30.4915382Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'in in [&quot;hello&quot;, &quot;world&quot;]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'in in ["hello", "world"]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2120" name="inclusion-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1770162124" result="Passed" start-time="2023-09-17T20:30:30.4915477Z" end-time="2023-09-17T20:30:30.4916204Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;world&quot; in in';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"world" in in'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2121" name="inclusion-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1673567034" result="Passed" start-time="2023-09-17T20:30:30.4916290Z" end-time="2023-09-17T20:30:30.4917139Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; in &quot;hello&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" in "hello"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2122" name="inclusion-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="164255289" result="Passed" start-time="2023-09-17T20:30:30.4917236Z" end-time="2023-09-17T20:30:30.4932983Z" duration="0.001575" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'library.books[&quot;Aho&quot; in authors].title';&#xA; result: [&quot;The AWK Programming Language&quot;,&quot;Compilers: Principles, Techniques, and Tools&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'library.books["Aho" in authors].title'
Result: '["The AWK Programming Language","Compilers: Principles, Techniques, and Tools"]'
Expected: '["The AWK Programming Language","Compilers: Principles, Techniques, and Tools"]'
]]></output>
                </test-case>
                <test-case id="0-2123" name="inclusion-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1263561918" result="Passed" start-time="2023-09-17T20:30:30.4947111Z" end-time="2023-09-17T20:30:30.4949057Z" duration="0.000194" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'content.integration.$lowercase(name)';&#xA; result: &quot;fakeintegrationname&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'content.integration.$lowercase(name)'
Result: '"fakeintegrationname"'
Expected: '"fakeintegrationname"'
]]></output>
                </test-case>
                <test-case id="0-2124" name="joins.employee-map-reduce[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1902260116" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.4949208Z" end-time="2023-09-17T20:30:30.4957990Z" duration="0.000878" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.(Contact)[ssn = $e.SSN].{ 'name': $e.(FirstName &amp; ' ' &amp; Surname), 'phone': Phone[type='mobile'].number }';&#xA; result: [{&quot;name&quot;:&quot;Fred Smith&quot;,&quot;phone&quot;:&quot;077 7700 1234&quot;},{&quot;name&quot;:&quot;Darren Cruse&quot;,&quot;phone&quot;:&quot;315 782 9279&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.(Contact)[ssn = $e.SSN].{ 'name': $e.(FirstName & ' ' & Surname), 'phone': Phone[type='mobile'].number }'
]]></output>
                </test-case>
                <test-case id="0-2125" name="joins.employee-map-reduce[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1890675890" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.4958142Z" end-time="2023-09-17T20:30:30.4965933Z" duration="0.000779" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.(Contact)[ssn = $e.SSN]{ $e.FirstName: Phone[type='mobile'].number }';&#xA; result: {&quot;Fred&quot;:&quot;077 7700 1234&quot;,&quot;Darren&quot;:&quot;315 782 9279&quot;,&quot;Hugh&quot;:&quot;07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.(Contact)[ssn = $e.SSN]{ $e.FirstName: Phone[type='mobile'].number }'
]]></output>
                </test-case>
                <test-case id="0-2126" name="joins.employee-map-reduce[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1673986894" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.4966086Z" end-time="2023-09-17T20:30:30.4985983Z" duration="0.001990" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $join($c.Phone.number, ', ') }';&#xA; result: {&quot;Fred Smith&quot;:&quot;0203 544 1234, 01962 001234, 077 7700 1234&quot;,&quot;Darren Cruse&quot;:&quot;3146458343, 315 782 9279&quot;,&quot;Hugh Jones&quot;:&quot;0280 564 6543, 0280 864 8643, 07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $join($c.Phone.number, ', ') }'
]]></output>
                </test-case>
                <test-case id="0-2127" name="joins.employee-map-reduce[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1728921428" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.4986298Z" end-time="2023-09-17T20:30:30.5002134Z" duration="0.001584" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number ~&gt; $join(', ') }';&#xA; result: {&quot;Fred Smith&quot;:&quot;01962 001234, 077 7700 1234&quot;,&quot;Darren Cruse&quot;:&quot;315 782 9279&quot;,&quot;Hugh Jones&quot;:&quot;0280 864 8643, 07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number ~> $join(', ') }'
]]></output>
                </test-case>
                <test-case id="0-2128" name="joins.employee-map-reduce[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="929517952" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5002599Z" end-time="2023-09-17T20:30:30.5021179Z" duration="0.001858" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number }';&#xA; result: {&quot;Fred Smith&quot;:[&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren Cruse&quot;:&quot;315 782 9279&quot;,&quot;Hugh Jones&quot;:[&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number }'
]]></output>
                </test-case>
                <test-case id="0-2129" name="joins.employee-map-reduce[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="604362964" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5021689Z" end-time="2023-09-17T20:30:30.5030263Z" duration="0.000858" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number[] }';&#xA; result: {&quot;Fred Smith&quot;:[&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren Cruse&quot;:[&quot;315 782 9279&quot;],&quot;Hugh Jones&quot;:[&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number[] }'
]]></output>
                </test-case>
                <test-case id="0-2130" name="joins.employee-map-reduce[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1075175726" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5030701Z" end-time="2023-09-17T20:30:30.5035450Z" duration="0.000475" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.FirstName: $c.Phone.number }';&#xA; result: {&quot;Fred&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;],&quot;Hugh&quot;:[&quot;0280 564 6543&quot;,&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.FirstName: $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2131" name="joins.employee-map-reduce[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1066343993" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5035603Z" end-time="2023-09-17T20:30:30.5039906Z" duration="0.000430" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e^($e.Surname).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }';&#xA; result: [{&quot;name&quot;:&quot;Cruse&quot;,&quot;phone&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;]},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 564 6543&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 864 8643&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;},{&quot;name&quot;:&quot;Smith&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e^($e.Surname).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2132" name="joins.employee-map-reduce[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="771546015" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5040046Z" end-time="2023-09-17T20:30:30.5044081Z" duration="0.000404" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e^($e.FirstName).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }';&#xA; result: [{&quot;name&quot;:&quot;Cruse&quot;,&quot;phone&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;]},{&quot;name&quot;:&quot;Smith&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;]},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 564 6543&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 864 8643&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e^($e.FirstName).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2133" name="joins.employee-map-reduce[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="238717496" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5044221Z" end-time="2023-09-17T20:30:30.5052165Z" duration="0.000795" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^($) }';&#xA; result: {&quot;Smith&quot;:[&quot;01962 001234&quot;,&quot;0203 544 1234&quot;,&quot;077 7700 1234&quot;],&quot;Cruse&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;],&quot;Jones&quot;:[&quot;0280 564 6543&quot;,&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^($) }'
]]></output>
                </test-case>
                <test-case id="0-2134" name="joins.employee-map-reduce[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1025877160" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5052965Z" end-time="2023-09-17T20:30:30.5060195Z" duration="0.000719" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^(&gt;$) }';&#xA; result: {&quot;Smith&quot;:[&quot;077 7700 1234&quot;,&quot;0203 544 1234&quot;,&quot;01962 001234&quot;],&quot;Cruse&quot;:[&quot;315 782 9279&quot;,&quot;3146458343&quot;],&quot;Jones&quot;:[&quot;07735 853535&quot;,&quot;0280 864 8643&quot;,&quot;0280 564 6543&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^(>$) }'
]]></output>
                </test-case>
                <test-case id="0-2135" name="joins.employee-map-reduce[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1335413085" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5060470Z" end-time="2023-09-17T20:30:30.5075011Z" duration="0.001454" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$@$i';&#xA; result: [1,2,3]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$@$i'
]]></output>
                </test-case>
                <test-case id="0-2136" name="joins.errors[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="871081004" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5079849Z" end-time="2023-09-17T20:30:30.5124639Z" duration="0.004479" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order@o.Product';&#xA; result: error S0214" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order@o.Product'
]]></output>
                </test-case>
                <test-case id="0-2137" name="joins.errors[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1451673887" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5127491Z" end-time="2023-09-17T20:30:30.5139702Z" duration="0.001221" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order@$o#i.Product';&#xA; result: error S0214" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order@$o#i.Product'
]]></output>
                </test-case>
                <test-case id="0-2138" name="joins.errors[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1839387582" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5141253Z" end-time="2023-09-17T20:30:30.5155602Z" duration="0.001440" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[1]@$o.Product';&#xA; result: error S0215" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 201
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in /_/src/Jsonata.Net.Native/Parsing/Parser_Leds.cs:line 156
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 231
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in /_/src/Jsonata.Net.Native/Parsing/Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 231
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order[1]@$o.Product'
]]></output>
                </test-case>
                <test-case id="0-2139" name="joins.errors[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1240943102" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5155902Z" end-time="2023-09-17T20:30:30.5186781Z" duration="0.003088" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order^(&gt;OrderID)@$o.Product.{ 'name':`Product Name`, 'orderid':$o.OrderID }';&#xA; result: error S0216" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 201
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in /_/src/Jsonata.Net.Native/Parsing/Parser_Leds.cs:line 237
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 231
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order^(>OrderID)@$o.Product.{ 'name':`Product Name`, 'orderid':$o.OrderID }'
]]></output>
                </test-case>
                <test-case id="0-2140" name="joins.index[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1229810140" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5203846Z" end-time="2023-09-17T20:30:30.5214130Z" duration="0.001028" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]';&#xA; result: [3,1,4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]'
]]></output>
                </test-case>
                <test-case id="0-2141" name="joins.index[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="530694409" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5214679Z" end-time="2023-09-17T20:30:30.5227338Z" duration="0.001266" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3] = $[[0..2]]';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3] = $[[0..2]]'
]]></output>
                </test-case>
                <test-case id="0-2142" name="joins.index[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="660067431" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5227537Z" end-time="2023-09-17T20:30:30.5246477Z" duration="0.001894" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.$#$pos[$pos&lt;3]';&#xA; result: [3,1,4,1,5,9]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.$#$pos[$pos<3]'
]]></output>
                </test-case>
                <test-case id="0-2143" name="joins.index[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2046879709" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5251696Z" end-time="2023-09-17T20:30:30.5263135Z" duration="0.001144" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.$#$pos[$pos&lt;3] = $.$[[0..2]]';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.$#$pos[$pos<3] = $.$[[0..2]]'
]]></output>
                </test-case>
                <test-case id="0-2144" name="joins.index[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="599057262" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5271714Z" end-time="2023-09-17T20:30:30.5286678Z" duration="0.001497" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)';&#xA; result: [1,3,4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)'
]]></output>
                </test-case>
                <test-case id="0-2145" name="joins.index[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1848533677" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5291402Z" end-time="2023-09-17T20:30:30.5301605Z" duration="0.001020" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^(&gt;$)';&#xA; result: [4,3,1]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^(>$)'
]]></output>
                </test-case>
                <test-case id="0-2146" name="joins.index[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="955177917" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5303625Z" end-time="2023-09-17T20:30:30.5324119Z" duration="0.002050" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$^($)#$pos[$pos&lt;3] ';&#xA; result: [1,1,3]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 201
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in /_/src/Jsonata.Net.Native/Parsing/Parser_Leds.cs:line 237
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 231
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$^($)#$pos[$pos<3] '
]]></output>
                </test-case>
                <test-case id="0-2147" name="joins.index[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="566381419" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5324335Z" end-time="2023-09-17T20:30:30.5333086Z" duration="0.000875" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3][1]';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3][1]'
]]></output>
                </test-case>
                <test-case id="0-2148" name="joins.index[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1812708852" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5333433Z" end-time="2023-09-17T20:30:30.5340648Z" duration="0.000721" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3][1][]';&#xA; result: [1]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3][1][]'
]]></output>
                </test-case>
                <test-case id="0-2149" name="joins.index[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="873343069" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5340809Z" end-time="2023-09-17T20:30:30.5345376Z" duration="0.000457" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)[-1]';&#xA; result: 4" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)[-1]'
]]></output>
                </test-case>
                <test-case id="0-2150" name="joins.index[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2027588159" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5345523Z" end-time="2023-09-17T20:30:30.5349710Z" duration="0.000419" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[][$pos&lt;3]^($)[-1]';&#xA; result: [4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[][$pos<3]^($)[-1]'
]]></output>
                </test-case>
                <test-case id="0-2151" name="joins.index[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="420384314" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5349856Z" end-time="2023-09-17T20:30:30.5353916Z" duration="0.000406" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)[-1][]';&#xA; result: [4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 83
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)[-1][]'
]]></output>
                </test-case>
                <test-case id="0-2152" name="joins.index[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="868910607" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5354050Z" end-time="2023-09-17T20:30:30.5358269Z" duration="0.000422" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$[[1..4]]#$pos[$pos&gt;=2]';&#xA; result: [1,5]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 180
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 201
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in /_/src/Jsonata.Net.Native/Parsing/Parser_Leds.cs:line 156
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 231
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$[[1..4]]#$pos[$pos>=2]'
]]></output>
                </test-case>
                <test-case id="0-2153" name="joins.index[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1046547759" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5358406Z" end-time="2023-09-17T20:30:30.5362296Z" duration="0.000389" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$o.Product[ProductID=858383].{ 'Product': `Product Name`, 'Order Index': $o }';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:1}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$o.Product[ProductID=858383].{ 'Product': `Product Name`, 'Order Index': $o }'
]]></output>
                </test-case>
                <test-case id="0-2154" name="joins.index[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="398941467" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5362411Z" end-time="2023-09-17T20:30:30.5377277Z" duration="0.001487" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$i.Missing';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$i.Missing'
]]></output>
                </test-case>
                <test-case id="0-2155" name="joins.index[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="368683844" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5382014Z" end-time="2023-09-17T20:30:30.5395722Z" duration="0.001371" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$i.Product{ $string(ProductID): $i }';&#xA; result: {&quot;345664&quot;:1,&quot;858236&quot;:0,&quot;858383&quot;:[0,1]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$i.Product{ $string(ProductID): $i }'
]]></output>
                </test-case>
                <test-case id="0-2156" name="joins.library-joins[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1296534786" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5395930Z" end-time="2023-09-17T20:30:30.5408301Z" duration="0.001237" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2157" name="joins.library-joins[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1307402740" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5413328Z" end-time="2023-09-17T20:30:30.5432716Z" duration="0.001939" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books[$l.isbn=isbn].{&#xA;  'title': title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books[$l.isbn=isbn].{
  'title': title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2158" name="joins.library-joins[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1806480780" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5433034Z" end-time="2023-09-17T20:30:30.5441559Z" duration="0.000853" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.books#$pos.$[$substring(title,0,3) = 'The'].$pos';&#xA; result: [1,2]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.books#$pos.$[$substring(title,0,3) = 'The'].$pos'
]]></output>
                </test-case>
                <test-case id="0-2159" name="joins.library-joins[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1438945320" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5441712Z" end-time="2023-09-17T20:30:30.5449106Z" duration="0.000739" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers[$l.customer=id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': name&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers[$l.customer=id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': name
}
'
]]></output>
                </test-case>
                <test-case id="0-2160" name="joins.library-joins[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1590034451" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5449266Z" end-time="2023-09-17T20:30:30.5456559Z" duration="0.000729" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers@$c[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers@$c[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name
}
'
]]></output>
                </test-case>
                <test-case id="0-2161" name="joins.library-joins[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1620435928" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5456717Z" end-time="2023-09-17T20:30:30.5464026Z" duration="0.000731" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn].customers@$c#$ic[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name,&#xA;  'loan-index': $il,&#xA;  'book-index': $ib,&#xA;  'customer-index': $ic&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;,&quot;loan-index&quot;:0,&quot;book-index&quot;:0,&quot;customer-index&quot;:0},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:1,&quot;book-index&quot;:3,&quot;customer-index&quot;:2},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:2,&quot;book-index&quot;:0,&quot;customer-index&quot;:2}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn].customers@$c#$ic[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name,
  'loan-index': $il,
  'book-index': $ib,
  'customer-index': $ic
}
'
]]></output>
                </test-case>
                <test-case id="0-2162" name="joins.library-joins[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="593608757" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5465673Z" end-time="2023-09-17T20:30:30.5478861Z" duration="0.001319" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.customers#$ic[$il=$ic].{&#xA;  'customer': name,&#xA;  'return': $l.return&#xA;}&#xA;';&#xA; result: [{&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;return&quot;:&quot;2016-12-05&quot;},{&quot;customer&quot;:&quot;Fred Bloggs&quot;,&quot;return&quot;:&quot;2016-10-22&quot;},{&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;return&quot;:&quot;2016-12-22&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.customers#$ic[$il=$ic].{
  'customer': name,
  'return': $l.return
}
'
]]></output>
                </test-case>
                <test-case id="0-2163" name="joins.library-joins[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1088754071" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5483504Z" end-time="2023-09-17T20:30:30.5498238Z" duration="0.001473" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn]#$ib2.customers@$c#$ic[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name,&#xA;  'loan-index': $il,&#xA;  'book-index': $ib,&#xA;  'customer-index': $ic,&#xA;  'ib2': $ib2&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;,&quot;loan-index&quot;:0,&quot;book-index&quot;:0,&quot;customer-index&quot;:0,&quot;ib2&quot;:0},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:1,&quot;book-index&quot;:3,&quot;customer-index&quot;:2,&quot;ib2&quot;:1},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:2,&quot;book-index&quot;:0,&quot;customer-index&quot;:2,&quot;ib2&quot;:2}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn]#$ib2.customers@$c#$ic[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name,
  'loan-index': $il,
  'book-index': $ib,
  'customer-index': $ic,
  'ib2': $ib2
}
'
]]></output>
                </test-case>
                <test-case id="0-2164" name="joins.library-joins[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2071527383" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5507662Z" end-time="2023-09-17T20:30:30.5522278Z" duration="0.001462" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: {&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2165" name="joins.library-joins[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1768160738" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5522453Z" end-time="2023-09-17T20:30:30.5530307Z" duration="0.000786" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][5].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][5].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2166" name="joins.library-joins[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="210005710" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5530780Z" end-time="2023-09-17T20:30:30.5544014Z" duration="0.001323" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1][].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1][].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2167" name="lambdas.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1980559489" result="Passed" start-time="2023-09-17T20:30:30.5544311Z" end-time="2023-09-17T20:30:30.5545480Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x*$x}(5)';&#xA; result: 25" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x*$x}(5)'
Result: '25'
Expected: '25'
]]></output>
                </test-case>
                <test-case id="0-2168" name="lambdas.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="292562216" result="Passed" start-time="2023-09-17T20:30:30.5545582Z" end-time="2023-09-17T20:30:30.5547048Z" duration="0.000147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x&gt;5 ? &quot;foo&quot;}(6)';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x>5 ? "foo"}(6)'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2169" name="lambdas.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1017301248" result="Passed" start-time="2023-09-17T20:30:30.5547258Z" end-time="2023-09-17T20:30:30.5552234Z" duration="0.000498" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x&gt;5 ? &quot;foo&quot;}(3)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x>5 ? "foo"}(3)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2170" name="lambdas.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="989696024" result="Passed" start-time="2023-09-17T20:30:30.5552690Z" end-time="2023-09-17T20:30:30.5555858Z" duration="0.000317" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($factorial:= function($x){$x &lt;= 1 ? 1 : $x * $factorial($x-1)}; $factorial(4))';&#xA; result: 24" />
                  </properties>
                  <output><![CDATA[Expr is '($factorial:= function($x){$x <= 1 ? 1 : $x * $factorial($x-1)}; $factorial(4))'
Result: '24'
Expected: '24'
]]></output>
                </test-case>
                <test-case id="0-2171" name="lambdas.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1479815027" result="Passed" start-time="2023-09-17T20:30:30.5556086Z" end-time="2023-09-17T20:30:30.5563644Z" duration="0.000756" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($fibonacci := function($x){$x &lt;= 1 ? $x : $fibonacci($x-1) + $fibonacci($x-2)}; [1,2,3,4,5,6,7,8,9].$fibonacci($))';&#xA; result: [1,1,2,3,5,8,13,21,34]" />
                  </properties>
                  <output><![CDATA[Expr is '($fibonacci := function($x){$x <= 1 ? $x : $fibonacci($x-1) + $fibonacci($x-2)}; [1,2,3,4,5,6,7,8,9].$fibonacci($))'
Result: '[1,1,2,3,5,8,13,21,34]'
Expected: '[1,1,2,3,5,8,13,21,34]'
]]></output>
                </test-case>
                <test-case id="0-2172" name="lambdas.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1717235974" result="Passed" start-time="2023-09-17T20:30:30.5576442Z" end-time="2023-09-17T20:30:30.5580796Z" duration="0.000435" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($nth_price := function($n) { (Account.Order.Product.Price)[$n] }; $nth_price(1) )';&#xA; result: 21.67" />
                  </properties>
                  <output><![CDATA[Expr is '($nth_price := function($n) { (Account.Order.Product.Price)[$n] }; $nth_price(1) )'
Result: '21.67'
Expected: '21.67'
]]></output>
                </test-case>
                <test-case id="0-2173" name="lambdas.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="763736391" result="Passed" start-time="2023-09-17T20:30:30.5580949Z" end-time="2023-09-17T20:30:30.5585709Z" duration="0.000476" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };              $odd := function($n) { $n = 0 ? false : $even($n-1) };              $even(82)            )';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };              $odd := function($n) { $n = 0 ? false : $even($n-1) };              $even(82)            )'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2174" name="lambdas.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1416622814" result="Passed" start-time="2023-09-17T20:30:30.5585856Z" end-time="2023-09-17T20:30:30.5587991Z" duration="0.000214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };               $odd := function($n) { $n = 0 ? false : $even($n-1) };               $even(65) )';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };               $odd := function($n) { $n = 0 ? false : $even($n-1) };               $even(65) )'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2175" name="lambdas.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1239467715" result="Passed" start-time="2023-09-17T20:30:30.5590035Z" end-time="2023-09-17T20:30:30.5591850Z" duration="0.000181" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(65)         )';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(65)         )'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2176" name="lambdas.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1013499603" result="Passed" start-time="2023-09-17T20:30:30.5591982Z" end-time="2023-09-17T20:30:30.5592844Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $gcd := λ($a, $b){$b = 0 ? $a : $gcd($b, $a%$b) };  [$gcd(8,12), $gcd(9,12)])';&#xA; result: [4,3]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $gcd := λ($a, $b){$b = 0 ? $a : $gcd($b, $a%$b) };  [$gcd(8,12), $gcd(9,12)])'
Result: '[4,3]'
Expected: '[4,3]'
]]></output>
                </test-case>
                <test-case id="0-2177" name="lambdas.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="264859227" result="Passed" start-time="2023-09-17T20:30:30.5592926Z" end-time="2023-09-17T20:30:30.5594156Z" duration="0.000123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $range := function($start, $end, $step) { (    $step:=($step?$step:1);    $start+$step &gt; $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15))        ';&#xA; result: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $range := function($start, $end, $step) { (    $step:=($step?$step:1);    $start+$step > $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15))        '
Result: '[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]'
Expected: '[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]'
]]></output>
                </test-case>
                <test-case id="0-2178" name="lambdas.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="664504656" result="Passed" start-time="2023-09-17T20:30:30.5594237Z" end-time="2023-09-17T20:30:30.5595150Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $range := function($start, $end, $step) { (      $step:=($step?$step:1);        $start+$step &gt; $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15,2))        ';&#xA; result: [0,2,4,6,8,10,12,14]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $range := function($start, $end, $step) { (      $step:=($step?$step:1);        $start+$step > $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15,2))        '
Result: '[0,2,4,6,8,10,12,14]'
Expected: '[0,2,4,6,8,10,12,14]'
]]></output>
                </test-case>
                <test-case id="0-2179" name="lambdas.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="53726439" result="Passed" start-time="2023-09-17T20:30:30.5595233Z" end-time="2023-09-17T20:30:30.5596183Z" duration="0.000095" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $median := λ($x){$sort($x)[$count($x)/2]};  $median([5,4,3,2,1,6,7,8,1]) )';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '( $median := λ($x){$sort($x)[$count($x)/2]};  $median([5,4,3,2,1,6,7,8,1]) )'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-2180" name="literals.array-inputs[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="935497973" result="Passed" start-time="2023-09-17T20:30:30.5596262Z" end-time="2023-09-17T20:30:30.5597018Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2181" name="literals.array-inputs[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1107605475" result="Passed" start-time="2023-09-17T20:30:30.5597088Z" end-time="2023-09-17T20:30:30.5597739Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2182" name="literals.array-inputs[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2063696223" result="Passed" start-time="2023-09-17T20:30:30.5597806Z" end-time="2023-09-17T20:30:30.5598425Z" duration="0.000062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2183" name="literals.array-inputs[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="56174883" result="Passed" start-time="2023-09-17T20:30:30.5598492Z" end-time="2023-09-17T20:30:30.5599107Z" duration="0.000062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2184" name="literals.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="724258452" result="Passed" start-time="2023-09-17T20:30:30.5599172Z" end-time="2023-09-17T20:30:30.5599712Z" duration="0.000054" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot;';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello"'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2185" name="literals.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="654791412" result="Passed" start-time="2023-09-17T20:30:30.5599776Z" end-time="2023-09-17T20:30:30.5600277Z" duration="0.000050" asserts="1">
                  <properties>
                    <property name="Description" value="expr: ''hello'';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is ''hello''
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2186" name="literals.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="197433386" result="Passed" start-time="2023-09-17T20:30:30.5600341Z" end-time="2023-09-17T20:30:30.5600847Z" duration="0.000051" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Wayne's World&quot;';&#xA; result: &quot;Wayne's World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Wayne's World"'
Result: '"Wayne's World"'
Expected: '"Wayne's World"'
]]></output>
                </test-case>
                <test-case id="0-2187" name="literals.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1872481903" result="Passed" start-time="2023-09-17T20:30:30.5600912Z" end-time="2023-09-17T20:30:30.5605180Z" duration="0.000427" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '42';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is '42'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2188" name="literals.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1987259676" result="Passed" start-time="2023-09-17T20:30:30.5625026Z" end-time="2023-09-17T20:30:30.5627315Z" duration="0.000228" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '-42';&#xA; result: -42" />
                  </properties>
                  <output><![CDATA[Expr is '-42'
Result: '-42'
Expected: '-42'
]]></output>
                </test-case>
                <test-case id="0-2189" name="literals.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="657193316" result="Passed" start-time="2023-09-17T20:30:30.5628973Z" end-time="2023-09-17T20:30:30.5631806Z" duration="0.000283" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3.14159';&#xA; result: 3.14159" />
                  </properties>
                  <output><![CDATA[Expr is '3.14159'
Result: '3.14159'
Expected: '3.14159'
]]></output>
                </test-case>
                <test-case id="0-2190" name="literals.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="38878299" result="Passed" start-time="2023-09-17T20:30:30.5631925Z" end-time="2023-09-17T20:30:30.5633123Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '6.022e23';&#xA; result: 6.022E+23" />
                  </properties>
                  <output><![CDATA[Expr is '6.022e23'
Result: '602200000000000000000000.0'
Expected: '6.022E+23'
]]></output>
                </test-case>
                <test-case id="0-2191" name="literals.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1711161911" result="Passed" start-time="2023-09-17T20:30:30.5633229Z" end-time="2023-09-17T20:30:30.5639053Z" duration="0.000582" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1.602E-19';&#xA; result: 1.602E-19" />
                  </properties>
                  <output><![CDATA[Expr is '1.602E-19'
Result: '0.0000000000000000001602'
Expected: '1.602E-19'
]]></output>
                </test-case>
                <test-case id="0-2192" name="literals.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1792676754" result="Passed" start-time="2023-09-17T20:30:30.5646281Z" end-time="2023-09-17T20:30:30.5666193Z" duration="0.001991" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '10e1000';&#xA; result: error S0102" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0102.
Actually thrown S0102.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '10e1000'
]]></output>
                </test-case>
                <test-case id="0-2193" name="literals.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="400442262" result="Passed" start-time="2023-09-17T20:30:30.5671601Z" end-time="2023-09-17T20:30:30.5673028Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello\tworld&quot;';&#xA; result: &quot;hello\tworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello\tworld"'
Result: '"hello\tworld"'
Expected: '"hello\tworld"'
]]></output>
                </test-case>
                <test-case id="0-2194" name="literals.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1798392298" result="Passed" start-time="2023-09-17T20:30:30.5673179Z" end-time="2023-09-17T20:30:30.5678865Z" duration="0.000569" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello\nworld&quot;';&#xA; result: &quot;hello\nworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello\nworld"'
Result: '"hello\nworld"'
Expected: '"hello\nworld"'
]]></output>
                </test-case>
                <test-case id="0-2195" name="literals.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1756857859" result="Passed" start-time="2023-09-17T20:30:30.5698737Z" end-time="2023-09-17T20:30:30.5701715Z" duration="0.000297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello \&quot;world\&quot;&quot;';&#xA; result: &quot;hello \&quot;world\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello \"world\""'
Result: '"hello \"world\""'
Expected: '"hello \"world\""'
]]></output>
                </test-case>
                <test-case id="0-2196" name="literals.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2084569299" result="Passed" start-time="2023-09-17T20:30:30.5707527Z" end-time="2023-09-17T20:30:30.5708636Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;C:\\Test\\test.txt&quot;';&#xA; result: &quot;C:\\Test\\test.txt&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"C:\\Test\\test.txt"'
Result: '"C:\\Test\\test.txt"'
Expected: '"C:\\Test\\test.txt"'
]]></output>
                </test-case>
                <test-case id="0-2197" name="literals.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1718797007" result="Passed" start-time="2023-09-17T20:30:30.5708762Z" end-time="2023-09-17T20:30:30.5718893Z" duration="0.001013" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u03BB-calculus rocks&quot;';&#xA; result: &quot;λ-calculus rocks&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"\u03BB-calculus rocks"'
Result: '"λ-calculus rocks"'
Expected: '"λ-calculus rocks"'
]]></output>
                </test-case>
                <test-case id="0-2198" name="literals.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2122835973" result="Passed" start-time="2023-09-17T20:30:30.5722063Z" end-time="2023-09-17T20:30:30.5723305Z" duration="0.000124" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;𝄞&quot;';&#xA; result: &quot;𝄞&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"𝄞"'
Result: '"𝄞"'
Expected: '"𝄞"'
]]></output>
                </test-case>
                <test-case id="0-2199" name="literals.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="978380171" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5737768Z" end-time="2023-09-17T20:30:30.5784659Z" duration="0.004689" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\y&quot;';&#xA; result: error S0103" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\y' at offset 2. Unrecognized escape sequence \\y.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in /_/src/Jsonata.Net.Native/Parsing/Helpers.cs:line 28
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in /_/src/Jsonata.Net.Native/Parsing/Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 221
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\y"'
]]></output>
                </test-case>
                <test-case id="0-2200" name="literals.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1638527967" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5784904Z" end-time="2023-09-17T20:30:30.5795185Z" duration="0.001028" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u&quot;';&#xA; result: error S0104" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\u' at offset 2. Insufficient hexadecimal digits.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanHex(Int32 c)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in /_/src/Jsonata.Net.Native/Parsing/Helpers.cs:line 28
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in /_/src/Jsonata.Net.Native/Parsing/Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 221
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\u"'
]]></output>
                </test-case>
                <test-case id="0-2201" name="literals.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1122102075" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.5798507Z" end-time="2023-09-17T20:30:30.5807178Z" duration="0.000867" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u123t&quot;';&#xA; result: error S0104" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\u123t' at offset 6. Insufficient hexadecimal digits.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanHex(Int32 c)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in /_/src/Jsonata.Net.Native/Parsing/Helpers.cs:line 28
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in /_/src/Jsonata.Net.Native/Parsing/Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 221
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\u123t"'
]]></output>
                </test-case>
                <test-case id="0-2202" name="literals.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="273819203" result="Passed" start-time="2023-09-17T20:30:30.5807465Z" end-time="2023-09-17T20:30:30.5808925Z" duration="0.000146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'foo': { 'sequence': 123, 'bar': 'baz' } } ';&#xA; result: {&quot;foo&quot;:{&quot;sequence&quot;:123,&quot;bar&quot;:&quot;baz&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'foo': { 'sequence': 123, 'bar': 'baz' } } '
Result: '{"foo":{"sequence":123,"bar":"baz"}}'
Expected: '{"foo":{"sequence":123,"bar":"baz"}}'
]]></output>
                </test-case>
                <test-case id="0-2203" name="literals.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="795407604" result="Passed" start-time="2023-09-17T20:30:30.5809476Z" end-time="2023-09-17T20:30:30.5810572Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'foo': { 'sequence': true, 'bar': 'baz' } } ';&#xA; result: {&quot;foo&quot;:{&quot;sequence&quot;:true,&quot;bar&quot;:&quot;baz&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'foo': { 'sequence': true, 'bar': 'baz' } } '
Result: '{"foo":{"sequence":true,"bar":"baz"}}'
Expected: '{"foo":{"sequence":true,"bar":"baz"}}'
]]></output>
                </test-case>
                <test-case id="0-2204" name="matchers.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.matchers.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2031130692" result="Failed" label="Error" start-time="2023-09-17T20:30:30.5817192Z" end-time="2023-09-17T20:30:30.5859756Z" duration="0.004256" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(&#xA;    $generateMatcher := function($ch) {&#xA;      $match := function($str, $offset) {(&#xA;        $before := $substringBefore($str, $ch);&#xA;        $start := $length($before) + ($exists($offset) ? $offset : 0);&#xA;        $end := $start + $length($ch);&#xA;        $before != $str and $length($ch) &gt; 0 ? {&#xA;          'match': $ch,&#xA;          'start': $start,&#xA;          'end': $end,&#xA;          'groups': [],&#xA;          'next': function() {$match($substringAfter($str, $ch), $end)}&#xA;        }&#xA;      )}&#xA;    };&#xA;&#xA;    $match(&quot;abracadabra&quot;, $generateMatcher('a'))&#xA;)';&#xA; result: [{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:0,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:3,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:5,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:7,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:10,&quot;groups&quot;:[]}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T0410: Argument 2 of function match should be regex. Passed Function ("")]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.match(String str, JToken pattern, Int32 limit) in /_/src/Jsonata.Net.Native/Eval/BuiltinFunctions.cs:line 402
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.FunctionTokenCsharp.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenCsharp.cs:line 109
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 29
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 44
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 182
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, JObject bindings) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 177
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 94]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(
    $generateMatcher := function($ch) {
      $match := function($str, $offset) {(
        $before := $substringBefore($str, $ch);
        $start := $length($before) + ($exists($offset) ? $offset : 0);
        $end := $start + $length($ch);
        $before != $str and $length($ch) > 0 ? {
          'match': $ch,
          'start': $start,
          'end': $end,
          'groups': [],
          'next': function() {$match($substringAfter($str, $ch), $end)}
        }
      )}
    };

    $match("abracadabra", $generateMatcher('a'))
)'
]]></output>
                </test-case>
                <test-case id="0-2205" name="matchers.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.matchers.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="547773132" result="Passed" start-time="2023-09-17T20:30:30.5859990Z" end-time="2023-09-17T20:30:30.5872047Z" duration="0.001206" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split('some text', $uppercase)';&#xA; result: error T1010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1010.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split('some text', $uppercase)'
]]></output>
                </test-case>
                <test-case id="0-2206" name="missing-paths.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="850631987" result="Passed" start-time="2023-09-17T20:30:30.5872228Z" end-time="2023-09-17T20:30:30.5874065Z" duration="0.000184" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2207" name="missing-paths.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="105174216" result="Passed" start-time="2023-09-17T20:30:30.5874187Z" end-time="2023-09-17T20:30:30.5874978Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2208" name="missing-paths.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1777408592" result="Passed" start-time="2023-09-17T20:30:30.5885334Z" end-time="2023-09-17T20:30:30.5888129Z" duration="0.000279" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett[10]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett[10]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2209" name="missing-paths.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1306957399" result="Passed" start-time="2023-09-17T20:30:30.5893046Z" end-time="2023-09-17T20:30:30.5895126Z" duration="0.000208" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett[vc &gt; 10]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett[vc > 10]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2210" name="missing-paths.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1502667888" result="Passed" start-time="2023-09-17T20:30:30.5899254Z" end-time="2023-09-17T20:30:30.5900397Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett + 27';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett + 27'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2211" name="missing-paths.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1031675559" result="Passed" start-time="2023-09-17T20:30:30.5902752Z" end-time="2023-09-17T20:30:30.5903558Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fdsd';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$fdsd'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2212" name="multiple-array-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="642898084" result="Passed" start-time="2023-09-17T20:30:30.5906790Z" end-time="2023-09-17T20:30:30.5909102Z" duration="0.000231" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,-1]]';&#xA; result: [2,3,4,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,-1]]'
Result: '[2,3,4,9,10]'
Expected: '[2,3,4,9,10]'
]]></output>
                </test-case>
                <test-case id="0-2213" name="multiple-array-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1752754341" result="Passed" start-time="2023-09-17T20:30:30.5910867Z" end-time="2023-09-17T20:30:30.5915244Z" duration="0.000438" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,5]]';&#xA; result: [2,3,4,6,9]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,5]]'
Result: '[2,3,4,6,9]'
Expected: '[2,3,4,6,9]'
]]></output>
                </test-case>
                <test-case id="0-2214" name="multiple-array-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="503447347" result="Passed" start-time="2023-09-17T20:30:30.5916879Z" end-time="2023-09-17T20:30:30.5922036Z" duration="0.000516" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,false]]';&#xA; result: [1,2,3,4,5,6,7,8,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,false]]'
Result: '[1,2,3,4,5,6,7,8,9,10]'
Expected: '[1,2,3,4,5,6,7,8,9,10]'
]]></output>
                </test-case>
                <test-case id="0-2215" name="null.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="482428976" result="Passed" start-time="2023-09-17T20:30:30.5927426Z" end-time="2023-09-17T20:30:30.5928456Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'null'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2216" name="null.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1704223352" result="Passed" start-time="2023-09-17T20:30:30.5932768Z" end-time="2023-09-17T20:30:30.5934133Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[null]';&#xA; result: [null]" />
                  </properties>
                  <output><![CDATA[Expr is '[null]'
Result: '[null]'
Expected: '[null]'
]]></output>
                </test-case>
                <test-case id="0-2217" name="null.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="537433874" result="Passed" start-time="2023-09-17T20:30:30.5934245Z" end-time="2023-09-17T20:30:30.5935244Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[null, null]';&#xA; result: [null,null]" />
                  </properties>
                  <output><![CDATA[Expr is '[null, null]'
Result: '[null,null]'
Expected: '[null,null]'
]]></output>
                </test-case>
                <test-case id="0-2218" name="null.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="364495619" result="Passed" start-time="2023-09-17T20:30:30.5935540Z" end-time="2023-09-17T20:30:30.5936595Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(null)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$not(null)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2219" name="null.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1416735971" result="Passed" start-time="2023-09-17T20:30:30.5936687Z" end-time="2023-09-17T20:30:30.5937290Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = null';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'null = null'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2220" name="null.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1570727352" result="Passed" start-time="2023-09-17T20:30:30.5937511Z" end-time="2023-09-17T20:30:30.5939843Z" duration="0.000233" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null != null';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null != null'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2221" name="null.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="485007454" result="Passed" start-time="2023-09-17T20:30:30.5949458Z" end-time="2023-09-17T20:30:30.5950833Z" duration="0.000137" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;true&quot;: true, &quot;false&quot;:false, &quot;null&quot;: null}';&#xA; result: {&quot;true&quot;:true,&quot;false&quot;:false,&quot;null&quot;:null}" />
                  </properties>
                  <output><![CDATA[Expr is '{"true": true, "false":false, "null": null}'
Result: '{"true":true,"false":false,"null":null}'
Expected: '{"true":true,"false":false,"null":null}'
]]></output>
                </test-case>
                <test-case id="0-2222" name="numeric-operators.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2140783460" result="Passed" start-time="2023-09-17T20:30:30.5950950Z" end-time="2023-09-17T20:30:30.5951659Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar + bar';&#xA; result: 140" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar + bar'
Result: '140'
Expected: '140'
]]></output>
                </test-case>
                <test-case id="0-2223" name="numeric-operators.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1782852547" result="Passed" start-time="2023-09-17T20:30:30.5952286Z" end-time="2023-09-17T20:30:30.5953083Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar + foo.bar';&#xA; result: 140" />
                  </properties>
                  <output><![CDATA[Expr is 'bar + foo.bar'
Result: '140'
Expected: '140'
]]></output>
                </test-case>
                <test-case id="0-2224" name="numeric-operators.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="978422949" result="Passed" start-time="2023-09-17T20:30:30.5953163Z" end-time="2023-09-17T20:30:30.5953770Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar - bar';&#xA; result: -56" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar - bar'
Result: '-56'
Expected: '-56'
]]></output>
                </test-case>
                <test-case id="0-2225" name="numeric-operators.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1426017760" result="Passed" start-time="2023-09-17T20:30:30.5953970Z" end-time="2023-09-17T20:30:30.5954667Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar - foo.bar';&#xA; result: 56" />
                  </properties>
                  <output><![CDATA[Expr is 'bar - foo.bar'
Result: '56'
Expected: '56'
]]></output>
                </test-case>
                <test-case id="0-2226" name="numeric-operators.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1834621920" result="Passed" start-time="2023-09-17T20:30:30.5954743Z" end-time="2023-09-17T20:30:30.5955318Z" duration="0.000058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar * bar';&#xA; result: 4116" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar * bar'
Result: '4116'
Expected: '4116'
]]></output>
                </test-case>
                <test-case id="0-2227" name="numeric-operators.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1316793712" result="Passed" start-time="2023-09-17T20:30:30.5955629Z" end-time="2023-09-17T20:30:30.5956322Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar * foo.bar';&#xA; result: 4116" />
                  </properties>
                  <output><![CDATA[Expr is 'bar * foo.bar'
Result: '4116'
Expected: '4116'
]]></output>
                </test-case>
                <test-case id="0-2228" name="numeric-operators.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1112827740" result="Passed" start-time="2023-09-17T20:30:30.5956395Z" end-time="2023-09-17T20:30:30.5957080Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar / bar';&#xA; result: 0.42857142857142855" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar / bar'
Result: '0.428571428571429'
Expected: '0.42857142857142855'
]]></output>
                </test-case>
                <test-case id="0-2229" name="numeric-operators.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1807248602" result="Passed" start-time="2023-09-17T20:30:30.5957306Z" end-time="2023-09-17T20:30:30.5958609Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar / foo.bar';&#xA; result: 2.3333333333333335" />
                  </properties>
                  <output><![CDATA[Expr is 'bar / foo.bar'
Result: '2.33333333333333'
Expected: '2.3333333333333335'
]]></output>
                </test-case>
                <test-case id="0-2230" name="numeric-operators.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1302382063" result="Passed" start-time="2023-09-17T20:30:30.5959962Z" end-time="2023-09-17T20:30:30.5962149Z" duration="0.000219" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar % bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar % bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2231" name="numeric-operators.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1442186243" result="Passed" start-time="2023-09-17T20:30:30.5963611Z" end-time="2023-09-17T20:30:30.5964865Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar % foo.bar';&#xA; result: 14" />
                  </properties>
                  <output><![CDATA[Expr is 'bar % foo.bar'
Result: '14'
Expected: '14'
]]></output>
                </test-case>
                <test-case id="0-2232" name="numeric-operators.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="289506901" result="Passed" start-time="2023-09-17T20:30:30.5965806Z" end-time="2023-09-17T20:30:30.5966575Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar + foo.bar * bar';&#xA; result: 4214" />
                  </properties>
                  <output><![CDATA[Expr is 'bar + foo.bar * bar'
Result: '4214'
Expected: '4214'
]]></output>
                </test-case>
                <test-case id="0-2233" name="numeric-operators.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1833608132" result="Passed" start-time="2023-09-17T20:30:30.5967233Z" end-time="2023-09-17T20:30:30.6002394Z" duration="0.003516" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar * bar + bar';&#xA; result: 4214" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar * bar + bar'
Result: '4214'
Expected: '4214'
]]></output>
                </test-case>
                <test-case id="0-2234" name="numeric-operators.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="562682119" result="Passed" start-time="2023-09-17T20:30:30.6009296Z" end-time="2023-09-17T20:30:30.6010540Z" duration="0.000124" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '24 * notexist';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '24 * notexist'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2235" name="numeric-operators.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1960879545" result="Passed" start-time="2023-09-17T20:30:30.6012560Z" end-time="2023-09-17T20:30:30.6018962Z" duration="0.000640" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'notexist + 1';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'notexist + 1'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2236" name="numeric-operators.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="833786272" result="Passed" start-time="2023-09-17T20:30:30.6022241Z" end-time="2023-09-17T20:30:30.6029897Z" duration="0.000766" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1/(10e300 * 10e100) ';&#xA; result: error D1001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1001.
Actually thrown S0102.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '1/(10e300 * 10e100) '
]]></output>
                </test-case>
                <test-case id="0-2237" name="numeric-operators.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1268288619" result="Passed" start-time="2023-09-17T20:30:30.6035053Z" end-time="2023-09-17T20:30:30.6051584Z" duration="0.001653" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;5&quot; + &quot;5&quot;';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001.
Actually thrown T2001.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"5" + "5"'
]]></output>
                </test-case>
                <test-case id="0-2238" name="numeric-operators.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="172527838" result="Passed" start-time="2023-09-17T20:30:30.6054404Z" end-time="2023-09-17T20:30:30.6056593Z" duration="0.000219" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '- notexist';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '- notexist'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2239" name="numeric-operators.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="176485320" result="Passed" start-time="2023-09-17T20:30:30.6057075Z" end-time="2023-09-17T20:30:30.6068485Z" duration="0.001141" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false + 1';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001.
Actually thrown T2001.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false + 1'
]]></output>
                </test-case>
                <test-case id="0-2240" name="numeric-operators.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1951643072" result="Failed" start-time="2023-09-17T20:30:30.6077564Z" end-time="2023-09-17T20:30:30.6088604Z" duration="0.001104" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false + $x';&#xA; result: error T2001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error T2001 (), got 'undefined']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'false + $x'
Result: 'undefined'
Expected error T2001
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error T2001 (), got 'undefined']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 148
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2241" name="object-constructor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="92259170" result="Passed" start-time="2023-09-17T20:30:30.6088784Z" end-time="2023-09-17T20:30:30.6089763Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{}';&#xA; result: {}" />
                  </properties>
                  <output><![CDATA[Expr is '{}'
Result: '{}'
Expected: '{}'
]]></output>
                </test-case>
                <test-case id="0-2242" name="object-constructor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="95073311" result="Passed" start-time="2023-09-17T20:30:30.6089858Z" end-time="2023-09-17T20:30:30.6091025Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;key&quot;: &quot;value&quot;}';&#xA; result: {&quot;key&quot;:&quot;value&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '{"key": "value"}'
Result: '{"key":"value"}'
Expected: '{"key":"value"}'
]]></output>
                </test-case>
                <test-case id="0-2243" name="object-constructor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="680302277" result="Passed" start-time="2023-09-17T20:30:30.6091139Z" end-time="2023-09-17T20:30:30.6092123Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: 2}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": 2}'
Result: '{"one":1,"two":2}'
Expected: '{"one":1,"two":2}'
]]></output>
                </test-case>
                <test-case id="0-2244" name="object-constructor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1302009075" result="Passed" start-time="2023-09-17T20:30:30.6095062Z" end-time="2023-09-17T20:30:30.6096586Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: 2}.two';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": 2}.two'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-2245" name="object-constructor.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1154686387" result="Passed" start-time="2023-09-17T20:30:30.6096814Z" end-time="2023-09-17T20:30:30.6098159Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: {&quot;three&quot;: 3, &quot;four&quot;: &quot;4&quot;}}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:{&quot;three&quot;:3,&quot;four&quot;:&quot;4&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": {"three": 3, "four": "4"}}'
Result: '{"one":1,"two":{"three":3,"four":"4"}}'
Expected: '{"one":1,"two":{"three":3,"four":"4"}}'
]]></output>
                </test-case>
                <test-case id="0-2246" name="object-constructor.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1068263827" result="Passed" start-time="2023-09-17T20:30:30.6098257Z" end-time="2023-09-17T20:30:30.6111837Z" duration="0.001358" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: [3, &quot;four&quot;]}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:[3,&quot;four&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": [3, "four"]}'
Result: '{"one":1,"two":[3,"four"]}'
Expected: '{"one":1,"two":[3,"four"]}'
]]></output>
                </test-case>
                <test-case id="0-2247" name="object-constructor.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="39922413" result="Passed" start-time="2023-09-17T20:30:30.6111968Z" end-time="2023-09-17T20:30:30.6114015Z" duration="0.000205" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;test&quot;: ()}';&#xA; result: {}" />
                  </properties>
                  <output><![CDATA[Expr is '{"test": ()}'
Result: '{}'
Expected: '{}'
]]></output>
                </test-case>
                <test-case id="0-2248" name="object-constructor.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2044478562" result="Passed" start-time="2023-09-17T20:30:30.6114957Z" end-time="2023-09-17T20:30:30.6129332Z" duration="0.001437" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'blah.{}';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'blah.{}'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2249" name="object-constructor.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1315963322" result="Passed" start-time="2023-09-17T20:30:30.6132869Z" end-time="2023-09-17T20:30:30.6134848Z" duration="0.000198" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{OrderID: Product.&quot;Product Name&quot;}';&#xA; result: {&quot;order103&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;],&quot;order104&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{OrderID: Product."Product Name"}'
Result: '{"order103":["Bowler Hat","Trilby hat"],"order104":["Bowler Hat","Cloak"]}'
Expected: '{"order103":["Bowler Hat","Trilby hat"],"order104":["Bowler Hat","Cloak"]}'
]]></output>
                </test-case>
                <test-case id="0-2250" name="object-constructor.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="52634507" result="Passed" start-time="2023-09-17T20:30:30.6138225Z" end-time="2023-09-17T20:30:30.6140461Z" duration="0.000224" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.{OrderID: Product.&quot;Product Name&quot;}';&#xA; result: [{&quot;order103&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;]},{&quot;order104&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.{OrderID: Product."Product Name"}'
Result: '[{"order103":["Bowler Hat","Trilby hat"]},{"order104":["Bowler Hat","Cloak"]}]'
Expected: '[{"order103":["Bowler Hat","Trilby hat"]},{"order104":["Bowler Hat","Cloak"]}]'
]]></output>
                </test-case>
                <test-case id="0-2251" name="object-constructor.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1547135425" result="Passed" start-time="2023-09-17T20:30:30.6144645Z" end-time="2023-09-17T20:30:30.6146344Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$string(ProductID): Price}';&#xA; result: {&quot;345664&quot;:107.99,&quot;858236&quot;:21.67,&quot;858383&quot;:[34.45,34.45]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{$string(ProductID): Price}'
Result: '{"858383":[34.45,34.45],"858236":21.67,"345664":107.99}'
Expected: '{"345664":107.99,"858236":21.67,"858383":[34.45,34.45]}'
]]></output>
                </test-case>
                <test-case id="0-2252" name="object-constructor.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1354301388" result="Passed" start-time="2023-09-17T20:30:30.6150612Z" end-time="2023-09-17T20:30:30.6168410Z" duration="0.001780" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$string(ProductID): (Price)[0]}';&#xA; result: {&quot;345664&quot;:107.99,&quot;858236&quot;:21.67,&quot;858383&quot;:34.45}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{$string(ProductID): (Price)[0]}'
Result: '{"858383":34.45,"858236":21.67,"345664":107.99}'
Expected: '{"345664":107.99,"858236":21.67,"858383":34.45}'
]]></output>
                </test-case>
                <test-case id="0-2253" name="object-constructor.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="706100002" result="Passed" start-time="2023-09-17T20:30:30.6169945Z" end-time="2023-09-17T20:30:30.6173324Z" duration="0.000338" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{$string(ProductID): Price}';&#xA; result: [{&quot;858383&quot;:34.45},{&quot;858236&quot;:21.67},{&quot;858383&quot;:34.45},{&quot;345664&quot;:107.99}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{$string(ProductID): Price}'
Result: '[{"858383":34.45},{"858236":21.67},{"858383":34.45},{"345664":107.99}]'
Expected: '[{"858383":34.45},{"858236":21.67},{"858383":34.45},{"345664":107.99}]'
]]></output>
                </test-case>
                <test-case id="0-2254" name="object-constructor.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1555136466" result="Passed" start-time="2023-09-17T20:30:30.6173531Z" end-time="2023-09-17T20:30:30.6179566Z" duration="0.000604" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{ProductID: &quot;Product Name&quot;}';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003.
Actually thrown T1003.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product{ProductID: "Product Name"}'
]]></output>
                </test-case>
                <test-case id="0-2255" name="object-constructor.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1153520513" result="Passed" start-time="2023-09-17T20:30:30.6179730Z" end-time="2023-09-17T20:30:30.6183837Z" duration="0.000411" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ProductID: &quot;Product Name&quot;}';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003.
Actually thrown T1003.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ProductID: "Product Name"}'
]]></output>
                </test-case>
                <test-case id="0-2256" name="object-constructor.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1128802262" result="Passed" start-time="2023-09-17T20:30:30.6183973Z" end-time="2023-09-17T20:30:30.6185375Z" duration="0.000140" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{OrderID: $sum(Product.(Price*Quantity))}';&#xA; result: {&quot;order103&quot;:90.57000000000001,&quot;order104&quot;:245.79000000000002}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{OrderID: $sum(Product.(Price*Quantity))}'
Result: '{"order103":90.57,"order104":245.79}'
Expected: '{"order103":90.57000000000001,"order104":245.79000000000002}'
]]></output>
                </test-case>
                <test-case id="0-2257" name="object-constructor.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="638450303" result="Passed" start-time="2023-09-17T20:30:30.6187746Z" end-time="2023-09-17T20:30:30.6189882Z" duration="0.000214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.{OrderID: $sum(Product.(Price*Quantity))}';&#xA; result: [{&quot;order103&quot;:90.57000000000001},{&quot;order104&quot;:245.79000000000002}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.{OrderID: $sum(Product.(Price*Quantity))}'
Result: '[{"order103":90.57},{"order104":245.79}]'
Expected: '[{"order103":90.57000000000001},{"order104":245.79000000000002}]'
]]></output>
                </test-case>
                <test-case id="0-2258" name="object-constructor.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1964468302" result="Passed" start-time="2023-09-17T20:30:30.6193081Z" end-time="2023-09-17T20:30:30.6201744Z" duration="0.000866" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$.&quot;Product Name&quot;: Price, $.&quot;Product Name&quot;: Price}';&#xA; result: error D1009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1009.
Actually thrown D1009.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product{$."Product Name": Price, $."Product Name": Price}'
]]></output>
                </test-case>
                <test-case id="0-2259" name="object-constructor.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="605112932" result="Passed" start-time="2023-09-17T20:30:30.6209178Z" end-time="2023-09-17T20:30:30.6214620Z" duration="0.000544" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{`Product Name`: Price, SKU: Price}';&#xA; result: {&quot;Bowler Hat&quot;:[34.45,34.45],&quot;0406654608&quot;:34.45,&quot;Trilby hat&quot;:21.67,&quot;0406634348&quot;:21.67,&quot;040657863&quot;:34.45,&quot;Cloak&quot;:107.99,&quot;0406654603&quot;:107.99}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{`Product Name`: Price, SKU: Price}'
Result: '{"Bowler Hat":[34.45,34.45],"0406654608":34.45,"Trilby hat":21.67,"0406634348":21.67,"040657863":34.45,"Cloak":107.99,"0406654603":107.99}'
Expected: '{"Bowler Hat":[34.45,34.45],"0406654608":34.45,"Trilby hat":21.67,"0406634348":21.67,"040657863":34.45,"Cloak":107.99,"0406654603":107.99}'
]]></output>
                </test-case>
                <test-case id="0-2260" name="object-constructor.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="860634859" result="Passed" start-time="2023-09-17T20:30:30.6220204Z" end-time="2023-09-17T20:30:30.6221924Z" duration="0.000172" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{  OrderID: {    &quot;TotalPrice&quot;:$sum(Product.(Price * Quantity)),    &quot;Items&quot;: Product.&quot;Product Name&quot;  }}';&#xA; result: {&quot;order103&quot;:{&quot;TotalPrice&quot;:90.57000000000001,&quot;Items&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;]},&quot;order104&quot;:{&quot;TotalPrice&quot;:245.79000000000002,&quot;Items&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{  OrderID: {    "TotalPrice":$sum(Product.(Price * Quantity)),    "Items": Product."Product Name"  }}'
Result: '{"order103":{"TotalPrice":90.57,"Items":["Bowler Hat","Trilby hat"]},"order104":{"TotalPrice":245.79,"Items":["Bowler Hat","Cloak"]}}'
Expected: '{"order103":{"TotalPrice":90.57000000000001,"Items":["Bowler Hat","Trilby hat"]},"order104":{"TotalPrice":245.79000000000002,"Items":["Bowler Hat","Cloak"]}}'
]]></output>
                </test-case>
                <test-case id="0-2261" name="object-constructor.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1681321922" result="Passed" start-time="2023-09-17T20:30:30.6227907Z" end-time="2023-09-17T20:30:30.6230634Z" duration="0.000273" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{  &quot;Order&quot;: Account.Order.{      &quot;ID&quot;: OrderID,      &quot;Product&quot;: Product.{          &quot;Name&quot;: $.&quot;Product Name&quot;,          &quot;SKU&quot;: ProductID,          &quot;Details&quot;: {            &quot;Weight&quot;: Description.Weight,            &quot;Dimensions&quot;: Description.(Width &amp; &quot; x &quot; &amp; Height &amp; &quot; x &quot; &amp; Depth)          }        },      &quot;Total Price&quot;: $sum(Product.(Price * Quantity))    }}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{  "Order": Account.Order.{      "ID": OrderID,      "Product": Product.{          "Name": $."Product Name",          "SKU": ProductID,          "Details": {            "Weight": Description.Weight,            "Dimensions": Description.(Width & " x " & Height & " x " & Depth)          }        },      "Total Price": $sum(Product.(Price * Quantity))    }}'
Result: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2262" name="object-constructor.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1139830123" result="Passed" start-time="2023-09-17T20:30:30.6240738Z" end-time="2023-09-17T20:30:30.6243794Z" duration="0.000305" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{  &quot;Order&quot;: Account.Order.{      &quot;ID&quot;: OrderID,      &quot;Product&quot;: Product.{          &quot;Name&quot;: `Product Name`,          &quot;SKU&quot;: ProductID,          &quot;Details&quot;: {            &quot;Weight&quot;: Description.Weight,            &quot;Dimensions&quot;: Description.(Width &amp; &quot; x &quot; &amp; Height &amp; &quot; x &quot; &amp; Depth)          }        },      &quot;Total Price&quot;: $sum(Product.(Price * Quantity))    }}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{  "Order": Account.Order.{      "ID": OrderID,      "Product": Product.{          "Name": `Product Name`,          "SKU": ProductID,          "Details": {            "Weight": Description.Weight,            "Dimensions": Description.(Width & " x " & Height & " x " & Depth)          }        },      "Total Price": $sum(Product.(Price * Quantity))    }}'
Result: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2263" name="object-constructor.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2117643637" result="Passed" start-time="2023-09-17T20:30:30.6244976Z" end-time="2023-09-17T20:30:30.6248746Z" duration="0.000377" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: $join(number, &quot;, &quot;), &quot;phone&quot;:number}';&#xA; result: {&quot;home&quot;:&quot;0203 544 1234&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;01962 001235&quot;,&quot;077 7700 1234&quot;],&quot;office&quot;:&quot;01962 001234, 01962 001235&quot;,&quot;mobile&quot;:&quot;077 7700 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: $join(number, ", "), "phone":number}'
Result: '{"home":"0203 544 1234","phone":["0203 544 1234","01962 001234","01962 001235","077 7700 1234"],"office":"01962 001234, 01962 001235","mobile":"077 7700 1234"}'
Expected: '{"home":"0203 544 1234","phone":["0203 544 1234","01962 001234","01962 001235","077 7700 1234"],"office":"01962 001234, 01962 001235","mobile":"077 7700 1234"}'
]]></output>
                </test-case>
                <test-case id="0-2264" name="object-constructor.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="4575336" result="Passed" start-time="2023-09-17T20:30:30.6253086Z" end-time="2023-09-17T20:30:30.6261266Z" duration="0.000818" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.{ type: $average(value), kind: $sum(value) } ';&#xA; result: error D1009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1009.
Actually thrown D1009.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.{ type: $average(value), kind: $sum(value) } '
]]></output>
                </test-case>
                <test-case id="0-2265" name="object-constructor.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="60481645" result="Passed" start-time="2023-09-17T20:30:30.6261427Z" end-time="2023-09-17T20:30:30.6273186Z" duration="0.001176" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{ type: $average(value), kind: $sum(value) } ';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003.
Actually thrown T1003.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{ type: $average(value), kind: $sum(value) } '
]]></output>
                </test-case>
                <test-case id="0-2266" name="object-constructor.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="742168658" result="Passed" start-time="2023-09-17T20:30:30.6273376Z" end-time="2023-09-17T20:30:30.6288889Z" duration="0.001552" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(jsonata, λ($v, $k){&#xA;{&#xA;  'date': $k,&#xA;  'count': $v&#xA;}&#xA;}){&#xA;  $substring(date, 0, 7): $sum(count)&#xA;}&#xA;';&#xA; result: {&quot;2019-01&quot;:68281,&quot;2019-02&quot;:63672,&quot;2019-03&quot;:78625,&quot;2019-04&quot;:76505,&quot;2019-05&quot;:129360,&quot;2019-06&quot;:484244,&quot;2019-07&quot;:698748,&quot;2019-08&quot;:788322}" />
                  </properties>
                  <output><![CDATA[Expr is '$each(jsonata, λ($v, $k){
{
  'date': $k,
  'count': $v
}
}){
  $substring(date, 0, 7): $sum(count)
}
'
Result: '{"2019-01":68281,"2019-02":63672,"2019-03":78625,"2019-04":76505,"2019-05":129360,"2019-06":484244,"2019-07":698748,"2019-08":788322}'
Expected: '{"2019-01":68281,"2019-02":63672,"2019-03":78625,"2019-04":76505,"2019-05":129360,"2019-06":484244,"2019-07":698748,"2019-08":788322}'
]]></output>
                </test-case>
                <test-case id="0-2267" name="parent-operator.errors[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="956773599" result="Passed" start-time="2023-09-17T20:30:30.6289055Z" end-time="2023-09-17T20:30:30.6298361Z" duration="0.000931" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{'hello': 'world'}.% ';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{'hello': 'world'}.% '
]]></output>
                </test-case>
                <test-case id="0-2268" name="parent-operator.errors[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1190072222" result="Passed" start-time="2023-09-17T20:30:30.6298530Z" end-time="2023-09-17T20:30:30.6303991Z" duration="0.000546" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%'
]]></output>
                </test-case>
                <test-case id="0-2269" name="parent-operator.errors[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="690051449" result="Passed" start-time="2023-09-17T20:30:30.6304134Z" end-time="2023-09-17T20:30:30.6308933Z" duration="0.000480" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%()'
]]></output>
                </test-case>
                <test-case id="0-2270" name="parent-operator.errors[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1796126351" result="Passed" start-time="2023-09-17T20:30:30.6309074Z" end-time="2023-09-17T20:30:30.6315731Z" duration="0.000666" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%(1)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%(1)'
]]></output>
                </test-case>
                <test-case id="0-2271" name="parent-operator.errors[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="435934733" result="Passed" start-time="2023-09-17T20:30:30.6330887Z" end-time="2023-09-17T20:30:30.6337534Z" duration="0.000664" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%%';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0207.
Actually thrown S0207.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%%'
]]></output>
                </test-case>
                <test-case id="0-2272" name="parent-operator.errors[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="364906036" result="Passed" start-time="2023-09-17T20:30:30.6337727Z" end-time="2023-09-17T20:30:30.6344594Z" duration="0.000687" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(%)';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(%)'
]]></output>
                </test-case>
                <test-case id="0-2273" name="parent-operator.errors[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="188010299" result="Passed" start-time="2023-09-17T20:30:30.6344767Z" end-time="2023-09-17T20:30:30.6359855Z" duration="0.001509" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(%%)';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0211.
Actually thrown S0211.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(%%)'
]]></output>
                </test-case>
                <test-case id="0-2274" name="parent-operator.errors[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1612576546" result="Passed" start-time="2023-09-17T20:30:30.6360315Z" end-time="2023-09-17T20:30:30.6367440Z" duration="0.000713" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans.%%';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0207.
Actually thrown S0207.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans.%%'
]]></output>
                </test-case>
                <test-case id="0-2275" name="parent-operator.errors[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1478468182" result="Passed" start-time="2023-09-17T20:30:30.6367597Z" end-time="2023-09-17T20:30:30.6374579Z" duration="0.000698" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.%'
]]></output>
                </test-case>
                <test-case id="0-2276" name="parent-operator.errors[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="389934143" result="Passed" start-time="2023-09-17T20:30:30.6375100Z" end-time="2023-09-17T20:30:30.6380747Z" duration="0.000565" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$$.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$$.%'
]]></output>
                </test-case>
                <test-case id="0-2277" name="parent-operator.errors[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1460481183" result="Passed" start-time="2023-09-17T20:30:30.6380978Z" end-time="2023-09-17T20:30:30.6387173Z" duration="0.000620" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans.%.%.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans.%.%.%'
]]></output>
                </test-case>
                <test-case id="0-2278" name="parent-operator.errors[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="480843472" result="Passed" start-time="2023-09-17T20:30:30.6387320Z" end-time="2023-09-17T20:30:30.6393606Z" duration="0.000629" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.%%%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0217.
Actually thrown S0217.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.%%%'
]]></output>
                </test-case>
                <test-case id="0-2279" name="parent-operator.errors[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1971220209" result="Passed" start-time="2023-09-17T20:30:30.6393924Z" end-time="2023-09-17T20:30:30.6401104Z" duration="0.000718" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(%%%)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001.
Actually thrown T2001.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(%%%)'
]]></output>
                </test-case>
                <test-case id="0-2280" name="parent-operator.errors[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="357753933" result="Passed" start-time="2023-09-17T20:30:30.6401243Z" end-time="2023-09-17T20:30:30.6410943Z" duration="0.000970" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(%% %)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001.
Actually thrown T2001.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(%% %)'
]]></output>
                </test-case>
                <test-case id="0-2281" name="parent-operator.errors[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1794699507" result="Passed" start-time="2023-09-17T20:30:30.6411372Z" end-time="2023-09-17T20:30:30.6428921Z" duration="0.001755" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(% %%)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001.
Actually thrown T2001.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(% %%)'
]]></output>
                </test-case>
                <test-case id="0-2282" name="parent-operator.errors[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1419798797" result="Passed" start-time="2023-09-17T20:30:30.6429100Z" end-time="2023-09-17T20:30:30.6442544Z" duration="0.001345" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(% % %)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2001.
Actually thrown T2001.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(% % %)'
]]></output>
                </test-case>
                <test-case id="0-2283" name="parent-operator.parent[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1944348065" result="Passed" start-time="2023-09-17T20:30:30.6448853Z" end-time="2023-09-17T20:30:30.6450666Z" duration="0.000181" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{&#xA;  &quot;order&quot;: %.OrderID,&#xA;  &quot;Product&quot;: `Product Name`,&#xA;  &quot;Weight&quot;: Description.Weight&#xA;}&#xA;';&#xA; result: [{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Weight&quot;:0.6},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Cloak&quot;,&quot;Weight&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{
  "order": %.OrderID,
  "Product": `Product Name`,
  "Weight": Description.Weight
}
'
Result: '[{"order":"order103","Product":"Bowler Hat","Weight":0.75},{"order":"order103","Product":"Trilby hat","Weight":0.6},{"order":"order104","Product":"Bowler Hat","Weight":0.75},{"order":"order104","Product":"Cloak","Weight":2}]'
Expected: '[{"order":"order103","Product":"Bowler Hat","Weight":0.75},{"order":"order103","Product":"Trilby hat","Weight":0.6},{"order":"order104","Product":"Bowler Hat","Weight":0.75},{"order":"order104","Product":"Cloak","Weight":2}]'
]]></output>
                </test-case>
                <test-case id="0-2284" name="parent-operator.parent[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1754614095" result="Passed" start-time="2023-09-17T20:30:30.6450808Z" end-time="2023-09-17T20:30:30.6452719Z" duration="0.000191" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order.Product).{&#xA;  &quot;order&quot;: %.OrderID,&#xA;  &quot;Product&quot;: `Product Name`,&#xA;  &quot;Weight&quot;: Description.Weight&#xA;}&#xA;';&#xA; result: [{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Weight&quot;:0.6},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Cloak&quot;,&quot;Weight&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(Order.Product).{
  "order": %.OrderID,
  "Product": `Product Name`,
  "Weight": Description.Weight
}
'
Result: '[{"order":"order103","Product":"Bowler Hat","Weight":0.75},{"order":"order103","Product":"Trilby hat","Weight":0.6},{"order":"order104","Product":"Bowler Hat","Weight":0.75},{"order":"order104","Product":"Cloak","Weight":2}]'
Expected: '[{"order":"order103","Product":"Bowler Hat","Weight":0.75},{"order":"order103","Product":"Trilby hat","Weight":0.6},{"order":"order104","Product":"Bowler Hat","Weight":0.75},{"order":"order104","Product":"Cloak","Weight":2}]'
]]></output>
                </test-case>
                <test-case id="0-2285" name="parent-operator.parent[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1902730285" result="Failed" start-time="2023-09-17T20:30:30.6452828Z" end-time="2023-09-17T20:30:30.6468672Z" duration="0.001585" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.[`Product Name`, %.OrderID]';&#xA; result: [&quot;Bowler Hat&quot;,&quot;order103&quot;,&quot;Trilby hat&quot;,&quot;order103&quot;,&quot;Bowler Hat&quot;,&quot;order104&quot;,&quot;Cloak&quot;,&quot;order104&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '["Bowler Hat","order103","Trilby hat","order103","Bowler Hat","order104","Cloak","order104"]', got '[["Bowler Hat","order103"],["Trilby hat","order103"],["Bowler Hat","order104"],["Cloak","order104"]]'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.[`Product Name`, %.OrderID]'
Result: '[["Bowler Hat","order103"],["Trilby hat","order103"],["Bowler Hat","order104"],["Cloak","order104"]]'
Expected: '["Bowler Hat","order103","Trilby hat","order103","Bowler Hat","order104","Cloak","order104"]'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '["Bowler Hat","order103","Trilby hat","order103","Bowler Hat","order104","Cloak","order104"]', got '[["Bowler Hat","order103"],["Trilby hat","order103"],["Bowler Hat","order104"],["Cloak","order104"]]'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 138
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2286" name="parent-operator.parent[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="87884855" result="Passed" start-time="2023-09-17T20:30:30.6469204Z" end-time="2023-09-17T20:30:30.6470706Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ `Product Name`: [Quantity, %.OrderID] }';&#xA; result: [{&quot;Bowler Hat&quot;:[2,&quot;order103&quot;]},{&quot;Trilby hat&quot;:[1,&quot;order103&quot;]},{&quot;Bowler Hat&quot;:[4,&quot;order104&quot;]},{&quot;Cloak&quot;:[1,&quot;order104&quot;]}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ `Product Name`: [Quantity, %.OrderID] }'
Result: '[{"Bowler Hat":[2,"order103"]},{"Trilby hat":[1,"order103"]},{"Bowler Hat":[4,"order104"]},{"Cloak":[1,"order104"]}]'
Expected: '[{"Bowler Hat":[2,"order103"]},{"Trilby hat":[1,"order103"]},{"Bowler Hat":[4,"order104"]},{"Cloak":[1,"order104"]}]'
]]></output>
                </test-case>
                <test-case id="0-2287" name="parent-operator.parent[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1730890546" result="Passed" start-time="2023-09-17T20:30:30.6470800Z" end-time="2023-09-17T20:30:30.6472651Z" duration="0.000185" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ `Product Name`: [Quantity, (%.OrderID)] }';&#xA; result: [{&quot;Bowler Hat&quot;:[2,&quot;order103&quot;]},{&quot;Trilby hat&quot;:[1,&quot;order103&quot;]},{&quot;Bowler Hat&quot;:[4,&quot;order104&quot;]},{&quot;Cloak&quot;:[1,&quot;order104&quot;]}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ `Product Name`: [Quantity, (%.OrderID)] }'
Result: '[{"Bowler Hat":[2,"order103"]},{"Trilby hat":[1,"order103"]},{"Bowler Hat":[4,"order104"]},{"Cloak":[1,"order104"]}]'
Expected: '[{"Bowler Hat":[2,"order103"]},{"Trilby hat":[1,"order103"]},{"Bowler Hat":[4,"order104"]},{"Cloak":[1,"order104"]}]'
]]></output>
                </test-case>
                <test-case id="0-2288" name="parent-operator.parent[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="278471666" result="Passed" start-time="2023-09-17T20:30:30.6473002Z" end-time="2023-09-17T20:30:30.6476977Z" duration="0.000398" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.OrderID='order104'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.OrderID='order104'].SKU'
Result: '["040657863","0406654603"]'
Expected: '["040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2289" name="parent-operator.parent[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1556645253" result="Passed" start-time="2023-09-17T20:30:30.6477085Z" end-time="2023-09-17T20:30:30.6479213Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.%.`Account Name`='Firefly'].SKU';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.%.`Account Name`='Firefly'].SKU'
Result: '["0406654608","0406634348","040657863","0406654603"]'
Expected: '["0406654608","0406634348","040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2290" name="parent-operator.parent[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="832077283" result="Passed" start-time="2023-09-17T20:30:30.6479309Z" end-time="2023-09-17T20:30:30.6480403Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price[%.%.OrderID='order103']';&#xA; result: [34.45,21.67]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price[%.%.OrderID='order103']'
Result: '[34.45,21.67]'
Expected: '[34.45,21.67]'
]]></output>
                </test-case>
                <test-case id="0-2291" name="parent-operator.parent[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="195335969" result="Passed" start-time="2023-09-17T20:30:30.6480488Z" end-time="2023-09-17T20:30:30.6481338Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price.%[%.OrderID='order103'].SKU';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price.%[%.OrderID='order103'].SKU'
Result: '["0406654608","0406634348"]'
Expected: '["0406654608","0406634348"]'
]]></output>
                </test-case>
                <test-case id="0-2292" name="parent-operator.parent[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1451303964" result="Passed" start-time="2023-09-17T20:30:30.6481417Z" end-time="2023-09-17T20:30:30.6484383Z" duration="0.000297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.OrderID='order104'][%.%.`Account Name`='Firefly'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.OrderID='order104'][%.%.`Account Name`='Firefly'].SKU'
Result: '["040657863","0406654603"]'
Expected: '["040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2293" name="parent-operator.parent[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1714898553" result="Passed" start-time="2023-09-17T20:30:30.6484495Z" end-time="2023-09-17T20:30:30.6492808Z" duration="0.000831" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(Account.Order.Product)[%.OrderID='order104'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(Account.Order.Product)[%.OrderID='order104'].SKU'
Result: '["040657863","0406654603"]'
Expected: '["040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2294" name="parent-operator.parent[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1463334108" result="Passed" start-time="2023-09-17T20:30:30.6495217Z" end-time="2023-09-17T20:30:30.6498251Z" duration="0.000303" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ %.OrderID: Price * Quantity }';&#xA; result: [{&quot;order103&quot;:68.9},{&quot;order103&quot;:21.67},{&quot;order104&quot;:137.8},{&quot;order104&quot;:107.99}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ %.OrderID: Price * Quantity }'
Result: '[{"order103":68.9},{"order103":21.67},{"order104":137.8},{"order104":107.99}]'
Expected: '[{"order103":68.9},{"order103":21.67},{"order104":137.8},{"order104":107.99}]'
]]></output>
                </test-case>
                <test-case id="0-2295" name="parent-operator.parent[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="270321150" result="Passed" start-time="2023-09-17T20:30:30.6505056Z" end-time="2023-09-17T20:30:30.6506464Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.().%';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.().%'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2296" name="parent-operator.parent[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1099912694" result="Passed" start-time="2023-09-17T20:30:30.6514523Z" end-time="2023-09-17T20:30:30.6519964Z" duration="0.000544" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
Result: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
Expected: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
]]></output>
                </test-case>
                <test-case id="0-2297" name="parent-operator.parent[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="124913321" result="Passed" start-time="2023-09-17T20:30:30.6520565Z" end-time="2023-09-17T20:30:30.6521952Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
Result: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
Expected: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
]]></output>
                </test-case>
                <test-case id="0-2298" name="parent-operator.parent[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="675726941" result="Passed" start-time="2023-09-17T20:30:30.6522047Z" end-time="2023-09-17T20:30:30.6525897Z" duration="0.000385" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order.(Product)).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(Order.(Product)).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
Result: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
Expected: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
]]></output>
                </test-case>
                <test-case id="0-2299" name="parent-operator.parent[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1241527430" result="Passed" start-time="2023-09-17T20:30:30.6526002Z" end-time="2023-09-17T20:30:30.6527193Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order).(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(Order).(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
Result: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
Expected: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
]]></output>
                </test-case>
                <test-case id="0-2300" name="parent-operator.parent[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="412517729" result="Passed" start-time="2023-09-17T20:30:30.6527278Z" end-time="2023-09-17T20:30:30.6528316Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(Account.Order).(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '(Account.Order).(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
Result: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
Expected: '[{"Product":"Bowler Hat","Order":"order103","Account":"Firefly"},{"Product":"Trilby hat","Order":"order103","Account":"Firefly"},{"Product":"Bowler Hat","Order":"order104","Account":"Firefly"},{"Product":"Cloak","Order":"order104","Account":"Firefly"}]'
]]></output>
                </test-case>
                <test-case id="0-2301" name="parent-operator.parent[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="111490228" result="Passed" start-time="2023-09-17T20:30:30.6528397Z" end-time="2023-09-17T20:30:30.6616036Z" duration="0.008765" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.SKU^(%.Price)';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.SKU^(%.Price)'
Result: '["0406634348","0406654608","040657863","0406654603"]'
Expected: '["0406634348","0406654608","040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2302" name="parent-operator.parent[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="997333838" result="Passed" start-time="2023-09-17T20:30:30.6625300Z" end-time="2023-09-17T20:30:30.6627739Z" duration="0.000243" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.SKU^(%.Price, &gt;%.%.OrderID)';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654608&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.SKU^(%.Price, >%.%.OrderID)'
Result: '["0406634348","040657863","0406654608","0406654603"]'
Expected: '["0406634348","040657863","0406654608","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2303" name="parent-operator.parent[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1354427113" result="Passed" start-time="2023-09-17T20:30:30.6627883Z" end-time="2023-09-17T20:30:30.6629525Z" duration="0.000164" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.{ 'Colour': Colour, 'Total': %.Price * %.Quantity }';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Total&quot;:68.9},{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Total&quot;:21.67},{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Total&quot;:137.8},{&quot;Colour&quot;:&quot;Black&quot;,&quot;Total&quot;:107.99}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.{ 'Colour': Colour, 'Total': %.Price * %.Quantity }'
Result: '[{"Colour":"Purple","Total":68.9},{"Colour":"Orange","Total":21.67},{"Colour":"Purple","Total":137.8},{"Colour":"Black","Total":107.99}]'
Expected: '[{"Colour":"Purple","Total":68.9},{"Colour":"Orange","Total":21.67},{"Colour":"Purple","Total":137.8},{"Colour":"Black","Total":107.99}]'
]]></output>
                </test-case>
                <test-case id="0-2304" name="parent-operator.parent[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1667320618" result="Passed" start-time="2023-09-17T20:30:30.6629629Z" end-time="2023-09-17T20:30:30.6633100Z" duration="0.000347" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.{ 'Item': Colour &amp; ' ' &amp; %.`Product Name`, 'Discounted': (%.%.OrderID = 'order103') ? %.Price / 2 : %.Price }';&#xA; result: [{&quot;Item&quot;:&quot;Purple Bowler Hat&quot;,&quot;Discounted&quot;:17.225},{&quot;Item&quot;:&quot;Orange Trilby hat&quot;,&quot;Discounted&quot;:10.835},{&quot;Item&quot;:&quot;Purple Bowler Hat&quot;,&quot;Discounted&quot;:34.45},{&quot;Item&quot;:&quot;Black Cloak&quot;,&quot;Discounted&quot;:107.99}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.{ 'Item': Colour & ' ' & %.`Product Name`, 'Discounted': (%.%.OrderID = 'order103') ? %.Price / 2 : %.Price }'
Result: '[{"Item":"Purple Bowler Hat","Discounted":17.225},{"Item":"Orange Trilby hat","Discounted":10.835},{"Item":"Purple Bowler Hat","Discounted":34.45},{"Item":"Black Cloak","Discounted":107.99}]'
Expected: '[{"Item":"Purple Bowler Hat","Discounted":17.225},{"Item":"Orange Trilby hat","Discounted":10.835},{"Item":"Purple Bowler Hat","Discounted":34.45},{"Item":"Black Cloak","Discounted":107.99}]'
]]></output>
                </test-case>
                <test-case id="0-2305" name="parent-operator.parent[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1764183421" result="Passed" start-time="2023-09-17T20:30:30.6634064Z" end-time="2023-09-17T20:30:30.6635948Z" duration="0.000188" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.( $parent := %; %.OrderID )';&#xA; result: [&quot;order103&quot;,&quot;order103&quot;,&quot;order104&quot;,&quot;order104&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.( $parent := %; %.OrderID )'
Result: '["order103","order103","order104","order104"]'
Expected: '["order103","order103","order104","order104"]'
]]></output>
                </test-case>
                <test-case id="0-2306" name="parent-operator.parent[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1182229389" result="Passed" start-time="2023-09-17T20:30:30.6637636Z" end-time="2023-09-17T20:30:30.6639338Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.( $parent := %; $parent.OrderID )';&#xA; result: [&quot;order103&quot;,&quot;order103&quot;,&quot;order104&quot;,&quot;order104&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.( $parent := %; $parent.OrderID )'
Result: '["order103","order103","order104","order104"]'
Expected: '["order103","order103","order104","order104"]'
]]></output>
                </test-case>
                <test-case id="0-2307" name="parent-operator.parent[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1166291089" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.6639439Z" end-time="2023-09-17T20:30:30.6651028Z" duration="0.001159" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].{ 'book': $B.title, 'parent': $keys(%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].{ 'book': $B.title, 'parent': $keys(%) }'
]]></output>
                </test-case>
                <test-case id="0-2308" name="parent-operator.parent[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1241007103" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.6656169Z" end-time="2023-09-17T20:30:30.6665060Z" duration="0.000889" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%) }'
]]></output>
                </test-case>
                <test-case id="0-2309" name="parent-operator.parent[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="76668284" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.6665492Z" end-time="2023-09-17T20:30:30.6678598Z" duration="0.001311" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%.%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%.%) }'
]]></output>
                </test-case>
                <test-case id="0-2310" name="parent-operator.parent[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="763586370" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:30.6678783Z" end-time="2023-09-17T20:30:30.6686157Z" duration="0.000738" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers@$C[$C.id=$L.customer].{ 'book': $B.title, 'customer': $C.name, 'grandparent': $keys(%.%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;grandparent&quot;:&quot;library&quot;},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;grandparent&quot;:&quot;library&quot;},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;grandparent&quot;:&quot;library&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in /_/src/Jsonata.Net.Native/JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers@$C[$C.id=$L.customer].{ 'book': $B.title, 'customer': $C.name, 'grandparent': $keys(%.%) }'
]]></output>
                </test-case>
                <test-case id="0-2311" name="parentheses.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1815804726" result="Passed" start-time="2023-09-17T20:30:30.6686315Z" end-time="2023-09-17T20:30:30.6687363Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah).baz.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah).baz.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2312" name="parentheses.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="157606831" result="Passed" start-time="2023-09-17T20:30:30.6687462Z" end-time="2023-09-17T20:30:30.6688175Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah.baz).fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah.baz).fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2313" name="parentheses.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2140731740" result="Passed" start-time="2023-09-17T20:30:30.6688258Z" end-time="2023-09-17T20:30:30.6688895Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz).fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz).fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2314" name="parentheses.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="247358999" result="Passed" start-time="2023-09-17T20:30:30.6688971Z" end-time="2023-09-17T20:30:30.6689686Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.(baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.(baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2315" name="parentheses.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1213418999" result="Passed" start-time="2023-09-17T20:30:30.6689764Z" end-time="2023-09-17T20:30:30.6690373Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2316" name="parentheses.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="261523125" result="Passed" start-time="2023-09-17T20:30:30.6690445Z" end-time="2023-09-17T20:30:30.6691033Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo).(blah).baz.(fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo).(blah).baz.(fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2317" name="parentheses.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1342965705" result="Passed" start-time="2023-09-17T20:30:30.6691102Z" end-time="2023-09-17T20:30:30.6691675Z" duration="0.000057" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.(blah).baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.(blah).baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2318" name="parentheses.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="363029542" result="Passed" start-time="2023-09-17T20:30:30.6691742Z" end-time="2023-09-17T20:30:30.6692332Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(4 + 2) / 2';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(4 + 2) / 2'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2319" name="partial-application.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="249328698" result="Passed" start-time="2023-09-17T20:30:30.6692399Z" end-time="2023-09-17T20:30:30.6693288Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $add := function($x, $y){$x+$y};  $add2 := $add(?, 2);  $add2(3))';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '(  $add := function($x, $y){$x+$y};  $add2 := $add(?, 2);  $add2(3))'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2320" name="partial-application.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2120080437" result="Passed" start-time="2023-09-17T20:30:30.6693360Z" end-time="2023-09-17T20:30:30.6694121Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $add := function($x, $y){$x+$y};  $add2 := $add(2, ?);  $add2(4))';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $add := function($x, $y){$x+$y};  $add2 := $add(2, ?);  $add2(4))'
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2321" name="partial-application.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1158761759" result="Passed" start-time="2023-09-17T20:30:30.6694190Z" end-time="2023-09-17T20:30:30.6694985Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $firstn := $substring(?, 0, ?);  $first5 := $firstn(?, 5);  $first5(&quot;Hello World&quot;))';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $firstn := $substring(?, 0, ?);  $first5 := $firstn(?, 5);  $first5("Hello World"))'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-2322" name="partial-application.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="678301933" result="Passed" start-time="2023-09-17T20:30:30.6695056Z" end-time="2023-09-17T20:30:30.6707518Z" duration="0.001246" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'substring(?, 0, ?)';&#xA; result: error T1007" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1007.
Actually thrown T1008.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'substring(?, 0, ?)'
]]></output>
                </test-case>
                <test-case id="0-2323" name="partial-application.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1780910616" result="Passed" start-time="2023-09-17T20:30:30.6716206Z" end-time="2023-09-17T20:30:30.6721308Z" duration="0.000510" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'unknown(?)';&#xA; result: error T1008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1008.
Actually thrown T1008.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'unknown(?)'
]]></output>
                </test-case>
                <test-case id="0-2324" name="predicates.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2005457813" result="Passed" start-time="2023-09-17T20:30:30.6721484Z" end-time="2023-09-17T20:30:30.6723326Z" duration="0.000184" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing[x=6][y=3].number';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing[x=6][y=3].number'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2325" name="predicates.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1600790382" result="Passed" start-time="2023-09-17T20:30:30.6724507Z" end-time="2023-09-17T20:30:30.6726608Z" duration="0.000210" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'clues[x=6][y=3].number';&#xA; result: 7" />
                  </properties>
                  <output><![CDATA[Expr is 'clues[x=6][y=3].number'
Result: '7'
Expected: '7'
]]></output>
                </test-case>
                <test-case id="0-2326" name="predicates.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1132114416" result="Passed" start-time="2023-09-17T20:30:30.6732950Z" end-time="2023-09-17T20:30:30.6733871Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[x=6][y=3].number';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$[x=6][y=3].number'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2327" name="predicates.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="797491130" result="Passed" start-time="2023-09-17T20:30:30.6748661Z" end-time="2023-09-17T20:30:30.6755437Z" duration="0.000677" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$lowercase(Description.Colour) = &quot;purple&quot;][0].Price';&#xA; result: [34.45,34.45]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$lowercase(Description.Colour) = "purple"][0].Price'
Result: '[34.45,34.45]'
Expected: '[34.45,34.45]'
]]></output>
                </test-case>
                <test-case id="0-2328" name="quoted-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="872159838" result="Passed" start-time="2023-09-17T20:30:30.6760430Z" end-time="2023-09-17T20:30:30.6761782Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah&quot;';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah"'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-2329" name="quoted-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1342255396" result="Passed" start-time="2023-09-17T20:30:30.6765813Z" end-time="2023-09-17T20:30:30.6767267Z" duration="0.000145" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah&quot;.baz.'fud'';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah".baz.'fud''
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2330" name="quoted-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="378555488" result="Passed" start-time="2023-09-17T20:30:30.6768136Z" end-time="2023-09-17T20:30:30.6769043Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.&quot;blah&quot;.&quot;baz&quot;.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo"."blah"."baz"."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2331" name="quoted-selectors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="265020822" result="Passed" start-time="2023-09-17T20:30:30.6770501Z" end-time="2023-09-17T20:30:30.6779289Z" duration="0.000879" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah.baz&quot;';&#xA; result: &quot;here&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah.baz"'
Result: '"here"'
Expected: '"here"'
]]></output>
                </test-case>
                <test-case id="0-2332" name="quoted-selectors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="784754242" result="Passed" start-time="2023-09-17T20:30:30.6786964Z" end-time="2023-09-17T20:30:30.6789184Z" duration="0.000222" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah`';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah`'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-2333" name="quoted-selectors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1386799689" result="Passed" start-time="2023-09-17T20:30:30.6795016Z" end-time="2023-09-17T20:30:30.6796090Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah`.baz.'fud'';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah`.baz.'fud''
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2334" name="quoted-selectors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1558702480" result="Passed" start-time="2023-09-17T20:30:30.6796272Z" end-time="2023-09-17T20:30:30.6797685Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '`foo`.`blah`.`baz`.`fud`';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '`foo`.`blah`.`baz`.`fud`'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2335" name="quoted-selectors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="246263705" result="Passed" start-time="2023-09-17T20:30:30.6799172Z" end-time="2023-09-17T20:30:30.6801039Z" duration="0.000186" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah.baz`';&#xA; result: &quot;here&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah.baz`'
Result: '"here"'
Expected: '"here"'
]]></output>
                </test-case>
                <test-case id="0-2336" name="range-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="797365669" result="Passed" start-time="2023-09-17T20:30:30.6801416Z" end-time="2023-09-17T20:30:30.6807773Z" duration="0.000636" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0..9]';&#xA; result: [0,1,2,3,4,5,6,7,8,9]" />
                  </properties>
                  <output><![CDATA[Expr is '[0..9]'
Result: '[0,1,2,3,4,5,6,7,8,9]'
Expected: '[0,1,2,3,4,5,6,7,8,9]'
]]></output>
                </test-case>
                <test-case id="0-2337" name="range-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="65371684" result="Passed" start-time="2023-09-17T20:30:30.6810791Z" end-time="2023-09-17T20:30:30.6811909Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0..9][$ % 2 = 0]';&#xA; result: [0,2,4,6,8]" />
                  </properties>
                  <output><![CDATA[Expr is '[0..9][$ % 2 = 0]'
Result: '[0,2,4,6,8]'
Expected: '[0,2,4,6,8]'
]]></output>
                </test-case>
                <test-case id="0-2338" name="range-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="277027447" result="Passed" start-time="2023-09-17T20:30:30.6812039Z" end-time="2023-09-17T20:30:30.6814957Z" duration="0.000292" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0, 4..9, 20, 22]';&#xA; result: [0,4,5,6,7,8,9,20,22]" />
                  </properties>
                  <output><![CDATA[Expr is '[0, 4..9, 20, 22]'
Result: '[0,4,5,6,7,8,9,20,22]'
Expected: '[0,4,5,6,7,8,9,20,22]'
]]></output>
                </test-case>
                <test-case id="0-2339" name="range-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2137914321" result="Passed" start-time="2023-09-17T20:30:30.6815086Z" end-time="2023-09-17T20:30:30.6817467Z" duration="0.000238" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[5..2]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[5..2]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2340" name="range-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="720500896" result="Passed" start-time="2023-09-17T20:30:30.6820766Z" end-time="2023-09-17T20:30:30.6821654Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[5..2, 2..5]';&#xA; result: [2,3,4,5]" />
                  </properties>
                  <output><![CDATA[Expr is '[5..2, 2..5]'
Result: '[2,3,4,5]'
Expected: '[2,3,4,5]'
]]></output>
                </test-case>
                <test-case id="0-2341" name="range-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1069077413" result="Passed" start-time="2023-09-17T20:30:30.6821821Z" end-time="2023-09-17T20:30:30.6830235Z" duration="0.000842" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..2]';&#xA; result: [-2,-1,0,1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..2]'
Result: '[-2,-1,0,1,2]'
Expected: '[-2,-1,0,1,2]'
]]></output>
                </test-case>
                <test-case id="0-2342" name="range-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="489883443" result="Passed" start-time="2023-09-17T20:30:30.6830398Z" end-time="2023-09-17T20:30:30.6832513Z" duration="0.000212" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..2].($*$)';&#xA; result: [4,1,0,1,4]" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..2].($*$)'
Result: '[4,1,0,1,4]'
Expected: '[4,1,0,1,4]'
]]></output>
                </test-case>
                <test-case id="0-2343" name="range-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="201803382" result="Passed" start-time="2023-09-17T20:30:30.6835575Z" end-time="2023-09-17T20:30:30.6836607Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..blah]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..blah]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2344" name="range-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="793058883" result="Passed" start-time="2023-09-17T20:30:30.6836701Z" end-time="2023-09-17T20:30:30.6838090Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[blah..5, 3, -2..blah]';&#xA; result: [3]" />
                  </properties>
                  <output><![CDATA[Expr is '[blah..5, 3, -2..blah]'
Result: '[3]'
Expected: '[3]'
]]></output>
                </test-case>
                <test-case id="0-2345" name="range-operator.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1163756204" result="Passed" start-time="2023-09-17T20:30:30.6838479Z" end-time="2023-09-17T20:30:30.6850679Z" duration="0.001220" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1.1 .. 5]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003.
Actually thrown T2003.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1.1 .. 5]'
]]></output>
                </test-case>
                <test-case id="0-2346" name="range-operator.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="37729138" result="Passed" start-time="2023-09-17T20:30:30.6850848Z" end-time="2023-09-17T20:30:30.6862169Z" duration="0.001132" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1 .. 5.5]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004.
Actually thrown T2004.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1 .. 5.5]'
]]></output>
                </test-case>
                <test-case id="0-2347" name="range-operator.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1458055871" result="Passed" start-time="2023-09-17T20:30:30.6862509Z" end-time="2023-09-17T20:30:30.6872228Z" duration="0.000972" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[10..1.5]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004.
Actually thrown T2004.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[10..1.5]'
]]></output>
                </test-case>
                <test-case id="0-2348" name="range-operator.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1467539554" result="Passed" start-time="2023-09-17T20:30:30.6872395Z" end-time="2023-09-17T20:30:30.6878466Z" duration="0.000607" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[true..false]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003.
Actually thrown T2003.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[true..false]'
]]></output>
                </test-case>
                <test-case id="0-2349" name="range-operator.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="249915109" result="Passed" start-time="2023-09-17T20:30:30.6878619Z" end-time="2023-09-17T20:30:30.6884196Z" duration="0.000558" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '['dogs'..'cats']';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003.
Actually thrown T2003.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '['dogs'..'cats']'
]]></output>
                </test-case>
                <test-case id="0-2350" name="range-operator.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="8798025" result="Passed" start-time="2023-09-17T20:30:30.6884428Z" end-time="2023-09-17T20:30:30.6890423Z" duration="0.000600" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..'']';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004.
Actually thrown T2004.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..'']'
]]></output>
                </test-case>
                <test-case id="0-2351" name="range-operator.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1904430636" result="Passed" start-time="2023-09-17T20:30:30.6890756Z" end-time="2023-09-17T20:30:30.6908712Z" duration="0.001796" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..[]]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004.
Actually thrown T2004.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..[]]'
]]></output>
                </test-case>
                <test-case id="0-2352" name="range-operator.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1909367426" result="Passed" start-time="2023-09-17T20:30:30.6908872Z" end-time="2023-09-17T20:30:30.6917777Z" duration="0.000891" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..{}]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004.
Actually thrown T2004.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..{}]'
]]></output>
                </test-case>
                <test-case id="0-2353" name="range-operator.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="426398243" result="Passed" start-time="2023-09-17T20:30:30.6921483Z" end-time="2023-09-17T20:30:30.6941309Z" duration="0.001983" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..false]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004.
Actually thrown T2004.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..false]'
]]></output>
                </test-case>
                <test-case id="0-2354" name="range-operator.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1268930640" result="Passed" start-time="2023-09-17T20:30:30.6948355Z" end-time="2023-09-17T20:30:30.6957097Z" duration="0.000874" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[2..true]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004.
Actually thrown T2004.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[2..true]'
]]></output>
                </test-case>
                <test-case id="0-2355" name="range-operator.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1401239617" result="Passed" start-time="2023-09-17T20:30:30.6962754Z" end-time="2023-09-17T20:30:30.6980532Z" duration="0.001778" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[$x..true]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004.
Actually thrown T2004.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[$x..true]'
]]></output>
                </test-case>
                <test-case id="0-2356" name="range-operator.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1580671942" result="Passed" start-time="2023-09-17T20:30:30.7004788Z" end-time="2023-09-17T20:30:30.7023717Z" duration="0.001893" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[false..$x]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003.
Actually thrown T2003.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[false..$x]'
]]></output>
                </test-case>
                <test-case id="0-2357" name="range-operator.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1363906869" result="Passed" start-time="2023-09-17T20:30:30.7052246Z" end-time="2023-09-17T20:30:32.7965748Z" duration="2.091372" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10000000] ~&gt; $count()';&#xA; result: 10000000" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10000000] ~> $count()'
Result: '10000000'
Expected: '10000000'
]]></output>
                </test-case>
                <test-case id="0-2358" name="range-operator.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1496452947" result="Passed" start-time="2023-09-17T20:30:32.7966140Z" end-time="2023-09-17T20:30:32.7984136Z" duration="0.001800" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[0..10000000] ~&gt; $count()';&#xA; result: error D2014" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D2014.
Actually thrown D2014.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[0..10000000] ~> $count()'
]]></output>
                </test-case>
                <test-case id="0-2359" name="range-operator.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="66530236" result="Passed" start-time="2023-09-17T20:30:32.8010281Z" end-time="2023-09-17T20:30:32.8016540Z" duration="0.000626" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..10000001] ~&gt; $count()';&#xA; result: error D2014" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D2014.
Actually thrown D2014.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..10000001] ~> $count()'
]]></output>
                </test-case>
                <test-case id="0-2360" name="range-operator.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="632069005" result="Passed" start-time="2023-09-17T20:30:32.8016720Z" end-time="2023-09-17T20:30:35.5081761Z" duration="2.706534" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[100..10000099] ~&gt; $count()';&#xA; result: 10000000" />
                  </properties>
                  <output><![CDATA[Expr is '[100..10000099] ~> $count()'
Result: '10000000'
Expected: '10000000'
]]></output>
                </test-case>
                <test-case id="0-2361" name="regex.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="384738259" result="Passed" start-time="2023-09-17T20:30:35.5082360Z" end-time="2023-09-17T20:30:35.5085347Z" duration="0.000299" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/b+/)';&#xA; result: [&quot;a&quot;,&quot;a&quot;,&quot;xa&quot;,&quot;cc&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/b+/)'
Result: '["a","a","xa","cc"]'
Expected: '["a","a","xa","cc"]'
]]></output>
                </test-case>
                <test-case id="0-2362" name="regex.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="294131251" result="Passed" start-time="2023-09-17T20:30:35.5085504Z" end-time="2023-09-17T20:30:35.5090111Z" duration="0.000461" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/b+/, 2)';&#xA; result: [&quot;a&quot;,&quot;a&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/b+/, 2)'
Result: '["a","a"]'
Expected: '["a","a"]'
]]></output>
                </test-case>
                <test-case id="0-2363" name="regex.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2046235354" result="Passed" start-time="2023-09-17T20:30:35.5093061Z" end-time="2023-09-17T20:30:35.5094188Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/d+/)';&#xA; result: [&quot;ababbxabbcc&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/d+/)'
Result: '["ababbxabbcc"]'
Expected: '["ababbxabbcc"]'
]]></output>
                </test-case>
                <test-case id="0-2364" name="regex.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1845596443" result="Passed" start-time="2023-09-17T20:30:35.5098551Z" end-time="2023-09-17T20:30:35.5109179Z" duration="0.001063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;ababbxabbcc&quot;,/ab+/)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("ababbxabbcc",/ab+/)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2365" name="regex.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="498565548" result="Passed" start-time="2023-09-17T20:30:35.5109678Z" end-time="2023-09-17T20:30:35.5110680Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;ababbxabbcc&quot;,/ax+/)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("ababbxabbcc",/ax+/)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2366" name="regex.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1031050484" result="Passed" start-time="2023-09-17T20:30:35.5116062Z" end-time="2023-09-17T20:30:35.5455518Z" duration="0.033946" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$contains($.&quot;Product Name&quot;, /hat/)].ProductID';&#xA; result: 858236" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$contains($."Product Name", /hat/)].ProductID'
Result: '858236'
Expected: '858236'
]]></output>
                </test-case>
                <test-case id="0-2367" name="regex.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="918290789" result="Passed" start-time="2023-09-17T20:30:35.5455725Z" end-time="2023-09-17T20:30:35.5457933Z" duration="0.000221" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$contains($.&quot;Product Name&quot;, /hat/i)].ProductID';&#xA; result: [858383,858236,858383]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$contains($."Product Name", /hat/i)].ProductID'
Result: '[858383,858236,858383]'
Expected: '[858383,858236,858383]'
]]></output>
                </test-case>
                <test-case id="0-2368" name="regex.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="582029260" result="Passed" start-time="2023-09-17T20:30:35.5458140Z" end-time="2023-09-17T20:30:35.5461011Z" duration="0.000287" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;)';&#xA; result: &quot;ayyayyxayycc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy")'
Result: '"ayyayyxayycc"'
Expected: '"ayyayyxayycc"'
]]></output>
                </test-case>
                <test-case id="0-2369" name="regex.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1095294" result="Passed" start-time="2023-09-17T20:30:35.5461344Z" end-time="2023-09-17T20:30:35.5463640Z" duration="0.000230" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;, 2)';&#xA; result: &quot;ayyayyxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy", 2)'
Result: '"ayyayyxabbcc"'
Expected: '"ayyayyxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2370" name="regex.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="416053330" result="Passed" start-time="2023-09-17T20:30:35.5463734Z" end-time="2023-09-17T20:30:35.5466189Z" duration="0.000246" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;, 0)';&#xA; result: &quot;ababbxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy", 0)'
Result: '"ababbxabbcc"'
Expected: '"ababbxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2371" name="regex.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="196151441" result="Passed" start-time="2023-09-17T20:30:35.5466771Z" end-time="2023-09-17T20:30:35.5469143Z" duration="0.000237" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/d+/, &quot;yy&quot;)';&#xA; result: &quot;ababbxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/d+/, "yy")'
Result: '"ababbxabbcc"'
Expected: '"ababbxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2372" name="regex.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1065938258" result="Passed" start-time="2023-09-17T20:30:35.5469501Z" end-time="2023-09-17T20:30:35.5472607Z" duration="0.000311" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;John Smith&quot;, /(\w+)\s(\w+)/, &quot;$2, $1&quot;)';&#xA; result: &quot;Smith, John&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("John Smith", /(\w+)\s(\w+)/, "$2, $1")'
Result: '"Smith, John"'
Expected: '"Smith, John"'
]]></output>
                </test-case>
                <test-case id="0-2373" name="regex.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="372598868" result="Passed" start-time="2023-09-17T20:30:35.5475096Z" end-time="2023-09-17T20:30:35.5476398Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$$$1&quot;)';&#xA; result: &quot;$265&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$$$1")'
Result: '"$265"'
Expected: '"$265"'
]]></output>
                </test-case>
                <test-case id="0-2374" name="regex.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1676311449" result="Passed" start-time="2023-09-17T20:30:35.5479219Z" end-time="2023-09-17T20:30:35.5480363Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$w&quot;)';&#xA; result: &quot;$w&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$w")'
Result: '"$w"'
Expected: '"$w"'
]]></output>
                </test-case>
                <test-case id="0-2375" name="regex.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1051003024" result="Passed" start-time="2023-09-17T20:30:35.5480580Z" end-time="2023-09-17T20:30:35.5483598Z" duration="0.000302" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$0 -&gt; $$$1&quot;)';&#xA; result: &quot;265USD -&gt; $265&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$0 -> $$$1")'
Result: '"265USD -> $265"'
Expected: '"265USD -> $265"'
]]></output>
                </test-case>
                <test-case id="0-2376" name="regex.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="668878316" result="Failed" start-time="2023-09-17T20:30:35.5487652Z" end-time="2023-09-17T20:30:35.5504186Z" duration="0.001654" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$0$1$2&quot;)';&#xA; result: &quot;265USD265&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"265USD265"', got '"265USD265$2"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$0$1$2")'
Result: '"265USD265$2"'
Expected: '"265USD265"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"265USD265"', got '"265USD265$2"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 49
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2377" name="regex.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="476498551" result="Passed" start-time="2023-09-17T20:30:35.5504475Z" end-time="2023-09-17T20:30:35.5545676Z" duration="0.004120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcd&quot;, /(ab)|(a)/, &quot;[1=$1][2=$2]&quot;)';&#xA; result: &quot;[1=ab][2=]cd&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcd", /(ab)|(a)/, "[1=$1][2=$2]")'
Result: '"[1=ab][2=]cd"'
Expected: '"[1=ab][2=]cd"'
]]></output>
                </test-case>
                <test-case id="0-2378" name="regex.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="987851733" result="Passed" start-time="2023-09-17T20:30:35.5546340Z" end-time="2023-09-17T20:30:35.5547813Z" duration="0.000147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /bra/, &quot;*&quot;)';&#xA; result: &quot;a*cada*&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /bra/, "*")'
Result: '"a*cada*"'
Expected: '"a*cada*"'
]]></output>
                </test-case>
                <test-case id="0-2379" name="regex.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="841701609" result="Passed" start-time="2023-09-17T20:30:35.5547914Z" end-time="2023-09-17T20:30:35.5552618Z" duration="0.000471" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a.*a/, &quot;*&quot;)';&#xA; result: &quot;*&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a.*a/, "*")'
Result: '"*"'
Expected: '"*"'
]]></output>
                </test-case>
                <test-case id="0-2380" name="regex.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1563061244" result="Passed" start-time="2023-09-17T20:30:35.5553057Z" end-time="2023-09-17T20:30:35.5554246Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a.*?a/, &quot;*&quot;)';&#xA; result: &quot;*c*bra&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a.*?a/, "*")'
Result: '"*c*bra"'
Expected: '"*c*bra"'
]]></output>
                </test-case>
                <test-case id="0-2381" name="regex.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1821542192" result="Passed" start-time="2023-09-17T20:30:35.5554332Z" end-time="2023-09-17T20:30:35.5557413Z" duration="0.000308" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a/, &quot;&quot;)';&#xA; result: &quot;brcdbr&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a/, "")'
Result: '"brcdbr"'
Expected: '"brcdbr"'
]]></output>
                </test-case>
                <test-case id="0-2382" name="regex.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1477435223" result="Passed" start-time="2023-09-17T20:30:35.5559778Z" end-time="2023-09-17T20:30:35.5562310Z" duration="0.000253" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a(.)/, &quot;a$1$1&quot;)';&#xA; result: &quot;abbraccaddabbra&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a(.)/, "a$1$1")'
Result: '"abbraccaddabbra"'
Expected: '"abbraccaddabbra"'
]]></output>
                </test-case>
                <test-case id="0-2383" name="regex.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="622244729" result="Failed" start-time="2023-09-17T20:30:35.5566029Z" end-time="2023-09-17T20:30:35.5602052Z" duration="0.003603" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /.*?/, &quot;$1&quot;)';&#xA; result: error D1004" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D1004 (), got '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abracadabra", /.*?/, "$1")'
Result: '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"'
Expected error D1004
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D1004 (), got '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 49
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2384" name="regex.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1333457371" result="Passed" start-time="2023-09-17T20:30:35.5602462Z" end-time="2023-09-17T20:30:35.5604711Z" duration="0.000225" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;AAAA&quot;, /A+/, &quot;b&quot;)';&#xA; result: &quot;b&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("AAAA", /A+/, "b")'
Result: '"b"'
Expected: '"b"'
]]></output>
                </test-case>
                <test-case id="0-2385" name="regex.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="621608499" result="Passed" start-time="2023-09-17T20:30:35.5604826Z" end-time="2023-09-17T20:30:35.5608401Z" duration="0.000358" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;AAAA&quot;, /A+?/, &quot;b&quot;)';&#xA; result: &quot;bbbb&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("AAAA", /A+?/, "b")'
Result: '"bbbb"'
Expected: '"bbbb"'
]]></output>
                </test-case>
                <test-case id="0-2386" name="regex.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="503137043" result="Passed" start-time="2023-09-17T20:30:35.5608632Z" end-time="2023-09-17T20:30:35.5614170Z" duration="0.000554" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;darted&quot;, /^(.*?)d(.*)$/, &quot;$1c$2&quot;)';&#xA; result: &quot;carted&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("darted", /^(.*?)d(.*)$/, "$1c$2")'
Result: '"carted"'
Expected: '"carted"'
]]></output>
                </test-case>
                <test-case id="0-2387" name="regex.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="358355999" result="Failed" start-time="2023-09-17T20:30:35.5614408Z" end-time="2023-09-17T20:30:35.5629506Z" duration="0.001510" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;hella8l3no&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"hella8l3no"', got '"hell$18$123no"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)/, "$8$5$12$12$18$123")'
Result: '"hell$18$123no"'
Expected: '"hella8l3no"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"hella8l3no"', got '"hell$18$123no"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 49
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2388" name="regex.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117869049" result="Passed" start-time="2023-09-17T20:30:35.5629953Z" end-time="2023-09-17T20:30:35.5631376Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /xyz/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefghijklmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /xyz/, "$8$5$12$12$18$123")'
Result: '"abcdefghijklmno"'
Expected: '"abcdefghijklmno"'
]]></output>
                </test-case>
                <test-case id="0-2389" name="regex.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="157462863" result="Failed" start-time="2023-09-17T20:30:35.5631472Z" end-time="2023-09-17T20:30:35.5647271Z" duration="0.001580" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /ijk/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefgh22823lmno&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"abcdefgh22823lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /ijk/, "$8$5$12$12$18$123")'
Result: '"abcdefgh$8$5$12$12$18$123lmno"'
Expected: '"abcdefgh22823lmno"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"abcdefgh22823lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 49
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2390" name="regex.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="813075410" result="Failed" start-time="2023-09-17T20:30:35.5651825Z" end-time="2023-09-17T20:30:35.5683125Z" duration="0.003130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(ijk)/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefghijk2ijk2ijk8ijk23lmno&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"abcdefghijk2ijk2ijk8ijk23lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(ijk)/, "$8$5$12$12$18$123")'
Result: '"abcdefgh$8$5$12$12$18$123lmno"'
Expected: '"abcdefghijk2ijk2ijk8ijk23lmno"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"abcdefghijk2ijk2ijk8ijk23lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 49
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2391" name="regex.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1580942447" result="Passed" start-time="2023-09-17T20:30:35.5683716Z" end-time="2023-09-17T20:30:35.5686092Z" duration="0.000237" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /ijk/, &quot;$x&quot;)';&#xA; result: &quot;abcdefgh$xlmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /ijk/, "$x")'
Result: '"abcdefgh$xlmno"'
Expected: '"abcdefgh$xlmno"'
]]></output>
                </test-case>
                <test-case id="0-2392" name="regex.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="716402384" result="Passed" start-time="2023-09-17T20:30:35.5686274Z" end-time="2023-09-17T20:30:35.5687368Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(ijk)/, &quot;$x$&quot;)';&#xA; result: &quot;abcdefgh$x$lmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(ijk)/, "$x$")'
Result: '"abcdefgh$x$lmno"'
Expected: '"abcdefgh$x$lmno"'
]]></output>
                </test-case>
                <test-case id="0-2393" name="regex.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="210497211" result="Passed" start-time="2023-09-17T20:30:35.5687455Z" end-time="2023-09-17T20:30:35.5693152Z" duration="0.000570" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { &quot;foo&quot; })';&#xA; result: [&quot;Bowler foo&quot;,&quot;Trilby foo&quot;,&quot;Bowler foo&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { "foo" })'
Result: '["Bowler foo","Trilby foo","Bowler foo","Cloak"]'
Expected: '["Bowler foo","Trilby foo","Bowler foo","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2394" name="regex.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1505845316" result="Passed" start-time="2023-09-17T20:30:35.5693498Z" end-time="2023-09-17T20:30:35.5699138Z" duration="0.000564" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /(h)(at)/i, function($match) { $uppercase($match.match) })';&#xA; result: [&quot;Bowler HAT&quot;,&quot;Trilby HAT&quot;,&quot;Bowler HAT&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /(h)(at)/i, function($match) { $uppercase($match.match) })'
Result: '["Bowler HAT","Trilby HAT","Bowler HAT","Cloak"]'
Expected: '["Bowler HAT","Trilby HAT","Bowler HAT","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2395" name="regex.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="335762637" result="Passed" start-time="2023-09-17T20:30:35.5699378Z" end-time="2023-09-17T20:30:35.5703036Z" duration="0.000366" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;temperature = 68F today&quot;, /(-?\d+(?:\.\d*)?)F\b/, function($m) { ($number($m.groups[0]) - 32) * 5/9 &amp; &quot;C&quot; })';&#xA; result: &quot;temperature = 20C today&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("temperature = 68F today", /(-?\d+(?:\.\d*)?)F\b/, function($m) { ($number($m.groups[0]) - 32) * 5/9 & "C" })'
Result: '"temperature = 20C today"'
Expected: '"temperature = 20C today"'
]]></output>
                </test-case>
                <test-case id="0-2396" name="regex.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="774946162" result="Passed" start-time="2023-09-17T20:30:35.5703794Z" end-time="2023-09-17T20:30:35.5714109Z" duration="0.001032" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { true })';&#xA; result: error D3012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3012.
Actually thrown D3012.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { true })'
]]></output>
                </test-case>
                <test-case id="0-2397" name="regex.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="591131736" result="Passed" start-time="2023-09-17T20:30:35.5714362Z" end-time="2023-09-17T20:30:35.5728609Z" duration="0.001425" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { 42 })';&#xA; result: error D3012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3012.
Actually thrown D3012.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { 42 })'
]]></output>
                </test-case>
                <test-case id="0-2398" name="regex.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="503690586" result="Passed" start-time="2023-09-17T20:30:35.5732542Z" end-time="2023-09-17T20:30:35.5736488Z" duration="0.000395" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map($, $match(?, /^(\w*\s\w*)/)).match';&#xA; result: [&quot;Felicia Saunders&quot;,&quot;Jimmy Schultz&quot;,&quot;Dolores Figueroa&quot;,&quot;Craig Moreno&quot;,&quot;Lindsey Hall&quot;,&quot;Bonnie Russell&quot;,&quot;Kristin Stewart&quot;,&quot;Owen Reid&quot;,&quot;Brenda Sherman&quot;,&quot;Dwayne Baldwin&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$map($, $match(?, /^(\w*\s\w*)/)).match'
Result: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
Expected: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
]]></output>
                </test-case>
                <test-case id="0-2399" name="regex.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="294493335" result="Passed" start-time="2023-09-17T20:30:35.5750420Z" end-time="2023-09-17T20:30:35.5760939Z" duration="0.001052" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map($, function($i){ $match($i, /^(\w*\s\w*)/) }).match';&#xA; result: [&quot;Felicia Saunders&quot;,&quot;Jimmy Schultz&quot;,&quot;Dolores Figueroa&quot;,&quot;Craig Moreno&quot;,&quot;Lindsey Hall&quot;,&quot;Bonnie Russell&quot;,&quot;Kristin Stewart&quot;,&quot;Owen Reid&quot;,&quot;Brenda Sherman&quot;,&quot;Dwayne Baldwin&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$map($, function($i){ $match($i, /^(\w*\s\w*)/) }).match'
Result: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
Expected: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
]]></output>
                </test-case>
                <test-case id="0-2400" name="simple-array-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="132705720" result="Passed" start-time="2023-09-17T20:30:35.5762999Z" end-time="2023-09-17T20:30:35.5765377Z" duration="0.000238" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1[0]';&#xA; result: [1,3,5,6]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1[0]'
Result: '[1,3,5,6]'
Expected: '[1,3,5,6]'
]]></output>
                </test-case>
                <test-case id="0-2401" name="simple-array-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1266921996" result="Passed" start-time="2023-09-17T20:30:35.5765612Z" end-time="2023-09-17T20:30:35.5766847Z" duration="0.000124" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz.fud';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz.fud'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2402" name="simple-array-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="876026611" result="Passed" start-time="2023-09-17T20:30:35.5766977Z" end-time="2023-09-17T20:30:35.5767869Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[1].baz.fud';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[1].baz.fud'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2403" name="simple-array-selectors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1466444260" result="Passed" start-time="2023-09-17T20:30:35.5767952Z" end-time="2023-09-17T20:30:35.5772030Z" duration="0.000408" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[-1].bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[-1].bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-2404" name="simple-array-selectors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1981345426" result="Passed" start-time="2023-09-17T20:30:35.5772141Z" end-time="2023-09-17T20:30:35.5773649Z" duration="0.000151" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah)[1].baz.fud';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah)[1].baz.fud'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2405" name="simple-array-selectors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1960130231" result="Passed" start-time="2023-09-17T20:30:35.5774768Z" end-time="2023-09-17T20:30:35.5777600Z" duration="0.000283" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud[0]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud[0]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2406" name="simple-array-selectors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="838492378" result="Passed" start-time="2023-09-17T20:30:35.5777822Z" end-time="2023-09-17T20:30:35.5779078Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud[-1]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud[-1]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2407" name="simple-array-selectors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1536768558" result="Passed" start-time="2023-09-17T20:30:35.5779163Z" end-time="2023-09-17T20:30:35.5780829Z" duration="0.000203" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2408" name="simple-array-selectors.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="897570441" result="Passed" start-time="2023-09-17T20:30:35.5781300Z" end-time="2023-09-17T20:30:35.5782233Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[1]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[1]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2409" name="simple-array-selectors.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="217927616" result="Passed" start-time="2023-09-17T20:30:35.5782308Z" end-time="2023-09-17T20:30:35.5784032Z" duration="0.000172" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[5 * 0.2]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[5 * 0.2]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2410" name="simple-array-selectors.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="732361301" result="Passed" start-time="2023-09-17T20:30:35.5784331Z" end-time="2023-09-17T20:30:35.5785254Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-1]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-1]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2411" name="simple-array-selectors.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1104173391" result="Passed" start-time="2023-09-17T20:30:35.5785333Z" end-time="2023-09-17T20:30:35.5786325Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-2]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-2]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2412" name="simple-array-selectors.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="376055136" result="Passed" start-time="2023-09-17T20:30:35.5786406Z" end-time="2023-09-17T20:30:35.6095793Z" duration="0.030939" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[2-4]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[2-4]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2413" name="simple-array-selectors.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="654751338" result="Passed" start-time="2023-09-17T20:30:35.6095986Z" end-time="2023-09-17T20:30:35.6096964Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-(4-2)]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-(4-2)]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2414" name="simple-array-selectors.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="650952639" result="Passed" start-time="2023-09-17T20:30:35.6097058Z" end-time="2023-09-17T20:30:35.6097913Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[$$.foo.bar / 30]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[$$.foo.bar / 30]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2415" name="simple-array-selectors.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="958010460" result="Passed" start-time="2023-09-17T20:30:35.6101721Z" end-time="2023-09-17T20:30:35.6103918Z" duration="0.000220" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-2416" name="simple-array-selectors.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1054786683" result="Passed" start-time="2023-09-17T20:30:35.6104024Z" end-time="2023-09-17T20:30:35.6104902Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[0]';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[0]'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-2417" name="simple-array-selectors.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1819370169" result="Passed" start-time="2023-09-17T20:30:35.6105011Z" end-time="2023-09-17T20:30:35.6105857Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz)[0]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz)[0]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-2418" name="simple-array-selectors.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="712777983" result="Passed" start-time="2023-09-17T20:30:35.6105945Z" end-time="2023-09-17T20:30:35.6106526Z" duration="0.000058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2419" name="simple-array-selectors.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1223987944" result="Passed" start-time="2023-09-17T20:30:35.6106600Z" end-time="2023-09-17T20:30:35.6113073Z" duration="0.000648" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-2420" name="simple-array-selectors.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2142912152" result="Passed" start-time="2023-09-17T20:30:35.6114634Z" end-time="2023-09-17T20:30:35.6116727Z" duration="0.000209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[-1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[-1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-2421" name="simple-array-selectors.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="672694485" result="Passed" start-time="2023-09-17T20:30:35.6117928Z" end-time="2023-09-17T20:30:35.6121942Z" duration="0.000401" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1][0]';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$[1][0]'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2422" name="simple-array-selectors.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="800421740" result="Passed" start-time="2023-09-17T20:30:35.6135554Z" end-time="2023-09-17T20:30:35.6146063Z" duration="0.001051" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1.1][0.9]';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$[1.1][0.9]'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2423" name="sorting.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="424566397" result="Passed" start-time="2023-09-17T20:30:35.6151161Z" end-time="2023-09-17T20:30:35.6152715Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^($)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^($)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2424" name="sorting.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1335503531" result="Passed" start-time="2023-09-17T20:30:35.6152907Z" end-time="2023-09-17T20:30:35.6153994Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^(&lt;$)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^(<$)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2425" name="sorting.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="982594530" result="Passed" start-time="2023-09-17T20:30:35.6154268Z" end-time="2023-09-17T20:30:35.6156632Z" duration="0.000236" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^(&gt;$)';&#xA; result: [107.99,34.45,34.45,21.67]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^(>$)'
Result: '[107.99,34.45,34.45,21.67]'
Expected: '[107.99,34.45,34.45,21.67]'
]]></output>
                </test-case>
                <test-case id="0-2426" name="sorting.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1627232704" result="Passed" start-time="2023-09-17T20:30:35.6156733Z" end-time="2023-09-17T20:30:35.6157818Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Purple&quot;,&quot;Purple&quot;,&quot;Black&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).Description.Colour'
Result: '["Orange","Purple","Purple","Black"]'
Expected: '["Orange","Purple","Purple","Black"]'
]]></output>
                </test-case>
                <test-case id="0-2427" name="sorting.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="855441047" result="Passed" start-time="2023-09-17T20:30:35.6157907Z" end-time="2023-09-17T20:30:35.6159699Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406634348","0406654608","040657863","0406654603"]'
Expected: '["0406634348","0406654608","040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2428" name="sorting.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1014237199" result="Passed" start-time="2023-09-17T20:30:35.6159784Z" end-time="2023-09-17T20:30:35.6164722Z" duration="0.000494" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price * Quantity).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Purple&quot;,&quot;Black&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price * Quantity).Description.Colour'
Result: '["Orange","Purple","Black","Purple"]'
Expected: '["Orange","Purple","Black","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2429" name="sorting.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1340548812" result="Passed" start-time="2023-09-17T20:30:35.6167373Z" end-time="2023-09-17T20:30:35.6168720Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Quantity, Description.Colour).Description.Colour';&#xA; result: [&quot;Black&quot;,&quot;Orange&quot;,&quot;Purple&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Quantity, Description.Colour).Description.Colour'
Result: '["Black","Orange","Purple","Purple"]'
Expected: '["Black","Orange","Purple","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2430" name="sorting.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="276056862" result="Passed" start-time="2023-09-17T20:30:35.6171180Z" end-time="2023-09-17T20:30:35.6172389Z" duration="0.000121" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Quantity, &gt;Description.Colour).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Black&quot;,&quot;Purple&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Quantity, >Description.Colour).Description.Colour'
Result: '["Orange","Black","Purple","Purple"]'
Expected: '["Orange","Black","Purple","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2431" name="sorting.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="77746580" result="Passed" start-time="2023-09-17T20:30:35.6172509Z" end-time="2023-09-17T20:30:35.6177583Z" duration="0.000508" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406654608&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406634348","040657863","0406654603","0406654608"]'
Expected: '["0406634348","040657863","0406654603","0406654608"]'
]]></output>
                </test-case>
                <test-case id="0-2432" name="sorting.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2120291612" result="Passed" start-time="2023-09-17T20:30:35.6180674Z" end-time="2023-09-17T20:30:35.6185286Z" duration="0.000461" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406654608","040657863","0406654603","0406634348"]'
Expected: '["0406654608","040657863","0406654603","0406634348"]'
]]></output>
                </test-case>
                <test-case id="0-2433" name="sorting.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="693358398" result="Passed" start-time="2023-09-17T20:30:35.6191573Z" end-time="2023-09-17T20:30:35.6195616Z" duration="0.000404" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406654608&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["040657863","0406654603","0406654608","0406634348"]'
Expected: '["040657863","0406654603","0406654608","0406634348"]'
]]></output>
                </test-case>
                <test-case id="0-2434" name="sorting.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="708995889" result="Passed" start-time="2023-09-17T20:30:35.6207674Z" end-time="2023-09-17T20:30:35.6231641Z" duration="0.002406" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2007" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2007.
Actually thrown T2007.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2435" name="sorting.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="296139248" result="Passed" start-time="2023-09-17T20:30:35.6232568Z" end-time="2023-09-17T20:30:35.6254065Z" duration="0.002150" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2008.
Actually thrown T2008.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2436" name="sorting.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="945515581" result="Passed" start-time="2023-09-17T20:30:35.6254234Z" end-time="2023-09-17T20:30:35.6259854Z" duration="0.000562" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2008.
Actually thrown T2008.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2437" name="sorting.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="10990963" result="Passed" start-time="2023-09-17T20:30:35.6260003Z" end-time="2023-09-17T20:30:35.6260864Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$^(age).name';&#xA; result: [&quot;Sally&quot;,&quot;Bill&quot;,&quot;Jim&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$^(age).name'
Result: '["Sally","Bill","Jim"]'
Expected: '["Sally","Bill","Jim"]'
]]></output>
                </test-case>
                <test-case id="0-2438" name="sorting.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="788382950" result="Passed" start-time="2023-09-17T20:30:35.6260950Z" end-time="2023-09-17T20:30:35.6261582Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age)).name';&#xA; result: [&quot;Sally&quot;,&quot;Bill&quot;,&quot;Jim&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age)).name'
Result: '["Sally","Bill","Jim"]'
Expected: '["Sally","Bill","Jim"]'
]]></output>
                </test-case>
                <test-case id="0-2439" name="sorting.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1520810787" result="Passed" start-time="2023-09-17T20:30:35.6263408Z" end-time="2023-09-17T20:30:35.6265996Z" duration="0.000259" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$^(age)[0].name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$^(age)[0].name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2440" name="sorting.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1930599768" result="Passed" start-time="2023-09-17T20:30:35.6266106Z" end-time="2023-09-17T20:30:35.6267238Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age))[0].name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age))[0].name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2441" name="sorting.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1113852132" result="Passed" start-time="2023-09-17T20:30:35.6267334Z" end-time="2023-09-17T20:30:35.6269546Z" duration="0.000221" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age)[0]).name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age)[0]).name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2442" name="sorting.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1608269205" result="Passed" start-time="2023-09-17T20:30:35.6270049Z" end-time="2023-09-17T20:30:35.6270813Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]^(age)';&#xA; result: {&quot;name&quot;:&quot;Bill&quot;,&quot;age&quot;:35}" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]^(age)'
Result: '{"name":"Bill","age":35}'
Expected: '{"name":"Bill","age":35}'
]]></output>
                </test-case>
                <test-case id="0-2443" name="sorting.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2047425080" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:35.6270890Z" end-time="2023-09-17T20:30:35.6282484Z" duration="0.001160" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$o.Product^(ProductID).{ 'Product': `Product Name`, 'Order Index': $o }';&#xA; result: [{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order Index&quot;:1},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:1}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in /_/src/Jsonata.Net.Native/Parsing/Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 225
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in /_/src/Jsonata.Net.Native/Parsing/Parser.cs:line 21
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$o.Product^(ProductID).{ 'Product': `Product Name`, 'Order Index': $o }'
]]></output>
                </test-case>
                <test-case id="0-2444" name="string-concat.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1572585209" result="Passed" start-time="2023-09-17T20:30:35.6284080Z" end-time="2023-09-17T20:30:35.6284885Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot; &amp; &quot;bar&quot;';&#xA; result: &quot;foobar&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"foo" & "bar"'
Result: '"foobar"'
Expected: '"foobar"'
]]></output>
                </test-case>
                <test-case id="0-2445" name="string-concat.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1856385666" result="Passed" start-time="2023-09-17T20:30:35.6284968Z" end-time="2023-09-17T20:30:35.6286547Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;&amp;&quot;bar&quot;';&#xA; result: &quot;foobar&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"foo"&"bar"'
Result: '"foobar"'
Expected: '"foobar"'
]]></output>
                </test-case>
                <test-case id="0-2446" name="string-concat.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1204887311" result="Passed" start-time="2023-09-17T20:30:35.6286670Z" end-time="2023-09-17T20:30:35.6287365Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz.fud &amp;foo.blah[1].baz.fud';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz.fud &foo.blah[1].baz.fud'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-2447" name="string-concat.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="61651046" result="Passed" start-time="2023-09-17T20:30:35.6287441Z" end-time="2023-09-17T20:30:35.6288017Z" duration="0.000058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah[0].baz.fud &amp; blah[1].baz.fud)';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah[0].baz.fud & blah[1].baz.fud)'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-2448" name="string-concat.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1707028219" result="Passed" start-time="2023-09-17T20:30:35.6290015Z" end-time="2023-09-17T20:30:35.6291155Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah[0].baz.fud &amp; none)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah[0].baz.fud & none)'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2449" name="string-concat.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="547834856" result="Passed" start-time="2023-09-17T20:30:35.6291990Z" end-time="2023-09-17T20:30:35.6293032Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(none.here &amp; blah[1].baz.fud)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(none.here & blah[1].baz.fud)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2450" name="string-concat.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1428459601" result="Passed" start-time="2023-09-17T20:30:35.6293145Z" end-time="2023-09-17T20:30:35.6293732Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2]&amp;[3,4]';&#xA; result: &quot;[1,2][3,4]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2]&[3,4]'
Result: '"[1,2][3,4]"'
Expected: '"[1,2][3,4]"'
]]></output>
                </test-case>
                <test-case id="0-2451" name="string-concat.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1103059640" result="Passed" start-time="2023-09-17T20:30:35.6293802Z" end-time="2023-09-17T20:30:35.6296540Z" duration="0.000274" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2]&amp;3';&#xA; result: &quot;[1,2]3&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2]&3'
Result: '"[1,2]3"'
Expected: '"[1,2]3"'
]]></output>
                </test-case>
                <test-case id="0-2452" name="string-concat.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2025837400" result="Passed" start-time="2023-09-17T20:30:35.6296621Z" end-time="2023-09-17T20:30:35.6297151Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1&amp;2';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '1&2'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-2453" name="string-concat.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1427186289" result="Passed" start-time="2023-09-17T20:30:35.6297216Z" end-time="2023-09-17T20:30:35.6297693Z" duration="0.000048" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1&amp;[2]';&#xA; result: &quot;1[2]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '1&[2]'
Result: '"1[2]"'
Expected: '"1[2]"'
]]></output>
                </test-case>
                <test-case id="0-2454" name="string-concat.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="299064830" result="Passed" start-time="2023-09-17T20:30:35.6297754Z" end-time="2023-09-17T20:30:35.6298244Z" duration="0.000049" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot;&amp;5';&#xA; result: &quot;hello5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello"&5'
Result: '"hello5"'
Expected: '"hello5"'
]]></output>
                </test-case>
                <test-case id="0-2455" name="string-concat.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1607494882" result="Passed" start-time="2023-09-17T20:30:35.6298306Z" end-time="2023-09-17T20:30:35.6298966Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Prices: &quot; &amp; Account.Order.Product.Price';&#xA; result: &quot;Prices: [34.45,21.67,34.45,107.99]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Prices: " & Account.Order.Product.Price'
Result: '"Prices: [34.45,21.67,34.45,107.99]"'
Expected: '"Prices: [34.45,21.67,34.45,107.99]"'
]]></output>
                </test-case>
                <test-case id="0-2456" name="tail-recursion.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="466500256" result="Passed" start-time="2023-09-17T20:30:35.6299035Z" end-time="2023-09-17T20:30:35.6299527Z" duration="0.000049" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $f := function($n){()};              $f(1)            ) ';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $f := function($n){()};              $f(1)            ) '
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2457" name="tail-recursion.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="451460214" result="Failed" start-time="2023-09-17T20:30:35.6299588Z" end-time="2023-09-17T20:30:35.6327204Z" duration="0.002762" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(99))             ';&#xA; result: 9.33262154439441E+155" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '9.33262154439441E+155', got '0'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(99))             '
Result: '0'
Expected: '9.33262154439441E+155'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '9.33262154439441E+155', got '0'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 49
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2458" name="tail-recursion.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="130940729" result="Failed" start-time="2023-09-17T20:30:35.6327405Z" end-time="2023-09-17T20:30:35.6376965Z" duration="0.004957" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(100))             ';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error U1001 (), got '0']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(100))             '
Result: '0'
Expected error U1001
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error U1001 (), got '0']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 49
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2459" name="tail-recursion.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="998750896" result="Passed" start-time="2023-09-17T20:30:35.6377192Z" end-time="2023-09-17T20:30:35.6379057Z" duration="0.000187" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(5)) ';&#xA; result: 120" />
                  </properties>
                  <output><![CDATA[Expr is '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(5)) '
Result: '120'
Expected: '120'
]]></output>
                </test-case>
                <test-case id="0-2460" name="tail-recursion.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="332897527" result="Failed" start-time="2023-09-17T20:30:35.6379740Z" end-time="2023-09-17T20:30:35.6394701Z" duration="0.001496" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(150)) ';&#xA; result: 5.7133839564458575E+262" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '5.7133839564458575E+262', got '0'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(150)) '
Result: '0'
Expected: '5.7133839564458575E+262'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '5.7133839564458575E+262', got '0'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 49
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2461" name="tail-recursion.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2130534978" result="Failed" start-time="2023-09-17T20:30:35.6395593Z" end-time="2023-09-17T20:30:35.6404078Z" duration="0.000849" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $inf := function($n){$n+$inf($n-1)};  $inf(5))';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2462" name="tail-recursion.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="522531359" result="Failed" start-time="2023-09-17T20:30:35.6404233Z" end-time="2023-09-17T20:30:35.6410609Z" duration="0.000638" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $inf := function(){$inf()};  $inf())';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2463" name="tail-recursion.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1704505276" result="Failed" start-time="2023-09-17T20:30:35.6410762Z" end-time="2023-09-17T20:30:35.6415501Z" duration="0.000474" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(6555)         )';&#xA; result: true" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 51
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2464" name="tail-recursion.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2089354401" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:35.6416402Z" end-time="2023-09-17T20:30:35.6424967Z" duration="0.000857" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($f := function($s, $x)&lt;an:s&gt; { $x &gt; 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )';&#xA; result: [&quot;a&quot;,&quot;a&quot;,&quot;a&quot;,&quot;a&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 42
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 183
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($f := function($s, $x)<an:s> { $x > 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )'
]]></output>
                </test-case>
                <test-case id="0-2465" name="tail-recursion.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="654614721" result="Skipped" label="Ignored" start-time="2023-09-17T20:30:35.6425112Z" end-time="2023-09-17T20:30:35.6439249Z" duration="0.001414" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($f := function($s, $x)&lt;sn:s&gt; { $x &gt; 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.ValidateSignature(List`1 args, JToken inputAsContext) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 75
   at Jsonata.Net.Native.Eval.FunctionTokenLambda.Invoke(List`1 args, JToken context, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/FunctionTokenLambda.cs:line 47
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, EvaluationEnvironment env, JToken evalutedFirstArgFromApplication) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 467
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 440
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 129
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, EvaluationEnvironment env) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 59
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, EvaluationEnvironment parentEnvironment) in /_/src/Jsonata.Net.Native/Eval/EvalProcessor.cs:line 42
   at Jsonata.Net.Native.JsonNet.JsonataExtensions.EvalNewtonsoft(JsonataQuery query, JToken data, EvaluationEnvironment environment) in /_/src/Jsonata.Net.Native.JsonNet/JsonataExtensions.cs:line 183
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet_External\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 180]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($f := function($s, $x)<sn:s> { $x > 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )'
]]></output>
                </test-case>
                <test-case id="0-2466" name="token-conversion.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1131365426" result="Passed" start-time="2023-09-17T20:30:35.6439428Z" end-time="2023-09-17T20:30:35.6440422Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.'7a'';&#xA; result: 33" />
                  </properties>
                  <output><![CDATA[Expr is '$.'7a''
Result: '33'
Expected: '33'
]]></output>
                </test-case>
                <test-case id="0-2467" name="token-conversion.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1830180385" result="Passed" start-time="2023-09-17T20:30:35.6440516Z" end-time="2023-09-17T20:30:35.6441194Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.'7'';&#xA; result: 88" />
                  </properties>
                  <output><![CDATA[Expr is '$.'7''
Result: '88'
Expected: '88'
]]></output>
                </test-case>
                <test-case id="0-2468" name="token-conversion.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2093239096" result="Passed" start-time="2023-09-17T20:30:35.6442066Z" end-time="2023-09-17T20:30:35.6449955Z" duration="0.000789" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.7a';&#xA; result: error S0201" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0201.
Actually thrown S0201.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.7a'
]]></output>
                </test-case>
                <test-case id="0-2469" name="token-conversion.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="354813391" result="Passed" start-time="2023-09-17T20:30:35.6450200Z" end-time="2023-09-17T20:30:35.6458235Z" duration="0.000803" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.7';&#xA; result: error S0213" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0213.
Actually thrown S0213.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.7'
]]></output>
                </test-case>
                <test-case id="0-2470" name="transform.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="12494879" result="Passed" start-time="2023-09-17T20:30:35.6459058Z" end-time="2023-09-17T20:30:35.6464307Z" duration="0.000525" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'Order': Account.Order.{  'ID': OrderID,  'Product': Product.{    'SKU': ProductID,    'Details': {      'Weight': Description.Weight,      'Dimensions': Description.(Width &amp; ' x ' &amp; Height &amp; ' x ' &amp; Depth)    }  },  'Total Price': $sum(Product.(Price * Quantity))}}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{'Order': Account.Order.{  'ID': OrderID,  'Product': Product.{    'SKU': ProductID,    'Details': {      'Weight': Description.Weight,      'Dimensions': Description.(Width & ' x ' & Height & ' x ' & Depth)    }  },  'Total Price': $sum(Product.(Price * Quantity))}}'
Result: '{"Order":[{"ID":"order103","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2471" name="transform.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1043795720" result="Passed" start-time="2023-09-17T20:30:35.6467196Z" end-time="2023-09-17T20:30:35.6473011Z" duration="0.000581" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&#xA;        (&#xA;          $tempReadings := $count(state.tempReadings) = 5 ?&#xA;              [state.tempReadings[[1..4]], event.t] :&#xA;              [state.tempReadings, event.t];&#xA;        &#xA;          {&#xA;            &quot;tempReadings&quot;: $tempReadings,&#xA;            &quot;sumTemperatures&quot;: $sum($tempReadings),&#xA;            &quot;avgTemperature&quot;: $average($tempReadings) ~&gt; $round(2),&#xA;            &quot;maxTemperature&quot;: $max($tempReadings),&#xA;            &quot;minTemperature&quot;: $min($tempReadings)&#xA;          }&#xA;        )';&#xA; result: {&quot;tempReadings&quot;:[28.9,28,28.2,28.4,28.4],&quot;sumTemperatures&quot;:141.9,&quot;avgTemperature&quot;:28.38,&quot;maxTemperature&quot;:28.9,&quot;minTemperature&quot;:28}" />
                  </properties>
                  <output><![CDATA[Expr is '
        (
          $tempReadings := $count(state.tempReadings) = 5 ?
              [state.tempReadings[[1..4]], event.t] :
              [state.tempReadings, event.t];
        
          {
            "tempReadings": $tempReadings,
            "sumTemperatures": $sum($tempReadings),
            "avgTemperature": $average($tempReadings) ~> $round(2),
            "maxTemperature": $max($tempReadings),
            "minTemperature": $min($tempReadings)
          }
        )'
Result: '{"tempReadings":[28.9,28,28.2,28.4,28.4],"sumTemperatures":141.9,"avgTemperature":28.38,"maxTemperature":28.9,"minTemperature":28}'
Expected: '{"tempReadings":[28.9,28,28.2,28.4,28.4],"sumTemperatures":141.9,"avgTemperature":28.38,"maxTemperature":28.9,"minTemperature":28}'
]]></output>
                </test-case>
                <test-case id="0-2472" name="transform.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1030987219" result="Passed" start-time="2023-09-17T20:30:35.6476764Z" end-time="2023-09-17T20:30:35.6478837Z" duration="0.000207" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: {&quot;output&quot;:{&quot;is&quot;:{&quot;same&quot;:{&quot;as&quot;:&quot;input&quot;}}}}" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '{"output":{"is":{"same":{"as":"input"}}}}'
Expected: '{"output":{"is":{"same":{"as":"input"}}}}'
]]></output>
                </test-case>
                <test-case id="0-2473" name="transform.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1339450843" result="Passed" start-time="2023-09-17T20:30:35.6479112Z" end-time="2023-09-17T20:30:35.6479812Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo';&#xA; result: {&quot;bar&quot;:42}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo'
Result: '{"bar":42}'
Expected: '{"bar":42}'
]]></output>
                </test-case>
                <test-case id="0-2474" name="transform.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1440871823" result="Passed" start-time="2023-09-17T20:30:35.6479890Z" end-time="2023-09-17T20:30:35.6484318Z" duration="0.000443" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'baz';&#xA; result: {&quot;gar&quot;:50}" />
                  </properties>
                  <output><![CDATA[Expr is 'baz'
Result: '{"gar":50}'
Expected: '{"gar":50}'
]]></output>
                </test-case>
                <test-case id="0-2475" name="transform.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1029060020" result="Passed" start-time="2023-09-17T20:30:35.6492065Z" end-time="2023-09-17T20:30:35.6492884Z" duration="0.000082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Foo';&#xA; result: {&quot;mama&quot;:45}" />
                  </properties>
                  <output><![CDATA[Expr is 'Foo'
Result: '{"mama":45}'
Expected: '{"mama":45}'
]]></output>
                </test-case>
                <test-case id="0-2476" name="transform.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1211908927" result="Passed" start-time="2023-09-17T20:30:35.6492990Z" end-time="2023-09-17T20:30:35.6493793Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'food';&#xA; result: {&quot;wa&quot;:&quot;hume&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'food'
Result: '{"wa":"hume"}'
Expected: '{"wa":"hume"}'
]]></output>
                </test-case>
                <test-case id="0-2477" name="transform.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="900480307" result="Passed" start-time="2023-09-17T20:30:35.6493900Z" end-time="2023-09-17T20:30:35.6494410Z" duration="0.000051" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'maz.rar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'maz.rar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2478" name="transform.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="999464835" result="Passed" start-time="2023-09-17T20:30:35.6494483Z" end-time="2023-09-17T20:30:35.6507705Z" duration="0.001322" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'jee.par.waa';&#xA; result: {&quot;bar&quot;:87}" />
                  </properties>
                  <output><![CDATA[Expr is 'jee.par.waa'
Result: '{"bar":87}'
Expected: '{"bar":87}'
]]></output>
                </test-case>
                <test-case id="0-2479" name="transform.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1626601512" result="Passed" start-time="2023-09-17T20:30:35.6507815Z" end-time="2023-09-17T20:30:35.6512457Z" duration="0.000464" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2480" name="transform.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1925190866" result="Passed" start-time="2023-09-17T20:30:35.6513711Z" end-time="2023-09-17T20:30:35.6514375Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2481" name="transform.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1565581658" result="Passed" start-time="2023-09-17T20:30:35.6514450Z" end-time="2023-09-17T20:30:35.6514946Z" duration="0.000050" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2482" name="transform.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1295896475" result="Passed" start-time="2023-09-17T20:30:35.6515010Z" end-time="2023-09-17T20:30:35.6515467Z" duration="0.000046" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2483" name="transform.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="466402343" result="Passed" start-time="2023-09-17T20:30:35.6515529Z" end-time="2023-09-17T20:30:35.6515969Z" duration="0.000044" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: 6754322" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '6754322'
Expected: '6754322'
]]></output>
                </test-case>
                <test-case id="0-2484" name="transform.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2059572858" result="Passed" start-time="2023-09-17T20:30:35.6516028Z" end-time="2023-09-17T20:30:35.6516429Z" duration="0.000040" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-2485" name="transform.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1320480869" result="Passed" start-time="2023-09-17T20:30:35.6516486Z" end-time="2023-09-17T20:30:35.6516889Z" duration="0.000040" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: -24" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '-24'
Expected: '-24'
]]></output>
                </test-case>
                <test-case id="0-2486" name="transform.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="199392827" result="Passed" start-time="2023-09-17T20:30:35.6516945Z" end-time="2023-09-17T20:30:35.6517400Z" duration="0.000046" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: 6.54" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '6.54'
Expected: '6.54'
]]></output>
                </test-case>
                <test-case id="0-2487" name="transform.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="693105323" result="Passed" start-time="2023-09-17T20:30:35.6517462Z" end-time="2023-09-17T20:30:35.6517868Z" duration="0.000041" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2488" name="transform.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="394293568" result="Passed" start-time="2023-09-17T20:30:35.6517925Z" end-time="2023-09-17T20:30:35.6518357Z" duration="0.000043" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2489" name="transform.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1248984654" result="Passed" start-time="2023-09-17T20:30:35.6518415Z" end-time="2023-09-17T20:30:35.6518801Z" duration="0.000039" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2490" name="transform.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1977122639" result="Passed" start-time="2023-09-17T20:30:35.6518858Z" end-time="2023-09-17T20:30:35.6519258Z" duration="0.000040" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2491" name="transform.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="494055367" result="Passed" start-time="2023-09-17T20:30:35.6519313Z" end-time="2023-09-17T20:30:35.6519697Z" duration="0.000038" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2492" name="transform.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2027533881" result="Passed" start-time="2023-09-17T20:30:35.6519762Z" end-time="2023-09-17T20:30:35.6520128Z" duration="0.000037" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2493" name="transform.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1937115701" result="Passed" start-time="2023-09-17T20:30:35.6520186Z" end-time="2023-09-17T20:30:35.6520595Z" duration="0.000041" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;\&quot;Hello\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"\"Hello\""'
Expected: '"\"Hello\""'
]]></output>
                </test-case>
                <test-case id="0-2494" name="transform.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1187913260" result="Passed" start-time="2023-09-17T20:30:35.6520653Z" end-time="2023-09-17T20:30:35.6521043Z" duration="0.000039" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;\&quot;Hello\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"\"Hello\""'
Expected: '"\"Hello\""'
]]></output>
                </test-case>
                <test-case id="0-2495" name="transform.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1947548437" result="Passed" start-time="2023-09-17T20:30:35.6521101Z" end-time="2023-09-17T20:30:35.6521501Z" duration="0.000040" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;'Hello'&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"'Hello'"'
Expected: '"'Hello'"'
]]></output>
                </test-case>
                <test-case id="0-2496" name="transform.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="591320773" result="Passed" start-time="2023-09-17T20:30:35.6521558Z" end-time="2023-09-17T20:30:35.6522054Z" duration="0.000050" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;'Hello'&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"'Hello'"'
Expected: '"'Hello'"'
]]></output>
                </test-case>
                <test-case id="0-2497" name="transform.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2051247576" result="Passed" start-time="2023-09-17T20:30:35.6522116Z" end-time="2023-09-17T20:30:35.6522675Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Salutation)';&#xA; result: &quot;mr&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Salutation)'
Result: '"mr"'
Expected: '"mr"'
]]></output>
                </test-case>
                <test-case id="0-2498" name="transform.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2105554326" result="Passed" start-time="2023-09-17T20:30:35.6522735Z" end-time="2023-09-17T20:30:35.6523233Z" duration="0.000050" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(敷)';&#xA; result: &quot;steve&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(敷)'
Result: '"steve"'
Expected: '"steve"'
]]></output>
                </test-case>
                <test-case id="0-2499" name="transform.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="917970488" result="Passed" start-time="2023-09-17T20:30:35.6523295Z" end-time="2023-09-17T20:30:35.6524038Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Español)';&#xA; result: &quot;/ˈspænɪʃ/&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Español)'
Result: '"/ˈspænɪʃ/"'
Expected: '"/ˈspænɪʃ/"'
]]></output>
                </test-case>
                <test-case id="0-2500" name="transform.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="725020240" result="Passed" start-time="2023-09-17T20:30:35.6524106Z" end-time="2023-09-17T20:30:35.6524741Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase($.&quot;NI.Number&quot;)';&#xA; result: &quot;no10furbzness&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase($."NI.Number")'
Result: '"no10furbzness"'
Expected: '"no10furbzness"'
]]></output>
                </test-case>
                <test-case id="0-2501" name="transform.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1522190573" result="Passed" start-time="2023-09-17T20:30:35.6524809Z" end-time="2023-09-17T20:30:35.6525356Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;COMPENSATION IS : &quot; &amp; Employment.&quot;Executive.Compensation&quot;)';&#xA; result: &quot;compensation is : 1400000&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase("COMPENSATION IS : " & Employment."Executive.Compensation")'
Result: '"compensation is : 1400000"'
Expected: '"compensation is : 1400000"'
]]></output>
                </test-case>
                <test-case id="0-2502" name="transform.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="115895597" result="Passed" start-time="2023-09-17T20:30:35.6525424Z" end-time="2023-09-17T20:30:35.6525856Z" duration="0.000043" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Hello&quot;';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Hello"'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-2503" name="transform.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1352214828" result="Passed" start-time="2023-09-17T20:30:35.6525922Z" end-time="2023-09-17T20:30:35.6526415Z" duration="0.000049" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation)';&#xA; result: &quot;MR&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation)'
Result: '"MR"'
Expected: '"MR"'
]]></output>
                </test-case>
                <test-case id="0-2504" name="transform.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="535339977" result="Passed" start-time="2023-09-17T20:30:35.6526476Z" end-time="2023-09-17T20:30:35.6526936Z" duration="0.000046" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello World&quot;)';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello World")'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-2505" name="transform.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="384663881" result="Passed" start-time="2023-09-17T20:30:35.6526995Z" end-time="2023-09-17T20:30:35.6527465Z" duration="0.000047" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;鯵噂ソ竹&quot;)';&#xA; result: &quot;鯵噂ソ竹&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("鯵噂ソ竹")'
Result: '"鯵噂ソ竹"'
Expected: '"鯵噂ソ竹"'
]]></output>
                </test-case>
                <test-case id="0-2506" name="transform.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="72072421" result="Passed" start-time="2023-09-17T20:30:35.6527527Z" end-time="2023-09-17T20:30:35.6528008Z" duration="0.000048" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Name &amp; &quot; is happy&quot;';&#xA; result: &quot;IBM UK is happy&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Name & " is happy"'
Result: '"IBM UK is happy"'
Expected: '"IBM UK is happy"'
]]></output>
                </test-case>
                <test-case id="0-2507" name="transform.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="686386557" result="Passed" start-time="2023-09-17T20:30:35.6528085Z" end-time="2023-09-17T20:30:35.6529641Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Name &amp; &quot; is pleased to employ &quot; &amp; Salutation &amp; &quot; &quot; &amp; Surname';&#xA; result: &quot;IBM UK is pleased to employ Mr Smith&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Name & " is pleased to employ " & Salutation & " " & Surname'
Result: '"IBM UK is pleased to employ Mr Smith"'
Expected: '"IBM UK is pleased to employ Mr Smith"'
]]></output>
                </test-case>
                <test-case id="0-2508" name="transform.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2133798113" result="Passed" start-time="2023-09-17T20:30:35.6539711Z" end-time="2023-09-17T20:30:35.6540906Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello &quot; &amp; Salutation &amp; &quot; &quot; &amp; Surname)';&#xA; result: &quot;HELLO MR SMITH&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello " & Salutation & " " & Surname)'
Result: '"HELLO MR SMITH"'
Expected: '"HELLO MR SMITH"'
]]></output>
                </test-case>
                <test-case id="0-2509" name="transform.case039" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case039" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1417488457" result="Passed" start-time="2023-09-17T20:30:35.6583664Z" end-time="2023-09-17T20:30:35.6585395Z" duration="0.000172" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation &amp; &quot; &quot; &amp; Surname &amp; &quot; - has &quot; &amp; Cars &amp; &quot; registered cars&quot;)';&#xA; result: &quot;MR SMITH - HAS 3 REGISTERED CARS&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation & " " & Surname & " - has " & Cars & " registered cars")'
Result: '"MR SMITH - HAS 3 REGISTERED CARS"'
Expected: '"MR SMITH - HAS 3 REGISTERED CARS"'
]]></output>
                </test-case>
                <test-case id="0-2510" name="transform.case040" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case040" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="395585955" result="Passed" start-time="2023-09-17T20:30:35.6586683Z" end-time="2023-09-17T20:30:35.6589055Z" duration="0.000237" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment.ContractType)';&#xA; result: &quot;PERMANENT&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Employment.ContractType)'
Result: '"PERMANENT"'
Expected: '"PERMANENT"'
]]></output>
                </test-case>
                <test-case id="0-2511" name="transform.case041" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case041" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1713503596" result="Passed" start-time="2023-09-17T20:30:35.6591445Z" end-time="2023-09-17T20:30:35.6592409Z" duration="0.000096" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;l&quot;)';&#xA; result: &quot;Ho&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "l")'
Result: '"Ho"'
Expected: '"Ho"'
]]></output>
                </test-case>
                <test-case id="0-2512" name="transform.case042" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case042" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1599479026" result="Passed" start-time="2023-09-17T20:30:35.6592573Z" end-time="2023-09-17T20:30:35.6594425Z" duration="0.000185" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, 'l')';&#xA; result: &quot;Ho&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", 'l')'
Result: '"Ho"'
Expected: '"Ho"'
]]></output>
                </test-case>
                <test-case id="0-2513" name="transform.case043" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case043" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="651822864" result="Passed" start-time="2023-09-17T20:30:35.6594841Z" end-time="2023-09-17T20:30:35.6595847Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;Q&quot;)';&#xA; result: &quot;Hola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "Q")'
Result: '"Hola"'
Expected: '"Hola"'
]]></output>
                </test-case>
                <test-case id="0-2514" name="transform.case044" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case044" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1221043677" result="Passed" start-time="2023-09-17T20:30:35.6598078Z" end-time="2023-09-17T20:30:35.6599018Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-2515" name="transform.case045" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case045" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="914799516" result="Passed" start-time="2023-09-17T20:30:35.6599173Z" end-time="2023-09-17T20:30:35.6599969Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;鯵噂ソ竹&quot;, &quot;ソ&quot;)';&#xA; result: &quot;鯵噂&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("鯵噂ソ竹", "ソ")'
Result: '"鯵噂"'
Expected: '"鯵噂"'
]]></output>
                </test-case>
                <test-case id="0-2516" name="transform.case046" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case046" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="834638503" result="Passed" start-time="2023-09-17T20:30:35.6600418Z" end-time="2023-09-17T20:30:35.6602001Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Coca&quot; &amp; &quot;Cola&quot;, &quot;ca&quot;)';&#xA; result: &quot;Cola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Coca" & "Cola", "ca")'
Result: '"Cola"'
Expected: '"Cola"'
]]></output>
                </test-case>
                <test-case id="0-2517" name="transform.case047" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case047" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="56129016" result="Passed" start-time="2023-09-17T20:30:35.6602093Z" end-time="2023-09-17T20:30:35.6603286Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salutation &amp; &quot; &quot; &amp; MiddleName &amp;&quot; &quot; &amp; Surname, MiddleName)';&#xA; result: &quot; Smith&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(Salutation & " " & MiddleName &" " & Surname, MiddleName)'
Result: '" Smith"'
Expected: '" Smith"'
]]></output>
                </test-case>
                <test-case id="0-2518" name="transform.case048" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case048" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1792416065" result="Passed" start-time="2023-09-17T20:30:35.6610760Z" end-time="2023-09-17T20:30:35.6611746Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salutation &amp; &quot; &quot; &amp; Employment.Role, Salutation)';&#xA; result: &quot; Senior Physician&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(Salutation & " " & Employment.Role, Salutation)'
Result: '" Senior Physician"'
Expected: '" Senior Physician"'
]]></output>
                </test-case>
                <test-case id="0-2519" name="transform.case049" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case049" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="768873532" result="Passed" start-time="2023-09-17T20:30:35.6611953Z" end-time="2023-09-17T20:30:35.6612748Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hola&quot;, 'l')';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hola", 'l')'
Result: '"a"'
Expected: '"a"'
]]></output>
                </test-case>
                <test-case id="0-2520" name="transform.case050" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case050" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="455221894" result="Passed" start-time="2023-09-17T20:30:35.6612827Z" end-time="2023-09-17T20:30:35.6614141Z" duration="0.000131" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hola&quot;, &quot;Q&quot;)';&#xA; result: &quot;Hola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hola", "Q")'
Result: '"Hola"'
Expected: '"Hola"'
]]></output>
                </test-case>
                <test-case id="0-2521" name="transform.case051" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case051" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="438260103" result="Passed" start-time="2023-09-17T20:30:35.6614225Z" end-time="2023-09-17T20:30:35.6619010Z" duration="0.000479" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Employment.Role) &amp; &quot; (&quot; &amp; Employment.Role &amp; &quot;)&quot;';&#xA; result: &quot;senior physician (Senior Physician)&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Employment.Role) & " (" & Employment.Role & ")"'
Result: '"senior physician (Senior Physician)"'
Expected: '"senior physician (Senior Physician)"'
]]></output>
                </test-case>
                <test-case id="0-2522" name="transform.case052" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case052" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1435886817" result="Passed" start-time="2023-09-17T20:30:35.6619632Z" end-time="2023-09-17T20:30:35.6620711Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Years &amp; &quot; years of employment&quot;';&#xA; result: &quot;12 years of employment&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Years & " years of employment"'
Result: '"12 years of employment"'
Expected: '"12 years of employment"'
]]></output>
                </test-case>
                <test-case id="0-2523" name="transform.case053" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case053" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="844254442" result="Passed" start-time="2023-09-17T20:30:35.6621171Z" end-time="2023-09-17T20:30:35.6622583Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation &amp; &quot; &quot; &amp; Surname &amp; &quot; - has &quot; &amp; Employment.Years &amp; &quot; years of employment&quot;)';&#xA; result: &quot;MR SMITH - HAS 12 YEARS OF EMPLOYMENT&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation & " " & Surname & " - has " & Employment.Years & " years of employment")'
Result: '"MR SMITH - HAS 12 YEARS OF EMPLOYMENT"'
Expected: '"MR SMITH - HAS 12 YEARS OF EMPLOYMENT"'
]]></output>
                </test-case>
                <test-case id="0-2524" name="transform.case054" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case054" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="525174399" result="Passed" start-time="2023-09-17T20:30:35.6622664Z" end-time="2023-09-17T20:30:35.6623297Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment.Role, 7,4)';&#xA; result: &quot;Phys&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(Employment.Role, 7,4)'
Result: '"Phys"'
Expected: '"Phys"'
]]></output>
                </test-case>
                <test-case id="0-2525" name="transform.case055" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case055" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1665923159" result="Passed" start-time="2023-09-17T20:30:35.6623365Z" end-time="2023-09-17T20:30:35.6623913Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment.Role, -4,4)';&#xA; result: &quot;cian&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(Employment.Role, -4,4)'
Result: '"cian"'
Expected: '"cian"'
]]></output>
                </test-case>
                <test-case id="0-2526" name="transform.case056" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case056" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1163745486" result="Passed" start-time="2023-09-17T20:30:35.6623984Z" end-time="2023-09-17T20:30:35.6625993Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello World&quot;,Cars,5)';&#xA; result: &quot;lo Wo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("Hello World",Cars,5)'
Result: '"lo Wo"'
Expected: '"lo Wo"'
]]></output>
                </test-case>
                <test-case id="0-2527" name="transform.case057" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case057" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1241355165" result="Passed" start-time="2023-09-17T20:30:35.6633142Z" end-time="2023-09-17T20:30:35.6641086Z" duration="0.000794" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Missing close brackets&quot;';&#xA; result: error S0203" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0203.
Actually thrown S0203.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase("Missing close brackets"'
]]></output>
                </test-case>
                <test-case id="0-2528" name="transform.case058" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case058" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="151537583" result="Passed" start-time="2023-09-17T20:30:35.6641245Z" end-time="2023-09-17T20:30:35.6649410Z" duration="0.000817" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$unknown(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$unknown(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2529" name="transform.case059" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case059" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1640807033" result="Passed" start-time="2023-09-17T20:30:35.6649558Z" end-time="2023-09-17T20:30:35.6665175Z" duration="0.001562" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decrypt(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decrypt(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2530" name="transform.case060" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case060" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="437739247" result="Passed" start-time="2023-09-17T20:30:35.6665548Z" end-time="2023-09-17T20:30:35.6684141Z" duration="0.001860" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employment.authentication(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006.
Actually thrown T1006.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employment.authentication(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2531" name="transform.case061" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case061" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1308144998" result="Passed" start-time="2023-09-17T20:30:35.6692621Z" end-time="2023-09-17T20:30:35.6694917Z" duration="0.000229" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Invalid)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Invalid)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2532" name="transform.case062" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case062" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="942409628" result="Passed" start-time="2023-09-17T20:30:35.6695129Z" end-time="2023-09-17T20:30:35.6696154Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment.Invalid)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Employment.Invalid)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2533" name="transform.case063" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case063" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="81494347" result="Passed" start-time="2023-09-17T20:30:35.6697950Z" end-time="2023-09-17T20:30:35.6709134Z" duration="0.001118" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Coca&quot;, &quot;Cola&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase("Coca", "Cola")'
]]></output>
                </test-case>
                <test-case id="0-2534" name="transform.case064" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case064" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="901581272" result="Passed" start-time="2023-09-17T20:30:35.6712244Z" end-time="2023-09-17T20:30:35.6721823Z" duration="0.000958" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Salary)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Salary)'
]]></output>
                </test-case>
                <test-case id="0-2535" name="transform.case065" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case065" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="403000293" result="Passed" start-time="2023-09-17T20:30:35.6730877Z" end-time="2023-09-17T20:30:35.6737279Z" duration="0.000640" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(20)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(20)'
]]></output>
                </test-case>
                <test-case id="0-2536" name="transform.case066" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case066" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1449686061" result="Passed" start-time="2023-09-17T20:30:35.6740998Z" end-time="2023-09-17T20:30:35.6747438Z" duration="0.000644" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(20.55)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(20.55)'
]]></output>
                </test-case>
                <test-case id="0-2537" name="transform.case067" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case067" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2091165294" result="Passed" start-time="2023-09-17T20:30:35.6755446Z" end-time="2023-09-17T20:30:35.6769305Z" duration="0.001386" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Employment)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Employment)'
]]></output>
                </test-case>
                <test-case id="0-2538" name="transform.case068" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case068" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2078546013" result="Passed" start-time="2023-09-17T20:30:35.6770007Z" end-time="2023-09-17T20:30:35.6774389Z" duration="0.000438" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Qualifications)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Qualifications)'
]]></output>
                </test-case>
                <test-case id="0-2539" name="transform.case069" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case069" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674908977" result="Passed" start-time="2023-09-17T20:30:35.6774547Z" end-time="2023-09-17T20:30:35.6778293Z" duration="0.000375" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Coca&quot;, &quot;Cola&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase("Coca", "Cola")'
]]></output>
                </test-case>
                <test-case id="0-2540" name="transform.case070" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case070" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1248408448" result="Passed" start-time="2023-09-17T20:30:35.6778425Z" end-time="2023-09-17T20:30:35.6781812Z" duration="0.000339" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salary)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Salary)'
]]></output>
                </test-case>
                <test-case id="0-2541" name="transform.case071" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case071" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1660489917" result="Passed" start-time="2023-09-17T20:30:35.6781941Z" end-time="2023-09-17T20:30:35.6786566Z" duration="0.000463" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(28)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(28)'
]]></output>
                </test-case>
                <test-case id="0-2542" name="transform.case072" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case072" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="706790857" result="Passed" start-time="2023-09-17T20:30:35.6786688Z" end-time="2023-09-17T20:30:35.6793302Z" duration="0.000662" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(20.55)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(20.55)'
]]></output>
                </test-case>
                <test-case id="0-2543" name="transform.case073" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case073" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1124288758" result="Passed" start-time="2023-09-17T20:30:35.6797937Z" end-time="2023-09-17T20:30:35.6802828Z" duration="0.000489" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Cars)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Cars)'
]]></output>
                </test-case>
                <test-case id="0-2544" name="transform.case074" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case074" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="853398699" result="Passed" start-time="2023-09-17T20:30:35.6802968Z" end-time="2023-09-17T20:30:35.6811521Z" duration="0.000856" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Employment)'
]]></output>
                </test-case>
                <test-case id="0-2545" name="transform.case075" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case075" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="263619043" result="Passed" start-time="2023-09-17T20:30:35.6811881Z" end-time="2023-09-17T20:30:35.6822325Z" duration="0.001045" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Qualifications)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Qualifications)'
]]></output>
                </test-case>
                <test-case id="0-2546" name="transform.case076" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case076" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1042059988" result="Passed" start-time="2023-09-17T20:30:35.6823259Z" end-time="2023-09-17T20:30:35.6837564Z" duration="0.001431" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Coca&quot; &amp; &quot;ca&quot;)';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("Coca" & "ca")'
]]></output>
                </test-case>
                <test-case id="0-2547" name="transform.case077" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case077" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1375711017" result="Passed" start-time="2023-09-17T20:30:35.6842428Z" end-time="2023-09-17T20:30:35.6850643Z" duration="0.000822" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Salary,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Salary,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2548" name="transform.case078" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case078" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="716072024" result="Passed" start-time="2023-09-17T20:30:35.6856168Z" end-time="2023-09-17T20:30:35.6869329Z" duration="0.001316" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(22,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(22,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2549" name="transform.case079" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case079" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="273113744" result="Passed" start-time="2023-09-17T20:30:35.6884940Z" end-time="2023-09-17T20:30:35.6907878Z" duration="0.002224" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(22.55,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(22.55,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2550" name="transform.case080" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case080" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1112909934" result="Passed" start-time="2023-09-17T20:30:35.6934951Z" end-time="2023-09-17T20:30:35.6943491Z" duration="0.000854" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;22&quot;,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("22",2)'
]]></output>
                </test-case>
                <test-case id="0-2551" name="transform.case081" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case081" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="535191757" result="Passed" start-time="2023-09-17T20:30:35.6959274Z" end-time="2023-09-17T20:30:35.6965486Z" duration="0.000621" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;22.55&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("22.55",5)'
]]></output>
                </test-case>
                <test-case id="0-2552" name="transform.case082" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case082" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="258831511" result="Passed" start-time="2023-09-17T20:30:35.7022392Z" end-time="2023-09-17T20:30:35.7030674Z" duration="0.000828" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2553" name="transform.case083" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case083" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1336680794" result="Passed" start-time="2023-09-17T20:30:35.7110180Z" end-time="2023-09-17T20:30:35.7119288Z" duration="0.000910" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Qualifications,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Qualifications,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2554" name="transform.case084" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case084" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="462748594" result="Passed" start-time="2023-09-17T20:30:35.7197575Z" end-time="2023-09-17T20:30:35.7207946Z" duration="0.001036" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Coca&quot; &amp; &quot;ca&quot;)';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("Coca" & "ca")'
]]></output>
                </test-case>
                <test-case id="0-2555" name="transform.case085" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case085" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="286760137" result="Passed" start-time="2023-09-17T20:30:35.7236872Z" end-time="2023-09-17T20:30:35.7242659Z" duration="0.000578" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salary,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Salary,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2556" name="transform.case086" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case086" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="86303756" result="Passed" start-time="2023-09-17T20:30:35.7272539Z" end-time="2023-09-17T20:30:35.7284262Z" duration="0.001172" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(22,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(22,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2557" name="transform.case087" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case087" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1419124802" result="Passed" start-time="2023-09-17T20:30:35.7297969Z" end-time="2023-09-17T20:30:35.7313605Z" duration="0.001563" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(22.55,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(22.55,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2558" name="transform.case088" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case088" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="827040429" result="Passed" start-time="2023-09-17T20:30:35.7328915Z" end-time="2023-09-17T20:30:35.7337077Z" duration="0.000816" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;22&quot;,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("22",2)'
]]></output>
                </test-case>
                <test-case id="0-2559" name="transform.case089" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case089" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1016900465" result="Passed" start-time="2023-09-17T20:30:35.7362958Z" end-time="2023-09-17T20:30:35.7389406Z" duration="0.002644" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;22.55&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("22.55",5)'
]]></output>
                </test-case>
                <test-case id="0-2560" name="transform.case090" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case090" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1368402042" result="Passed" start-time="2023-09-17T20:30:35.7398093Z" end-time="2023-09-17T20:30:35.7406545Z" duration="0.000845" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2561" name="transform.case091" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case091" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="978200903" result="Passed" start-time="2023-09-17T20:30:35.7418860Z" end-time="2023-09-17T20:30:35.7426218Z" duration="0.000736" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Qualifications,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Qualifications,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2562" name="transform.case092" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case092" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="534848974" result="Passed" start-time="2023-09-17T20:30:35.7492496Z" end-time="2023-09-17T20:30:35.7502434Z" duration="0.000993" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot; &amp; &quot;ca&quot;, 2, 4, 5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca" & "ca", 2, 4, 5)'
]]></output>
                </test-case>
                <test-case id="0-2563" name="transform.case093" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case093" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="492991080" result="Passed" start-time="2023-09-17T20:30:35.7512689Z" end-time="2023-09-17T20:30:35.7519927Z" duration="0.000724" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot;, &quot;Mr&quot;, 4)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca", "Mr", 4)'
]]></output>
                </test-case>
                <test-case id="0-2564" name="transform.case094" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case094" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="979749210" result="Passed" start-time="2023-09-17T20:30:35.7521258Z" end-time="2023-09-17T20:30:35.7530891Z" duration="0.000963" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot;, 3, &quot;Whoops&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca", 3, "Whoops")'
]]></output>
                </test-case>
                <test-case id="0-2565" name="transform.case095" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case095" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1234924604" result="Passed" start-time="2023-09-17T20:30:35.7554241Z" end-time="2023-09-17T20:30:35.7566674Z" duration="0.001243" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Salary,2,4)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Salary,2,4)'
]]></output>
                </test-case>
                <test-case id="0-2566" name="transform.case096" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case096" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="771093968" result="Passed" start-time="2023-09-17T20:30:35.7575599Z" end-time="2023-09-17T20:30:35.7584566Z" duration="0.000897" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello&quot;,&quot;World&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Hello","World",5)'
]]></output>
                </test-case>
                <test-case id="0-2567" name="transform.case097" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case097" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1517984679" result="Passed" start-time="2023-09-17T20:30:35.7585184Z" end-time="2023-09-17T20:30:35.7594981Z" duration="0.000980" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello&quot;,5,&quot;World&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Hello",5,"World")'
]]></output>
                </test-case>
                <test-case id="0-2568" name="transform.case098" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case098" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1897725239" result="Passed" start-time="2023-09-17T20:30:35.7596117Z" end-time="2023-09-17T20:30:35.7600979Z" duration="0.000486" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello World&quot;,5.5,5)';&#xA; result: &quot; Worl&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("Hello World",5.5,5)'
Result: '" Worl"'
Expected: '" Worl"'
]]></output>
                </test-case>
                <test-case id="0-2569" name="transform.case099" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case099" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="818043384" result="Passed" start-time="2023-09-17T20:30:35.7610801Z" end-time="2023-09-17T20:30:35.7628866Z" duration="0.001807" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2570" name="transform.case100" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case100" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1612597102" result="Passed" start-time="2023-09-17T20:30:35.7635142Z" end-time="2023-09-17T20:30:35.7654127Z" duration="0.001898" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Qualifications,6,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410.
Actually thrown T0410.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Qualifications,6,5)'
]]></output>
                </test-case>
                <test-case id="0-2571" name="transform.case101" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case101" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="890956856" result="Passed" start-time="2023-09-17T20:30:35.7654397Z" end-time="2023-09-17T20:30:35.7655553Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.contents';&#xA; result: &quot;stuff&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.contents'
Result: '"stuff"'
Expected: '"stuff"'
]]></output>
                </test-case>
                <test-case id="0-2572" name="transform.case102" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case102" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="125066650" result="Passed" start-time="2023-09-17T20:30:35.7655711Z" end-time="2023-09-17T20:30:35.7657075Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.meta';&#xA; result: &quot;boo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.meta'
Result: '"boo"'
Expected: '"boo"'
]]></output>
                </test-case>
                <test-case id="0-2573" name="transform.case103" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case103" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117507088" result="Passed" start-time="2023-09-17T20:30:35.7657244Z" end-time="2023-09-17T20:30:35.7661052Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.meta';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.meta'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2574" name="transforms.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1667948731" result="Passed" start-time="2023-09-17T20:30:35.7661452Z" end-time="2023-09-17T20:30:35.7717411Z" duration="0.005596" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{&quot;Total&quot;:Price*Quantity},[&quot;Description&quot;, &quot;SKU&quot;]|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{"Total":Price*Quantity},["Description", "SKU"]|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2575" name="transforms.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="942215624" result="Passed" start-time="2023-09-17T20:30:35.7719693Z" end-time="2023-09-17T20:30:35.7722596Z" duration="0.000290" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order ~&gt; |Product|{&quot;Total&quot;:Price*Quantity},[&quot;Description&quot;, &quot;SKU&quot;]|';&#xA; result: [{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order ~> |Product|{"Total":Price*Quantity},["Description", "SKU"]|'
Result: '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]'
Expected: '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]'
]]></output>
                </test-case>
                <test-case id="0-2576" name="transforms.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1878952893" result="Passed" start-time="2023-09-17T20:30:35.7723466Z" end-time="2023-09-17T20:30:35.7727474Z" duration="0.000401" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{&quot;Total&quot;:Price*Quantity, &quot;Price&quot;: Price * 1.2}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:41.34,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:26.004,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:41.34,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:129.588,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{"Total":Price*Quantity, "Price": Price * 1.2}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":26.004,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":4,"Total":137.8},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":129.588,"Quantity":1,"Total":107.99}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":26.004,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":4,"Total":137.8},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":129.588,"Quantity":1,"Total":107.99}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2577" name="transforms.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="311598059" result="Passed" start-time="2023-09-17T20:30:35.7730241Z" end-time="2023-09-17T20:30:35.7733734Z" duration="0.000349" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{},&quot;Description&quot;|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{},"Description"|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2578" name="transforms.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2138339390" result="Passed" start-time="2023-09-17T20:30:35.7734189Z" end-time="2023-09-17T20:30:35.7735853Z" duration="0.000166" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|nomatch,&quot;Description&quot;|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|nomatch,"Description"|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2579" name="transforms.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="261555356" result="Passed" start-time="2023-09-17T20:30:35.7749358Z" end-time="2023-09-17T20:30:35.7751455Z" duration="0.000209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |(Account.Order.Product)[0]|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:&quot;blah&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |(Account.Order.Product)[0]|{"Description":"blah"}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":"blah","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":"blah","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2580" name="transforms.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="623863171" result="Passed" start-time="2023-09-17T20:30:35.7753830Z" end-time="2023-09-17T20:30:35.7756124Z" duration="0.000229" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |foo.bar|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |foo.bar|{"Description":"blah"}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2581" name="transforms.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1935518116" result="Passed" start-time="2023-09-17T20:30:35.7756782Z" end-time="2023-09-17T20:30:35.7763440Z" duration="0.000666" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{&quot;Product&quot;:&quot;blah&quot;},nomatch|';&#xA; result: {&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;blah&quot;},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;blah&quot;}]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account ~> |Order|{"Product":"blah"},nomatch|'
Result: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
Expected: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
]]></output>
                </test-case>
                <test-case id="0-2582" name="transforms.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="525283141" result="Passed" start-time="2023-09-17T20:30:35.7767689Z" end-time="2023-09-17T20:30:35.7768998Z" duration="0.000131" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo ~&gt; |foo.bar|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo ~> |foo.bar|{"Description":"blah"}|'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2583" name="transforms.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2025907486" result="Passed" start-time="2023-09-17T20:30:35.7771495Z" end-time="2023-09-17T20:30:35.7778975Z" duration="0.000748" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|5|';&#xA; result: error T2011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2011.
Actually thrown T2011.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account ~> |Order|5|'
]]></output>
                </test-case>
                <test-case id="0-2584" name="transforms.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="527897099" result="Passed" start-time="2023-09-17T20:30:35.7784496Z" end-time="2023-09-17T20:30:35.7794112Z" duration="0.000961" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{},5|';&#xA; result: error T2012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2012.
Actually thrown T2012.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account ~> |Order|{},5|'
]]></output>
                </test-case>
                <test-case id="0-2585" name="transforms.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2050031137" result="Passed" start-time="2023-09-17T20:30:35.7795092Z" end-time="2023-09-17T20:30:35.7798108Z" duration="0.000302" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{&quot;Product&quot;:&quot;blah&quot;},nomatch|';&#xA; result: {&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;blah&quot;},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;blah&quot;}]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account ~> |Order|{"Product":"blah"},nomatch|'
Result: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
Expected: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
]]></output>
                </test-case>
                <test-case id="0-2586" name="transforms.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1049313487" result="Passed" start-time="2023-09-17T20:30:35.7798545Z" end-time="2023-09-17T20:30:35.7805330Z" duration="0.000678" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{} ~&gt; |$|['one', 'two', 'three']|';&#xA; result: error T2011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2011.
Actually thrown T2011.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{} ~> |$|['one', 'two', 'three']|'
]]></output>
                </test-case>
                <test-case id="0-2587" name="transforms.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1753212481" result="Passed" start-time="2023-09-17T20:30:35.7806322Z" end-time="2023-09-17T20:30:35.7808281Z" duration="0.000196" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; | ** ['hi'] | {'hello': hi}, ['hi'] |';&#xA; result: {&quot;hello&quot;:&quot;world&quot;,&quot;bye&quot;:null}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> | ** ['hi'] | {'hello': hi}, ['hi'] |'
Result: '{"bye":null,"hello":"world"}'
Expected: '{"hello":"world","bye":null}'
]]></output>
                </test-case>
                <test-case id="0-2588" name="transforms.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1766229400" result="Passed" start-time="2023-09-17T20:30:35.7811435Z" end-time="2023-09-17T20:30:35.7812598Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; | ** [hi] | {'hello': hi}, ['hi'] |';&#xA; result: {&quot;bye&quot;:null,&quot;hello&quot;:&quot;world&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> | ** [hi] | {'hello': hi}, ['hi'] |'
Result: '{"bye":null,"hello":"world"}'
Expected: '{"bye":null,"hello":"world"}'
]]></output>
                </test-case>
                <test-case id="0-2589" name="variables.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="614821135" result="Passed" start-time="2023-09-17T20:30:35.7814841Z" end-time="2023-09-17T20:30:35.7816027Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$price.foo.bar';&#xA; result: 45" />
                  </properties>
                  <output><![CDATA[Expr is '$price.foo.bar'
Result: '45'
Expected: '45'
]]></output>
                </test-case>
                <test-case id="0-2590" name="variables.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="316696537" result="Passed" start-time="2023-09-17T20:30:35.7828111Z" end-time="2023-09-17T20:30:35.7833545Z" duration="0.000543" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$price.foo.bar';&#xA; result: 45" />
                  </properties>
                  <output><![CDATA[Expr is '$price.foo.bar'
Result: '45'
Expected: '45'
]]></output>
                </test-case>
                <test-case id="0-2591" name="variables.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="30561259" result="Passed" start-time="2023-09-17T20:30:35.7838965Z" end-time="2023-09-17T20:30:35.7841210Z" duration="0.000224" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$var[1]';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$var[1]'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-2592" name="variables.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1264124865" result="Passed" start-time="2023-09-17T20:30:35.7843637Z" end-time="2023-09-17T20:30:35.7845481Z" duration="0.000184" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.foo.bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is '$.foo.bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2593" name="variables.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1061645548" result="Passed" start-time="2023-09-17T20:30:35.7847721Z" end-time="2023-09-17T20:30:35.7848709Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$a := 5';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$a := 5'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2594" name="variables.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="306506935" result="Passed" start-time="2023-09-17T20:30:35.7849118Z" end-time="2023-09-17T20:30:35.7849757Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$a := $b := 5';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$a := $b := 5'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2595" name="variables.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="270207545" result="Passed" start-time="2023-09-17T20:30:35.7850777Z" end-time="2023-09-17T20:30:35.7852189Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a := $b := 5; $a)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '($a := $b := 5; $a)'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2596" name="variables.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1125640943" result="Passed" start-time="2023-09-17T20:30:35.7853570Z" end-time="2023-09-17T20:30:35.7854302Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a := $b := 5; $b)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '($a := $b := 5; $b)'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2597" name="variables.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="213799777" result="Passed" start-time="2023-09-17T20:30:35.7854804Z" end-time="2023-09-17T20:30:35.7855757Z" duration="0.000095" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $a := 5; $a := $a + 2; $a )';&#xA; result: 7" />
                  </properties>
                  <output><![CDATA[Expr is '( $a := 5; $a := $a + 2; $a )'
Result: '7'
Expected: '7'
]]></output>
                </test-case>
                <test-case id="0-2598" name="variables.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="144539548" result="Passed" start-time="2023-09-17T20:30:35.7861458Z" end-time="2023-09-17T20:30:35.7863185Z" duration="0.000173" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3].$v';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3].$v'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2599" name="variables.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1765957742" result="Passed" start-time="2023-09-17T20:30:35.7864977Z" end-time="2023-09-17T20:30:35.7867281Z" duration="0.000230" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $foo := &quot;defined&quot;; ( $foo := nothing ); $foo )';&#xA; result: &quot;defined&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $foo := "defined"; ( $foo := nothing ); $foo )'
Result: '"defined"'
Expected: '"defined"'
]]></output>
                </test-case>
                <test-case id="0-2600" name="variables.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1640008722" result="Passed" start-time="2023-09-17T20:30:35.7869578Z" end-time="2023-09-17T20:30:35.7870225Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $foo := &quot;defined&quot;; ( $foo := nothing; $foo ) )';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '( $foo := "defined"; ( $foo := nothing; $foo ) )'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2601" name="variables.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1671558956" result="Passed" start-time="2023-09-17T20:30:35.7873330Z" end-time="2023-09-17T20:30:35.7878258Z" duration="0.000493" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($a := [1,2]; $a[1]:=3; $a)';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212.
Actually thrown S0212.
Not checking codes yet]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($a := [1,2]; $a[1]:=3; $a)'
]]></output>
                </test-case>
                <test-case id="0-2602" name="wildcards.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1625469425" result="Passed" start-time="2023-09-17T20:30:35.7885898Z" end-time="2023-09-17T20:30:35.7898130Z" duration="0.001223" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*';&#xA; result: [42,{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;},&quot;here&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*'
Result: '[42,{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"},"here"]'
Expected: '[42,{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"},"here"]'
]]></output>
                </test-case>
                <test-case id="0-2603" name="wildcards.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2045512287" result="Passed" start-time="2023-09-17T20:30:35.7899135Z" end-time="2023-09-17T20:30:35.7902326Z" duration="0.000319" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-2604" name="wildcards.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="808000289" result="Passed" start-time="2023-09-17T20:30:35.7902533Z" end-time="2023-09-17T20:30:35.7903358Z" duration="0.000082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-2605" name="wildcards.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="221953078" result="Passed" start-time="2023-09-17T20:30:35.7903538Z" end-time="2023-09-17T20:30:35.7904220Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2606" name="wildcards.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="410125107" result="Passed" start-time="2023-09-17T20:30:35.7905934Z" end-time="2023-09-17T20:30:35.7906622Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2607" name="wildcards.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="141324423" result="Passed" start-time="2023-09-17T20:30:35.7906773Z" end-time="2023-09-17T20:30:35.7907448Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2608" name="wildcards.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1816215710" result="Passed" start-time="2023-09-17T20:30:35.7907683Z" end-time="2023-09-17T20:30:35.7909907Z" duration="0.000222" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '*[type=&quot;home&quot;]';&#xA; result: [{&quot;type&quot;:&quot;home&quot;,&quot;number&quot;:&quot;0203 544 1234&quot;},{&quot;type&quot;:&quot;home&quot;,&quot;address&quot;:[&quot;freddy@my-social.com&quot;,&quot;frederic.smith@very-serious.com&quot;]}]" />
                  </properties>
                  <output><![CDATA[Expr is '*[type="home"]'
Result: '[{"type":"home","number":"0203 544 1234"},{"type":"home","address":["freddy@my-social.com","frederic.smith@very-serious.com"]}]'
Expected: '[{"type":"home","number":"0203 544 1234"},{"type":"home","address":["freddy@my-social.com","frederic.smith@very-serious.com"]}]'
]]></output>
                </test-case>
                <test-case id="0-2609" name="wildcards.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1668016617" result="Passed" start-time="2023-09-17T20:30:35.7910047Z" end-time="2023-09-17T20:30:35.7915507Z" duration="0.000546" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account[$$.Account.&quot;Account Name&quot; = &quot;Firefly&quot;].*[OrderID=&quot;order104&quot;].Product.Price';&#xA; result: [34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account[$$.Account."Account Name" = "Firefly"].*[OrderID="order104"].Product.Price'
Result: '[34.45,107.99]'
Expected: '[34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2610" name="wildcards.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="555290891" result="Passed" start-time="2023-09-17T20:30:35.7918297Z" end-time="2023-09-17T20:30:35.7920285Z" duration="0.000199" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account[$$.Account.`Account Name` = &quot;Firefly&quot;].*[OrderID=&quot;order104&quot;].Product.Price';&#xA; result: [34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account[$$.Account.`Account Name` = "Firefly"].*[OrderID="order104"].Product.Price'
Result: '[34.45,107.99]'
Expected: '[34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2611" name="wildcards.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1922189344" result="Passed" start-time="2023-09-17T20:30:35.7922275Z" end-time="2023-09-17T20:30:35.7926679Z" duration="0.000440" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '*';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '*'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>