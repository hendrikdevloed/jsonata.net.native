<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="0" name="Jsonata.Net.Native.TestSuite.dll" fullname="F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Debug\net5.0\Jsonata.Net.Native.TestSuite.dll" runstate="Runnable" testcasecount="1611" result="Failed" total="1611" passed="1128" failed="248" inconclusive="0" skipped="235" asserts="1023" engine-version="3.12.0.0" clr-version="5.0.13" start-time="2022-01-16 22:25:09Z" end-time="2022-01-16 22:25:30Z" duration="21.161090">
  <command-line><![CDATA[F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Debug\net5.0\testhost.dll --port 50540 --endpoint 127.0.0.1:050540 --role client --parentprocessid 29316 --telemetryoptedin false]]></command-line>
  <filter>
    <or>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.array-constructor.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.blocks.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.closures.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.closures.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comments.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.conditionals.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.context.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.encoding.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.errors.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.fields.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case034a</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case039</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case040</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case041</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case042</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case043</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case044</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.case045</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.large[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.large[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-abs.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-append.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-applications.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-assert.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-average.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-boolean.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-ceil.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-contains.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-count.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-each.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-error.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-exists.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-floor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[62]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[63]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[64]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[65]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[62]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[63]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[64]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[65]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[66]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[67]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[68]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[69]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-join.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-keys.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-length.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lookup.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-max.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-merge.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-number.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-pad.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[47]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[48]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[49]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[50]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[51]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[52]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[53]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[54]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[55]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[56]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[57]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[58]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[59]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[60]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[61]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-power.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-replace.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-reverse.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-round.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sift.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-signatures.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sort.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-split.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-spread.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-string.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substring.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-sum.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[29]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[30]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[31]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[32]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[33]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[34]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[35]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[36]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[37]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[38]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[39]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[40]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[41]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[42]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[43]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[44]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[45]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[46]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-trim.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.function-zip.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-filter.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-map.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-single.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.errors[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.index[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.lambdas.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.literals.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.matchers.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.matchers.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.missing-paths.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.null.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.object-constructor.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[1]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[2]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[3]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[4]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[5]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[6]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[7]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[8]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[9]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[10]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[11]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[12]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[13]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[14]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[15]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[16]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[17]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[18]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[19]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[20]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[21]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[22]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[23]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[24]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[25]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[26]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[27]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[28]</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.parentheses.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.partial-application.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.predicates.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.range-operator.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.regex.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.sorting.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.string-concat.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.token-conversion.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case015</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case016</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case017</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case018</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case019</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case020</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case021</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case022</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case023</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case024</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case025</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case026</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case027</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case028</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case029</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case030</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case031</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case032</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case033</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case034</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case035</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case036</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case037</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case038</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case039</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case040</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case041</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case042</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case043</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case044</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case045</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case046</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case047</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case048</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case049</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case050</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case051</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case052</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case053</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case054</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case055</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case056</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case057</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case058</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case059</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case060</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case061</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case062</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case063</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case064</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case065</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case066</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case067</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case068</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case069</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case070</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case071</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case072</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case073</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case074</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case075</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case076</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case077</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case078</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case079</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case080</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case081</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case082</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case083</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case084</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case085</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case086</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case087</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case088</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case089</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case090</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case091</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case092</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case093</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case094</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case095</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case096</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case097</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case098</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case099</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case100</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case101</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case102</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transform.case103</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case013</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.transforms.case014</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case009</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case010</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case011</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.variables.case012</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case000</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case001</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case002</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case003</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case004</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case005</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case006</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case007</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case008</test>
      <test>Jsonata.Net.Native.TestSuite.Tests.wildcards.case009</test>
    </or>
  </filter>
  <test-suite type="Assembly" id="0-2613" name="Jsonata.Net.Native.TestSuite.dll" fullname="F:/Projects/_NuGet/jsonata.net.native/src/Jsonata.Net.Native.TestSuite/bin/Debug/net5.0/Jsonata.Net.Native.TestSuite.dll" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-01-16T22:25:09.4601607Z" end-time="2022-01-16T22:25:30.4689152Z" duration="21.008979" total="1611" passed="1128" failed="248" warnings="0" inconclusive="0" skipped="235" asserts="1023">
    <environment framework-version="3.13.2.0" clr-version="5.0.13" os-version="Microsoft Windows 6.3.9600" platform="Win32NT" cwd="F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Debug\net5.0" machine-name="ABC-BARG" user="barg_ma" user-domain="ABC" culture="ru-RU" uiculture="en-US" os-architecture="x64" />
    <settings>
      <setting name="SynchronousEvents" value="False" />
      <setting name="RandomSeed" value="1562048317" />
      <setting name="SkipNonTestAssemblies" value="True" />
      <setting name="ProcessModel" value="InProcess" />
      <setting name="DomainUsage" value="Single" />
      <setting name="DefaultTestNamePattern" value="{m}{a}" />
      <setting name="WorkDirectory" value="F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\bin\Debug\net5.0" />
      <setting name="NumberOfTestWorkers" value="4" />
    </settings>
    <properties>
      <property name="_PID" value="26592" />
      <property name="_APPDOMAIN" value="testhost" />
    </properties>
    <failure>
      <message><![CDATA[One or more child tests had errors]]></message>
    </failure>
    <test-suite type="TestSuite" id="0-2614" name="Jsonata" fullname="Jsonata" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-01-16T22:25:09.4649704Z" end-time="2022-01-16T22:25:30.4689119Z" duration="21.004207" total="1611" passed="1128" failed="248" warnings="0" inconclusive="0" skipped="235" asserts="1023">
      <failure>
        <message><![CDATA[One or more child tests had errors]]></message>
      </failure>
      <test-suite type="TestSuite" id="0-2615" name="Net" fullname="Jsonata.Net" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-01-16T22:25:09.4652415Z" end-time="2022-01-16T22:25:30.4689089Z" duration="21.003933" total="1611" passed="1128" failed="248" warnings="0" inconclusive="0" skipped="235" asserts="1023">
        <failure>
          <message><![CDATA[One or more child tests had errors]]></message>
        </failure>
        <test-suite type="TestSuite" id="0-2616" name="Native" fullname="Jsonata.Net.Native" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-01-16T22:25:09.4652572Z" end-time="2022-01-16T22:25:30.4689044Z" duration="21.003913" total="1611" passed="1128" failed="248" warnings="0" inconclusive="0" skipped="235" asserts="1023">
          <failure>
            <message><![CDATA[One or more child tests had errors]]></message>
          </failure>
          <test-suite type="TestSuite" id="0-2617" name="TestSuite" fullname="Jsonata.Net.Native.TestSuite" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-01-16T22:25:09.4652617Z" end-time="2022-01-16T22:25:30.4689002Z" duration="21.003904" total="1611" passed="1128" failed="248" warnings="0" inconclusive="0" skipped="235" asserts="1023">
            <failure>
              <message><![CDATA[One or more child tests had errors]]></message>
            </failure>
            <test-suite type="TestFixture" id="0-1000" name="Tests" fullname="Jsonata.Net.Native.TestSuite.Tests" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-01-16T22:25:09.4663484Z" end-time="2022-01-16T22:25:30.4688860Z" duration="21.002804" total="1611" passed="1128" failed="248" warnings="0" inconclusive="0" skipped="235" asserts="1023">
              <failure>
                <message><![CDATA[One or more child tests had errors]]></message>
              </failure>
              <output><![CDATA[Loaded 27 datasets
]]></output>
              <test-suite type="ParameterizedMethod" id="0-2612" name="Test" fullname="Jsonata.Net.Native.TestSuite.Tests.Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" testcasecount="1611" result="Failed" site="Child" start-time="2022-01-16T22:25:09.4815678Z" end-time="2022-01-16T22:25:30.4679580Z" duration="20.986656" total="1611" passed="1128" failed="248" warnings="0" inconclusive="0" skipped="235" asserts="1022">
                <failure>
                  <message><![CDATA[One or more child tests had errors]]></message>
                </failure>
                <test-case id="0-1001" name="array-constructor.array-sequences[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="108724056" result="Passed" start-time="2022-01-16T22:25:09.4816198Z" end-time="2022-01-16T22:25:09.5120881Z" duration="0.030560" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1002" name="array-constructor.array-sequences[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1798911478" result="Passed" start-time="2022-01-16T22:25:09.5138163Z" end-time="2022-01-16T22:25:09.5139694Z" duration="0.000153" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600]]'
Expected: '[[3,1578381600]]'
]]></output>
                </test-case>
                <test-case id="0-1003" name="array-constructor.array-sequences[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="391270064" result="Passed" start-time="2022-01-16T22:25:09.5139833Z" end-time="2022-01-16T22:25:09.5140630Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [3,1578381600]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[3,1578381600]'
Expected: '[3,1578381600]'
]]></output>
                </test-case>
                <test-case id="0-1004" name="array-constructor.array-sequences[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1653908106" result="Passed" start-time="2022-01-16T22:25:09.5140711Z" end-time="2022-01-16T22:25:09.5149109Z" duration="0.000840" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'singleArray';&#xA; result: [{&quot;foo&quot;:&quot;bar&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'singleArray'
Result: '[{"foo":"bar"}]'
Expected: '[{"foo":"bar"}]'
]]></output>
                </test-case>
                <test-case id="0-1005" name="array-constructor.array-sequences[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.array-sequences[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1601217844" result="Passed" start-time="2022-01-16T22:25:09.5149236Z" end-time="2022-01-16T22:25:09.5150099Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'singleArray[]';&#xA; result: [{&quot;foo&quot;:&quot;bar&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'singleArray[]'
Result: '[{"foo":"bar"}]'
Expected: '[{"foo":"bar"}]'
]]></output>
                </test-case>
                <test-case id="0-1006" name="array-constructor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="643647327" result="Passed" start-time="2022-01-16T22:25:09.5150178Z" end-time="2022-01-16T22:25:09.5151277Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-1007" name="array-constructor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2022114609" result="Passed" start-time="2022-01-16T22:25:09.5151361Z" end-time="2022-01-16T22:25:09.5163668Z" duration="0.001231" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1]';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '[1]'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1008" name="array-constructor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="992205720" result="Passed" start-time="2022-01-16T22:25:09.5163846Z" end-time="2022-01-16T22:25:09.5164840Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2]';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2]'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1009" name="array-constructor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1907788684" result="Passed" start-time="2022-01-16T22:25:09.5164921Z" end-time="2022-01-16T22:25:09.5165624Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2,3]';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2,3]'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1010" name="array-constructor.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1730027557" result="Passed" start-time="2022-01-16T22:25:09.5165700Z" end-time="2022-01-16T22:25:09.5166340Z" duration="0.000064" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]]';&#xA; result: [1,2,[3,4]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]]'
Result: '[1,2,[3,4]]'
Expected: '[1,2,[3,4]]'
]]></output>
                </test-case>
                <test-case id="0-1011" name="array-constructor.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1867214675" result="Passed" start-time="2022-01-16T22:25:09.5166409Z" end-time="2022-01-16T22:25:09.5179233Z" duration="0.001282" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, &quot;two&quot;, [&quot;three&quot;, 4]]';&#xA; result: [1,&quot;two&quot;,[&quot;three&quot;,4]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, "two", ["three", 4]]'
Result: '[1,"two",["three",4]]'
Expected: '[1,"two",["three",4]]'
]]></output>
                </test-case>
                <test-case id="0-1012" name="array-constructor.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="154585165" result="Passed" start-time="2022-01-16T22:25:09.5179363Z" end-time="2022-01-16T22:25:09.5181584Z" duration="0.000222" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, $two, [&quot;three&quot;, $four]]';&#xA; result: [1,2,[&quot;three&quot;,&quot;four&quot;]]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, $two, ["three", $four]]'
Result: '[1,2,["three","four"]]'
Expected: '[1,2,["three","four"]]'
]]></output>
                </test-case>
                <test-case id="0-1013" name="array-constructor.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="614106454" result="Passed" start-time="2022-01-16T22:25:09.5181678Z" end-time="2022-01-16T22:25:09.5183836Z" duration="0.000216" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;foo.bar&quot;, foo.bar, [&quot;foo.baz&quot;, foo.blah.baz]]';&#xA; result: [&quot;foo.bar&quot;,42,[&quot;foo.baz&quot;,{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]]" />
                  </properties>
                  <output><![CDATA[Expr is '["foo.bar", foo.bar, ["foo.baz", foo.blah.baz]]'
Result: '["foo.bar",42,["foo.baz",{"fud":"hello"},{"fud":"world"}]]'
Expected: '["foo.bar",42,["foo.baz",{"fud":"hello"},{"fud":"world"}]]'
]]></output>
                </test-case>
                <test-case id="0-1014" name="array-constructor.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1074981159" result="Passed" start-time="2022-01-16T22:25:09.5183933Z" end-time="2022-01-16T22:25:09.5198468Z" duration="0.001454" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3][0]';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3][0]'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1015" name="array-constructor.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1043191732" result="Passed" start-time="2022-01-16T22:25:09.5198589Z" end-time="2022-01-16T22:25:09.5202634Z" duration="0.000405" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]][-1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]][-1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-1016" name="array-constructor.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1978878944" result="Passed" start-time="2022-01-16T22:25:09.5202730Z" end-time="2022-01-16T22:25:09.5203476Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, [3, 4]][-1][-1]';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, [3, 4]][-1][-1]'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1017" name="array-constructor.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="768780706" result="Passed" start-time="2022-01-16T22:25:09.5203554Z" end-time="2022-01-16T22:25:09.5204644Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.[fud, fud]';&#xA; result: [[&quot;hello&quot;,&quot;hello&quot;],[&quot;world&quot;,&quot;world&quot;]]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.[fud, fud]'
Result: '[["hello","hello"],["world","world"]]'
Expected: '[["hello","hello"],["world","world"]]'
]]></output>
                </test-case>
                <test-case id="0-1018" name="array-constructor.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2079211262" result="Passed" start-time="2022-01-16T22:25:09.5205097Z" end-time="2022-01-16T22:25:09.5206791Z" duration="0.000169" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.[[fud, fud]]';&#xA; result: [[[&quot;hello&quot;,&quot;hello&quot;]],[[&quot;world&quot;,&quot;world&quot;]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.[[fud, fud]]'
Result: '[[["hello","hello"]],[["world","world"]]]'
Expected: '[[["hello","hello"]],[["world","world"]]]'
]]></output>
                </test-case>
                <test-case id="0-1019" name="array-constructor.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="904688527" result="Passed" start-time="2022-01-16T22:25:09.5210105Z" end-time="2022-01-16T22:25:09.5212472Z" duration="0.000237" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.[baz].fud';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.[baz].fud'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1020" name="array-constructor.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="628441151" result="Passed" start-time="2022-01-16T22:25:09.5212589Z" end-time="2022-01-16T22:25:09.5215925Z" duration="0.000334" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.[baz, buz].fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.[baz, buz].fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1021" name="array-constructor.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="164094518" result="Passed" start-time="2022-01-16T22:25:09.5216040Z" end-time="2022-01-16T22:25:09.5217293Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[Address, Other.&quot;Alternative.Address&quot;].City';&#xA; result: [&quot;Winchester&quot;,&quot;London&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[Address, Other."Alternative.Address"].City'
Result: '["Winchester","London"]'
Expected: '["Winchester","London"]'
]]></output>
                </test-case>
                <test-case id="0-1022" name="array-constructor.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="793531871" result="Passed" start-time="2022-01-16T22:25:09.5217395Z" end-time="2022-01-16T22:25:09.5221537Z" duration="0.000414" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[Address, Other.`Alternative.Address`].City';&#xA; result: [&quot;Winchester&quot;,&quot;London&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[Address, Other.`Alternative.Address`].City'
Result: '["Winchester","London"]'
Expected: '["Winchester","London"]'
]]></output>
                </test-case>
                <test-case id="0-1023" name="array-constructor.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1009330443" result="Passed" start-time="2022-01-16T22:25:09.5221649Z" end-time="2022-01-16T22:25:09.5283254Z" duration="0.006161" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0,1,2,3,4,5,6,7,8,9][$ % 2 = 0]';&#xA; result: [0,2,4,6,8]" />
                  </properties>
                  <output><![CDATA[Expr is '[0,1,2,3,4,5,6,7,8,9][$ % 2 = 0]'
Result: '[0,2,4,6,8]'
Expected: '[0,2,4,6,8]'
]]></output>
                </test-case>
                <test-case id="0-1024" name="array-constructor.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1592025947" result="Passed" start-time="2022-01-16T22:25:09.5284939Z" end-time="2022-01-16T22:25:09.5287052Z" duration="0.000211" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1025" name="array-constructor.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1965539256" result="Passed" start-time="2022-01-16T22:25:09.5289796Z" end-time="2022-01-16T22:25:09.5290813Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1026" name="array-constructor.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.array-constructor.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1941904393" result="Passed" start-time="2022-01-16T22:25:09.5290916Z" end-time="2022-01-16T22:25:09.5291655Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1, 2, 3].$';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[1, 2, 3].$'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1027" name="blocks.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1351762133" result="Passed" start-time="2022-01-16T22:25:09.5291737Z" end-time="2022-01-16T22:25:09.5302843Z" duration="0.001111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1028" name="blocks.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="760409046" result="Passed" start-time="2022-01-16T22:25:09.5303498Z" end-time="2022-01-16T22:25:09.5305526Z" duration="0.000203" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(1; 2; 3)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(1; 2; 3)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1029" name="blocks.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1086636622" result="Passed" start-time="2022-01-16T22:25:09.5307404Z" end-time="2022-01-16T22:25:09.5308246Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(1; 2; 3;)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(1; 2; 3;)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1030" name="blocks.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="825276096" result="Passed" start-time="2022-01-16T22:25:09.5308334Z" end-time="2022-01-16T22:25:09.5313601Z" duration="0.000527" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a:=1; $b:=2; $c:=($a:=4; $a+$b); $a+$c)';&#xA; result: 7" />
                  </properties>
                  <output><![CDATA[Expr is '($a:=1; $b:=2; $c:=($a:=4; $a+$b); $a+$c)'
Result: '7'
Expected: '7'
]]></output>
                </test-case>
                <test-case id="0-1031" name="blocks.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="815492602" result="Passed" start-time="2022-01-16T22:25:09.5313695Z" end-time="2022-01-16T22:25:09.5324783Z" duration="0.001109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.($var1 := Price ; $var2:=Quantity; $var1 * $var2)';&#xA; result: [68.9,21.67,137.8,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.($var1 := Price ; $var2:=Quantity; $var1 * $var2)'
Result: '[68.9,21.67,137.8,107.99]'
Expected: '[68.9,21.67,137.8,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1032" name="blocks.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="616509537" result="Passed" start-time="2022-01-16T22:25:09.5324909Z" end-time="2022-01-16T22:25:09.5373713Z" duration="0.004880" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $func := function($arg) {$arg.Account.Order[0].OrderID};  $func($))';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $func := function($arg) {$arg.Account.Order[0].OrderID};  $func($))'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1033" name="blocks.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.blocks.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="321741513" result="Passed" start-time="2022-01-16T22:25:09.5374135Z" end-time="2022-01-16T22:25:09.5377112Z" duration="0.000298" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $func := function($arg) {$arg.Account.Order[0]};  $func($).OrderID)';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $func := function($arg) {$arg.Account.Order[0]};  $func($).OrderID)'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1034" name="boolean-expresssions.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="766829367" result="Passed" start-time="2022-01-16T22:25:09.5377450Z" end-time="2022-01-16T22:25:09.5381271Z" duration="0.000382" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1035" name="boolean-expresssions.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="332253122" result="Passed" start-time="2022-01-16T22:25:09.5381380Z" end-time="2022-01-16T22:25:09.5382065Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1036" name="boolean-expresssions.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1176825487" result="Passed" start-time="2022-01-16T22:25:09.5382141Z" end-time="2022-01-16T22:25:09.5389893Z" duration="0.000775" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false or false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1037" name="boolean-expresssions.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1827461665" result="Passed" start-time="2022-01-16T22:25:09.5390023Z" end-time="2022-01-16T22:25:09.5390799Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'false or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1038" name="boolean-expresssions.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="858303466" result="Passed" start-time="2022-01-16T22:25:09.5390877Z" end-time="2022-01-16T22:25:09.5391487Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or false';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or false'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1039" name="boolean-expresssions.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1045849610" result="Passed" start-time="2022-01-16T22:25:09.5391559Z" end-time="2022-01-16T22:25:09.5392106Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1040" name="boolean-expresssions.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1179260998" result="Passed" start-time="2022-01-16T22:25:09.5392172Z" end-time="2022-01-16T22:25:09.5392706Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1041" name="boolean-expresssions.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="959450466" result="Passed" start-time="2022-01-16T22:25:09.5392909Z" end-time="2022-01-16T22:25:09.5393497Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and true';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and true'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1042" name="boolean-expresssions.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1184321347" result="Passed" start-time="2022-01-16T22:25:09.5393573Z" end-time="2022-01-16T22:25:09.5394098Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'true and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1043" name="boolean-expresssions.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1516154260" result="Passed" start-time="2022-01-16T22:25:09.5394164Z" end-time="2022-01-16T22:25:09.5394708Z" duration="0.000054" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true and true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1044" name="boolean-expresssions.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1956301019" result="Passed" start-time="2022-01-16T22:25:09.5394771Z" end-time="2022-01-16T22:25:09.5419639Z" duration="0.002487" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(false)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$not(false)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1045" name="boolean-expresssions.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="162418643" result="Passed" start-time="2022-01-16T22:25:09.5419845Z" end-time="2022-01-16T22:25:09.5420841Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(true)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$not(true)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1046" name="boolean-expresssions.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1780196861" result="Passed" start-time="2022-01-16T22:25:09.5420931Z" end-time="2022-01-16T22:25:09.5427850Z" duration="0.000692" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and=1 and or=2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and=1 and or=2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1047" name="boolean-expresssions.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1328106354" result="Passed" start-time="2022-01-16T22:25:09.5427953Z" end-time="2022-01-16T22:25:09.5430691Z" duration="0.000274" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and&gt;1 or or&lt;=2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and>1 or or<=2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1048" name="boolean-expresssions.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1549670476" result="Passed" start-time="2022-01-16T22:25:09.5430784Z" end-time="2022-01-16T22:25:09.5431578Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and&gt;1 or or!=2';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'and>1 or or!=2'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1049" name="boolean-expresssions.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="175056662" result="Passed" start-time="2022-01-16T22:25:09.5431657Z" end-time="2022-01-16T22:25:09.5432312Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'and and and';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'and and and'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1050" name="boolean-expresssions.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="334479278" result="Passed" start-time="2022-01-16T22:25:09.5432399Z" end-time="2022-01-16T22:25:09.5436173Z" duration="0.000378" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[].content.origin.$lowercase(name)';&#xA; result: [&quot;fakeintegrationname&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$[].content.origin.$lowercase(name)'
Result: '["fakeintegrationname"]'
Expected: '["fakeintegrationname"]'
]]></output>
                </test-case>
                <test-case id="0-1051" name="boolean-expresssions.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1965398708" result="Passed" start-time="2022-01-16T22:25:09.5436272Z" end-time="2022-01-16T22:25:09.5436945Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true or foo';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'true or foo'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1052" name="boolean-expresssions.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="610111546" result="Passed" start-time="2022-01-16T22:25:09.5437027Z" end-time="2022-01-16T22:25:09.5437610Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or true';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or true'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1053" name="boolean-expresssions.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="756936446" result="Passed" start-time="2022-01-16T22:25:09.5437679Z" end-time="2022-01-16T22:25:09.5438253Z" duration="0.000057" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false or foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false or foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1054" name="boolean-expresssions.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="297586226" result="Passed" start-time="2022-01-16T22:25:09.5438319Z" end-time="2022-01-16T22:25:09.5438871Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1055" name="boolean-expresssions.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1149054867" result="Passed" start-time="2022-01-16T22:25:09.5438941Z" end-time="2022-01-16T22:25:09.5439493Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo or bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo or bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1056" name="boolean-expresssions.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1462675832" result="Passed" start-time="2022-01-16T22:25:09.5439557Z" end-time="2022-01-16T22:25:09.5440106Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'true and foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'true and foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1057" name="boolean-expresssions.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="789581035" result="Passed" start-time="2022-01-16T22:25:09.5440175Z" end-time="2022-01-16T22:25:09.5440716Z" duration="0.000054" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and true';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and true'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1058" name="boolean-expresssions.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="946727764" result="Passed" start-time="2022-01-16T22:25:09.5440782Z" end-time="2022-01-16T22:25:09.5441307Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'false and foo';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'false and foo'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1059" name="boolean-expresssions.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1835852497" result="Passed" start-time="2022-01-16T22:25:09.5441371Z" end-time="2022-01-16T22:25:09.5441911Z" duration="0.000054" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and false';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and false'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1060" name="boolean-expresssions.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1806797098" result="Passed" start-time="2022-01-16T22:25:09.5441975Z" end-time="2022-01-16T22:25:09.5442503Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo and bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo and bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1061" name="boolean-expresssions.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1439368841" result="Passed" start-time="2022-01-16T22:25:09.5442566Z" end-time="2022-01-16T22:25:09.5443593Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$not(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1062" name="boolean-expresssions.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1261705563" result="Passed" start-time="2022-01-16T22:25:09.5443668Z" end-time="2022-01-16T22:25:09.5452634Z" duration="0.000897" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo = '' or $number(foo) = 0';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Description: 'will not evaluate rhs (which would error) because lhs is true'
Expr is 'foo = '' or $number(foo) = 0'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1063" name="boolean-expresssions.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2053052745" result="Passed" start-time="2022-01-16T22:25:09.5452966Z" end-time="2022-01-16T22:25:09.5457925Z" duration="0.000496" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$type(data) = 'number' and data &gt; 10';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Description: 'will not evaluate rhs (which would error) because lhs is false'
Expr is '$type(data) = 'number' and data > 10'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1064" name="boolean-expresssions.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.boolean-expresssions.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1082512588" result="Passed" start-time="2022-01-16T22:25:09.5458158Z" end-time="2022-01-16T22:25:09.5881790Z" duration="0.042364" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$type(age) = 'number' or $number(age) &gt; 0';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Description: 'throws error on right side of boolean expression (for CC of a catch)'
Expr is '$type(age) = 'number' or $number(age) > 0'
]]></output>
                </test-case>
                <test-case id="0-1065" name="closures.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.closures.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="914534955" result="Passed" start-time="2022-01-16T22:25:09.5899298Z" end-time="2022-01-16T22:25:09.5940256Z" duration="0.004096" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(  $AccName := function() { $.&quot;Account Name&quot; };  Order[OrderID = &quot;order104&quot;].Product{    &quot;Account&quot;: $AccName(),    &quot;SKU-&quot; &amp; $string(ProductID): $.&quot;Product Name&quot;  } )';&#xA; result: {&quot;Account&quot;:&quot;Firefly&quot;,&quot;SKU-858383&quot;:&quot;Bowler Hat&quot;,&quot;SKU-345664&quot;:&quot;Cloak&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(  $AccName := function() { $."Account Name" };  Order[OrderID = "order104"].Product{    "Account": $AccName(),    "SKU-" & $string(ProductID): $."Product Name"  } )'
Result: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
Expected: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
]]></output>
                </test-case>
                <test-case id="0-1066" name="closures.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.closures.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1250705138" result="Passed" start-time="2022-01-16T22:25:09.5946266Z" end-time="2022-01-16T22:25:09.5950438Z" duration="0.000417" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.(  $AccName := function() { `Account Name` };  Order[OrderID = &quot;order104&quot;].Product{    &quot;Account&quot;: $AccName(),    &quot;SKU-&quot; &amp; $string(ProductID): `Product Name`  } )';&#xA; result: {&quot;Account&quot;:&quot;Firefly&quot;,&quot;SKU-858383&quot;:&quot;Bowler Hat&quot;,&quot;SKU-345664&quot;:&quot;Cloak&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.(  $AccName := function() { `Account Name` };  Order[OrderID = "order104"].Product{    "Account": $AccName(),    "SKU-" & $string(ProductID): `Product Name`  } )'
Result: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
Expected: '{"Account":"Firefly","SKU-858383":"Bowler Hat","SKU-345664":"Cloak"}'
]]></output>
                </test-case>
                <test-case id="0-1067" name="comments.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1980327299" result="Passed" start-time="2022-01-16T22:25:09.5954272Z" end-time="2022-01-16T22:25:09.5961028Z" duration="0.000676" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '/* header comment */&#xA;1 + 1&#xA;';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '/* header comment */
1 + 1
'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1068" name="comments.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1994760734" result="Passed" start-time="2022-01-16T22:25:09.5964245Z" end-time="2022-01-16T22:25:09.5967267Z" duration="0.000302" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)&#xA;';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)
'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-1069" name="comments.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="742728037" result="Passed" start-time="2022-01-16T22:25:09.5973120Z" end-time="2022-01-16T22:25:09.5978436Z" duration="0.000532" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)&#xA;/* trailing comment - no closing tag should trigger an error&#xA;';&#xA; result: error S0106" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0106]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring('Hello, world', 0 /* start at index 0 */, 5/*length*/)
/* trailing comment - no closing tag should trigger an error
'
]]></output>
                </test-case>
                <test-case id="0-1070" name="comments.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.comments.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2013849892" result="Passed" start-time="2022-01-16T22:25:09.5983124Z" end-time="2022-01-16T22:25:09.6005777Z" duration="0.002265" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '/* An expression to return the square root of a number without using the $sqrt function */&#xA;/* Pointless, but demonstrates capability */&#xA;&#xA;(&#xA;  /**&#xA;   * Implements the square root function&#xA;   * Uses the Newton-Raphson method&#xA;   */&#xA;  $my_sqrt := function($n) {(&#xA;&#xA;    $good_enough := function($guess) {&#xA;      $abs($guess * $guess - $n) &lt; 0.000000000001&#xA;    };&#xA;    $improve_guess := function($guess) {&#xA;      ($guess + $n / $guess) / 2&#xA;    };&#xA;&#xA;    /* Iterate using a tail-recursive function until convergence */&#xA;    $sqrt_iter := function($guess) {&#xA;      $good_enough($guess) ? $guess : $sqrt_iter($improve_guess($guess))&#xA;    };&#xA;    $n &gt;= 0 ? $sqrt_iter(1) : &quot;no complex numbers today&quot;&#xA;  )};&#xA;  $my_sqrt($$)&#xA;)&#xA;';&#xA; result: 16" />
                  </properties>
                  <output><![CDATA[Expr is '/* An expression to return the square root of a number without using the $sqrt function */
/* Pointless, but demonstrates capability */

(
  /**
   * Implements the square root function
   * Uses the Newton-Raphson method
   */
  $my_sqrt := function($n) {(

    $good_enough := function($guess) {
      $abs($guess * $guess - $n) < 0.000000000001
    };
    $improve_guess := function($guess) {
      ($guess + $n / $guess) / 2
    };

    /* Iterate using a tail-recursive function until convergence */
    $sqrt_iter := function($guess) {
      $good_enough($guess) ? $guess : $sqrt_iter($improve_guess($guess))
    };
    $n >= 0 ? $sqrt_iter(1) : "no complex numbers today"
  )};
  $my_sqrt($$)
)
'
Result: '16'
Expected: '16'
]]></output>
                </test-case>
                <test-case id="0-1071" name="comparison-operators.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="151417279" result="Passed" start-time="2022-01-16T22:25:09.6013849Z" end-time="2022-01-16T22:25:09.6018869Z" duration="0.000502" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3&gt;-3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '3>-3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1072" name="comparison-operators.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2057960887" result="Passed" start-time="2022-01-16T22:25:09.6023865Z" end-time="2022-01-16T22:25:09.6024891Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3&gt;3';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '3>3'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1073" name="comparison-operators.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1033361652" result="Passed" start-time="2022-01-16T22:25:09.6042086Z" end-time="2022-01-16T22:25:09.6043311Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3=3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '3=3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1074" name="comparison-operators.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1872911176" result="Passed" start-time="2022-01-16T22:25:09.6054037Z" end-time="2022-01-16T22:25:09.6055199Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;3&quot;=&quot;3&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"3"="3"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1075" name="comparison-operators.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1816474332" result="Passed" start-time="2022-01-16T22:25:09.6064732Z" end-time="2022-01-16T22:25:09.6065650Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;3&quot;=3';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"3"=3'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1076" name="comparison-operators.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1127256818" result="Passed" start-time="2022-01-16T22:25:09.6069251Z" end-time="2022-01-16T22:25:09.6070362Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; = &quot;hello&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" = "hello"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1077" name="comparison-operators.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1424861258" result="Passed" start-time="2022-01-16T22:25:09.6073523Z" end-time="2022-01-16T22:25:09.6074476Z" duration="0.000095" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; != &quot;world&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" != "world"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1078" name="comparison-operators.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1200513071" result="Passed" start-time="2022-01-16T22:25:09.6079077Z" end-time="2022-01-16T22:25:09.6082367Z" duration="0.000329" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; &lt; &quot;world&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" < "world"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1079" name="comparison-operators.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1429607304" result="Passed" start-time="2022-01-16T22:25:09.6095200Z" end-time="2022-01-16T22:25:09.6108011Z" duration="0.001281" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;32&quot; &lt; 42';&#xA; result: error T2009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2009]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"32" < 42'
]]></output>
                </test-case>
                <test-case id="0-1080" name="comparison-operators.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="185342395" result="Passed" start-time="2022-01-16T22:25:09.6112648Z" end-time="2022-01-16T22:25:09.6124004Z" duration="0.001135" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'null &lt;= &quot;world&quot;';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'null <= "world"'
]]></output>
                </test-case>
                <test-case id="0-1081" name="comparison-operators.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="613798039" result="Passed" start-time="2022-01-16T22:25:09.6128704Z" end-time="2022-01-16T22:25:09.6133558Z" duration="0.000485" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '3 &gt;= true';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010]]></message>
                  </reason>
                  <output><![CDATA[Expr is '3 >= true'
]]></output>
                </test-case>
                <test-case id="0-1082" name="comparison-operators.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1949575304" result="Passed" start-time="2022-01-16T22:25:09.6165560Z" end-time="2022-01-16T22:25:09.6168292Z" duration="0.000273" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar &gt; bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar > bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1083" name="comparison-operators.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="585352384" result="Passed" start-time="2022-01-16T22:25:09.6174296Z" end-time="2022-01-16T22:25:09.6175965Z" duration="0.000167" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar &gt;= bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar >= bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1084" name="comparison-operators.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="752157344" result="Passed" start-time="2022-01-16T22:25:09.6177103Z" end-time="2022-01-16T22:25:09.6179446Z" duration="0.000234" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar&lt;bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar<bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1085" name="comparison-operators.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1007361035" result="Passed" start-time="2022-01-16T22:25:09.6182404Z" end-time="2022-01-16T22:25:09.6183572Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar&lt;=bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar<=bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1086" name="comparison-operators.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="205381056" result="Passed" start-time="2022-01-16T22:25:09.6201591Z" end-time="2022-01-16T22:25:09.6203019Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar&gt;foo.bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'bar>foo.bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1087" name="comparison-operators.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2007056738" result="Passed" start-time="2022-01-16T22:25:09.6203140Z" end-time="2022-01-16T22:25:09.6204284Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar &lt; foo.bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar < foo.bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1088" name="comparison-operators.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="24155287" result="Passed" start-time="2022-01-16T22:25:09.6204383Z" end-time="2022-01-16T22:25:09.6207085Z" duration="0.000270" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar = bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar = bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1089" name="comparison-operators.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1765258147" result="Passed" start-time="2022-01-16T22:25:09.6207939Z" end-time="2022-01-16T22:25:09.6253428Z" duration="0.004549" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar!= bar';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar!= bar'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1090" name="comparison-operators.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1017060937" result="Passed" start-time="2022-01-16T22:25:09.6268531Z" end-time="2022-01-16T22:25:09.6276714Z" duration="0.000818" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar = foo.bar + 56';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'bar = foo.bar + 56'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1091" name="comparison-operators.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="387244452" result="Passed" start-time="2022-01-16T22:25:09.6306917Z" end-time="2022-01-16T22:25:09.6310258Z" duration="0.000334" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar !=foo.bar + 56';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar !=foo.bar + 56'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1092" name="comparison-operators.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="880733901" result="Passed" start-time="2022-01-16T22:25:09.6316534Z" end-time="2022-01-16T22:25:09.6319191Z" duration="0.000265" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[fud = &quot;hello&quot;]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[fud = "hello"]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1093" name="comparison-operators.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1169934616" result="Passed" start-time="2022-01-16T22:25:09.6330378Z" end-time="2022-01-16T22:25:09.6333351Z" duration="0.000297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[fud != &quot;world&quot;]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[fud != "world"]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1094" name="comparison-operators.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1386536159" result="Passed" start-time="2022-01-16T22:25:09.6345957Z" end-time="2022-01-16T22:25:09.6351252Z" duration="0.000529" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[Price &gt; 30].Price';&#xA; result: [34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[Price > 30].Price'
Result: '[34.45,34.45,107.99]'
Expected: '[34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1095" name="comparison-operators.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1887375804" result="Passed" start-time="2022-01-16T22:25:09.6362062Z" end-time="2022-01-16T22:25:09.6372365Z" duration="0.001030" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price[$&lt;=35]';&#xA; result: [34.45,21.67,34.45]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price[$<=35]'
Result: '[34.45,21.67,34.45]'
Expected: '[34.45,21.67,34.45]'
]]></output>
                </test-case>
                <test-case id="0-1096" name="comparison-operators.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1845228550" result="Passed" start-time="2022-01-16T22:25:09.6488645Z" end-time="2022-01-16T22:25:09.6497282Z" duration="0.000863" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false &gt; 1';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false > 1'
]]></output>
                </test-case>
                <test-case id="0-1097" name="comparison-operators.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1278752249" result="Passed" start-time="2022-01-16T22:25:09.6497702Z" end-time="2022-01-16T22:25:09.6507395Z" duration="0.000969" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false &gt; $x';&#xA; result: error T2010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2010]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false > $x'
]]></output>
                </test-case>
                <test-case id="0-1098" name="comparison-operators.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="433641672" result="Passed" start-time="2022-01-16T22:25:09.6507977Z" end-time="2022-01-16T22:25:09.6513067Z" duration="0.000509" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3 &gt; $x';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '3 > $x'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1099" name="comparison-operators.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1041766064" result="Passed" start-time="2022-01-16T22:25:09.6517749Z" end-time="2022-01-16T22:25:09.6519273Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$x &lt;= 'hello'';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$x <= 'hello''
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1100" name="comparison-operators.deep-equals[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1059197152" result="Passed" start-time="2022-01-16T22:25:09.6520396Z" end-time="2022-01-16T22:25:09.6523198Z" duration="0.000280" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [1, 2, 3, 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [1, 2, 3, 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1101" name="comparison-operators.deep-equals[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1947353209" result="Passed" start-time="2022-01-16T22:25:09.6524085Z" end-time="2022-01-16T22:25:09.6525851Z" duration="0.000177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2] != [1, 2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2] != [1, 2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1102" name="comparison-operators.deep-equals[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1480829267" result="Passed" start-time="2022-01-16T22:25:09.6526494Z" end-time="2022-01-16T22:25:09.6534321Z" duration="0.000783" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,[3],4] = [1, 2, [3], 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,[3],4] = [1, 2, [3], 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1103" name="comparison-operators.deep-equals[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="806942439" result="Passed" start-time="2022-01-16T22:25:09.6553735Z" end-time="2022-01-16T22:25:09.6556660Z" duration="0.000270" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [1, 2, [3], 4]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [1, 2, [3], 4]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1104" name="comparison-operators.deep-equals[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="308690417" result="Passed" start-time="2022-01-16T22:25:09.6579258Z" end-time="2022-01-16T22:25:09.6583732Z" duration="0.000447" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3,4] = [2, 3, 4]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3,4] = [2, 3, 4]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1105" name="comparison-operators.deep-equals[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="183061999" result="Passed" start-time="2022-01-16T22:25:09.6593923Z" end-time="2022-01-16T22:25:09.6595683Z" duration="0.000176" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'data = [1, 2, 3, 4]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'data = [1, 2, 3, 4]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1106" name="comparison-operators.deep-equals[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2054921468" result="Passed" start-time="2022-01-16T22:25:09.6595800Z" end-time="2022-01-16T22:25:09.6597560Z" duration="0.000176" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'data[2] = 3';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'data[2] = 3'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1107" name="comparison-operators.deep-equals[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1724233541" result="Passed" start-time="2022-01-16T22:25:09.6601306Z" end-time="2022-01-16T22:25:09.6602958Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2 } = { 'two': 2, 'one': 1 }';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2 } = { 'two': 2, 'one': 1 }'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1108" name="comparison-operators.deep-equals[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1031508917" result="Passed" start-time="2022-01-16T22:25:09.6603085Z" end-time="2022-01-16T22:25:09.6606559Z" duration="0.000348" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2 } = { 'too': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2 } = { 'too': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1109" name="comparison-operators.deep-equals[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="628595541" result="Passed" start-time="2022-01-16T22:25:09.6606945Z" end-time="2022-01-16T22:25:09.6611718Z" duration="0.000477" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 3 } = { 'two': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 3 } = { 'two': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1110" name="comparison-operators.deep-equals[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="21798049" result="Passed" start-time="2022-01-16T22:25:09.6612038Z" end-time="2022-01-16T22:25:09.6614459Z" duration="0.000242" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'one': 1, 'two': 2, 'three': 3 } = { 'two': 2, 'one': 1 }';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'one': 1, 'two': 2, 'three': 3 } = { 'two': 2, 'one': 1 }'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1111" name="comparison-operators.deep-equals[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="37814574" result="Passed" start-time="2022-01-16T22:25:09.6614556Z" end-time="2022-01-16T22:25:09.6633667Z" duration="0.001912" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'two = 2';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'two = 2'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1112" name="comparison-operators.deep-equals[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1736551611" result="Passed" start-time="2022-01-16T22:25:09.6635514Z" end-time="2022-01-16T22:25:09.6648640Z" duration="0.001313" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'one + one = two';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'one + one = two'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1113" name="comparison-operators.deep-equals[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1664604107" result="Passed" start-time="2022-01-16T22:25:09.6676883Z" end-time="2022-01-16T22:25:09.6679503Z" duration="0.000262" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = null';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'null = null'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1114" name="comparison-operators.deep-equals[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1650510102" result="Passed" start-time="2022-01-16T22:25:09.6680212Z" end-time="2022-01-16T22:25:09.6681021Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null != null';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null != null'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1115" name="comparison-operators.deep-equals[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1192999059" result="Passed" start-time="2022-01-16T22:25:09.6681100Z" end-time="2022-01-16T22:25:09.6681758Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = nothing';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null = nothing'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1116" name="comparison-operators.deep-equals[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1637277184" result="Passed" start-time="2022-01-16T22:25:09.6681827Z" end-time="2022-01-16T22:25:09.6687738Z" duration="0.000591" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing = nothing';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing = nothing'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1117" name="comparison-operators.deep-equals[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="676353179" result="Passed" start-time="2022-01-16T22:25:09.6692812Z" end-time="2022-01-16T22:25:09.6699064Z" duration="0.000625" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Description = Account.Order[1].Product[0].Description';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Description = Account.Order[1].Product[0].Description'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1118" name="comparison-operators.deep-equals[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.comparison-operators.deep-equals[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1300895401" result="Passed" start-time="2022-01-16T22:25:09.6699230Z" end-time="2022-01-16T22:25:09.6762889Z" duration="0.006366" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0] = Account.Order[1].Product[0]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0] = Account.Order[1].Product[0]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1119" name="conditionals.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="75151553" result="Passed" start-time="2022-01-16T22:25:09.6763100Z" end-time="2022-01-16T22:25:09.6764688Z" duration="0.000159" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: &quot;Red&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: '"Red"'
Expected: '"Red"'
]]></output>
                </test-case>
                <test-case id="0-1120" name="conditionals.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="709153899" result="Passed" start-time="2022-01-16T22:25:09.6764790Z" end-time="2022-01-16T22:25:09.6765729Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: &quot;White&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: '"White"'
Expected: '"White"'
]]></output>
                </test-case>
                <test-case id="0-1121" name="conditionals.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1391132047" result="Passed" start-time="2022-01-16T22:25:09.6765823Z" end-time="2022-01-16T22:25:09.6766602Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[&quot;Red&quot;[$$=&quot;Bus&quot;], &quot;White&quot;[$$=&quot;Police Car&quot;]][0]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '["Red"[$$="Bus"], "White"[$$="Police Car"]][0]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1122" name="conditionals.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1956172012" result="Passed" start-time="2022-01-16T22:25:09.6766680Z" end-time="2022-01-16T22:25:09.6776569Z" duration="0.000989" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: &quot;Red&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: '"Red"'
Expected: '"Red"'
]]></output>
                </test-case>
                <test-case id="0-1123" name="conditionals.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="229502587" result="Passed" start-time="2022-01-16T22:25:09.6776750Z" end-time="2022-01-16T22:25:09.6781451Z" duration="0.000470" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: &quot;White&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: '"White"'
Expected: '"White"'
]]></output>
                </test-case>
                <test-case id="0-1124" name="conditionals.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1873150747" result="Passed" start-time="2022-01-16T22:25:09.6781780Z" end-time="2022-01-16T22:25:09.6782806Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup({&quot;Bus&quot;: &quot;Red&quot;, &quot;Police Car&quot;: &quot;White&quot;}, $$)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup({"Bus": "Red", "Police Car": "White"}, $$)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1125" name="conditionals.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1626605440" result="Passed" start-time="2022-01-16T22:25:09.6782903Z" end-time="2022-01-16T22:25:09.6789477Z" duration="0.000658" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot;)';&#xA; result: &quot;Cheap&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap")'
Result: '"Cheap"'
Expected: '"Cheap"'
]]></output>
                </test-case>
                <test-case id="0-1126" name="conditionals.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1418167025" result="Passed" start-time="2022-01-16T22:25:09.6793193Z" end-time="2022-01-16T22:25:09.6800631Z" duration="0.000744" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot; : &quot;Expensive&quot;)';&#xA; result: [&quot;Expensive&quot;,&quot;Cheap&quot;,&quot;Expensive&quot;,&quot;Expensive&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap" : "Expensive")'
Result: '["Expensive","Cheap","Expensive","Expensive"]'
Expected: '["Expensive","Cheap","Expensive","Expensive"]'
]]></output>
                </test-case>
                <test-case id="0-1127" name="conditionals.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.conditionals.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="888026271" result="Passed" start-time="2022-01-16T22:25:09.6800800Z" end-time="2022-01-16T22:25:09.6803493Z" duration="0.000270" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price &lt; 30 ? &quot;Cheap&quot; : Price &lt; 100 ? &quot;Expensive&quot; : &quot;Rip off&quot;)';&#xA; result: [&quot;Expensive&quot;,&quot;Cheap&quot;,&quot;Expensive&quot;,&quot;Rip off&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price < 30 ? "Cheap" : Price < 100 ? "Expensive" : "Rip off")'
Result: '["Expensive","Cheap","Expensive","Rip off"]'
Expected: '["Expensive","Cheap","Expensive","Rip off"]'
]]></output>
                </test-case>
                <test-case id="0-1128" name="context.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1794309140" result="Passed" start-time="2022-01-16T22:25:09.6803581Z" end-time="2022-01-16T22:25:09.6806252Z" duration="0.000267" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number()';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$number()'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-1129" name="context.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2133019019" result="Passed" start-time="2022-01-16T22:25:09.6809627Z" end-time="2022-01-16T22:25:09.6840719Z" duration="0.003109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..5].$string()';&#xA; result: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..5].$string()'
Result: '["1","2","3","4","5"]'
Expected: '["1","2","3","4","5"]'
]]></output>
                </test-case>
                <test-case id="0-1130" name="context.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2118729429" result="Passed" start-time="2022-01-16T22:25:09.6956069Z" end-time="2022-01-16T22:25:09.6961385Z" duration="0.000531" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..5].(&quot;Item &quot; &amp; $string())';&#xA; result: [&quot;Item 1&quot;,&quot;Item 2&quot;,&quot;Item 3&quot;,&quot;Item 4&quot;,&quot;Item 5&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..5].("Item " & $string())'
Result: '["Item 1","Item 2","Item 3","Item 4","Item 5"]'
Expected: '["Item 1","Item 2","Item 3","Item 4","Item 5"]'
]]></output>
                </test-case>
                <test-case id="0-1131" name="context.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.context.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1995988216" result="Passed" start-time="2022-01-16T22:25:09.6970348Z" end-time="2022-01-16T22:25:09.6979727Z" duration="0.000938" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.&quot;Product Name&quot;.$uppercase().$substringBefore(&quot; &quot;)';&#xA; result: [&quot;BOWLER&quot;,&quot;TRILBY&quot;,&quot;BOWLER&quot;,&quot;CLOAK&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product."Product Name".$uppercase().$substringBefore(" ")'
Result: '["BOWLER","TRILBY","BOWLER","CLOAK"]'
Expected: '["BOWLER","TRILBY","BOWLER","CLOAK"]'
]]></output>
                </test-case>
                <test-case id="0-1132" name="descendent-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="991219586" result="Passed" start-time="2022-01-16T22:25:09.6979902Z" end-time="2022-01-16T22:25:09.6992864Z" duration="0.001297" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.blah';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.blah'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-1133" name="descendent-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="158747007" result="Passed" start-time="2022-01-16T22:25:09.6993049Z" end-time="2022-01-16T22:25:09.6994591Z" duration="0.000154" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-1134" name="descendent-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="370410152" result="Passed" start-time="2022-01-16T22:25:09.6994676Z" end-time="2022-01-16T22:25:09.6995829Z" duration="0.000116" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1135" name="descendent-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="385472833" result="Passed" start-time="2022-01-16T22:25:09.7003964Z" end-time="2022-01-16T22:25:09.7011725Z" duration="0.000776" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo".**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1136" name="descendent-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1280452419" result="Passed" start-time="2022-01-16T22:25:09.7018608Z" end-time="2022-01-16T22:25:09.7022759Z" duration="0.000415" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1137" name="descendent-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1142632865" result="Passed" start-time="2022-01-16T22:25:09.7022904Z" end-time="2022-01-16T22:25:09.7024398Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.**.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo".**."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1138" name="descendent-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="276661967" result="Passed" start-time="2022-01-16T22:25:09.7024500Z" end-time="2022-01-16T22:25:09.7064456Z" duration="0.003996" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.**.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.**.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1139" name="descendent-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="569095345" result="Passed" start-time="2022-01-16T22:25:09.7078894Z" end-time="2022-01-16T22:25:09.7083416Z" duration="0.000452" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.*.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.*.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1140" name="descendent-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1099923214" result="Passed" start-time="2022-01-16T22:25:09.7089282Z" end-time="2022-01-16T22:25:09.7095582Z" duration="0.000630" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.**.Colour';&#xA; result: [&quot;Purple&quot;,&quot;Orange&quot;,&quot;Purple&quot;,&quot;Black&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.**.Colour'
Result: '["Purple","Orange","Purple","Black"]'
Expected: '["Purple","Orange","Purple","Black"]'
]]></output>
                </test-case>
                <test-case id="0-1141" name="descendent-operator.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="628631162" result="Passed" start-time="2022-01-16T22:25:09.7100883Z" end-time="2022-01-16T22:25:09.7103738Z" duration="0.000286" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.**.fud[0]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.**.fud[0]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1142" name="descendent-operator.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="975547821" result="Passed" start-time="2022-01-16T22:25:09.7103880Z" end-time="2022-01-16T22:25:09.7107756Z" duration="0.000388" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.**.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.**.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1143" name="descendent-operator.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1543043393" result="Passed" start-time="2022-01-16T22:25:09.7113326Z" end-time="2022-01-16T22:25:09.7115013Z" duration="0.000169" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(**.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(**.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1144" name="descendent-operator.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1743460098" result="Passed" start-time="2022-01-16T22:25:09.7115146Z" end-time="2022-01-16T22:25:09.7120272Z" duration="0.000513" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**.Price';&#xA; result: [34.45,21.67,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '**.Price'
Result: '[34.45,21.67,34.45,107.99]'
Expected: '[34.45,21.67,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1145" name="descendent-operator.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="979246363" result="Passed" start-time="2022-01-16T22:25:09.7121165Z" end-time="2022-01-16T22:25:09.7128126Z" duration="0.000696" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**.Price[0]';&#xA; result: [34.45,21.67,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '**.Price[0]'
Result: '[34.45,21.67,34.45,107.99]'
Expected: '[34.45,21.67,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1146" name="descendent-operator.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="798176488" result="Passed" start-time="2022-01-16T22:25:09.7128830Z" end-time="2022-01-16T22:25:09.7133642Z" duration="0.000481" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(**.Price)[0]';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is '(**.Price)[0]'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1147" name="descendent-operator.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1363613441" result="Passed" start-time="2022-01-16T22:25:09.7133753Z" end-time="2022-01-16T22:25:09.7135417Z" duration="0.000167" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.blah.**';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.blah.**'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1148" name="descendent-operator.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.descendent-operator.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1666908161" result="Passed" start-time="2022-01-16T22:25:09.7135676Z" end-time="2022-01-16T22:25:09.7136325Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '**'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1149" name="encoding.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="193537100" result="Passed" start-time="2022-01-16T22:25:09.7136404Z" end-time="2022-01-16T22:25:09.7150051Z" duration="0.001365" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64encode(&quot;hello:world&quot;)';&#xA; result: &quot;aGVsbG86d29ybGQ=&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$base64encode("hello:world")'
Result: '"aGVsbG86d29ybGQ="'
Expected: '"aGVsbG86d29ybGQ="'
]]></output>
                </test-case>
                <test-case id="0-1150" name="encoding.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="250098620" result="Passed" start-time="2022-01-16T22:25:09.7150957Z" end-time="2022-01-16T22:25:09.7155189Z" duration="0.000424" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64encode()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$base64encode()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1151" name="encoding.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1168875371" result="Passed" start-time="2022-01-16T22:25:09.7155648Z" end-time="2022-01-16T22:25:09.7159799Z" duration="0.000415" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64decode(&quot;aGVsbG86d29ybGQ=&quot;)';&#xA; result: &quot;hello:world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$base64decode("aGVsbG86d29ybGQ=")'
Result: '"hello:world"'
Expected: '"hello:world"'
]]></output>
                </test-case>
                <test-case id="0-1152" name="encoding.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.encoding.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2125340495" result="Passed" start-time="2022-01-16T22:25:09.7162105Z" end-time="2022-01-16T22:25:09.7163451Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$base64decode()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$base64decode()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1153" name="errors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="358490119" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7163584Z" end-time="2022-01-16T22:25:09.7247697Z" duration="0.008412" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;s&quot; - 1';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to evaluate numeric operation s - 1
(ErrBadNumericArguments)
   at Jsonata.Net.Native.Eval.EvalProcessor.evalNumericOperator(NumericOperatorNode numericOperatorNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 994
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 123
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"s" - 1'
]]></output>
                </test-case>
                <test-case id="0-1154" name="errors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="332612165" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7248914Z" end-time="2022-01-16T22:25:09.7264436Z" duration="0.001553" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1 + null';&#xA; result: error T2002" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to evaluate numeric operation 1 + 
(ErrBadNumericArguments)
   at Jsonata.Net.Native.Eval.EvalProcessor.evalNumericOperator(NumericOperatorNode numericOperatorNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 994
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 123
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '1 + null'
]]></output>
                </test-case>
                <test-case id="0-1155" name="errors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1815548752" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7281709Z" end-time="2022-01-16T22:25:09.7293087Z" duration="0.001138" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;no closing quote';&#xA; result: error S0101" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: unterminated string literal (no closing 'no closing quote')
(ErrUnterminatedString)
   at Jsonata.Net.Native.Parsing.Lexer.scanString(Char quoteChar) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 361
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 144
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"no closing quote'
]]></output>
                </test-case>
                <test-case id="0-1156" name="errors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2138664844" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7293283Z" end-time="2022-01-16T22:25:09.7299749Z" duration="0.000647" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '`no closing backtick';&#xA; result: error S0105" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: unterminated name (no closing 'no closing backtick')
(ErrUnterminatedName)
   at Jsonata.Net.Native.Parsing.Lexer.scanEscapedName(Char quoteChar) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 308
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 156
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '`no closing backtick'
]]></output>
                </test-case>
                <test-case id="0-1157" name="errors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1251326680" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7299891Z" end-time="2022-01-16T22:25:09.7361837Z" duration="0.006195" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '- &quot;s&quot;';&#xA; result: error D1002" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to evaluate a non-number s for a negation
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor.evalNegation(NegationNode negationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 956
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 89
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '- "s"'
]]></output>
                </test-case>
                <test-case id="0-1158" name="errors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1081275339" result="Passed" start-time="2022-01-16T22:25:09.7394328Z" end-time="2022-01-16T22:25:09.7413765Z" duration="0.001943" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'unknown(function)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'unknown(function)'
]]></output>
                </test-case>
                <test-case id="0-1159" name="errors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="829568624" result="Passed" start-time="2022-01-16T22:25:09.7416594Z" end-time="2022-01-16T22:25:09.7424859Z" duration="0.000827" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'sum(Account.Order.OrderID)';&#xA; result: error T1005" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1005]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'sum(Account.Order.OrderID)'
]]></output>
                </test-case>
                <test-case id="0-1160" name="errors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="912378621" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7425046Z" end-time="2022-01-16T22:25:09.7432545Z" duration="0.000750" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2)';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: expected token 'typeBracketClose', got 'Jsonata.Net.Native.Parsing.Token'
(ErrUnexpectedToken)
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 197
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 137
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2)'
]]></output>
                </test-case>
                <test-case id="0-1161" name="errors.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1166895197" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7432717Z" end-time="2022-01-16T22:25:09.7504939Z" duration="0.007222" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1:2]';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: expected token 'typeBracketClose', got 'Jsonata.Net.Native.Parsing.Token'
(ErrUnexpectedToken)
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 197
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 137
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1:2]'
]]></output>
                </test-case>
                <test-case id="0-1162" name="errors.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2077408048" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7521569Z" end-time="2022-01-16T22:25:09.7526939Z" duration="0.000537" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;foo&quot;, &quot;o, &quot;rr&quot;)';&#xA; result: error S0202" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: expected token 'typeParenClose', got 'Jsonata.Net.Native.Parsing.Token'
(ErrUnexpectedToken)
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 197
   at Jsonata.Net.Native.Parsing.Parser.parseFunctionCall(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 43
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("foo", "o, "rr")'
]]></output>
                </test-case>
                <test-case id="0-1163" name="errors.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1045973545" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7527133Z" end-time="2022-01-16T22:25:09.7549927Z" duration="0.002280" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1!2]';&#xA; result: error S0204" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: expected token 'typeBracketClose', got 'Jsonata.Net.Native.Parsing.Token'
(ErrUnexpectedToken)
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 197
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 137
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1!2]'
]]></output>
                </test-case>
                <test-case id="0-1164" name="errors.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="657349759" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7565358Z" end-time="2022-01-16T22:25:09.7572932Z" duration="0.000757" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '@ bar';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '@ bar'
]]></output>
                </test-case>
                <test-case id="0-1165" name="errors.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="173293480" result="Passed" start-time="2022-01-16T22:25:09.7582692Z" end-time="2022-01-16T22:25:09.7591017Z" duration="0.000833" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2(blah)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2(blah)'
]]></output>
                </test-case>
                <test-case id="0-1166" name="errors.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1194078635" result="Passed" start-time="2022-01-16T22:25:09.7596777Z" end-time="2022-01-16T22:25:09.7601245Z" duration="0.000447" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2()'
]]></output>
                </test-case>
                <test-case id="0-1167" name="errors.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1577804604" result="Passed" start-time="2022-01-16T22:25:09.7601417Z" end-time="2022-01-16T22:25:09.7614612Z" duration="0.001320" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '3(?)';&#xA; result: error T1008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1008]]></message>
                  </reason>
                  <output><![CDATA[Expr is '3(?)'
]]></output>
                </test-case>
                <test-case id="0-1168" name="errors.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1294193955" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7614820Z" end-time="2022-01-16T22:25:09.7619789Z" duration="0.000497" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1=';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: unexpected end of expression
(ErrUnexpectedEOF)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 211
   at Jsonata.Net.Native.Parsing.Parser.parseComparisonOperator(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 278
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '1='
]]></output>
                </test-case>
                <test-case id="0-1169" name="errors.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1265037269" result="Passed" start-time="2022-01-16T22:25:09.7619934Z" end-time="2022-01-16T22:25:09.7623182Z" duration="0.000325" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'function(x){$x}(3)';&#xA; result: error S0208" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0208]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'function(x){$x}(3)'
]]></output>
                </test-case>
                <test-case id="0-1170" name="errors.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2060030287" result="Passed" start-time="2022-01-16T22:25:09.7623384Z" end-time="2022-01-16T22:25:09.7626946Z" duration="0.000356" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'x:=1';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'x:=1'
]]></output>
                </test-case>
                <test-case id="0-1171" name="errors.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="494644319" result="Passed" start-time="2022-01-16T22:25:09.7627076Z" end-time="2022-01-16T22:25:09.7634598Z" duration="0.000753" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '2:=1';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212]]></message>
                  </reason>
                  <output><![CDATA[Expr is '2:=1'
]]></output>
                </test-case>
                <test-case id="0-1172" name="errors.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="399691212" result="Passed" start-time="2022-01-16T22:25:09.7636301Z" end-time="2022-01-16T22:25:09.7658033Z" duration="0.002173" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$foo()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$foo()'
]]></output>
                </test-case>
                <test-case id="0-1173" name="errors.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="731800056" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7694544Z" end-time="2022-01-16T22:25:09.7712043Z" duration="0.001750" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '55=&gt;5';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseComparisonOperator(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 278
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '55=>5'
]]></output>
                </test-case>
                <test-case id="0-1174" name="errors.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1122711986" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7712261Z" end-time="2022-01-16T22:25:09.7728006Z" duration="0.001575" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Ssum(:)';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseFunctionCall(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 34
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Ssum(:)'
]]></output>
                </test-case>
                <test-case id="0-1175" name="errors.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="80522737" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7733298Z" end-time="2022-01-16T22:25:09.7745349Z" duration="0.001205" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3]{&quot;num&quot;: $}[true]';&#xA; result: error S0209" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: a predicate cannot follow a grouping expression in a path step
(ErrGroupPredicate)
   at Jsonata.Net.Native.Parsing.PredicateNode_.optimize() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Nodes.cs:line 402
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 23
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2,3]{"num": $}[true]'
]]></output>
                </test-case>
                <test-case id="0-1176" name="errors.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="415584226" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7745551Z" end-time="2022-01-16T22:25:09.7752273Z" duration="0.000673" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3]{&quot;num&quot;: $}{&quot;num&quot;: $}';&#xA; result: error S0210" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: a path step can only have one grouping expression
(ErrGroupGroup)
   at Jsonata.Net.Native.Parsing.GroupNode.optimize() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Nodes.cs:line 464
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 23
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1,2,3]{"num": $}{"num": $}'
]]></output>
                </test-case>
                <test-case id="0-1177" name="errors.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="413128619" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7752430Z" end-time="2022-01-16T22:25:09.7758392Z" duration="0.000596" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product;';&#xA; result: error S0201" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: syntax error: 'Jsonata.Net.Native.Parsing.Token
(ErrSyntaxError)
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 21
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order[0].Product;'
]]></output>
                </test-case>
                <test-case id="0-1178" name="errors.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="633526136" result="Failed" start-time="2022-01-16T22:25:09.7758610Z" end-time="2022-01-16T22:25:09.7897929Z" duration="0.013932" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '( $A := function(){$min(2, 3)}; $A() )';&#xA; result: error " />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected: null
  But was:  "Function 'min' requires 1 arguments. Passed 2 arguments"
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 169
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '( $A := function(){$min(2, 3)}; $A() )'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected: null
  But was:  "Function 'min' requires 1 arguments. Passed 2 arguments"
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1179" name="errors.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.errors.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="893904384" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:09.7898167Z" end-time="2022-01-16T22:25:09.7903830Z" duration="0.000566" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '( $B := function(){''}; $A := function(){2 + $B()}; $A() )';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to evaluate numeric operation 2 + 
(ErrBadNumericArguments)
   at Jsonata.Net.Native.Eval.EvalProcessor.evalNumericOperator(NumericOperatorNode numericOperatorNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 994
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 123
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 29
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '( $B := function(){''}; $A := function(){2 + $B()}; $A() )'
]]></output>
                </test-case>
                <test-case id="0-1180" name="fields.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="828428952" result="Passed" start-time="2022-01-16T22:25:09.7903930Z" end-time="2022-01-16T22:25:09.7904932Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-1181" name="fields.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="54553584" result="Passed" start-time="2022-01-16T22:25:09.7905011Z" end-time="2022-01-16T22:25:09.7905913Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-1182" name="fields.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1368601757" result="Passed" start-time="2022-01-16T22:25:09.7906149Z" end-time="2022-01-16T22:25:09.7907725Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-1183" name="fields.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1600772040" result="Passed" start-time="2022-01-16T22:25:09.7907809Z" end-time="2022-01-16T22:25:09.7919941Z" duration="0.001214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-1184" name="fields.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1882920399" result="Passed" start-time="2022-01-16T22:25:09.7931524Z" end-time="2022-01-16T22:25:09.7935083Z" duration="0.000356" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1185" name="fields.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="949854058" result="Passed" start-time="2022-01-16T22:25:09.7950986Z" end-time="2022-01-16T22:25:09.7953938Z" duration="0.000295" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Other.Misc';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'Other.Misc'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1186" name="fields.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2018131368" result="Passed" start-time="2022-01-16T22:25:09.7989853Z" end-time="2022-01-16T22:25:09.8011181Z" duration="0.002132" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-1187" name="fields.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.fields.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="632729467" result="Passed" start-time="2022-01-16T22:25:09.8017203Z" end-time="2022-01-16T22:25:09.8018398Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-1188" name="flattening.array-inputs[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1973618489" result="Passed" start-time="2022-01-16T22:25:09.8018498Z" end-time="2022-01-16T22:25:09.8019328Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone';&#xA; result: [{&quot;number&quot;:0},{&quot;number&quot;:1},{&quot;number&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is 'phone'
Result: '[{"number":0},{"number":1},{"number":2}]'
Expected: '[{"number":0},{"number":1},{"number":2}]'
]]></output>
                </test-case>
                <test-case id="0-1189" name="flattening.array-inputs[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="702345047" result="Passed" start-time="2022-01-16T22:25:09.8019404Z" end-time="2022-01-16T22:25:09.8024031Z" duration="0.000463" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0]';&#xA; result: {&quot;number&quot;:0}" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0]'
Result: '{"number":0}'
Expected: '{"number":0}'
]]></output>
                </test-case>
                <test-case id="0-1190" name="flattening.array-inputs[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="394291636" result="Passed" start-time="2022-01-16T22:25:09.8024161Z" end-time="2022-01-16T22:25:09.8028774Z" duration="0.000461" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0][]';&#xA; result: [{&quot;number&quot;:0}]" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0][]'
Result: '[{"number":0}]'
Expected: '[{"number":0}]'
]]></output>
                </test-case>
                <test-case id="0-1191" name="flattening.array-inputs[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="29125739" result="Passed" start-time="2022-01-16T22:25:09.8029429Z" end-time="2022-01-16T22:25:09.8030461Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'phone[0].number';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is 'phone[0].number'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1192" name="flattening.array-inputs[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="61357526" result="Passed" start-time="2022-01-16T22:25:09.8038017Z" end-time="2022-01-16T22:25:09.8039104Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(phone)[0].number';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '(phone)[0].number'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1193" name="flattening.array-inputs[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1594576990" result="Passed" start-time="2022-01-16T22:25:09.8055133Z" end-time="2022-01-16T22:25:09.8058200Z" duration="0.000306" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.phone[0].number';&#xA; result: [0,1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$.phone[0].number'
Result: '[0,1,2]'
Expected: '[0,1,2]'
]]></output>
                </test-case>
                <test-case id="0-1194" name="flattening.array-inputs[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1804200371" result="Passed" start-time="2022-01-16T22:25:09.8060247Z" end-time="2022-01-16T22:25:09.8062520Z" duration="0.000227" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'Hello':'World'}';&#xA; result: {&quot;Hello&quot;:&quot;World&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '{'Hello':'World'}'
Result: '{"Hello":"World"}'
Expected: '{"Hello":"World"}'
]]></output>
                </test-case>
                <test-case id="0-1195" name="flattening.array-inputs[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.array-inputs[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2080511664" result="Passed" start-time="2022-01-16T22:25:09.8065502Z" end-time="2022-01-16T22:25:09.8066577Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.{'Hello':'World'}';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$.{'Hello':'World'}'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1196" name="flattening.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="698706761" result="Passed" start-time="2022-01-16T22:25:09.8067105Z" end-time="2022-01-16T22:25:09.8074791Z" duration="0.000769" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.[Product.Price]';&#xA; result: [[34.45,21.67],[34.45,107.99]]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.[Product.Price]'
Result: '[[34.45,21.67],[34.45,107.99]]'
Expected: '[[34.45,21.67],[34.45,107.99]]'
]]></output>
                </test-case>
                <test-case id="0-1197" name="flattening.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2077057923" result="Passed" start-time="2022-01-16T22:25:09.8079147Z" end-time="2022-01-16T22:25:09.8080285Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.nest0';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$.nest0'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1198" name="flattening.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="885693634" result="Passed" start-time="2022-01-16T22:25:09.8080402Z" end-time="2022-01-16T22:25:09.8084309Z" duration="0.000391" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1199" name="flattening.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1570166618" result="Passed" start-time="2022-01-16T22:25:09.8084435Z" end-time="2022-01-16T22:25:09.8085326Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]';&#xA; result: {&quot;nest0&quot;:[1,2]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]'
Result: '{"nest0":[1,2]}'
Expected: '{"nest0":[1,2]}'
]]></output>
                </test-case>
                <test-case id="0-1200" name="flattening.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1932651375" result="Passed" start-time="2022-01-16T22:25:09.8085407Z" end-time="2022-01-16T22:25:09.8087195Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1]';&#xA; result: {&quot;nest0&quot;:[3,4]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[1]'
Result: '{"nest0":[3,4]}'
Expected: '{"nest0":[3,4]}'
]]></output>
                </test-case>
                <test-case id="0-1201" name="flattening.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1367855531" result="Passed" start-time="2022-01-16T22:25:09.8087521Z" end-time="2022-01-16T22:25:09.8088293Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[-1]';&#xA; result: {&quot;nest0&quot;:[3,4]}" />
                  </properties>
                  <output><![CDATA[Expr is '$[-1]'
Result: '{"nest0":[3,4]}'
Expected: '{"nest0":[3,4]}'
]]></output>
                </test-case>
                <test-case id="0-1202" name="flattening.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="69419486" result="Passed" start-time="2022-01-16T22:25:09.8088372Z" end-time="2022-01-16T22:25:09.8089093Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0].nest0';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$[0].nest0'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1203" name="flattening.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="401870892" result="Passed" start-time="2022-01-16T22:25:09.8089166Z" end-time="2022-01-16T22:25:09.8089854Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1].nest0';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[1].nest0'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-1204" name="flattening.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="280990460" result="Passed" start-time="2022-01-16T22:25:09.8089926Z" end-time="2022-01-16T22:25:09.8090612Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0].nest0[0]';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$[0].nest0[0]'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1205" name="flattening.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1902937948" result="Passed" start-time="2022-01-16T22:25:09.8090681Z" end-time="2022-01-16T22:25:09.8105053Z" duration="0.001438" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.[nest3]]]';&#xA; result: [[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.[nest3]]]'
Result: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
Expected: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
]]></output>
                </test-case>
                <test-case id="0-1206" name="flattening.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="769184159" result="Passed" start-time="2022-01-16T22:25:09.8111438Z" end-time="2022-01-16T22:25:09.8132611Z" duration="0.002117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.[nest3]]';&#xA; result: [[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.[nest3]]'
Result: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
Expected: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1207" name="flattening.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1393540439" result="Passed" start-time="2022-01-16T22:25:09.8140906Z" end-time="2022-01-16T22:25:09.8143557Z" duration="0.000265" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.[nest3]]';&#xA; result: [[[1],[2],[3],[4]],[[5],[6],[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.[nest3]]'
Result: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
Expected: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1208" name="flattening.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1383261780" result="Passed" start-time="2022-01-16T22:25:09.8176726Z" end-time="2022-01-16T22:25:09.8181221Z" duration="0.000449" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.nest3]]';&#xA; result: [[[1,2],[3,4]],[[5,6],[7,8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.nest3]]'
Result: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
Expected: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
]]></output>
                </test-case>
                <test-case id="0-1209" name="flattening.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="252089428" result="Passed" start-time="2022-01-16T22:25:09.8185979Z" end-time="2022-01-16T22:25:09.8192209Z" duration="0.000623" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.nest3]';&#xA; result: [[1,2,3,4],[5,6,7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.nest3]'
Result: '[[1,2,3,4],[5,6,7,8]]'
Expected: '[[1,2,3,4],[5,6,7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1210" name="flattening.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1399964526" result="Passed" start-time="2022-01-16T22:25:09.8193534Z" end-time="2022-01-16T22:25:09.8197247Z" duration="0.000371" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.nest3]';&#xA; result: [[1,2],[3,4],[5,6],[7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.nest3]'
Result: '[[1,2],[3,4],[5,6],[7,8]]'
Expected: '[[1,2],[3,4],[5,6],[7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1211" name="flattening.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1725536225" result="Passed" start-time="2022-01-16T22:25:09.8201821Z" end-time="2022-01-16T22:25:09.8203852Z" duration="0.000203" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.[nest3]';&#xA; result: [[1],[2],[3],[4],[5],[6],[7],[8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.[nest3]'
Result: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
Expected: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
]]></output>
                </test-case>
                <test-case id="0-1212" name="flattening.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="617800544" result="Passed" start-time="2022-01-16T22:25:09.8204021Z" end-time="2022-01-16T22:25:09.8205513Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.nest3';&#xA; result: [1,2,3,4,5,6,7,8]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.nest3'
Result: '[1,2,3,4,5,6,7,8]'
Expected: '[1,2,3,4,5,6,7,8]'
]]></output>
                </test-case>
                <test-case id="0-1213" name="flattening.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="187370955" result="Passed" start-time="2022-01-16T22:25:09.8205591Z" end-time="2022-01-16T22:25:09.8210222Z" duration="0.000463" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.[nest3]]]';&#xA; result: [[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.[nest3]]]'
Result: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
Expected: '[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]'
]]></output>
                </test-case>
                <test-case id="0-1214" name="flattening.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1139672" result="Passed" start-time="2022-01-16T22:25:09.8223586Z" end-time="2022-01-16T22:25:09.8226423Z" duration="0.000284" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.[nest3]]';&#xA; result: [[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.[nest3]]'
Result: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
Expected: '[[[1],[2]],[[3],[4]],[[5],[6]],[[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1215" name="flattening.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="857825037" result="Passed" start-time="2022-01-16T22:25:09.8231214Z" end-time="2022-01-16T22:25:09.8233481Z" duration="0.000227" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.[nest3]]';&#xA; result: [[[1],[2],[3],[4]],[[5],[6],[7],[8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.[nest3]]'
Result: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
Expected: '[[[1],[2],[3],[4]],[[5],[6],[7],[8]]]'
]]></output>
                </test-case>
                <test-case id="0-1216" name="flattening.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1945777087" result="Passed" start-time="2022-01-16T22:25:09.8233626Z" end-time="2022-01-16T22:25:09.8239615Z" duration="0.000599" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.[nest2.nest3]]';&#xA; result: [[[1,2],[3,4]],[[5,6],[7,8]]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.[nest2.nest3]]'
Result: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
Expected: '[[[1,2],[3,4]],[[5,6],[7,8]]]'
]]></output>
                </test-case>
                <test-case id="0-1217" name="flattening.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="476636008" result="Passed" start-time="2022-01-16T22:25:09.8239766Z" end-time="2022-01-16T22:25:09.8245737Z" duration="0.000598" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.[nest1.nest2.nest3]';&#xA; result: [[1,2,3,4],[5,6,7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.[nest1.nest2.nest3]'
Result: '[[1,2,3,4],[5,6,7,8]]'
Expected: '[[1,2,3,4],[5,6,7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1218" name="flattening.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1310536793" result="Passed" start-time="2022-01-16T22:25:09.8246099Z" end-time="2022-01-16T22:25:09.8274152Z" duration="0.002806" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.[nest2.nest3]';&#xA; result: [[1,2],[3,4],[5,6],[7,8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.[nest2.nest3]'
Result: '[[1,2],[3,4],[5,6],[7,8]]'
Expected: '[[1,2],[3,4],[5,6],[7,8]]'
]]></output>
                </test-case>
                <test-case id="0-1219" name="flattening.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1854979348" result="Passed" start-time="2022-01-16T22:25:09.8274396Z" end-time="2022-01-16T22:25:09.8281234Z" duration="0.000684" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.[nest3]';&#xA; result: [[1],[2],[3],[4],[5],[6],[7],[8]]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.[nest3]'
Result: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
Expected: '[[1],[2],[3],[4],[5],[6],[7],[8]]'
]]></output>
                </test-case>
                <test-case id="0-1220" name="flattening.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="302645759" result="Passed" start-time="2022-01-16T22:25:09.8281397Z" end-time="2022-01-16T22:25:09.8282918Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1.nest2.nest3';&#xA; result: [1,2,3,4,5,6,7,8]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1.nest2.nest3'
Result: '[1,2,3,4,5,6,7,8]'
Expected: '[1,2,3,4,5,6,7,8]'
]]></output>
                </test-case>
                <test-case id="0-1221" name="flattening.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="561349168" result="Passed" start-time="2022-01-16T22:25:09.8289309Z" end-time="2022-01-16T22:25:09.8291422Z" duration="0.000211" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: 1 }.a';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": 1 }.a'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1222" name="flattening.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1751669762" result="Passed" start-time="2022-01-16T22:25:09.8292282Z" end-time="2022-01-16T22:25:09.8293182Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1223" name="flattening.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="591848908" result="Passed" start-time="2022-01-16T22:25:09.8294875Z" end-time="2022-01-16T22:25:09.8296536Z" duration="0.000166" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: [1] }.a';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": [1] }.a'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1224" name="flattening.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="870745633" result="Passed" start-time="2022-01-16T22:25:09.8300209Z" end-time="2022-01-16T22:25:09.8305740Z" duration="0.000553" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1225" name="flattening.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2030904548" result="Passed" start-time="2022-01-16T22:25:09.8311264Z" end-time="2022-01-16T22:25:09.8312417Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;a&quot;: [[1]] }.a';&#xA; result: [[1]]" />
                  </properties>
                  <output><![CDATA[Expr is '{"a": [[1]] }.a'
Result: '[[1]]'
Expected: '[[1]]'
]]></output>
                </test-case>
                <test-case id="0-1226" name="flattening.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="433286793" result="Passed" start-time="2022-01-16T22:25:09.8312562Z" end-time="2022-01-16T22:25:09.8317522Z" duration="0.000496" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [[1]]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[[1]]'
Expected: '[[1]]'
]]></output>
                </test-case>
                <test-case id="0-1227" name="flattening.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="952597869" result="Passed" start-time="2022-01-16T22:25:09.8318439Z" end-time="2022-01-16T22:25:09.8347847Z" duration="0.002941" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[{&quot;a&quot;:[1,2]}, {&quot;a&quot;:[3]}].a';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[{"a":[1,2]}, {"a":[3]}].a'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1228" name="flattening.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1075083332" result="Passed" start-time="2022-01-16T22:25:09.8353133Z" end-time="2022-01-16T22:25:09.8354217Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is 'a'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1229" name="flattening.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1189683969" result="Passed" start-time="2022-01-16T22:25:09.8359946Z" end-time="2022-01-16T22:25:09.8361845Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[{&quot;a&quot;:[{&quot;b&quot;:[1]}, {&quot;b&quot;:[2]}]}, {&quot;a&quot;:[{&quot;b&quot;:[3]}, {&quot;b&quot;:[4]}]}].a[0].b';&#xA; result: [1,3]" />
                  </properties>
                  <output><![CDATA[Expr is '[{"a":[{"b":[1]}, {"b":[2]}]}, {"a":[{"b":[3]}, {"b":[4]}]}].a[0].b'
Result: '[1,3]'
Expected: '[1,3]'
]]></output>
                </test-case>
                <test-case id="0-1230" name="flattening.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1529299623" result="Passed" start-time="2022-01-16T22:25:09.8367409Z" end-time="2022-01-16T22:25:09.8368556Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a[0].b';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is 'a[0].b'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1231" name="flattening.case034a" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case034a" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="486009950" result="Passed" start-time="2022-01-16T22:25:09.8374503Z" end-time="2022-01-16T22:25:09.8375764Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.a[0].b';&#xA; result: [1,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$.a[0].b'
Result: '[1,3]'
Expected: '[1,3]'
]]></output>
                </test-case>
                <test-case id="0-1232" name="flattening.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674918632" result="Passed" start-time="2022-01-16T22:25:09.8392835Z" end-time="2022-01-16T22:25:09.8394405Z" duration="0.000157" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'a.b[0]';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is 'a.b[0]'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1233" name="flattening.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1210843165" result="Passed" start-time="2022-01-16T22:25:09.8400319Z" end-time="2022-01-16T22:25:09.8401888Z" duration="0.000157" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;mobile&quot;].number';&#xA; result: &quot;077 7700 1234&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="mobile"].number'
Result: '"077 7700 1234"'
Expected: '"077 7700 1234"'
]]></output>
                </test-case>
                <test-case id="0-1234" name="flattening.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1108736656" result="Passed" start-time="2022-01-16T22:25:09.8408843Z" end-time="2022-01-16T22:25:09.8413550Z" duration="0.000470" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;mobile&quot;][].number';&#xA; result: [&quot;077 7700 1234&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="mobile"][].number'
Result: '["077 7700 1234"]'
Expected: '["077 7700 1234"]'
]]></output>
                </test-case>
                <test-case id="0-1235" name="flattening.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1608057068" result="Passed" start-time="2022-01-16T22:25:09.8437014Z" end-time="2022-01-16T22:25:09.8439202Z" duration="0.000219" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[][type=&quot;mobile&quot;].number';&#xA; result: [&quot;077 7700 1234&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[][type="mobile"].number'
Result: '["077 7700 1234"]'
Expected: '["077 7700 1234"]'
]]></output>
                </test-case>
                <test-case id="0-1236" name="flattening.case039" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case039" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2132617745" result="Passed" start-time="2022-01-16T22:25:09.8455648Z" end-time="2022-01-16T22:25:09.8467630Z" duration="0.001198" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone[type=&quot;office&quot;][].number';&#xA; result: [&quot;01962 001234&quot;,&quot;01962 001235&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone[type="office"][].number'
Result: '["01962 001234","01962 001235"]'
Expected: '["01962 001234","01962 001235"]'
]]></output>
                </test-case>
                <test-case id="0-1237" name="flattening.case040" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case040" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="966730865" result="Passed" start-time="2022-01-16T22:25:09.8473573Z" end-time="2022-01-16T22:25:09.8479653Z" duration="0.000608" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: number}';&#xA; result: {&quot;home&quot;:&quot;0203 544 1234&quot;,&quot;office&quot;:[&quot;01962 001234&quot;,&quot;01962 001235&quot;],&quot;mobile&quot;:&quot;077 7700 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: number}'
Result: '{"home":"0203 544 1234","office":["01962 001234","01962 001235"],"mobile":"077 7700 1234"}'
Expected: '{"home":"0203 544 1234","office":["01962 001234","01962 001235"],"mobile":"077 7700 1234"}'
]]></output>
                </test-case>
                <test-case id="0-1238" name="flattening.case041" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case041" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1319781580" result="Passed" start-time="2022-01-16T22:25:09.8484314Z" end-time="2022-01-16T22:25:09.8486059Z" duration="0.000175" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: number[]}';&#xA; result: {&quot;home&quot;:[&quot;0203 544 1234&quot;],&quot;office&quot;:[&quot;01962 001234&quot;,&quot;01962 001235&quot;],&quot;mobile&quot;:[&quot;077 7700 1234&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: number[]}'
Result: '{"home":["0203 544 1234"],"office":["01962 001234","01962 001235"],"mobile":["077 7700 1234"]}'
Expected: '{"home":["0203 544 1234"],"office":["01962 001234","01962 001235"],"mobile":["077 7700 1234"]}'
]]></output>
                </test-case>
                <test-case id="0-1239" name="flattening.case042" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case042" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2127466098" result="Passed" start-time="2022-01-16T22:25:09.8493011Z" end-time="2022-01-16T22:25:09.8494390Z" duration="0.000138" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[type='command'][]';&#xA; result: [{&quot;type&quot;:&quot;command&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$[type='command'][]'
Result: '[{"type":"command"}]'
Expected: '[{"type":"command"}]'
]]></output>
                </test-case>
                <test-case id="0-1240" name="flattening.case043" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case043" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="180669899" result="Passed" start-time="2022-01-16T22:25:09.8500316Z" end-time="2022-01-16T22:25:09.8504814Z" duration="0.000449" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[][type='command']';&#xA; result: [{&quot;type&quot;:&quot;command&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$[][type='command']'
Result: '[{"type":"command"}]'
Expected: '[{"type":"command"}]'
]]></output>
                </test-case>
                <test-case id="0-1241" name="flattening.case044" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case044" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="624590929" result="Passed" start-time="2022-01-16T22:25:09.8512874Z" end-time="2022-01-16T22:25:09.8520777Z" duration="0.000790" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter($, function($e) { $e != 0 })[]';&#xA; result: [5]" />
                  </properties>
                  <output><![CDATA[Expr is '$filter($, function($e) { $e != 0 })[]'
Result: '[5]'
Expected: '[5]'
]]></output>
                </test-case>
                <test-case id="0-1242" name="flattening.case045" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.case045" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1396951334" result="Passed" start-time="2022-01-16T22:25:09.8526633Z" end-time="2022-01-16T22:25:09.8528185Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.tags[title='example'][]';&#xA; result: [{&quot;title&quot;:&quot;example&quot;,&quot;description&quot;:&quot;Hello&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is '$.tags[title='example'][]'
Result: '[{"title":"example","description":"Hello"}]'
Expected: '[{"title":"example","description":"Hello"}]'
]]></output>
                </test-case>
                <test-case id="0-1243" name="flattening.large[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.large[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1721529061" result="Passed" start-time="2022-01-16T22:25:09.8532414Z" end-time="2022-01-16T22:25:14.4385478Z" duration="4.585364" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $data := { 'number': [1..2e5].$string() }; $values := $data.number; $count($values) )';&#xA; result: 200000" />
                  </properties>
                  <output><![CDATA[Expr is '( $data := { 'number': [1..2e5].$string() }; $values := $data.number; $count($values) )'
Result: '200000'
Expected: '200000'
]]></output>
                </test-case>
                <test-case id="0-1244" name="flattening.large[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.large[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1449864168" result="Passed" start-time="2022-01-16T22:25:14.4385753Z" end-time="2022-01-16T22:25:18.7487334Z" duration="4.310213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $data := { 'number': [1..2e5].$string() }; $values := $lookup($data, 'number'); $count($values) )';&#xA; result: 200000" />
                  </properties>
                  <output><![CDATA[Expr is '( $data := { 'number': [1..2e5].$string() }; $values := $lookup($data, 'number'); $count($values) )'
Result: '200000'
Expected: '200000'
]]></output>
                </test-case>
                <test-case id="0-1245" name="flattening.sequence-of-arrays[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="816239058" result="Passed" start-time="2022-01-16T22:25:18.7487796Z" end-time="2022-01-16T22:25:18.7489767Z" duration="0.000197" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1246" name="flattening.sequence-of-arrays[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1558808842" result="Passed" start-time="2022-01-16T22:25:18.7489894Z" end-time="2022-01-16T22:25:18.7490803Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds]';&#xA; result: [3,1578381600]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds]'
Result: '[3,1578381600]'
Expected: '[3,1578381600]'
]]></output>
                </test-case>
                <test-case id="0-1247" name="flattening.sequence-of-arrays[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2021470218" result="Passed" start-time="2022-01-16T22:25:18.7490893Z" end-time="2022-01-16T22:25:18.7492025Z" duration="0.000113" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600],[5,1578381700]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600],[5,1578381700]]'
Expected: '[[3,1578381600],[5,1578381700]]'
]]></output>
                </test-case>
                <test-case id="0-1248" name="flattening.sequence-of-arrays[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.flattening.sequence-of-arrays[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1593437318" result="Passed" start-time="2022-01-16T22:25:18.7492110Z" end-time="2022-01-16T22:25:18.7492925Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.[value,epochSeconds][]';&#xA; result: [[3,1578381600]]" />
                  </properties>
                  <output><![CDATA[Expr is '$.[value,epochSeconds][]'
Result: '[[3,1578381600]]'
Expected: '[[3,1578381600]]'
]]></output>
                </test-case>
                <test-case id="0-1249" name="function-abs.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="946375334" result="Passed" start-time="2022-01-16T22:25:18.7493432Z" end-time="2022-01-16T22:25:18.7506068Z" duration="0.001264" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(3.7)';&#xA; result: 3.7" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(3.7)'
Result: '3.7'
Expected: '3.7'
]]></output>
                </test-case>
                <test-case id="0-1250" name="function-abs.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="134734577" result="Passed" start-time="2022-01-16T22:25:18.7509045Z" end-time="2022-01-16T22:25:18.7510231Z" duration="0.000118" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(-3.7)';&#xA; result: 3.7" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(-3.7)'
Result: '3.7'
Expected: '3.7'
]]></output>
                </test-case>
                <test-case id="0-1251" name="function-abs.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="222070753" result="Passed" start-time="2022-01-16T22:25:18.7517524Z" end-time="2022-01-16T22:25:18.7519972Z" duration="0.000244" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1252" name="function-abs.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-abs.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="766521130" result="Passed" start-time="2022-01-16T22:25:18.7532388Z" end-time="2022-01-16T22:25:18.7534996Z" duration="0.000261" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$abs(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$abs(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1253" name="function-append.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1178197933" result="Passed" start-time="2022-01-16T22:25:18.7535271Z" end-time="2022-01-16T22:25:18.7543627Z" duration="0.000837" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append([1,2], [3,4])';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append([1,2], [3,4])'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1254" name="function-append.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1267520859" result="Passed" start-time="2022-01-16T22:25:18.7544267Z" end-time="2022-01-16T22:25:18.7545725Z" duration="0.000146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1, [3,4])';&#xA; result: [1,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1, [3,4])'
Result: '[1,3,4]'
Expected: '[1,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1255" name="function-append.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1371302207" result="Passed" start-time="2022-01-16T22:25:18.7545831Z" end-time="2022-01-16T22:25:18.7549356Z" duration="0.000353" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1,2)';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1,2)'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-1256" name="function-append.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1763669416" result="Passed" start-time="2022-01-16T22:25:18.7550359Z" end-time="2022-01-16T22:25:18.7551835Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(1,notexist)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$append(1,notexist)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1257" name="function-append.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1625054225" result="Passed" start-time="2022-01-16T22:25:18.7551953Z" end-time="2022-01-16T22:25:18.7555318Z" duration="0.000337" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$append(notexist, [2,3,4])';&#xA; result: [2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$append(notexist, [2,3,4])'
Result: '[2,3,4]'
Expected: '[2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1258" name="function-append.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-append.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1678608906" result="Passed" start-time="2022-01-16T22:25:18.7575423Z" end-time="2022-01-16T22:25:18.7578605Z" duration="0.000318" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($append($data.a, [2]); $data.a)';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '($append($data.a, [2]); $data.a)'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1259" name="function-applications.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="397569559" result="Passed" start-time="2022-01-16T22:25:18.7592062Z" end-time="2022-01-16T22:25:18.7609531Z" duration="0.001747" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].OrderID ~&gt; $uppercase()';&#xA; result: &quot;ORDER103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].OrderID ~> $uppercase()'
Result: '"ORDER103"'
Expected: '"ORDER103"'
]]></output>
                </test-case>
                <test-case id="0-1260" name="function-applications.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1469651155" result="Passed" start-time="2022-01-16T22:25:18.7611068Z" end-time="2022-01-16T22:25:18.7628498Z" duration="0.001743" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].OrderID ~&gt; $uppercase() ~&gt; $lowercase()';&#xA; result: &quot;order103&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].OrderID ~> $uppercase() ~> $lowercase()'
Result: '"order103"'
Expected: '"order103"'
]]></output>
                </test-case>
                <test-case id="0-1261" name="function-applications.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1964069937" result="Passed" start-time="2022-01-16T22:25:18.7637506Z" end-time="2022-01-16T22:25:18.7645139Z" duration="0.000763" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.OrderID ~&gt; $join()';&#xA; result: &quot;order103order104&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.OrderID ~> $join()'
Result: '"order103order104"'
Expected: '"order103order104"'
]]></output>
                </test-case>
                <test-case id="0-1262" name="function-applications.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="318457107" result="Passed" start-time="2022-01-16T22:25:18.7645432Z" end-time="2022-01-16T22:25:18.7647192Z" duration="0.000176" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.OrderID ~&gt; $join(&quot;, &quot;)';&#xA; result: &quot;order103, order104&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.OrderID ~> $join(", ")'
Result: '"order103, order104"'
Expected: '"order103, order104"'
]]></output>
                </test-case>
                <test-case id="0-1263" name="function-applications.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="193577811" result="Passed" start-time="2022-01-16T22:25:18.7647300Z" end-time="2022-01-16T22:25:18.7679659Z" duration="0.003236" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.(Price * Quantity) ~&gt; $sum()';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.(Price * Quantity) ~> $sum()'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1264" name="function-applications.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="870273452" result="Passed" start-time="2022-01-16T22:25:18.7680021Z" end-time="2022-01-16T22:25:18.7881588Z" duration="0.020157" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $uppertrim := $trim ~&gt; $uppercase;  $uppertrim(&quot;   Hello    World   &quot;) )';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $uppertrim := $trim ~> $uppercase;  $uppertrim("   Hello    World   ") )'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-1265" name="function-applications.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="913954576" result="Passed" start-time="2022-01-16T22:25:18.7881971Z" end-time="2022-01-16T22:25:18.7884715Z" duration="0.000275" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;john@example.com&quot; ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: &quot;example&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"john@example.com" ~> $substringAfter("@") ~> $substringBefore(".") '
Result: '"example"'
Expected: '"example"'
]]></output>
                </test-case>
                <test-case id="0-1266" name="function-applications.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="50617593" result="Passed" start-time="2022-01-16T22:25:18.7884960Z" end-time="2022-01-16T22:25:18.7886077Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;&quot; ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"" ~> $substringAfter("@") ~> $substringBefore(".") '
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1267" name="function-applications.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1554441026" result="Passed" start-time="2022-01-16T22:25:18.7886179Z" end-time="2022-01-16T22:25:18.7887734Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo ~&gt; $substringAfter(&quot;@&quot;) ~&gt; $substringBefore(&quot;.&quot;) ';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo ~> $substringAfter("@") ~> $substringBefore(".") '
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1268" name="function-applications.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1226117946" result="Passed" start-time="2022-01-16T22:25:18.7888899Z" end-time="2022-01-16T22:25:18.7909351Z" duration="0.002045" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $domain := $substringAfter(?,&quot;@&quot;) ~&gt; $substringBefore(?,&quot;.&quot;); $domain(&quot;john@example.com&quot;) )';&#xA; result: &quot;example&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $domain := $substringAfter(?,"@") ~> $substringBefore(?,"."); $domain("john@example.com") )'
Result: '"example"'
Expected: '"example"'
]]></output>
                </test-case>
                <test-case id="0-1269" name="function-applications.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="540566251" result="Passed" start-time="2022-01-16T22:25:18.7910096Z" end-time="2022-01-16T22:25:18.7918202Z" duration="0.000811" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $square := function($x){$x*$x}; [1..5] ~&gt; $map($square) ) ';&#xA; result: [1,4,9,16,25]" />
                  </properties>
                  <output><![CDATA[Expr is '( $square := function($x){$x*$x}; [1..5] ~> $map($square) ) '
Result: '[1,4,9,16,25]'
Expected: '[1,4,9,16,25]'
]]></output>
                </test-case>
                <test-case id="0-1270" name="function-applications.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="872690939" result="Passed" start-time="2022-01-16T22:25:18.7918513Z" end-time="2022-01-16T22:25:18.7936432Z" duration="0.001793" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $square := function($x){$x*$x}; [1..5] ~&gt; $map($square) ~&gt; $sum() ) ';&#xA; result: 55" />
                  </properties>
                  <output><![CDATA[Expr is '( $square := function($x){$x*$x}; [1..5] ~> $map($square) ~> $sum() ) '
Result: '55'
Expected: '55'
]]></output>
                </test-case>
                <test-case id="0-1271" name="function-applications.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="979046222" result="Passed" start-time="2022-01-16T22:25:18.7936746Z" end-time="2022-01-16T22:25:18.7938502Z" duration="0.000176" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($betweenBackets := $substringAfter(?, &quot;(&quot;) ~&gt; $substringBefore(?, &quot;)&quot;);$betweenBackets(&quot;test(foo)bar&quot;)) ';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($betweenBackets := $substringAfter(?, "(") ~> $substringBefore(?, ")");$betweenBackets("test(foo)bar")) '
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1272" name="function-applications.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1304338075" result="Passed" start-time="2022-01-16T22:25:18.7938605Z" end-time="2022-01-16T22:25:18.7955126Z" duration="0.001653" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){$g($f($x))}};$instructions := [$sum, $square];$sumsq := $instructions ~&gt; $reduce($chain);[1..5] ~&gt; $sumsq()) ';&#xA; result: 225" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){$g($f($x))}};$instructions := [$sum, $square];$sumsq := $instructions ~> $reduce($chain);[1..5] ~> $sumsq()) '
Result: '225'
Expected: '225'
]]></output>
                </test-case>
                <test-case id="0-1273" name="function-applications.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1330554342" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.7955465Z" end-time="2022-01-16T22:25:18.7971735Z" duration="0.001627" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){ $x ~&gt; $f ~&gt; $g }};$instructions := [$sum, $square, $string];$sumsq := $instructions ~&gt; $reduce($chain);[1..5] ~&gt; $sumsq()) ';&#xA; result: &quot;225&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Unable to cast object of type 'Newtonsoft.Json.Linq.JConstructor' to type 'Jsonata.Net.Native.Eval.FunctionToken'.
(InvalidCastException)
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 347
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 29
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 347
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 29
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 313
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){ $x ~> $f ~> $g }};$instructions := [$sum, $square, $string];$sumsq := $instructions ~> $reduce($chain);[1..5] ~> $sumsq()) '
]]></output>
                </test-case>
                <test-case id="0-1274" name="function-applications.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674309449" result="Passed" start-time="2022-01-16T22:25:18.7971947Z" end-time="2022-01-16T22:25:18.7973879Z" duration="0.000193" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$instructions := $sum ~&gt; $square;[1..5] ~&gt; $instructions())  ';&#xA; result: 225" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$instructions := $sum ~> $square;[1..5] ~> $instructions())  '
Result: '225'
Expected: '225'
]]></output>
                </test-case>
                <test-case id="0-1275" name="function-applications.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1825538477" result="Passed" start-time="2022-01-16T22:25:18.7973987Z" end-time="2022-01-16T22:25:18.7975572Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};$sum_of_squares := $map(?, $square) ~&gt; $sum;[1..5] ~&gt; $sum_of_squares())  ';&#xA; result: 55" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};$sum_of_squares := $map(?, $square) ~> $sum;[1..5] ~> $sum_of_squares())  '
Result: '55'
Expected: '55'
]]></output>
                </test-case>
                <test-case id="0-1276" name="function-applications.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1311881481" result="Passed" start-time="2022-01-16T22:25:18.7975669Z" end-time="2022-01-16T22:25:18.7977604Z" duration="0.000194" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($times := λ($x, $y) { $x * $y };$product := $reduce(?, $times);$square := function($x){$x*$x};$product_of_squares := $map(?, $square) ~&gt; $product;[1..5] ~&gt; $product_of_squares())';&#xA; result: 14400" />
                  </properties>
                  <output><![CDATA[Expr is '($times := λ($x, $y) { $x * $y };$product := $reduce(?, $times);$square := function($x){$x*$x};$product_of_squares := $map(?, $square) ~> $product;[1..5] ~> $product_of_squares())'
Result: '14400'
Expected: '14400'
]]></output>
                </test-case>
                <test-case id="0-1277" name="function-applications.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="30140701" result="Passed" start-time="2022-01-16T22:25:18.7978069Z" end-time="2022-01-16T22:25:18.7979493Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($square := function($x){$x*$x};[1..5] ~&gt; $map($square) ~&gt; $reduce(λ($x, $y) { $x * $y });)';&#xA; result: 14400" />
                  </properties>
                  <output><![CDATA[Expr is '($square := function($x){$x*$x};[1..5] ~> $map($square) ~> $reduce(λ($x, $y) { $x * $y });)'
Result: '14400'
Expected: '14400'
]]></output>
                </test-case>
                <test-case id="0-1278" name="function-applications.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1289468387" result="Passed" start-time="2022-01-16T22:25:18.7979584Z" end-time="2022-01-16T22:25:18.8003857Z" duration="0.002428" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($prices := Account.Order.Product.Price;$quantities := Account.Order.Product.Quantity;$product := λ($arr) { $arr[0] * $arr[1] };$zip($prices, $quantities) ~&gt; $map($product) ~&gt; $sum())';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is '($prices := Account.Order.Product.Price;$quantities := Account.Order.Product.Quantity;$product := λ($arr) { $arr[0] * $arr[1] };$zip($prices, $quantities) ~> $map($product) ~> $sum())'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1279" name="function-applications.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="54506575" result="Passed" start-time="2022-01-16T22:25:18.8005131Z" end-time="2022-01-16T22:25:18.8014315Z" duration="0.000918" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '42 ~&gt; &quot;hello&quot;';&#xA; result: error T2006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '42 ~> "hello"'
]]></output>
                </test-case>
                <test-case id="0-1280" name="function-applications.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-applications.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="472095706" result="Passed" start-time="2022-01-16T22:25:18.8014919Z" end-time="2022-01-16T22:25:18.8046943Z" duration="0.003203" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$.&quot;Product Name&quot; ~&gt; /hat/i].ProductID';&#xA; result: [858383,858236,858383]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$."Product Name" ~> /hat/i].ProductID'
Result: '[858383,858236,858383]'
Expected: '[858383,858236,858383]'
]]></output>
                </test-case>
                <test-case id="0-1281" name="function-assert.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="559300222" result="Passed" start-time="2022-01-16T22:25:18.8047143Z" end-time="2022-01-16T22:25:18.8059441Z" duration="0.001230" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$assert(Account.Order[0].Product[0].Price &lt; 34, 'Too Expensive')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$assert(Account.Order[0].Product[0].Price < 34, 'Too Expensive')'
]]></output>
                </test-case>
                <test-case id="0-1282" name="function-assert.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1506644198" result="Passed" start-time="2022-01-16T22:25:18.8059755Z" end-time="2022-01-16T22:25:18.8061813Z" duration="0.000206" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$assert(Account.Order[0].Product[0].Price &lt; 35, 'Too Expensive')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$assert(Account.Order[0].Product[0].Price < 35, 'Too Expensive')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1283" name="function-assert.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="128707998" result="Passed" start-time="2022-01-16T22:25:18.8061904Z" end-time="2022-01-16T22:25:18.8064307Z" duration="0.000241" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($assert(Account.Order[0].Product[0].Price &lt; 35, 'Too Expensive'); Account.Order[0].Product[0].Price)';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is '($assert(Account.Order[0].Product[0].Price < 35, 'Too Expensive'); Account.Order[0].Product[0].Price)'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1284" name="function-assert.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1054949392" result="Passed" start-time="2022-01-16T22:25:18.8064512Z" end-time="2022-01-16T22:25:18.8068023Z" duration="0.000351" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '($assert(Account.Order[0].Product[0].Price &lt; 34, 'Too Expensive'); Account.Order[0].Product[0].Price)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '($assert(Account.Order[0].Product[0].Price < 34, 'Too Expensive'); Account.Order[0].Product[0].Price)'
]]></output>
                </test-case>
                <test-case id="0-1285" name="function-assert.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1307228870" result="Passed" start-time="2022-01-16T22:25:18.8068237Z" end-time="2022-01-16T22:25:18.8072829Z" duration="0.000459" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$assert(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$assert(null)'
]]></output>
                </test-case>
                <test-case id="0-1286" name="function-assert.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1866972467" result="Passed" start-time="2022-01-16T22:25:18.8072946Z" end-time="2022-01-16T22:25:18.8076137Z" duration="0.000319" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$assert(5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$assert(5)'
]]></output>
                </test-case>
                <test-case id="0-1287" name="function-assert.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="496720699" result="Passed" start-time="2022-01-16T22:25:18.8079183Z" end-time="2022-01-16T22:25:18.8085933Z" duration="0.000675" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$assert(false)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$assert(false)'
]]></output>
                </test-case>
                <test-case id="0-1288" name="function-assert.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-assert.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2090805953" result="Passed" start-time="2022-01-16T22:25:18.8086117Z" end-time="2022-01-16T22:25:18.8087343Z" duration="0.000123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$assert(true)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$assert(true)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1289" name="function-average.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1884918096" result="Passed" start-time="2022-01-16T22:25:18.8087427Z" end-time="2022-01-16T22:25:18.8098104Z" duration="0.001068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(Account.Order.Product.(Price * Quantity))';&#xA; result: 84.09" />
                  </properties>
                  <output><![CDATA[Expr is '$average(Account.Order.Product.(Price * Quantity))'
Result: '84.09'
Expected: '84.09'
]]></output>
                </test-case>
                <test-case id="0-1290" name="function-average.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1991871299" result="Passed" start-time="2022-01-16T22:25:18.8098319Z" end-time="2022-01-16T22:25:18.8214747Z" duration="0.011643" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$average(Product.(Price * Quantity))';&#xA; result: [45.285000000000004,122.89500000000001]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$average(Product.(Price * Quantity))'
Result: '[45.285,122.895]'
Expected: '[45.285000000000004,122.89500000000001]'
]]></output>
                </test-case>
                <test-case id="0-1291" name="function-average.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="507563520" result="Passed" start-time="2022-01-16T22:25:18.8214980Z" end-time="2022-01-16T22:25:18.8222623Z" duration="0.000765" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $average(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 45.285&quot;,&quot;order104: 122.895&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $average(Product.(Price*Quantity)))'
Result: '["order103: 45.285","order104: 122.895"]'
Expected: '["order103: 45.285","order104: 122.895"]'
]]></output>
                </test-case>
                <test-case id="0-1292" name="function-average.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1435605606" result="Passed" start-time="2022-01-16T22:25:18.8223405Z" end-time="2022-01-16T22:25:18.8225270Z" duration="0.000186" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$average([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1293" name="function-average.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="922212021" result="Passed" start-time="2022-01-16T22:25:18.8227169Z" end-time="2022-01-16T22:25:18.8228295Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2,3])';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$average([1,2,3])'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1294" name="function-average.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="657814943" result="Passed" start-time="2022-01-16T22:25:18.8228724Z" end-time="2022-01-16T22:25:18.8235987Z" duration="0.000726" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1295" name="function-average.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="364083609" result="Passed" start-time="2022-01-16T22:25:18.8236270Z" end-time="2022-01-16T22:25:18.8248415Z" duration="0.001215" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1296" name="function-average.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="306133822" result="Passed" start-time="2022-01-16T22:25:18.8248647Z" end-time="2022-01-16T22:25:18.8249924Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$average(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1297" name="function-average.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1203373523" result="Passed" start-time="2022-01-16T22:25:18.8250253Z" end-time="2022-01-16T22:25:18.8272341Z" duration="0.002209" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([],[])'
]]></output>
                </test-case>
                <test-case id="0-1298" name="function-average.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="851255609" result="Passed" start-time="2022-01-16T22:25:18.8272688Z" end-time="2022-01-16T22:25:18.8284811Z" duration="0.001213" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1299" name="function-average.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="535909592" result="Passed" start-time="2022-01-16T22:25:18.8293556Z" end-time="2022-01-16T22:25:18.8301242Z" duration="0.000768" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1300" name="function-average.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="765621465" result="Passed" start-time="2022-01-16T22:25:18.8302441Z" end-time="2022-01-16T22:25:18.8308596Z" duration="0.000616" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$average([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$average([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1301" name="function-average.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-average.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="4367816" result="Passed" start-time="2022-01-16T22:25:18.8309130Z" end-time="2022-01-16T22:25:18.8310159Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$average(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$average(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1302" name="function-boolean.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="795352272" result="Passed" start-time="2022-01-16T22:25:18.8310259Z" end-time="2022-01-16T22:25:18.8311161Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(&quot;Hello World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean("Hello World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1303" name="function-boolean.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1052871067" result="Passed" start-time="2022-01-16T22:25:18.8311315Z" end-time="2022-01-16T22:25:18.8312007Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(&quot;&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean("")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1304" name="function-boolean.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="73684395" result="Passed" start-time="2022-01-16T22:25:18.8312091Z" end-time="2022-01-16T22:25:18.8312782Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(true)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(true)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1305" name="function-boolean.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1303172002" result="Passed" start-time="2022-01-16T22:25:18.8312858Z" end-time="2022-01-16T22:25:18.8313446Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(false)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(false)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1306" name="function-boolean.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1065216325" result="Passed" start-time="2022-01-16T22:25:18.8313522Z" end-time="2022-01-16T22:25:18.8314105Z" duration="0.000058" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(0)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(0)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1307" name="function-boolean.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1583450435" result="Passed" start-time="2022-01-16T22:25:18.8314177Z" end-time="2022-01-16T22:25:18.8314962Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(10)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(10)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1308" name="function-boolean.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1651372131" result="Passed" start-time="2022-01-16T22:25:18.8315040Z" end-time="2022-01-16T22:25:18.8315861Z" duration="0.000082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(-0.5)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(-0.5)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1309" name="function-boolean.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1589466029" result="Passed" start-time="2022-01-16T22:25:18.8315937Z" end-time="2022-01-16T22:25:18.8316701Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(null)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(null)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1310" name="function-boolean.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="59420726" result="Passed" start-time="2022-01-16T22:25:18.8316779Z" end-time="2022-01-16T22:25:18.8317567Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1311" name="function-boolean.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1733528715" result="Passed" start-time="2022-01-16T22:25:18.8317642Z" end-time="2022-01-16T22:25:18.8319870Z" duration="0.000223" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([0])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([0])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1312" name="function-boolean.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="335585838" result="Passed" start-time="2022-01-16T22:25:18.8320975Z" end-time="2022-01-16T22:25:18.8323134Z" duration="0.000216" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([1])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([1])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1313" name="function-boolean.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1624102331" result="Passed" start-time="2022-01-16T22:25:18.8323429Z" end-time="2022-01-16T22:25:18.8326019Z" duration="0.000259" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([1,2,3])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([1,2,3])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1314" name="function-boolean.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2072957500" result="Passed" start-time="2022-01-16T22:25:18.8326122Z" end-time="2022-01-16T22:25:18.8449744Z" duration="0.012362" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([0,0])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([0,0])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1315" name="function-boolean.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="910350933" result="Passed" start-time="2022-01-16T22:25:18.8449952Z" end-time="2022-01-16T22:25:18.8451371Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[]])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[]])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1316" name="function-boolean.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="457425739" result="Passed" start-time="2022-01-16T22:25:18.8451474Z" end-time="2022-01-16T22:25:18.8452246Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[null]])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[null]])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1317" name="function-boolean.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="189749109" result="Passed" start-time="2022-01-16T22:25:18.8452337Z" end-time="2022-01-16T22:25:18.8453167Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean([[[true]]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean([[[true]]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1318" name="function-boolean.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1286112066" result="Passed" start-time="2022-01-16T22:25:18.8453255Z" end-time="2022-01-16T22:25:18.8454429Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean({})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean({})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1319" name="function-boolean.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1710528229" result="Passed" start-time="2022-01-16T22:25:18.8455280Z" end-time="2022-01-16T22:25:18.8476179Z" duration="0.002090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean({"hello":"world"})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1320" name="function-boolean.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1194465756" result="Passed" start-time="2022-01-16T22:25:18.8476487Z" end-time="2022-01-16T22:25:18.8479101Z" duration="0.000262" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1321" name="function-boolean.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1701380541" result="Passed" start-time="2022-01-16T22:25:18.8481908Z" end-time="2022-01-16T22:25:18.8484861Z" duration="0.000296" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account.Order.Product.Price)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account.Order.Product.Price)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1322" name="function-boolean.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1611118720" result="Passed" start-time="2022-01-16T22:25:18.8486195Z" end-time="2022-01-16T22:25:18.8490303Z" duration="0.000411" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(Account.blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(Account.blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1323" name="function-boolean.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1488683497" result="Passed" start-time="2022-01-16T22:25:18.8494300Z" end-time="2022-01-16T22:25:18.8495414Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean($boolean)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean($boolean)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1324" name="function-boolean.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="696178599" result="Passed" start-time="2022-01-16T22:25:18.8495574Z" end-time="2022-01-16T22:25:18.8496362Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$boolean(function(){true})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$boolean(function(){true})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1325" name="function-boolean.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-boolean.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="365127419" result="Passed" start-time="2022-01-16T22:25:18.8496452Z" end-time="2022-01-16T22:25:18.8504093Z" duration="0.000764" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$boolean(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$boolean(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1326" name="function-ceil.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1690924263" result="Passed" start-time="2022-01-16T22:25:18.8508382Z" end-time="2022-01-16T22:25:18.8511579Z" duration="0.000320" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(3.7)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(3.7)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1327" name="function-ceil.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="382126054" result="Passed" start-time="2022-01-16T22:25:18.8511833Z" end-time="2022-01-16T22:25:18.8512913Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(-3.7)';&#xA; result: -3" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(-3.7)'
Result: '-3'
Expected: '-3'
]]></output>
                </test-case>
                <test-case id="0-1328" name="function-ceil.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="672739399" result="Passed" start-time="2022-01-16T22:25:18.8513016Z" end-time="2022-01-16T22:25:18.8513786Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1329" name="function-ceil.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-ceil.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1310225840" result="Passed" start-time="2022-01-16T22:25:18.8513876Z" end-time="2022-01-16T22:25:18.8514655Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ceil(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$ceil(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1330" name="function-contains.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1519404655" result="Passed" start-time="2022-01-16T22:25:18.8514743Z" end-time="2022-01-16T22:25:18.8545699Z" duration="0.003096" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;lo&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "lo")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1331" name="function-contains.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="108507958" result="Passed" start-time="2022-01-16T22:25:18.8545935Z" end-time="2022-01-16T22:25:18.8549998Z" duration="0.000407" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1332" name="function-contains.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1326368739" result="Passed" start-time="2022-01-16T22:25:18.8553811Z" end-time="2022-01-16T22:25:18.8554913Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;world&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "world")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1333" name="function-contains.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="753558795" result="Passed" start-time="2022-01-16T22:25:18.8555051Z" end-time="2022-01-16T22:25:18.8559443Z" duration="0.000440" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;Hello World&quot;, &quot;Word&quot;)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("Hello World", "Word")'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1334" name="function-contains.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1436368757" result="Passed" start-time="2022-01-16T22:25:18.8559685Z" end-time="2022-01-16T22:25:18.8560609Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(nothing, &quot;World&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$contains(nothing, "World")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1335" name="function-contains.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="467727890" result="Passed" start-time="2022-01-16T22:25:18.8560699Z" end-time="2022-01-16T22:25:18.8576611Z" duration="0.001591" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$contains(23, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$contains(23, 3)'
]]></output>
                </test-case>
                <test-case id="0-1336" name="function-contains.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-contains.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1911431597" result="Passed" start-time="2022-01-16T22:25:18.8591952Z" end-time="2022-01-16T22:25:18.8603912Z" duration="0.001195" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;23&quot;, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$contains("23", 3)'
]]></output>
                </test-case>
                <test-case id="0-1337" name="function-count.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="453773131" result="Passed" start-time="2022-01-16T22:25:18.8604108Z" end-time="2022-01-16T22:25:18.8610577Z" duration="0.000647" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order.Product.(Price * Quantity))';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order.Product.(Price * Quantity))'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1338" name="function-count.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="55023603" result="Passed" start-time="2022-01-16T22:25:18.8610837Z" end-time="2022-01-16T22:25:18.8617532Z" duration="0.000670" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$count(Product.(Price * Quantity))';&#xA; result: [2,2]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$count(Product.(Price * Quantity))'
Result: '[2,2]'
Expected: '[2,2]'
]]></output>
                </test-case>
                <test-case id="0-1339" name="function-count.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1899261037" result="Passed" start-time="2022-01-16T22:25:18.8621665Z" end-time="2022-01-16T22:25:18.8625934Z" duration="0.000427" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $count(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 2&quot;,&quot;order104: 2&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $count(Product.(Price*Quantity)))'
Result: '["order103: 2","order104: 2"]'
Expected: '["order103: 2","order104: 2"]'
]]></output>
                </test-case>
                <test-case id="0-1340" name="function-count.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="242012545" result="Passed" start-time="2022-01-16T22:25:18.8626154Z" end-time="2022-01-16T22:25:18.8627304Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([])';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$count([])'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1341" name="function-count.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="283522032" result="Passed" start-time="2022-01-16T22:25:18.8627404Z" end-time="2022-01-16T22:25:18.8628207Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count([1,2,3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1342" name="function-count.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="992832215" result="Passed" start-time="2022-01-16T22:25:18.8628291Z" end-time="2022-01-16T22:25:18.8631675Z" duration="0.000338" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count(["1","2","3"])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1343" name="function-count.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="501339924" result="Passed" start-time="2022-01-16T22:25:18.8632638Z" end-time="2022-01-16T22:25:18.8634232Z" duration="0.000159" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$count(["1","2",3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1344" name="function-count.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1825497370" result="Passed" start-time="2022-01-16T22:25:18.8634389Z" end-time="2022-01-16T22:25:18.8635222Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$count(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1345" name="function-count.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="258342584" result="Passed" start-time="2022-01-16T22:25:18.8635409Z" end-time="2022-01-16T22:25:18.8643421Z" duration="0.000801" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([],[])'
]]></output>
                </test-case>
                <test-case id="0-1346" name="function-count.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="171977682" result="Passed" start-time="2022-01-16T22:25:18.8644776Z" end-time="2022-01-16T22:25:18.8652148Z" duration="0.000737" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1347" name="function-count.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1958986922" result="Passed" start-time="2022-01-16T22:25:18.8655861Z" end-time="2022-01-16T22:25:18.8662001Z" duration="0.000614" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1348" name="function-count.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="996738168" result="Passed" start-time="2022-01-16T22:25:18.8662535Z" end-time="2022-01-16T22:25:18.8667287Z" duration="0.000475" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$count([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1349" name="function-count.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1894947657" result="Passed" start-time="2022-01-16T22:25:18.8667426Z" end-time="2022-01-16T22:25:18.8668331Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(undefined)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$count(undefined)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1350" name="function-count.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-count.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2054141517" result="Passed" start-time="2022-01-16T22:25:18.8668422Z" end-time="2022-01-16T22:25:18.8669213Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count([1,2,3,4]) / 2';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$count([1,2,3,4]) / 2'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1351" name="function-decodeUrl.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="116384713" result="Passed" start-time="2022-01-16T22:25:18.8669294Z" end-time="2022-01-16T22:25:18.8673086Z" duration="0.000379" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl(&quot;https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B&quot;)';&#xA; result: &quot;https://mozilla.org/?x=шеллы&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrl("https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B")'
Result: '"https://mozilla.org/?x=шеллы"'
Expected: '"https://mozilla.org/?x=шеллы"'
]]></output>
                </test-case>
                <test-case id="0-1352" name="function-decodeUrl.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2064745104" result="Passed" start-time="2022-01-16T22:25:18.8675824Z" end-time="2022-01-16T22:25:18.8681997Z" duration="0.000617" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrl(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1353" name="function-decodeUrl.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrl.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1288211027" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.8687892Z" end-time="2022-01-16T22:25:18.8699059Z" duration="0.001116" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrl('%E0%A4%A')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURI throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decodeUrl('%E0%A4%A')'
Result: '"%E0%A4%A"'
]]></output>
                </test-case>
                <test-case id="0-1354" name="function-decodeUrlComponent.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1488927483" result="Passed" start-time="2022-01-16T22:25:18.8708957Z" end-time="2022-01-16T22:25:18.8712585Z" duration="0.000363" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent(&quot;%3Fx%3Dtest&quot;)';&#xA; result: &quot;?x=test&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrlComponent("%3Fx%3Dtest")'
Result: '"?x=test"'
Expected: '"?x=test"'
]]></output>
                </test-case>
                <test-case id="0-1355" name="function-decodeUrlComponent.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1211724571" result="Passed" start-time="2022-01-16T22:25:18.8714040Z" end-time="2022-01-16T22:25:18.8717198Z" duration="0.000315" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$decodeUrlComponent(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1356" name="function-decodeUrlComponent.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-decodeUrlComponent.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="540732743" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.8717741Z" end-time="2022-01-16T22:25:18.8724198Z" duration="0.000646" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decodeUrlComponent('%E0%A4%A')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURIComponent throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decodeUrlComponent('%E0%A4%A')'
Result: '"%E0%A4%A"'
]]></output>
                </test-case>
                <test-case id="0-1357" name="function-distinct.distinct[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1454152422" result="Passed" start-time="2022-01-16T22:25:18.8724443Z" end-time="2022-01-16T22:25:18.8743095Z" duration="0.001866" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct([1,2,3,4])';&#xA; result: [1,2,3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct([1,2,3,4])'
Result: '[1,2,3,4]'
Expected: '[1,2,3,4]'
]]></output>
                </test-case>
                <test-case id="0-1358" name="function-distinct.distinct[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="356692468" result="Passed" start-time="2022-01-16T22:25:18.8747729Z" end-time="2022-01-16T22:25:18.8749740Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1359" name="function-distinct.distinct[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1856040623" result="Passed" start-time="2022-01-16T22:25:18.8750854Z" end-time="2022-01-16T22:25:18.8752061Z" duration="0.000121" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1360" name="function-distinct.distinct[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1759731386" result="Passed" start-time="2022-01-16T22:25:18.8752683Z" end-time="2022-01-16T22:25:18.8753921Z" duration="0.000123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(null)';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(null)'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1361" name="function-distinct.distinct[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="683090271" result="Passed" start-time="2022-01-16T22:25:18.8754005Z" end-time="2022-01-16T22:25:18.8756049Z" duration="0.000204" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct('hello')';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct('hello')'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1362" name="function-distinct.distinct[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="910711036" result="Passed" start-time="2022-01-16T22:25:18.8756438Z" end-time="2022-01-16T22:25:18.8760079Z" duration="0.000364" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.SKU)';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.SKU)'
Result: '["0406654608","0406634348","040657863","0406654603"]'
Expected: '["0406654608","0406634348","040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-1363" name="function-distinct.distinct[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="341146291" result="Passed" start-time="2022-01-16T22:25:18.8760202Z" end-time="2022-01-16T22:25:18.8763285Z" duration="0.000308" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.`Product Name`)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.`Product Name`)'
Result: '["Bowler Hat","Trilby hat","Cloak"]'
Expected: '["Bowler Hat","Trilby hat","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-1364" name="function-distinct.distinct[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-distinct.distinct[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="70061374" result="Passed" start-time="2022-01-16T22:25:18.8763390Z" end-time="2022-01-16T22:25:18.8789119Z" duration="0.002573" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$distinct(Account.Order.Product.Description)';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is '$distinct(Account.Order.Product.Description)'
Result: '[{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2}]'
Expected: '[{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2}]'
]]></output>
                </test-case>
                <test-case id="0-1365" name="function-each.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2098396415" result="Passed" start-time="2022-01-16T22:25:18.8798923Z" end-time="2022-01-16T22:25:18.8815297Z" duration="0.001637" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(Address, λ($v, $k) {$k &amp; &quot;: &quot; &amp; $v})';&#xA; result: [&quot;Street: Hursley Park&quot;,&quot;City: Winchester&quot;,&quot;Postcode: SO21 2JN&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each(Address, λ($v, $k) {$k & ": " & $v})'
Result: '["Street: Hursley Park","City: Winchester","Postcode: SO21 2JN"]'
Expected: '["Street: Hursley Park","City: Winchester","Postcode: SO21 2JN"]'
]]></output>
                </test-case>
                <test-case id="0-1366" name="function-each.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="407159976" result="Passed" start-time="2022-01-16T22:25:18.8816713Z" end-time="2022-01-16T22:25:18.8846984Z" duration="0.003027" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each({'a': 'hello', 'b': 'world'}, $uppercase)';&#xA; result: [&quot;HELLO&quot;,&quot;WORLD&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each({'a': 'hello', 'b': 'world'}, $uppercase)'
Result: '["HELLO","WORLD"]'
Expected: '["HELLO","WORLD"]'
]]></output>
                </test-case>
                <test-case id="0-1367" name="function-each.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-each.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1729510690" result="Passed" start-time="2022-01-16T22:25:18.8865730Z" end-time="2022-01-16T22:25:18.8874780Z" duration="0.000905" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(function($v, $k) {$k[$v&gt;2]})';&#xA; result: [&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$each(function($v, $k) {$k[$v>2]})'
Result: '["c","d"]'
Expected: '["c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1368" name="function-encodeUrl.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="187733574" result="Passed" start-time="2022-01-16T22:25:18.8874977Z" end-time="2022-01-16T22:25:18.8883891Z" duration="0.000892" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl(&quot;https://mozilla.org/?x=шеллы&quot;)';&#xA; result: &quot;https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrl("https://mozilla.org/?x=шеллы")'
Result: '"https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B"'
Expected: '"https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B"'
]]></output>
                </test-case>
                <test-case id="0-1369" name="function-encodeUrl.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1605229610" result="Passed" start-time="2022-01-16T22:25:18.8884078Z" end-time="2022-01-16T22:25:18.8888630Z" duration="0.000456" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrl(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1370" name="function-encodeUrl.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrl.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1146402983" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.8925658Z" end-time="2022-01-16T22:25:18.8932945Z" duration="0.000728" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrl('�')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURI throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$encodeUrl('�')'
Result: '"%EF%BF%BD"'
]]></output>
                </test-case>
                <test-case id="0-1371" name="function-encodeUrlComponent.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="3652608" result="Passed" start-time="2022-01-16T22:25:18.8933150Z" end-time="2022-01-16T22:25:18.8935719Z" duration="0.000257" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent(&quot;?x=test&quot;)';&#xA; result: &quot;%3Fx%3Dtest&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrlComponent("?x=test")'
Result: '"%3Fx%3Dtest"'
Expected: '"%3Fx%3Dtest"'
]]></output>
                </test-case>
                <test-case id="0-1372" name="function-encodeUrlComponent.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="134725506" result="Passed" start-time="2022-01-16T22:25:18.8935906Z" end-time="2022-01-16T22:25:18.8945973Z" duration="0.001007" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$encodeUrlComponent(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1373" name="function-encodeUrlComponent.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-encodeUrlComponent.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1534334676" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.8955207Z" end-time="2022-01-16T22:25:18.8959772Z" duration="0.000456" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$encodeUrlComponent('�')';&#xA; result: error " />
                  </properties>
                  <reason>
                    <message><![CDATA[JS function encodeURIComponent throws URIError 'if one attempts to encode a surrogate which is not part of a high-low pair', which is seem to be not a case with C#]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$encodeUrlComponent('�')'
Result: '"%EF%BF%BD"'
]]></output>
                </test-case>
                <test-case id="0-1374" name="function-error.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1468515684" result="Passed" start-time="2022-01-16T22:25:18.8962772Z" end-time="2022-01-16T22:25:18.8968514Z" duration="0.000574" asserts="2">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 35 ? Account.Order[0].Product[0].Price : $error('Too Expensive')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 35 ? Account.Order[0].Product[0].Price : $error('Too Expensive')'
]]></output>
                </test-case>
                <test-case id="0-1375" name="function-error.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="910943724" result="Passed" start-time="2022-01-16T22:25:18.8969127Z" end-time="2022-01-16T22:25:18.8975124Z" duration="0.000600" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 34 ? Account.Order[0].Product[0].Price : $error('Too Expensive')';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 34 ? Account.Order[0].Product[0].Price : $error('Too Expensive')'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1376" name="function-error.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="708548326" result="Passed" start-time="2022-01-16T22:25:18.8975272Z" end-time="2022-01-16T22:25:18.8992971Z" duration="0.001770" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 35 ? $error('Too Expensive') : Account.Order[0].Product[0].Price';&#xA; result: 34.45" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 35 ? $error('Too Expensive') : Account.Order[0].Product[0].Price'
Result: '34.45'
Expected: '34.45'
]]></output>
                </test-case>
                <test-case id="0-1377" name="function-error.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1109778796" result="Passed" start-time="2022-01-16T22:25:18.8993393Z" end-time="2022-01-16T22:25:18.9000813Z" duration="0.000742" asserts="2">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[0].Product[0].Price &gt; 34 ? $error('Too Expensive') : Account.Order[0].Product[0].Price';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order[0].Product[0].Price > 34 ? $error('Too Expensive') : Account.Order[0].Product[0].Price'
]]></output>
                </test-case>
                <test-case id="0-1378" name="function-error.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1810669774" result="Passed" start-time="2022-01-16T22:25:18.9001097Z" end-time="2022-01-16T22:25:18.9004964Z" duration="0.000386" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order[0].Product) &lt; 2 ? $error('Not enough products in orders')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order[0].Product) < 2 ? $error('Not enough products in orders')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1379" name="function-error.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="437836015" result="Passed" start-time="2022-01-16T22:25:18.9005332Z" end-time="2022-01-16T22:25:18.9010820Z" duration="0.000549" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$count(Account.Order[0].Product) &lt; 3 ? $error('Not enough products in orders')';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$count(Account.Order[0].Product) < 3 ? $error('Not enough products in orders')'
]]></output>
                </test-case>
                <test-case id="0-1380" name="function-error.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="193149737" result="Passed" start-time="2022-01-16T22:25:18.9010965Z" end-time="2022-01-16T22:25:18.9015985Z" duration="0.000502" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '($msg:='My Message'; $error($msg); true)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '($msg:='My Message'; $error($msg); true)'
]]></output>
                </test-case>
                <test-case id="0-1381" name="function-error.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1879420988" result="Passed" start-time="2022-01-16T22:25:18.9016100Z" end-time="2022-01-16T22:25:18.9022376Z" duration="0.000628" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$error(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$error(null)'
]]></output>
                </test-case>
                <test-case id="0-1382" name="function-error.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1532871533" result="Passed" start-time="2022-01-16T22:25:18.9022530Z" end-time="2022-01-16T22:25:18.9028468Z" duration="0.000594" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$error(5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$error(5)'
]]></output>
                </test-case>
                <test-case id="0-1383" name="function-error.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="925275389" result="Passed" start-time="2022-01-16T22:25:18.9028624Z" end-time="2022-01-16T22:25:18.9031118Z" duration="0.000249" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$error()';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$error()'
]]></output>
                </test-case>
                <test-case id="0-1384" name="function-error.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-error.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1403567970" result="Passed" start-time="2022-01-16T22:25:18.9031230Z" end-time="2022-01-16T22:25:18.9033720Z" duration="0.000249" asserts="2">
                  <properties>
                    <property name="Description" value="expr: '$error(foo)';&#xA; result: error " />
                  </properties>
                  <output><![CDATA[Expr is '$error(foo)'
]]></output>
                </test-case>
                <test-case id="0-1385" name="function-eval.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1403019942" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9033829Z" end-time="2022-01-16T22:25:18.9067994Z" duration="0.003417" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,2,3]')';&#xA; result: [1,2,3]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$eval('[1,2,3]')'
]]></output>
                </test-case>
                <test-case id="0-1386" name="function-eval.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="191246501" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9068236Z" end-time="2022-01-16T22:25:18.9074811Z" duration="0.000658" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval(nothing)';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$eval(nothing)'
]]></output>
                </test-case>
                <test-case id="0-1387" name="function-eval.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="38157712" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9074974Z" end-time="2022-01-16T22:25:18.9079864Z" duration="0.000489" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,$string(2),3]')';&#xA; result: [1,&quot;2&quot;,3]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$eval('[1,$string(2),3]')'
]]></output>
                </test-case>
                <test-case id="0-1388" name="function-eval.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1412114959" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9080317Z" end-time="2022-01-16T22:25:18.9085944Z" duration="0.000563" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('Account.Order.Product.Quantity ~&gt; $sum()')';&#xA; result: 8" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$eval('Account.Order.Product.Quantity ~> $sum()')'
]]></output>
                </test-case>
                <test-case id="0-1389" name="function-eval.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="224644186" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9086085Z" end-time="2022-01-16T22:25:18.9119149Z" duration="0.003307" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{'Name': `Product Name`, 'Total': $eval('Price * Quantity')}';&#xA; result: [{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Total&quot;:68.9},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;Total&quot;:21.67},{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Total&quot;:137.8},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;Total&quot;:107.99}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalObject(ObjectNode objectNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 935
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 95
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.{'Name': `Product Name`, 'Total': $eval('Price * Quantity')}'
]]></output>
                </test-case>
                <test-case id="0-1390" name="function-eval.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2074478794" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9123629Z" end-time="2022-01-16T22:25:18.9135158Z" duration="0.001073" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{'Name': `Product Name`, 'Volume': $eval('Width*Height*Depth', Description)}';&#xA; result: [{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;Volume&quot;:12600000},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;Volume&quot;:126000}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalObject(ObjectNode objectNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 935
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 95
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order.Product.{'Name': `Product Name`, 'Volume': $eval('Width*Height*Depth', Description)}'
]]></output>
                </test-case>
                <test-case id="0-1391" name="function-eval.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="457279175" result="Passed" start-time="2022-01-16T22:25:18.9135390Z" end-time="2022-01-16T22:25:18.9139399Z" duration="0.000401" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,string(2),3]')';&#xA; result: error D3121" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3121]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$eval('[1,string(2),3]')'
]]></output>
                </test-case>
                <test-case id="0-1392" name="function-eval.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="97080663" result="Passed" start-time="2022-01-16T22:25:18.9139544Z" end-time="2022-01-16T22:25:18.9157496Z" duration="0.001795" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval('[1,#string(2),3]')';&#xA; result: error D3120" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3120]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$eval('[1,#string(2),3]')'
]]></output>
                </test-case>
                <test-case id="0-1393" name="function-eval.case008[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="346466627" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9169640Z" end-time="2022-01-16T22:25:18.9178775Z" duration="0.000913" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;, [])';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }", [])'
]]></output>
                </test-case>
                <test-case id="0-1394" name="function-eval.case008[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="139529651" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9185045Z" end-time="2022-01-16T22:25:18.9192015Z" duration="0.000697" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;)';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }")'
]]></output>
                </test-case>
                <test-case id="0-1395" name="function-eval.case008[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1706405921" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9193047Z" end-time="2022-01-16T22:25:18.9208041Z" duration="0.001499" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;, [1,2,3])';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }", [1,2,3])'
]]></output>
                </test-case>
                <test-case id="0-1396" name="function-eval.case008[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-eval.case008[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1520294643" result="Failed" label="Error" start-time="2022-01-16T22:25:18.9209493Z" end-time="2022-01-16T22:25:18.9218193Z" duration="0.000870" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$eval(&quot;{ 'test': 1 }&quot;)';&#xA; result: {&quot;test&quot;:1}" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$eval']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$eval("{ 'test': 1 }")'
]]></output>
                </test-case>
                <test-case id="0-1397" name="function-exists.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="651685924" result="Passed" start-time="2022-01-16T22:25:18.9218945Z" end-time="2022-01-16T22:25:18.9221743Z" duration="0.000280" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(&quot;Hello World&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists("Hello World")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1398" name="function-exists.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="431278550" result="Passed" start-time="2022-01-16T22:25:18.9221915Z" end-time="2022-01-16T22:25:18.9223080Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(&quot;&quot;)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists("")'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1399" name="function-exists.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1874584602" result="Passed" start-time="2022-01-16T22:25:18.9223180Z" end-time="2022-01-16T22:25:18.9225359Z" duration="0.000218" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(true)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(true)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1400" name="function-exists.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1998666255" result="Passed" start-time="2022-01-16T22:25:18.9225471Z" end-time="2022-01-16T22:25:18.9226298Z" duration="0.000083" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(false)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(false)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1401" name="function-exists.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="589950639" result="Passed" start-time="2022-01-16T22:25:18.9226386Z" end-time="2022-01-16T22:25:18.9227962Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(0)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(0)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1402" name="function-exists.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1771253348" result="Passed" start-time="2022-01-16T22:25:18.9228064Z" end-time="2022-01-16T22:25:18.9228795Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(-0.5)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(-0.5)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1403" name="function-exists.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1538992205" result="Passed" start-time="2022-01-16T22:25:18.9228879Z" end-time="2022-01-16T22:25:18.9229468Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(null)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(null)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1404" name="function-exists.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="748544674" result="Passed" start-time="2022-01-16T22:25:18.9229543Z" end-time="2022-01-16T22:25:18.9231095Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1405" name="function-exists.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2050488909" result="Passed" start-time="2022-01-16T22:25:18.9232378Z" end-time="2022-01-16T22:25:18.9234370Z" duration="0.000200" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([0])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([0])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1406" name="function-exists.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2129142854" result="Passed" start-time="2022-01-16T22:25:18.9234597Z" end-time="2022-01-16T22:25:18.9235285Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([1,2,3])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([1,2,3])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1407" name="function-exists.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="530410428" result="Passed" start-time="2022-01-16T22:25:18.9235369Z" end-time="2022-01-16T22:25:18.9235952Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1408" name="function-exists.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1967178990" result="Passed" start-time="2022-01-16T22:25:18.9236028Z" end-time="2022-01-16T22:25:18.9236713Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[null]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[null]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1409" name="function-exists.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="577983759" result="Passed" start-time="2022-01-16T22:25:18.9237063Z" end-time="2022-01-16T22:25:18.9237724Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists([[[true]]])';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists([[[true]]])'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1410" name="function-exists.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="503176245" result="Passed" start-time="2022-01-16T22:25:18.9237799Z" end-time="2022-01-16T22:25:18.9238802Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists({})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists({})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1411" name="function-exists.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1578437594" result="Passed" start-time="2022-01-16T22:25:18.9238983Z" end-time="2022-01-16T22:25:18.9240211Z" duration="0.000123" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists({"hello":"world"})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1412" name="function-exists.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1790966295" result="Passed" start-time="2022-01-16T22:25:18.9240290Z" end-time="2022-01-16T22:25:18.9241401Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1413" name="function-exists.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2066340100" result="Passed" start-time="2022-01-16T22:25:18.9241528Z" end-time="2022-01-16T22:25:18.9242989Z" duration="0.000146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order.Product.Price)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order.Product.Price)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1414" name="function-exists.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1662890886" result="Passed" start-time="2022-01-16T22:25:18.9243064Z" end-time="2022-01-16T22:25:18.9243638Z" duration="0.000057" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists($exists)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists($exists)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1415" name="function-exists.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2027794045" result="Passed" start-time="2022-01-16T22:25:18.9243707Z" end-time="2022-01-16T22:25:18.9244296Z" duration="0.000059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(function(){true})';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(function(){true})'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-1416" name="function-exists.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1297702385" result="Passed" start-time="2022-01-16T22:25:18.9244365Z" end-time="2022-01-16T22:25:18.9245207Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1417" name="function-exists.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2132919294" result="Passed" start-time="2022-01-16T22:25:18.9245280Z" end-time="2022-01-16T22:25:18.9246309Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1418" name="function-exists.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1085061968" result="Passed" start-time="2022-01-16T22:25:18.9246385Z" end-time="2022-01-16T22:25:18.9247767Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order[2])';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order[2])'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1419" name="function-exists.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="814525079" result="Passed" start-time="2022-01-16T22:25:18.9247849Z" end-time="2022-01-16T22:25:18.9249388Z" duration="0.000154" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$exists(Account.Order[0].blah)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$exists(Account.Order[0].blah)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-1420" name="function-exists.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1907149914" result="Passed" start-time="2022-01-16T22:25:18.9249470Z" end-time="2022-01-16T22:25:18.9254698Z" duration="0.000523" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$exists(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$exists(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1421" name="function-exists.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-exists.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="369002264" result="Passed" start-time="2022-01-16T22:25:18.9254946Z" end-time="2022-01-16T22:25:18.9287276Z" duration="0.003233" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$exists()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$exists()'
]]></output>
                </test-case>
                <test-case id="0-1422" name="function-floor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="317395731" result="Passed" start-time="2022-01-16T22:25:18.9292568Z" end-time="2022-01-16T22:25:18.9296018Z" duration="0.000345" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(3.7)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(3.7)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1423" name="function-floor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2110573035" result="Passed" start-time="2022-01-16T22:25:18.9301379Z" end-time="2022-01-16T22:25:18.9303281Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(-3.7)';&#xA; result: -4" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(-3.7)'
Result: '-4'
Expected: '-4'
]]></output>
                </test-case>
                <test-case id="0-1424" name="function-floor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1678234463" result="Passed" start-time="2022-01-16T22:25:18.9303402Z" end-time="2022-01-16T22:25:18.9304132Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1425" name="function-floor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-floor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="689123808" result="Passed" start-time="2022-01-16T22:25:18.9304214Z" end-time="2022-01-16T22:25:18.9308380Z" duration="0.000417" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$floor(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$floor(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1426" name="function-formatBase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2054055592" result="Passed" start-time="2022-01-16T22:25:18.9308724Z" end-time="2022-01-16T22:25:18.9319781Z" duration="0.001106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100)';&#xA; result: &quot;100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(100)'
Result: '"100"'
Expected: '"100"'
]]></output>
                </test-case>
                <test-case id="0-1427" name="function-formatBase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1935742526" result="Passed" start-time="2022-01-16T22:25:18.9325143Z" end-time="2022-01-16T22:25:18.9327286Z" duration="0.000214" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1428" name="function-formatBase.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1394805025" result="Passed" start-time="2022-01-16T22:25:18.9328729Z" end-time="2022-01-16T22:25:18.9330371Z" duration="0.000165" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 2)';&#xA; result: &quot;1100100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(100, 2)'
Result: '"1100100"'
Expected: '"1100100"'
]]></output>
                </test-case>
                <test-case id="0-1429" name="function-formatBase.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1909593410" result="Passed" start-time="2022-01-16T22:25:18.9335246Z" end-time="2022-01-16T22:25:18.9336264Z" duration="0.000102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(-100, 2)';&#xA; result: &quot;-1100100&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatBase(-100, 2)'
Result: '"-1100100"'
Expected: '"-1100100"'
]]></output>
                </test-case>
                <test-case id="0-1430" name="function-formatBase.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1538132728" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.9336393Z" end-time="2022-01-16T22:25:18.9348242Z" duration="0.001185" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 36)';&#xA; result: &quot;2s&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatBase': No support for radix=36 in formatBase() yet
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 36)'
]]></output>
                </test-case>
                <test-case id="0-1431" name="function-formatBase.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="56862402" result="Failed" start-time="2022-01-16T22:25:18.9355680Z" end-time="2022-01-16T22:25:18.9413720Z" duration="0.005804" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(99.5, 2.5)';&#xA; result: &quot;1100100&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1100100"', got '"1100011"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatBase(99.5, 2.5)'
Result: '"1100011"'
Expected: '"1100100"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1100100"', got '"1100011"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1432" name="function-formatBase.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="678500246" result="Passed" start-time="2022-01-16T22:25:18.9413962Z" end-time="2022-01-16T22:25:18.9420679Z" duration="0.000672" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 1)';&#xA; result: error D3100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3100]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 1)'
]]></output>
                </test-case>
                <test-case id="0-1433" name="function-formatBase.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatBase.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2083568819" result="Passed" start-time="2022-01-16T22:25:18.9420829Z" end-time="2022-01-16T22:25:18.9427537Z" duration="0.000671" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatBase(100, 37)';&#xA; result: error D3100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3100]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$formatBase(100, 37)'
]]></output>
                </test-case>
                <test-case id="0-1434" name="function-formatInteger.formatInteger[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="586653407" result="Passed" start-time="2022-01-16T22:25:18.9427679Z" end-time="2022-01-16T22:25:18.9429487Z" duration="0.000181" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(undefined, '0')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Description: 'should return result object'
Expr is '$formatInteger(undefined, '0')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1435" name="function-formatInteger.formatInteger[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1750682745" result="Passed" start-time="2022-01-16T22:25:18.9429596Z" end-time="2022-01-16T22:25:18.9433623Z" duration="0.000403" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '000')';&#xA; result: &quot;123&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should format a number'
Expr is '$formatInteger(123, '000')'
Result: '"123"'
Expected: '"123"'
]]></output>
                </test-case>
                <test-case id="0-1436" name="function-formatInteger.formatInteger[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="108167640" result="Passed" start-time="2022-01-16T22:25:18.9434214Z" end-time="2022-01-16T22:25:18.9435953Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '0000')';&#xA; result: &quot;0123&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(123, '0000')'
Result: '"0123"'
Expected: '"0123"'
]]></output>
                </test-case>
                <test-case id="0-1437" name="function-formatInteger.formatInteger[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2141362975" result="Passed" start-time="2022-01-16T22:25:18.9436044Z" end-time="2022-01-16T22:25:18.9436801Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(-3, '0000')';&#xA; result: &quot;-0003&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(-3, '0000')'
Result: '"-0003"'
Expected: '"-0003"'
]]></output>
                </test-case>
                <test-case id="0-1438" name="function-formatInteger.formatInteger[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="176730715" result="Passed" start-time="2022-01-16T22:25:18.9436883Z" end-time="2022-01-16T22:25:18.9437526Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '0;c')';&#xA; result: &quot;1234&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '0;c')'
Result: '"1234"'
Expected: '"1234"'
]]></output>
                </test-case>
                <test-case id="0-1439" name="function-formatInteger.formatInteger[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1500562708" result="Passed" start-time="2022-01-16T22:25:18.9437601Z" end-time="2022-01-16T22:25:18.9439038Z" duration="0.000144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '###0')';&#xA; result: &quot;1234&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '###0')'
Result: '"1234"'
Expected: '"1234"'
]]></output>
                </test-case>
                <test-case id="0-1440" name="function-formatInteger.formatInteger[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1421360735" result="Passed" start-time="2022-01-16T22:25:18.9439141Z" end-time="2022-01-16T22:25:18.9448300Z" duration="0.000916" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '###0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(12, '###0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1441" name="function-formatInteger.formatInteger[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1808319720" result="Passed" start-time="2022-01-16T22:25:18.9456055Z" end-time="2022-01-16T22:25:18.9458865Z" duration="0.000281" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12.6, '###0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should round down floats'
Expr is '$formatInteger(12.6, '###0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1442" name="function-formatInteger.formatInteger[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="218462369" result="Failed" start-time="2022-01-16T22:25:18.9463197Z" end-time="2022-01-16T22:25:18.9477720Z" duration="0.001452" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123, '000;o')';&#xA; result: &quot;123rd&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"123rd"', got '"123"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format a number'
Expr is '$formatInteger(123, '000;o')'
Result: '"123"'
Expected: '"123rd"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"123rd"', got '"123"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1443" name="function-formatInteger.formatInteger[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="834131200" result="Failed" start-time="2022-01-16T22:25:18.9477934Z" end-time="2022-01-16T22:25:18.9483374Z" duration="0.000544" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1, '0;o')';&#xA; result: &quot;1st&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1st"', got '"1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1, '0;o')'
Result: '"1"'
Expected: '"1st"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1st"', got '"1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1444" name="function-formatInteger.formatInteger[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1868951588" result="Failed" start-time="2022-01-16T22:25:18.9483483Z" end-time="2022-01-16T22:25:18.9494392Z" duration="0.001091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(28, '#0;o')';&#xA; result: &quot;28th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"28th"', got '"28"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(28, '#0;o')'
Result: '"28"'
Expected: '"28th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"28th"', got '"28"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1445" name="function-formatInteger.formatInteger[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="496041200" result="Failed" start-time="2022-01-16T22:25:18.9504472Z" end-time="2022-01-16T22:25:18.9550706Z" duration="0.004623" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234, '###0;o')';&#xA; result: &quot;1234th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1234th"', got '"1234"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(1234, '###0;o')'
Result: '"1234"'
Expected: '"1234th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1234th"', got '"1234"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1446" name="function-formatInteger.formatInteger[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="813796527" result="Failed" start-time="2022-01-16T22:25:18.9601155Z" end-time="2022-01-16T22:25:18.9622086Z" duration="0.002093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '###0;o')';&#xA; result: &quot;12th&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12th"', got '"12"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$formatInteger(12, '###0;o')'
Result: '"12"'
Expected: '"12th"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12th"', got '"12"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1447" name="function-formatInteger.formatInteger[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="178224210" result="Failed" start-time="2022-01-16T22:25:18.9623729Z" end-time="2022-01-16T22:25:18.9633582Z" duration="0.000985" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '###١')';&#xA; result: &quot;١٢٣٤٠&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"١٢٣٤٠"', got '"12340١"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12340, '###١')'
Result: '"12340١"'
Expected: '"١٢٣٤٠"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"١٢٣٤٠"', got '"12340١"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1448" name="function-formatInteger.formatInteger[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="831059388" result="Failed" start-time="2022-01-16T22:25:18.9633775Z" end-time="2022-01-16T22:25:18.9640380Z" duration="0.000661" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '###０')';&#xA; result: &quot;１２３４０&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"１２３４０"', got '"12340０"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12340, '###０')'
Result: '"12340０"'
Expected: '"１２３４０"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"１２３４０"', got '"12340０"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1449" name="function-formatInteger.formatInteger[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="259219253" result="Failed" start-time="2022-01-16T22:25:18.9640549Z" end-time="2022-01-16T22:25:18.9653064Z" duration="0.001252" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12340, '##0０')';&#xA; result: error D3131" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3131 (), got '"12340０"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should throw error with mixed integer groups'
Expr is '$formatInteger(12340, '##0０')'
Result: '"12340０"'
Expected error D3131
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3131 (), got '"12340０"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1450" name="function-formatInteger.formatInteger[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="408703536" result="Passed" start-time="2022-01-16T22:25:18.9653261Z" end-time="2022-01-16T22:25:18.9654383Z" duration="0.000112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, '#,##0')';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12, '#,##0')'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-1451" name="function-formatInteger.formatInteger[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1534858996" result="Passed" start-time="2022-01-16T22:25:18.9654465Z" end-time="2022-01-16T22:25:18.9655120Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1200, '#,##0')';&#xA; result: &quot;1,200&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1200, '#,##0')'
Result: '"1,200"'
Expected: '"1,200"'
]]></output>
                </test-case>
                <test-case id="0-1452" name="function-formatInteger.formatInteger[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1714107603" result="Passed" start-time="2022-01-16T22:25:18.9655196Z" end-time="2022-01-16T22:25:18.9655823Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(120000, '#,##0')';&#xA; result: &quot;120,000&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(120000, '#,##0')'
Result: '"120,000"'
Expected: '"120,000"'
]]></output>
                </test-case>
                <test-case id="0-1453" name="function-formatInteger.formatInteger[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1764237118" result="Passed" start-time="2022-01-16T22:25:18.9655896Z" end-time="2022-01-16T22:25:18.9656509Z" duration="0.000062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12345678, '#,##0')';&#xA; result: &quot;12,345,678&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(12345678, '#,##0')'
Result: '"12,345,678"'
Expected: '"12,345,678"'
]]></output>
                </test-case>
                <test-case id="0-1454" name="function-formatInteger.formatInteger[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2114918335" result="Passed" start-time="2022-01-16T22:25:18.9657197Z" end-time="2022-01-16T22:25:18.9669875Z" duration="0.001268" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#,##0')';&#xA; result: &quot;1,234,567,890&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1234567890, '#,##0')'
Result: '"1,234,567,890"'
Expected: '"1,234,567,890"'
]]></output>
                </test-case>
                <test-case id="0-1455" name="function-formatInteger.formatInteger[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1629663991" result="Passed" start-time="2022-01-16T22:25:18.9750964Z" end-time="2022-01-16T22:25:18.9761514Z" duration="0.001054" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#,###,##0')';&#xA; result: &quot;1,234,567,890&quot;" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$formatInteger(1234567890, '#,###,##0')'
Result: '"1,234,567,890"'
Expected: '"1,234,567,890"'
]]></output>
                </test-case>
                <test-case id="0-1456" name="function-formatInteger.formatInteger[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="272554908" result="Failed" start-time="2022-01-16T22:25:18.9763745Z" end-time="2022-01-16T22:25:18.9787849Z" duration="0.002410" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '#:###,##0')';&#xA; result: &quot;1234:567,890&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1234:567,890"', got '"1,234,:567,890"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert non-regular groups - different chars'
Expr is '$formatInteger(1234567890, '#:###,##0')'
Result: '"1,234,:567,890"'
Expected: '"1234:567,890"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1234:567,890"', got '"1,234,:567,890"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1457" name="function-formatInteger.formatInteger[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1808163960" result="Failed" start-time="2022-01-16T22:25:18.9788296Z" end-time="2022-01-16T22:25:18.9811003Z" duration="0.002271" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890, '##,##,##0')';&#xA; result: &quot;12345,67,890&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12345,67,890"', got '"1,234,567,890"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should insert non-regular groups - different positions'
Expr is '$formatInteger(1234567890, '##,##,##0')'
Result: '"1,234,567,890"'
Expected: '"12345,67,890"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12345,67,890"', got '"1,234,567,890"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1458" name="function-formatInteger.formatInteger[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2008241389" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.9811259Z" end-time="2022-01-16T22:25:18.9853630Z" duration="0.004238" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(0, 'I')';&#xA; result: &quot;&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '0'
Expr is '$formatInteger(0, 'I')'
]]></output>
                </test-case>
                <test-case id="0-1459" name="function-formatInteger.formatInteger[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="59420866" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.9854034Z" end-time="2022-01-16T22:25:18.9898002Z" duration="0.004397" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1984, 'I')';&#xA; result: &quot;MCMLXXXIV&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1984'
Expr is '$formatInteger(1984, 'I')'
]]></output>
                </test-case>
                <test-case id="0-1460" name="function-formatInteger.formatInteger[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2143916964" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.9923350Z" end-time="2022-01-16T22:25:18.9939349Z" duration="0.001599" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'i')';&#xA; result: &quot;xcix&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'i')'
]]></output>
                </test-case>
                <test-case id="0-1461" name="function-formatInteger.formatInteger[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="193400328" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.9939621Z" end-time="2022-01-16T22:25:18.9949905Z" duration="0.001029" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'w')';&#xA; result: &quot;twelve&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1462" name="function-formatInteger.formatInteger[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1283089050" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:18.9951110Z" end-time="2022-01-16T22:25:18.9985303Z" duration="0.003419" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(20, 'w')';&#xA; result: &quot;twenty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$formatInteger(20, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1463" name="function-formatInteger.formatInteger[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="57585580" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0095733Z" end-time="2022-01-16T22:25:19.0106875Z" duration="0.001114" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(34, 'w')';&#xA; result: &quot;thirty-four&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$formatInteger(34, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1464" name="function-formatInteger.formatInteger[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1187334678" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0107723Z" end-time="2022-01-16T22:25:19.0130541Z" duration="0.002282" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'W')';&#xA; result: &quot;NINETY-NINE&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'W')'
]]></output>
                </test-case>
                <test-case id="0-1465" name="function-formatInteger.formatInteger[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="446313843" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0133520Z" end-time="2022-01-16T22:25:19.0156323Z" duration="0.002280" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(100, 'w')';&#xA; result: &quot;one hundred&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$formatInteger(100, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1466" name="function-formatInteger.formatInteger[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="899937348" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0156580Z" end-time="2022-01-16T22:25:19.0179631Z" duration="0.002306" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'W')';&#xA; result: &quot;FIVE HUNDRED AND FIFTY-FIVE&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'W')'
]]></output>
                </test-case>
                <test-case id="0-1467" name="function-formatInteger.formatInteger[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1854881123" result="Failed" start-time="2022-01-16T22:25:19.0179911Z" end-time="2022-01-16T22:25:19.0199575Z" duration="0.001966" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'Ww')';&#xA; result: &quot;Five Hundred and Fifty-Five&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Five Hundred and Fifty-Five"', got '"Ww"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'Ww')'
Result: '"Ww"'
Expected: '"Five Hundred and Fifty-Five"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Five Hundred and Fifty-Five"', got '"Ww"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1468" name="function-formatInteger.formatInteger[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1479686693" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0207629Z" end-time="2022-01-16T22:25:19.0217464Z" duration="0.000983" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(919, 'w')';&#xA; result: &quot;nine hundred and nineteen&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$formatInteger(919, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1469" name="function-formatInteger.formatInteger[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2059691788" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0217751Z" end-time="2022-01-16T22:25:19.0232573Z" duration="0.001482" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(730, 'w')';&#xA; result: &quot;seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$formatInteger(730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1470" name="function-formatInteger.formatInteger[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1919626405" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0278243Z" end-time="2022-01-16T22:25:19.0319394Z" duration="0.004115" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000, 'w')';&#xA; result: &quot;one thousand&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$formatInteger(1000, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1471" name="function-formatInteger.formatInteger[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1303823057" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0329087Z" end-time="2022-01-16T22:25:19.0337880Z" duration="0.000879" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(3730, 'w')';&#xA; result: &quot;three thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$formatInteger(3730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1472" name="function-formatInteger.formatInteger[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1956188579" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0338058Z" end-time="2022-01-16T22:25:19.0388637Z" duration="0.005058" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(327730, 'w')';&#xA; result: &quot;three hundred and twenty-seven thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$formatInteger(327730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1473" name="function-formatInteger.formatInteger[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1731982907" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0388890Z" end-time="2022-01-16T22:25:19.0397928Z" duration="0.000904" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(4327730, 'w')';&#xA; result: &quot;four million, three hundred and twenty-seven thousand, seven hundred and thirty&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$formatInteger(4327730, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1474" name="function-formatInteger.formatInteger[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1540647991" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0398103Z" end-time="2022-01-16T22:25:19.0413067Z" duration="0.001496" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000001, 'w')';&#xA; result: &quot;one trillion and one&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$formatInteger(1000000000001, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1475" name="function-formatInteger.formatInteger[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="98830194" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0413284Z" end-time="2022-01-16T22:25:19.0432885Z" duration="0.001960" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890123, 'w')';&#xA; result: &quot;one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123'
Expr is '$formatInteger(1234567890123, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1476" name="function-formatInteger.formatInteger[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="150539895" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0433126Z" end-time="2022-01-16T22:25:19.0450876Z" duration="0.001775" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000000000, 'w')';&#xA; result: &quot;one thousand trillion&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e15'
Expr is '$formatInteger(1000000000000000, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1477" name="function-formatInteger.formatInteger[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1630748178" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0452624Z" end-time="2022-01-16T22:25:19.0470546Z" duration="0.001793" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1e+46, 'w')';&#xA; result: &quot;ten billion trillion trillion trillion&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e46'
Expr is '$formatInteger(1e+46, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1478" name="function-formatInteger.formatInteger[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="241621447" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0470776Z" end-time="2022-01-16T22:25:19.0479599Z" duration="0.000883" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1234567890123456, 'w')';&#xA; result: &quot;one thousand, two hundred and thirty-four trillion, five hundred and sixty-seven billion, eight hundred and ninety million, one hundred and twenty-three thousand, four hundred and fifty-six&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123456'
Expr is '$formatInteger(1234567890123456, 'w')'
]]></output>
                </test-case>
                <test-case id="0-1479" name="function-formatInteger.formatInteger[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1182193263" result="Failed" start-time="2022-01-16T22:25:19.0494651Z" end-time="2022-01-16T22:25:19.0507821Z" duration="0.001317" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'w;o')';&#xA; result: &quot;twelfth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"twelfth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'w;o')'
Result: '"w"'
Expected: '"twelfth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"twelfth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1480" name="function-formatInteger.formatInteger[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2022810928" result="Failed" start-time="2022-01-16T22:25:19.0509436Z" end-time="2022-01-16T22:25:19.0516147Z" duration="0.000671" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(20, 'w;o')';&#xA; result: &quot;twentieth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"twentieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '20'
Expr is '$formatInteger(20, 'w;o')'
Result: '"w"'
Expected: '"twentieth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"twentieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1481" name="function-formatInteger.formatInteger[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1875831382" result="Failed" start-time="2022-01-16T22:25:19.0518930Z" end-time="2022-01-16T22:25:19.0524910Z" duration="0.000598" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(34, 'w;o')';&#xA; result: &quot;thirty-fourth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"thirty-fourth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '34'
Expr is '$formatInteger(34, 'w;o')'
Result: '"w"'
Expected: '"thirty-fourth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"thirty-fourth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1482" name="function-formatInteger.formatInteger[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1104683138" result="Failed" start-time="2022-01-16T22:25:19.0528526Z" end-time="2022-01-16T22:25:19.0553944Z" duration="0.002542" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(99, 'W;o')';&#xA; result: &quot;NINETY-NINTH&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"NINETY-NINTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '99'
Expr is '$formatInteger(99, 'W;o')'
Result: '"W"'
Expected: '"NINETY-NINTH"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"NINETY-NINTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1483" name="function-formatInteger.formatInteger[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1135585772" result="Failed" start-time="2022-01-16T22:25:19.0567350Z" end-time="2022-01-16T22:25:19.0575105Z" duration="0.000776" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(100, 'w;o')';&#xA; result: &quot;one hundredth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one hundredth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '100'
Expr is '$formatInteger(100, 'w;o')'
Result: '"w"'
Expected: '"one hundredth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one hundredth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1484" name="function-formatInteger.formatInteger[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1500889874" result="Failed" start-time="2022-01-16T22:25:19.0575736Z" end-time="2022-01-16T22:25:19.0589731Z" duration="0.001399" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(555, 'W;o')';&#xA; result: &quot;FIVE HUNDRED AND FIFTY-FIFTH&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"FIVE HUNDRED AND FIFTY-FIFTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '555'
Expr is '$formatInteger(555, 'W;o')'
Result: '"W"'
Expected: '"FIVE HUNDRED AND FIFTY-FIFTH"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"FIVE HUNDRED AND FIFTY-FIFTH"', got '"W"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1485" name="function-formatInteger.formatInteger[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="3273732" result="Failed" start-time="2022-01-16T22:25:19.0596133Z" end-time="2022-01-16T22:25:19.0616947Z" duration="0.002081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(919, 'w;o')';&#xA; result: &quot;nine hundred and nineteenth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"nine hundred and nineteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '919'
Expr is '$formatInteger(919, 'w;o')'
Result: '"w"'
Expected: '"nine hundred and nineteenth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"nine hundred and nineteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1486" name="function-formatInteger.formatInteger[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="490238446" result="Failed" start-time="2022-01-16T22:25:19.0628593Z" end-time="2022-01-16T22:25:19.0655055Z" duration="0.002618" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(730, 'w;o')';&#xA; result: &quot;seven hundred and thirtieth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"seven hundred and thirtieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '730'
Expr is '$formatInteger(730, 'w;o')'
Result: '"w"'
Expected: '"seven hundred and thirtieth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"seven hundred and thirtieth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1487" name="function-formatInteger.formatInteger[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1061746775" result="Failed" start-time="2022-01-16T22:25:19.0655288Z" end-time="2022-01-16T22:25:19.0670565Z" duration="0.001528" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000, 'w;o')';&#xA; result: &quot;one thousandth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one thousandth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1000'
Expr is '$formatInteger(1000, 'w;o')'
Result: '"w"'
Expected: '"one thousandth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one thousandth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1488" name="function-formatInteger.formatInteger[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2116134131" result="Failed" start-time="2022-01-16T22:25:19.0670985Z" end-time="2022-01-16T22:25:19.0688134Z" duration="0.001715" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(3731, 'w;o')';&#xA; result: &quot;three thousand, seven hundred and thirty-first&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"three thousand, seven hundred and thirty-first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '3730'
Expr is '$formatInteger(3731, 'w;o')'
Result: '"w"'
Expected: '"three thousand, seven hundred and thirty-first"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"three thousand, seven hundred and thirty-first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1489" name="function-formatInteger.formatInteger[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1104473063" result="Failed" start-time="2022-01-16T22:25:19.0691624Z" end-time="2022-01-16T22:25:19.0698347Z" duration="0.000672" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(327713, 'w;o')';&#xA; result: &quot;three hundred and twenty-seven thousand, seven hundred and thirteenth&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"three hundred and twenty-seven thousand, seven hundred and thirteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '327730'
Expr is '$formatInteger(327713, 'w;o')'
Result: '"w"'
Expected: '"three hundred and twenty-seven thousand, seven hundred and thirteenth"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"three hundred and twenty-seven thousand, seven hundred and thirteenth"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1490" name="function-formatInteger.formatInteger[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1478127837" result="Failed" start-time="2022-01-16T22:25:19.0706871Z" end-time="2022-01-16T22:25:19.0718605Z" duration="0.001173" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(4327732, 'w;o')';&#xA; result: &quot;four million, three hundred and twenty-seven thousand, seven hundred and thirty-second&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '4327730'
Expr is '$formatInteger(4327732, 'w;o')'
Result: '"w"'
Expected: '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"four million, three hundred and twenty-seven thousand, seven hundred and thirty-second"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1491" name="function-formatInteger.formatInteger[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="447487327" result="Failed" start-time="2022-01-16T22:25:19.0718783Z" end-time="2022-01-16T22:25:19.0725301Z" duration="0.000652" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1000000000001, 'w;o')';&#xA; result: &quot;one trillion and first&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"one trillion and first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$formatInteger(1000000000001, 'w;o')'
Result: '"w"'
Expected: '"one trillion and first"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"one trillion and first"', got '"w"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1492" name="function-formatInteger.formatInteger[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="133121586" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0725448Z" end-time="2022-01-16T22:25:19.0736310Z" duration="0.001086" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(1, 'A')';&#xA; result: &quot;A&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1'
Expr is '$formatInteger(1, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1493" name="function-formatInteger.formatInteger[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117309849" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0736476Z" end-time="2022-01-16T22:25:19.0746875Z" duration="0.001040" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(12, 'a')';&#xA; result: &quot;l&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$formatInteger(12, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1494" name="function-formatInteger.formatInteger[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1504129391" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0747050Z" end-time="2022-01-16T22:25:19.0760616Z" duration="0.001357" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(26, 'a')';&#xA; result: &quot;z&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '26'
Expr is '$formatInteger(26, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1495" name="function-formatInteger.formatInteger[62]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[62]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1227960407" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0761009Z" end-time="2022-01-16T22:25:19.0778264Z" duration="0.001726" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(27, 'a')';&#xA; result: &quot;aa&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '27'
Expr is '$formatInteger(27, 'a')'
]]></output>
                </test-case>
                <test-case id="0-1496" name="function-formatInteger.formatInteger[63]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[63]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="525230670" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0778481Z" end-time="2022-01-16T22:25:19.0788799Z" duration="0.001032" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(300, 'A')';&#xA; result: &quot;KN&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '300'
Expr is '$formatInteger(300, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1497" name="function-formatInteger.formatInteger[64]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[64]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="160876789" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.0789460Z" end-time="2022-01-16T22:25:19.0825920Z" duration="0.003646" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123456, 'A')';&#xA; result: &quot;FZPH&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'formatInteger': Format specifier was invalid.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '123456'
Expr is '$formatInteger(123456, 'A')'
]]></output>
                </test-case>
                <test-case id="0-1498" name="function-formatInteger.formatInteger[65]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatInteger.formatInteger[65]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1794280169" result="Failed" start-time="2022-01-16T22:25:19.0839890Z" end-time="2022-01-16T22:25:19.0849710Z" duration="0.000982" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatInteger(123456, 'α')';&#xA; result: error D3130" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3130 (), got '"α"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'sequence starting with greek alpha, α'
Expr is '$formatInteger(123456, 'α')'
Result: '"α"'
Expected error D3130
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3130 (), got '"α"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1499" name="function-formatNumber.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1422637745" result="Passed" start-time="2022-01-16T22:25:19.0849891Z" end-time="2022-01-16T22:25:19.0859095Z" duration="0.000921" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(12345.6, &quot;#,###.00&quot;)';&#xA; result: &quot;12,345.60&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(12345.6, "#,###.00")'
Result: '"12,345.60"'
Expected: '"12,345.60"'
]]></output>
                </test-case>
                <test-case id="0-1500" name="function-formatNumber.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1743587499" result="Failed" start-time="2022-01-16T22:25:19.0860058Z" end-time="2022-01-16T22:25:19.0870536Z" duration="0.001048" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(12345678.9, &quot;9,999.99&quot;)';&#xA; result: &quot;12,345,678.90&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"12,345,678.90"', got '"12345,678.90"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(12345678.9, "9,999.99")'
Result: '"12345,678.90"'
Expected: '"12,345,678.90"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"12,345,678.90"', got '"12345,678.90"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1501" name="function-formatNumber.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1106399051" result="Passed" start-time="2022-01-16T22:25:19.0870717Z" end-time="2022-01-16T22:25:19.0872076Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(123412345678.9, &quot;9,9,99.99&quot;)';&#xA; result: &quot;123412345,6,78.90&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(123412345678.9, "9,9,99.99")'
Result: '"123412345,6,78.90"'
Expected: '"123412345,6,78.90"'
]]></output>
                </test-case>
                <test-case id="0-1502" name="function-formatNumber.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="846021164" result="Passed" start-time="2022-01-16T22:25:19.0872166Z" end-time="2022-01-16T22:25:19.0873021Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.56789, &quot;9,999.999,999&quot;)';&#xA; result: &quot;1,234.567,890&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.56789, "9,999.999,999")'
Result: '"1,234.567,890"'
Expected: '"1,234.567,890"'
]]></output>
                </test-case>
                <test-case id="0-1503" name="function-formatNumber.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="918851247" result="Passed" start-time="2022-01-16T22:25:19.0873108Z" end-time="2022-01-16T22:25:19.0874461Z" duration="0.000136" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(123.9, &quot;9999&quot;)';&#xA; result: &quot;0124&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(123.9, "9999")'
Result: '"0124"'
Expected: '"0124"'
]]></output>
                </test-case>
                <test-case id="0-1504" name="function-formatNumber.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="487076495" result="Passed" start-time="2022-01-16T22:25:19.0874548Z" end-time="2022-01-16T22:25:19.0881208Z" duration="0.000666" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.14, &quot;01%&quot;)';&#xA; result: &quot;14%&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.14, "01%")'
Result: '"14%"'
Expected: '"14%"'
]]></output>
                </test-case>
                <test-case id="0-1505" name="function-formatNumber.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1252364126" result="Passed" start-time="2022-01-16T22:25:19.0887601Z" end-time="2022-01-16T22:25:19.0891296Z" duration="0.000369" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.4857,&quot;###.###‰&quot;)';&#xA; result: &quot;485.7‰&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.4857,"###.###‰")'
Result: '"485.7‰"'
Expected: '"485.7‰"'
]]></output>
                </test-case>
                <test-case id="0-1506" name="function-formatNumber.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1726154064" result="Failed" start-time="2022-01-16T22:25:19.0908617Z" end-time="2022-01-16T22:25:19.0928571Z" duration="0.001995" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.14, &quot;###pm&quot;, {&quot;per-mille&quot;: &quot;pm&quot;})';&#xA; result: &quot;140pm&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"140pm"', got '"pm"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.14, "###pm", {"per-mille": "pm"})'
Result: '"pm"'
Expected: '"140pm"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"140pm"', got '"pm"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1507" name="function-formatNumber.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2129608343" result="Passed" start-time="2022-01-16T22:25:19.0940597Z" end-time="2022-01-16T22:25:19.0946747Z" duration="0.000615" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(-6, &quot;000&quot;)';&#xA; result: &quot;-006&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(-6, "000")'
Result: '"-006"'
Expected: '"-006"'
]]></output>
                </test-case>
                <test-case id="0-1508" name="function-formatNumber.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="223589127" result="Passed" start-time="2022-01-16T22:25:19.0946925Z" end-time="2022-01-16T22:25:19.0947912Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;00.000e0&quot;)';&#xA; result: &quot;12.346e2&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "00.000e0")'
Result: '"12.346e2"'
Expected: '"12.346e2"'
]]></output>
                </test-case>
                <test-case id="0-1509" name="function-formatNumber.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2016088141" result="Passed" start-time="2022-01-16T22:25:19.0948002Z" end-time="2022-01-16T22:25:19.0949056Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;00.000e000&quot;)';&#xA; result: &quot;12.346e002&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "00.000e000")'
Result: '"12.346e002"'
Expected: '"12.346e002"'
]]></output>
                </test-case>
                <test-case id="0-1510" name="function-formatNumber.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1479124096" result="Failed" start-time="2022-01-16T22:25:19.0949143Z" end-time="2022-01-16T22:25:19.0973393Z" duration="0.002425" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1234.5678, &quot;①①.①①①e①&quot;, {&quot;zero-digit&quot;: &quot;⑟&quot;})';&#xA; result: &quot;①②.③④⑥e②&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"①②.③④⑥e②"', got '"①①1235①①①e①"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(1234.5678, "①①.①①①e①", {"zero-digit": "⑟"})'
Result: '"①①1235①①①e①"'
Expected: '"①②.③④⑥e②"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"①②.③④⑥e②"', got '"①①1235①①①e①"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1511" name="function-formatNumber.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="789290377" result="Passed" start-time="2022-01-16T22:25:19.0973616Z" end-time="2022-01-16T22:25:19.0975008Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;0.0e0&quot;)';&#xA; result: &quot;2.3e-1&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.234, "0.0e0")'
Result: '"2.3e-1"'
Expected: '"2.3e-1"'
]]></output>
                </test-case>
                <test-case id="0-1512" name="function-formatNumber.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1566542513" result="Failed" start-time="2022-01-16T22:25:19.0975101Z" end-time="2022-01-16T22:25:19.0986551Z" duration="0.001145" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;#.00e0&quot;)';&#xA; result: &quot;0.23e0&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"0.23e0"', got '"2.34e-1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.234, "#.00e0")'
Result: '"2.34e-1"'
Expected: '"0.23e0"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"0.23e0"', got '"2.34e-1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1513" name="function-formatNumber.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="826048126" result="Failed" start-time="2022-01-16T22:25:19.0987411Z" end-time="2022-01-16T22:25:19.0999393Z" duration="0.001198" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.123, &quot;#.e9&quot;)';&#xA; result: &quot;0.1e0&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"0.1e0"', got '"1e-1"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.123, "#.e9")'
Result: '"1e-1"'
Expected: '"0.1e0"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"0.1e0"', got '"1e-1"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1514" name="function-formatNumber.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="184093585" result="Passed" start-time="2022-01-16T22:25:19.0999589Z" end-time="2022-01-16T22:25:19.1000911Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.234, &quot;.00e0&quot;)';&#xA; result: &quot;.23e0&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(0.234, ".00e0")'
Result: '".23e0"'
Expected: '".23e0"'
]]></output>
                </test-case>
                <test-case id="0-1515" name="function-formatNumber.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="268085582" result="Passed" start-time="2022-01-16T22:25:19.1001237Z" end-time="2022-01-16T22:25:19.1012295Z" duration="0.001106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2392.14*(-36.58), &quot;000,000.000###;###,###.000###&quot;)';&#xA; result: &quot;87,504.4812&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2392.14*(-36.58), "000,000.000###;###,###.000###")'
Result: '"87,504.4812"'
Expected: '"87,504.4812"'
]]></output>
                </test-case>
                <test-case id="0-1516" name="function-formatNumber.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1236200837" result="Passed" start-time="2022-01-16T22:25:19.1018510Z" end-time="2022-01-16T22:25:19.1020131Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2.14*86.58,&quot;PREFIX##00.000###SUFFIX&quot;)';&#xA; result: &quot;PREFIX185.2812SUFFIX&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2.14*86.58,"PREFIX##00.000###SUFFIX")'
Result: '"PREFIX185.2812SUFFIX"'
Expected: '"PREFIX185.2812SUFFIX"'
]]></output>
                </test-case>
                <test-case id="0-1517" name="function-formatNumber.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="147503278" result="Failed" start-time="2022-01-16T22:25:19.1023461Z" end-time="2022-01-16T22:25:19.1044048Z" duration="0.002059" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(1E20,&quot;#,######&quot;)';&#xA; result: &quot;100,000000,000000,000000&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"100,000000,000000,000000"', got '"100000000000000,000000"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(1E20,"#,######")'
Result: '"100000000000000,000000"'
Expected: '"100,000000,000000,000000"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"100,000000,000000,000000"', got '"100000000000000,000000"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1518" name="function-formatNumber.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="704179353" result="Failed" start-time="2022-01-16T22:25:19.1053264Z" end-time="2022-01-16T22:25:19.1061678Z" duration="0.000841" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#;#;#&quot;)';&#xA; result: error D3080" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3080 (), got '"20"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#;#;#")'
Result: '"20"'
Expected error D3080
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3080 (), got '"20"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1519" name="function-formatNumber.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1184060946" result="Failed" start-time="2022-01-16T22:25:19.1064838Z" end-time="2022-01-16T22:25:19.1073822Z" duration="0.000898" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#.0.0&quot;)';&#xA; result: error D3081" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3081 (), got '"20.00"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#.0.0")'
Result: '"20.00"'
Expected error D3081
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3081 (), got '"20.00"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1520" name="function-formatNumber.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2103559044" result="Failed" start-time="2022-01-16T22:25:19.1074027Z" end-time="2022-01-16T22:25:19.1080855Z" duration="0.000683" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0%%&quot;)';&#xA; result: error D3082" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3082 (), got '"200000%%"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0%%")'
Result: '"200000%%"'
Expected error D3082
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3082 (), got '"200000%%"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1521" name="function-formatNumber.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1985674220" result="Failed" start-time="2022-01-16T22:25:19.1081021Z" end-time="2022-01-16T22:25:19.1091865Z" duration="0.001085" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0‰‰&quot;)';&#xA; result: error D3083" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3083 (), got '"20000000‰‰"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0‰‰")'
Result: '"20000000‰‰"'
Expected error D3083
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3083 (), got '"20000000‰‰"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1522" name="function-formatNumber.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1886230639" result="Failed" start-time="2022-01-16T22:25:19.1093782Z" end-time="2022-01-16T22:25:19.1102035Z" duration="0.000825" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0%‰&quot;)';&#xA; result: error D3084" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3084 (), got '"2000000%‰"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0%‰")'
Result: '"2000000%‰"'
Expected error D3084
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3084 (), got '"2000000%‰"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1523" name="function-formatNumber.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="375213630" result="Failed" start-time="2022-01-16T22:25:19.1102430Z" end-time="2022-01-16T22:25:19.1109455Z" duration="0.000702" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;.e0&quot;)';&#xA; result: error D3085" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3085 (), got '"e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,".e0")'
Result: '"e0"'
Expected error D3085
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3085 (), got '"e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1524" name="function-formatNumber.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="581563951" result="Failed" start-time="2022-01-16T22:25:19.1109895Z" end-time="2022-01-16T22:25:19.1122924Z" duration="0.001303" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0+.e0&quot;)';&#xA; result: error D3086" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3086 (), got '"2+e1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0+.e0")'
Result: '"2+e1"'
Expected error D3086
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3086 (), got '"2+e1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1525" name="function-formatNumber.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1472139078" result="Failed" start-time="2022-01-16T22:25:19.1123169Z" end-time="2022-01-16T22:25:19.1131349Z" duration="0.000818" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,.e0&quot;)';&#xA; result: error D3087" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3087 (), got '"2,e1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,.e0")'
Result: '"2,e1"'
Expected error D3087
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3087 (), got '"2,e1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1526" name="function-formatNumber.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1170701471" result="Failed" start-time="2022-01-16T22:25:19.1134123Z" end-time="2022-01-16T22:25:19.1152393Z" duration="0.001827" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,&quot;)';&#xA; result: error D3088" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3088 (), got '"20,"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,")'
Result: '"20,"'
Expected error D3088
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3088 (), got '"20,"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1527" name="function-formatNumber.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1838878730" result="Failed" start-time="2022-01-16T22:25:19.1152607Z" end-time="2022-01-16T22:25:19.1166113Z" duration="0.001351" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0,,0&quot;)';&#xA; result: error D3089" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3089 (), got '"2,,0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0,,0")'
Result: '"2,,0"'
Expected error D3089
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3089 (), got '"2,,0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1528" name="function-formatNumber.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="227853516" result="Failed" start-time="2022-01-16T22:25:19.1166306Z" end-time="2022-01-16T22:25:19.1173385Z" duration="0.000708" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;0#.e0&quot;)';&#xA; result: error D3090" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3090 (), got '"20e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"0#.e0")'
Result: '"20e0"'
Expected error D3090
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3090 (), got '"20e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1529" name="function-formatNumber.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="312687584" result="Failed" start-time="2022-01-16T22:25:19.1174115Z" end-time="2022-01-16T22:25:19.1185399Z" duration="0.001129" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.#0e0&quot;)';&#xA; result: error D3091" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3091 (), got '"20.00e0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.#0e0")'
Result: '"20.00e0"'
Expected error D3091
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3091 (), got '"20.00e0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1530" name="function-formatNumber.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1721083171" result="Failed" start-time="2022-01-16T22:25:19.1185592Z" end-time="2022-01-16T22:25:19.1192723Z" duration="0.000713" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.0e0%&quot;)';&#xA; result: error D3092" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3092 (), got '"20.0e2%"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.0e0%")'
Result: '"20.0e2%"'
Expected error D3092
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3092 (), got '"20.0e2%"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1531" name="function-formatNumber.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2137146753" result="Failed" start-time="2022-01-16T22:25:19.1196909Z" end-time="2022-01-16T22:25:19.1206334Z" duration="0.000942" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(20,&quot;#0.0e0,0&quot;)';&#xA; result: error D3093" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3093 (), got '"20.0e0,0"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(20,"#0.0e0,0")'
Result: '"20.0e0,0"'
Expected error D3093
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3093 (), got '"20.0e0,0"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1532" name="function-formatNumber.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1983951656" result="Passed" start-time="2022-01-16T22:25:19.1206515Z" end-time="2022-01-16T22:25:19.1207810Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2, '000.000')';&#xA; result: &quot;002.000&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(2, '000.000')'
Result: '"002.000"'
Expected: '"002.000"'
]]></output>
                </test-case>
                <test-case id="0-1533" name="function-formatNumber.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="966467349" result="Failed" start-time="2022-01-16T22:25:19.1207898Z" end-time="2022-01-16T22:25:19.1231851Z" duration="0.002396" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(2, 'AAA.AAA', {'zero-digit': 'A'})';&#xA; result: &quot;AAC.AAA&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"AAC.AAA"', got '"AAA2AAA"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(2, 'AAA.AAA', {'zero-digit': 'A'})'
Result: '"AAA2AAA"'
Expected: '"AAC.AAA"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"AAC.AAA"', got '"AAA2AAA"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1534" name="function-formatNumber.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1586089411" result="Failed" start-time="2022-01-16T22:25:19.1290893Z" end-time="2022-01-16T22:25:19.1300089Z" duration="0.000919" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(0.1, 'AeAAA', {'zero-digit': 'A'})';&#xA; result: &quot;Be-AAB&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"Be-AAB"', got '"AeAAA"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$formatNumber(0.1, 'AeAAA', {'zero-digit': 'A'})'
Result: '"AeAAA"'
Expected: '"Be-AAB"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"Be-AAB"', got '"AeAAA"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1535" name="function-formatNumber.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.function-formatNumber.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="916411877" result="Passed" start-time="2022-01-16T22:25:19.1300300Z" end-time="2022-01-16T22:25:19.1301331Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$formatNumber(foo, '#0.00')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$formatNumber(foo, '#0.00')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1536" name="function-fromMillis.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1029810218" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1301416Z" end-time="2022-01-16T22:25:19.1314351Z" duration="0.001294" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1)';&#xA; result: &quot;1970-01-01T00:00:00.001Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$fromMillis(1)'
]]></output>
                </test-case>
                <test-case id="0-1537" name="function-fromMillis.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="185831891" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1320044Z" end-time="2022-01-16T22:25:19.1326390Z" duration="0.000635" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1509380732935)';&#xA; result: &quot;2017-10-30T16:25:32.935Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$fromMillis(1509380732935)'
]]></output>
                </test-case>
                <test-case id="0-1538" name="function-fromMillis.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="648509277" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1326556Z" end-time="2022-01-16T22:25:19.1330323Z" duration="0.000377" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(foo)';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$fromMillis(foo)'
]]></output>
                </test-case>
                <test-case id="0-1539" name="function-fromMillis.formatDateTime[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="248525748" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1330706Z" end-time="2022-01-16T22:25:19.1337831Z" duration="0.000713" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(undefined, 'undefined')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return nothing'
Expr is '$fromMillis(undefined, 'undefined')'
]]></output>
                </test-case>
                <test-case id="0-1540" name="function-fromMillis.formatDateTime[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="424603315" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1342398Z" end-time="2022-01-16T22:25:19.1347759Z" duration="0.000536" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Hello')';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, 'Hello')'
]]></output>
                </test-case>
                <test-case id="0-1541" name="function-fromMillis.formatDateTime[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="508113750" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1347919Z" end-time="2022-01-16T22:25:19.1351478Z" duration="0.000356" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: [Y0001]')';&#xA; result: &quot;Year: 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year'
Expr is '$fromMillis(1521801216617, 'Year: [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-1542" name="function-fromMillis.formatDateTime[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="838157648" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1351834Z" end-time="2022-01-16T22:25:19.1359481Z" duration="0.000764" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: &lt;[Y0001]&gt;')';&#xA; result: &quot;Year: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year'
Expr is '$fromMillis(1521801216617, 'Year: <[Y0001]>')'
]]></output>
                </test-case>
                <test-case id="0-1543" name="function-fromMillis.formatDateTime[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="100045990" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1363837Z" end-time="2022-01-16T22:25:19.1368141Z" duration="0.000430" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year: &lt;[Y9,999,*]&gt;')';&#xA; result: &quot;Year: &lt;2,018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the year with grouping separator'
Expr is '$fromMillis(1521801216617, 'Year: <[Y9,999,*]>')'
]]></output>
                </test-case>
                <test-case id="0-1544" name="function-fromMillis.formatDateTime[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1772832614" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1371453Z" end-time="2022-01-16T22:25:19.1375510Z" duration="0.000406" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[[Year: &lt;[Y0001]&gt;')';&#xA; result: &quot;[Year: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle opening square bracket literal'
Expr is '$fromMillis(1521801216617, '[[Year: <[Y0001]>')'
]]></output>
                </test-case>
                <test-case id="0-1545" name="function-fromMillis.formatDateTime[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="688837460" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1378680Z" end-time="2022-01-16T22:25:19.1386800Z" duration="0.000812" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, 'Year]]: &lt;[Y0001]&gt;')';&#xA; result: &quot;Year]: &lt;2018&gt;&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle closing square bracket literal'
Expr is '$fromMillis(1521801216617, 'Year]]: <[Y0001]>')'
]]></output>
                </test-case>
                <test-case id="0-1546" name="function-fromMillis.formatDateTime[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1028428461" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1397009Z" end-time="2022-01-16T22:25:19.1404559Z" duration="0.000755" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[[Year]]: [[[Y0001]]]')';&#xA; result: &quot;[Year]: [2018]&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should handle opening and closing square bracket literal'
Expr is '$fromMillis(1521801216617, '[[Year]]: [[[Y0001]]]')'
]]></output>
                </test-case>
                <test-case id="0-1547" name="function-fromMillis.formatDateTime[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1454557107" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1404849Z" end-time="2022-01-16T22:25:19.1408426Z" duration="0.000357" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1]/[M#1]/[Y0001]')';&#xA; result: &quot;23/3/2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date in European style'
Expr is '$fromMillis(1521801216617, '[D#1]/[M#1]/[Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-1548" name="function-fromMillis.formatDateTime[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2080699911" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1408939Z" end-time="2022-01-16T22:25:19.1415882Z" duration="0.000694" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1522616700000, '[F0] [FNn]')';&#xA; result: &quot;7 Sunday&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday should be day 7'
Expr is '$fromMillis(1522616700000, '[F0] [FNn]')'
]]></output>
                </test-case>
                <test-case id="0-1549" name="function-fromMillis.formatDateTime[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1236043809" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1416622Z" end-time="2022-01-16T22:25:19.1422484Z" duration="0.000587" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1522703100000, '[F0] [FNn]')';&#xA; result: &quot;1 Monday&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Monday should be day 1'
Expr is '$fromMillis(1522703100000, '[F0] [FNn]')'
]]></output>
                </test-case>
                <test-case id="0-1550" name="function-fromMillis.formatDateTime[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2139243217" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1423601Z" end-time="2022-01-16T22:25:19.1429548Z" duration="0.000595" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y0001]-[M01]-[D01]')';&#xA; result: &quot;2018-03-23&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date in ISO 8601 style'
Expr is '$fromMillis(1521801216617, '[Y0001]-[M01]-[D01]')'
]]></output>
                </test-case>
                <test-case id="0-1551" name="function-fromMillis.formatDateTime[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="377727392" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1430713Z" end-time="2022-01-16T22:25:19.1442957Z" duration="0.001224" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]')';&#xA; result: &quot;03/23/2018 at 10:33:36&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date & time in US style'
Expr is '$fromMillis(1521801216617, '[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]')'
]]></output>
                </test-case>
                <test-case id="0-1552" name="function-fromMillis.formatDateTime[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1604181083" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1444575Z" end-time="2022-01-16T22:25:19.1452270Z" duration="0.000769" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z01:01t]')';&#xA; result: &quot;2018-03-23T10:33:36.617Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should format the date & time in ISO 8601 style'
Expr is '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z01:01t]')'
]]></output>
                </test-case>
                <test-case id="0-1553" name="function-fromMillis.formatDateTime[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="610219223" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1452840Z" end-time="2022-01-16T22:25:19.1456629Z" duration="0.000379" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[ M01]-[D 01]T[H01 ]:[ m   ]:[s].[f0  01][Z01:&#xA; 01t]')';&#xA; result: &quot;2018-03-23T10:33:36.617Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should ignore whitespace in variable markers'
Expr is '$fromMillis(1521801216617, '[Y]-[ M01]-[D 01]T[H01 ]:[ m   ]:[s].[f0  01][Z01:
 01t]')'
]]></output>
                </test-case>
                <test-case id="0-1554" name="function-fromMillis.formatDateTime[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1466562348" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1460188Z" end-time="2022-01-16T22:25:19.1463880Z" duration="0.000369" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0100')';&#xA; result: &quot;2018-03-23T13:33:36.617+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for BST +0100'
Expr is '$fromMillis(1521801216617, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0100')'
]]></output>
                </test-case>
                <test-case id="0-1555" name="function-fromMillis.formatDateTime[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1905396926" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1467200Z" end-time="2022-01-16T22:25:19.1474677Z" duration="0.000748" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01]')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01]')'
]]></output>
                </test-case>
                <test-case id="0-1556" name="function-fromMillis.formatDateTime[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1367652059" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1477044Z" end-time="2022-01-16T22:25:19.1484642Z" duration="0.000760" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01t]')';&#xA; result: &quot;2018-07-11T12:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for Z'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z01:01t]')'
]]></output>
                </test-case>
                <test-case id="0-1557" name="function-fromMillis.formatDateTime[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="470807534" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1484829Z" end-time="2022-01-16T22:25:19.1491712Z" duration="0.000689" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '-0500')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '-0500')'
]]></output>
                </test-case>
                <test-case id="0-1558" name="function-fromMillis.formatDateTime[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="337287296" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1492310Z" end-time="2022-01-16T22:25:19.1500110Z" duration="0.000780" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '-0500')';&#xA; result: &quot;2018-07-11T07:00:00-5&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '-0500')'
]]></output>
                </test-case>
                <test-case id="0-1559" name="function-fromMillis.formatDateTime[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1162421064" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1500279Z" end-time="2022-01-16T22:25:19.1508511Z" duration="0.000824" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '+1000')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z]', '+1000')'
]]></output>
                </test-case>
                <test-case id="0-1560" name="function-fromMillis.formatDateTime[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="81662655" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1508771Z" end-time="2022-01-16T22:25:19.1517148Z" duration="0.000838" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+1000')';&#xA; result: &quot;2018-07-11T15:00:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+1000')'
]]></output>
                </test-case>
                <test-case id="0-1561" name="function-fromMillis.formatDateTime[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2034758981" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1526128Z" end-time="2022-01-16T22:25:19.1531178Z" duration="0.000505" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+0530')';&#xA; result: &quot;2018-07-11T17:30:00+5:30&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][Z0]', '+0530')'
]]></output>
                </test-case>
                <test-case id="0-1562" name="function-fromMillis.formatDateTime[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1901754827" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1531345Z" end-time="2022-01-16T22:25:19.1534499Z" duration="0.000314" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][z]', '-0500')';&#xA; result: &quot;2018-07-11T07:00:00GMT-05:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should offset for UTC'
Expr is '$fromMillis(1531310400000, '[Y]-[M01]-[D01]T[H01]:[m]:[s][z]', '-0500')'
]]></output>
                </test-case>
                <test-case id="0-1563" name="function-fromMillis.formatDateTime[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2058385190" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1537491Z" end-time="2022-01-16T22:25:19.1541409Z" duration="0.000392" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1204405500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')';&#xA; result: &quot;2008-03-02T00:05:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should rollover day boundaries'
Expr is '$fromMillis(1204405500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')'
]]></output>
                </test-case>
                <test-case id="0-1564" name="function-fromMillis.formatDateTime[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="295004970" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1546088Z" end-time="2022-01-16T22:25:19.1553227Z" duration="0.000714" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')';&#xA; result: &quot;2009-01-01T00:05:00+03:00&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should rollover year boundaries'
Expr is '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z0101t]', '+0530')'
]]></output>
                </test-case>
                <test-case id="0-1565" name="function-fromMillis.formatDateTime[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1489460990" result="Passed" start-time="2022-01-16T22:25:19.1554664Z" end-time="2022-01-16T22:25:19.1558742Z" duration="0.000408" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z010101t]', '+0530')';&#xA; result: error D3134" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3134]]></message>
                  </reason>
                  <output><![CDATA[Description: 'picture string has 6 digit timezone - error'
Expr is '$fromMillis(1230757500000, '[Y]-[M01]-[D01]T[H01]:[m]:[s].[f001][Z010101t]', '+0530')'
]]></output>
                </test-case>
                <test-case id="0-1566" name="function-fromMillis.formatDateTime[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="952822368" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1558899Z" end-time="2022-01-16T22:25:19.1562763Z" duration="0.000387" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y,2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y,2]')'
]]></output>
                </test-case>
                <test-case id="0-1567" name="function-fromMillis.formatDateTime[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="600075164" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1565353Z" end-time="2022-01-16T22:25:19.1573887Z" duration="0.000853" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2]')';&#xA; result: &quot;23/03/2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return literal'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2]')'
]]></output>
                </test-case>
                <test-case id="0-1568" name="function-fromMillis.formatDateTime[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1387442362" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1581325Z" end-time="2022-01-16T22:25:19.1593059Z" duration="0.001173" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y##01,2-2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'width modifier should override pattern'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y##01,2-2]')'
]]></output>
                </test-case>
                <test-case id="0-1569" name="function-fromMillis.formatDateTime[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1415165355" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1593255Z" end-time="2022-01-16T22:25:19.1601883Z" duration="0.000863" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2-2]')';&#xA; result: &quot;23/03/18&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'width modifier should override pattern'
Expr is '$fromMillis(1521801216617, '[D#1,2]/[M1,2]/[Y0001,2-2]')'
]]></output>
                </test-case>
                <test-case id="0-1570" name="function-fromMillis.formatDateTime[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1385759011" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1605704Z" end-time="2022-01-16T22:25:19.1619306Z" duration="0.001361" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1] [M01] [YI]')';&#xA; result: &quot;23 03 MMXVIII&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'year in roman numerals'
Expr is '$fromMillis(1521801216617, '[D1] [M01] [YI]')'
]]></output>
                </test-case>
                <test-case id="0-1571" name="function-fromMillis.formatDateTime[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1050368946" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1623430Z" end-time="2022-01-16T22:25:19.1630442Z" duration="0.000701" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Da] [MA] [Yi]')';&#xA; result: &quot;w C mmxviii&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$fromMillis(1521801216617, '[Da] [MA] [Yi]')'
]]></output>
                </test-case>
                <test-case id="0-1572" name="function-fromMillis.formatDateTime[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1646477648" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1630609Z" end-time="2022-01-16T22:25:19.1633989Z" duration="0.000338" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [M01] [Y]')';&#xA; result: &quot;23rd 03 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day in ordinal numerals'
Expr is '$fromMillis(1521801216617, '[D1o] [M01] [Y]')'
]]></output>
                </test-case>
                <test-case id="0-1573" name="function-fromMillis.formatDateTime[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="455653605" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1635746Z" end-time="2022-01-16T22:25:19.1642388Z" duration="0.000664" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Yw]')';&#xA; result: &quot;two thousand and eighteen&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'year in words'
Expr is '$fromMillis(1521801216617, '[Yw]')'
]]></output>
                </test-case>
                <test-case id="0-1574" name="function-fromMillis.formatDateTime[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="759457631" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1642547Z" end-time="2022-01-16T22:25:19.1649140Z" duration="0.000659" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[Dwo] [M01] [Y]')';&#xA; result: &quot;twenty-third 03 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day of month in ordinal words'
Expr is '$fromMillis(1521801216617, '[Dwo] [M01] [Y]')'
]]></output>
                </test-case>
                <test-case id="0-1575" name="function-fromMillis.formatDateTime[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1595445294" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1649548Z" end-time="2022-01-16T22:25:19.1656729Z" duration="0.000718" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [MNn] [Y]')';&#xA; result: &quot;23rd March 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'month in words'
Expr is '$fromMillis(1521801216617, '[D1o] [MNn] [Y]')'
]]></output>
                </test-case>
                <test-case id="0-1576" name="function-fromMillis.formatDateTime[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1147516572" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1656883Z" end-time="2022-01-16T22:25:19.1662438Z" duration="0.000555" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[D1o] [MN] [Y]')';&#xA; result: &quot;23rd MARCH 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'month in uppercase words'
Expr is '$fromMillis(1521801216617, '[D1o] [MN] [Y]')'
]]></output>
                </test-case>
                <test-case id="0-1577" name="function-fromMillis.formatDateTime[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1786184649" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1662589Z" end-time="2022-01-16T22:25:19.1668418Z" duration="0.000583" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn], [D1o] [MNn] [Y]')';&#xA; result: &quot;Friday, 23rd March 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in words'
Expr is '$fromMillis(1521801216617, '[FNn], [D1o] [MNn] [Y]')'
]]></output>
                </test-case>
                <test-case id="0-1578" name="function-fromMillis.formatDateTime[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="749864663" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1669994Z" end-time="2022-01-16T22:25:19.1678585Z" duration="0.000859" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn], the [Dwo] of [MNn] [Y] [E]')';&#xA; result: &quot;Friday, the twenty-third of March 2018 ISO&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/date/month in words'
Expr is '$fromMillis(1521801216617, '[FNn], the [Dwo] of [MNn] [Y] [E]')'
]]></output>
                </test-case>
                <test-case id="0-1579" name="function-fromMillis.formatDateTime[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2040210138" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1678995Z" end-time="2022-01-16T22:25:19.1682678Z" duration="0.000369" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[FNn,3-3], [D1o] [MNn,3-3] [Y] [C]')';&#xA; result: &quot;Fri, 23rd Mar 2018 ISO&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'abbreviated day/month in words'
Expr is '$fromMillis(1521801216617, '[FNn,3-3], [D1o] [MNn,3-3] [Y] [C]')'
]]></output>
                </test-case>
                <test-case id="0-1580" name="function-fromMillis.formatDateTime[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="443710617" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1682814Z" end-time="2022-01-16T22:25:19.1686633Z" duration="0.000382" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1521801216617, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;friday, 23/3/2018 10:33:36 am&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time'
Expr is '$fromMillis(1521801216617, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
]]></output>
                </test-case>
                <test-case id="0-1581" name="function-fromMillis.formatDateTime[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1863628011" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1689208Z" end-time="2022-01-16T22:25:19.1692791Z" duration="0.000358" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1204405500000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;saturday, 1/3/2008 9:05:00 pm&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time 12hr pm'
Expr is '$fromMillis(1204405500000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
]]></output>
                </test-case>
                <test-case id="0-1582" name="function-fromMillis.formatDateTime[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1905662466" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1696344Z" end-time="2022-01-16T22:25:19.1705762Z" duration="0.000942" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1199664000000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')';&#xA; result: &quot;monday, 7/1/2008 12:00:00 am&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should apply default modifiers to day/date/time 12hr midnight'
Expr is '$fromMillis(1199664000000, '[F], [D]/[M]/[Y] [h]:[m]:[s] [P]')'
]]></output>
                </test-case>
                <test-case id="0-1583" name="function-fromMillis.formatDateTime[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1139293354" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1714148Z" end-time="2022-01-16T22:25:19.1720089Z" duration="0.000594" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, '[dwo] day of the year')';&#xA; result: &quot;first day of the year&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '1st Jan should be day 1'
Expr is '$fromMillis(1514808000000, '[dwo] day of the year')'
]]></output>
                </test-case>
                <test-case id="0-1584" name="function-fromMillis.formatDateTime[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="320928014" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1720243Z" end-time="2022-01-16T22:25:19.1727273Z" duration="0.000703" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1546257600000, '[d] days in [Y0001]')';&#xA; result: &quot;365 days in 2018&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '31st Dec should be day 365'
Expr is '$fromMillis(1546257600000, '[d] days in [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-1585" name="function-fromMillis.formatDateTime[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1343355779" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1728016Z" end-time="2022-01-16T22:25:19.1738500Z" duration="0.001048" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1483185600000, '[d] days in [Y0001]')';&#xA; result: &quot;366 days in 2016&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '31st Dec should be day 366 in a leap year'
Expr is '$fromMillis(1483185600000, '[d] days in [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-1586" name="function-fromMillis.formatDateTime[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="532965670" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1738669Z" end-time="2022-01-16T22:25:19.1746264Z" duration="0.000760" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Monday 1st Jan should be in the first week of 2018'
Expr is '$fromMillis(1514808000000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1587" name="function-fromMillis.formatDateTime[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1373732433" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1748830Z" end-time="2022-01-16T22:25:19.1755942Z" duration="0.000711" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1515326400000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday 7st Jan should be in the first week of 2018'
Expr is '$fromMillis(1515326400000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1588" name="function-fromMillis.formatDateTime[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1647388648" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1756087Z" end-time="2022-01-16T22:25:19.1759652Z" duration="0.000357" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1545739200000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sunday 25th Dec should be in week 52 of 2018'
Expr is '$fromMillis(1545739200000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1589" name="function-fromMillis.formatDateTime[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1828176132" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1759785Z" end-time="2022-01-16T22:25:19.1763117Z" duration="0.000334" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1388577600000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Wed 1st Jan 2014 should be in week 1'
Expr is '$fromMillis(1388577600000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1590" name="function-fromMillis.formatDateTime[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1696243465" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1765852Z" end-time="2022-01-16T22:25:19.1769571Z" duration="0.000372" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419854400000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 29th Dec 2014 should be in week 1 of 2015'
Expr is '$fromMillis(1419854400000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1591" name="function-fromMillis.formatDateTime[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="559002684" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1772581Z" end-time="2022-01-16T22:25:19.1777079Z" duration="0.000449" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419768000000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 28th Dec 2014 should be in week 52 of 2014'
Expr is '$fromMillis(1419768000000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1592" name="function-fromMillis.formatDateTime[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1996028242" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1780834Z" end-time="2022-01-16T22:25:19.1784689Z" duration="0.000385" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419336000000, 'Week: [W]')';&#xA; result: &quot;Week: 52&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 23th Dec 2014 should be in week 52 of 2014'
Expr is '$fromMillis(1419336000000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1593" name="function-fromMillis.formatDateTime[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1633571860" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1788846Z" end-time="2022-01-16T22:25:19.1792855Z" duration="0.000401" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1420113600000, 'Week: [W]')';&#xA; result: &quot;Week: 1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 1st Jan 2015 should be in week 1 of 2015'
Expr is '$fromMillis(1420113600000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1594" name="function-fromMillis.formatDateTime[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="166863093" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1792985Z" end-time="2022-01-16T22:25:19.1799282Z" duration="0.000630" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1420459200000, 'Week: [W]')';&#xA; result: &quot;Week: 2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 5th Jan 2015 should be in week 2 of 2015'
Expr is '$fromMillis(1420459200000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1595" name="function-fromMillis.formatDateTime[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="537327981" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1803909Z" end-time="2022-01-16T22:25:19.1813337Z" duration="0.000942" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451304000000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 28th Dec 2015 should be in week 53 of 2015'
Expr is '$fromMillis(1451304000000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1596" name="function-fromMillis.formatDateTime[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="753842570" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1818417Z" end-time="2022-01-16T22:25:19.1842093Z" duration="0.002368" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451563200000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 31th Dec 2015 should be in week 53 of 2015'
Expr is '$fromMillis(1451563200000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1597" name="function-fromMillis.formatDateTime[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="927256105" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1855134Z" end-time="2022-01-16T22:25:19.1860459Z" duration="0.000533" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1451736000000, 'Week: [W]')';&#xA; result: &quot;Week: 53&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 2nd Jan 2016 should be in week 53 of 2015'
Expr is '$fromMillis(1451736000000, 'Week: [W]')'
]]></output>
                </test-case>
                <test-case id="0-1598" name="function-fromMillis.formatDateTime[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1952524667" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1860721Z" end-time="2022-01-16T22:25:19.1864745Z" duration="0.000403" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359460800000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 29th Jan 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359460800000, 'Week: [w] of [xNn]')'
]]></output>
                </test-case>
                <test-case id="0-1599" name="function-fromMillis.formatDateTime[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="283371624" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1871223Z" end-time="2022-01-16T22:25:19.1875739Z" duration="0.000451" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359633600000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 31st Jan 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359633600000, 'Week: [w] of [xNn]')'
]]></output>
                </test-case>
                <test-case id="0-1600" name="function-fromMillis.formatDateTime[62]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[62]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1883498739" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1875899Z" end-time="2022-01-16T22:25:19.1883334Z" duration="0.000744" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1359720000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thur 1st Feb 2013 should be in week 5 of Jan'
Expr is '$fromMillis(1359720000000, 'Week: [w] of [xNn]')'
]]></output>
                </test-case>
                <test-case id="0-1601" name="function-fromMillis.formatDateTime[63]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[63]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="428353297" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1883908Z" end-time="2022-01-16T22:25:19.1889191Z" duration="0.000529" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1514808000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 1st Jan 2018 should be in week 1 of Jan'
Expr is '$fromMillis(1514808000000, 'Week: [w] of [xNn]')'
]]></output>
                </test-case>
                <test-case id="0-1602" name="function-fromMillis.formatDateTime[64]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[64]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="67114745" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1889550Z" end-time="2022-01-16T22:25:19.1899584Z" duration="0.001003" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1483272000000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 5 of December&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 1st Jan 2017 should be in week 5 of Dec'
Expr is '$fromMillis(1483272000000, 'Week: [w] of [xNn]')'
]]></output>
                </test-case>
                <test-case id="0-1603" name="function-fromMillis.formatDateTime[65]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[65]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="665534556" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1900052Z" end-time="2022-01-16T22:25:19.1906660Z" duration="0.000661" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1533038400000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of August&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 31st July 2018 should be in week 1 of Aug'
Expr is '$fromMillis(1533038400000, 'Week: [w] of [xNn]')'
]]></output>
                </test-case>
                <test-case id="0-1604" name="function-fromMillis.formatDateTime[66]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[66]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1997768445" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1906962Z" end-time="2022-01-16T22:25:19.1913410Z" duration="0.000645" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, 'Week: [w] of [xNn]')';&#xA; result: &quot;Week: 1 of January&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$fromMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tues 30th Dec 2014 should be in week 1 of Jan'
Expr is '$fromMillis(1419940800000, 'Week: [w] of [xNn]')'
]]></output>
                </test-case>
                <test-case id="0-1605" name="function-fromMillis.formatDateTime[67]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[67]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1088874271" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1913567Z" end-time="2022-01-16T22:25:19.1924123Z" duration="0.001056" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-10-21T13:05:00Z').[$fromMillis(), $fromMillis($, (),'-0500'), $fromMillis($, (),'0000')] ';&#xA; result: [&quot;2018-10-21T13:05:00Z&quot;,&quot;2018-10-21T16:05:00+03:00&quot;,&quot;2018-10-21T13:05:00Z&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Undefined picture string defaults to ISO 8601'
Expr is '$toMillis('2018-10-21T13:05:00Z').[$fromMillis(), $fromMillis($, (),'-0500'), $fromMillis($, (),'0000')] '
]]></output>
                </test-case>
                <test-case id="0-1606" name="function-fromMillis.formatDateTime[68]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[68]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="878733391" result="Passed" start-time="2022-01-16T22:25:19.1924890Z" end-time="2022-01-16T22:25:19.1929843Z" duration="0.000495" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, '[YN]-[M]-[D]')';&#xA; result: error D3133" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3133]]></message>
                  </reason>
                  <output><![CDATA[Description: 'throws error asking for year name'
Expr is '$fromMillis(1419940800000, '[YN]-[M]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-1607" name="function-fromMillis.formatDateTime[69]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.formatDateTime[69]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1148527478" result="Passed" start-time="2022-01-16T22:25:19.1930656Z" end-time="2022-01-16T22:25:19.1935012Z" duration="0.000436" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$fromMillis(1419940800000, '[YN]-[M')';&#xA; result: error D3135" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3135]]></message>
                  </reason>
                  <output><![CDATA[Description: 'throws error for component with no closing bracket'
Expr is '$fromMillis(1419940800000, '[YN]-[M')'
]]></output>
                </test-case>
                <test-case id="0-1608" name="function-fromMillis.isoWeekDate[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1998245239" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1936672Z" end-time="2022-01-16T22:25:19.1947624Z" duration="0.001095" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2004-W53-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 1 Jan 2005'
Expr is '($ts := $toMillis('2005-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1609" name="function-fromMillis.isoWeekDate[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2018600701" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1965313Z" end-time="2022-01-16T22:25:19.1981853Z" duration="0.001654" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2004-W53-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 2 Jan 2005'
Expr is '($ts := $toMillis('2005-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1610" name="function-fromMillis.isoWeekDate[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="757880354" result="Failed" label="Error" start-time="2022-01-16T22:25:19.1994628Z" end-time="2022-01-16T22:25:19.2004025Z" duration="0.000939" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2005-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2005-W52-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 31 Dec 2005'
Expr is '($ts := $toMillis('2005-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1611" name="function-fromMillis.isoWeekDate[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1728951057" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2004227Z" end-time="2022-01-16T22:25:19.2010914Z" duration="0.000669" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2005-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 1 Jan 2006'
Expr is '($ts := $toMillis('2006-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1612" name="function-fromMillis.isoWeekDate[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1868426518" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2019197Z" end-time="2022-01-16T22:25:19.2030227Z" duration="0.001103" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2006-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 2 Jan 2006'
Expr is '($ts := $toMillis('2006-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1613" name="function-fromMillis.isoWeekDate[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="444560805" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2030735Z" end-time="2022-01-16T22:25:19.2043464Z" duration="0.001273" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2006-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2006-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 31 Dec 2006'
Expr is '($ts := $toMillis('2006-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1614" name="function-fromMillis.isoWeekDate[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="718710447" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2045970Z" end-time="2022-01-16T22:25:19.2073978Z" duration="0.002801" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2007-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 1 Jan 2007'
Expr is '($ts := $toMillis('2007-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1615" name="function-fromMillis.isoWeekDate[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="365518291" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2079115Z" end-time="2022-01-16T22:25:19.2086795Z" duration="0.000768" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2007-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 30 Dec 2007'
Expr is '($ts := $toMillis('2007-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1616" name="function-fromMillis.isoWeekDate[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="129096515" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2094671Z" end-time="2022-01-16T22:25:19.2170380Z" duration="0.007571" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2007-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 31 Dec 2007'
Expr is '($ts := $toMillis('2007-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1617" name="function-fromMillis.isoWeekDate[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="762461473" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2199453Z" end-time="2022-01-16T22:25:19.2212835Z" duration="0.001338" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W01-2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 1 Jan 2008'
Expr is '($ts := $toMillis('2008-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1618" name="function-fromMillis.isoWeekDate[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1737457176" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2214546Z" end-time="2022-01-16T22:25:19.2224867Z" duration="0.001032" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-28', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2008-W52-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 28 Dec 2008'
Expr is '($ts := $toMillis('2008-12-28', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1619" name="function-fromMillis.isoWeekDate[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1099132838" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2225616Z" end-time="2022-01-16T22:25:19.2236649Z" duration="0.001103" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-29', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-1&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Mon 29 Dec 2008'
Expr is '($ts := $toMillis('2008-12-29', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1620" name="function-fromMillis.isoWeekDate[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="956495320" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2237190Z" end-time="2022-01-16T22:25:19.2247861Z" duration="0.001067" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-2&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Tue 30 Dec 2008'
Expr is '($ts := $toMillis('2008-12-30', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1621" name="function-fromMillis.isoWeekDate[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1726573582" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2248042Z" end-time="2022-01-16T22:25:19.2254885Z" duration="0.000684" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2008-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-3&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Wed 31 Dec 2008'
Expr is '($ts := $toMillis('2008-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1622" name="function-fromMillis.isoWeekDate[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1100170163" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2255060Z" end-time="2022-01-16T22:25:19.2260938Z" duration="0.000588" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2009-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W01-4&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thu 1 Jan 2009'
Expr is '($ts := $toMillis('2009-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1623" name="function-fromMillis.isoWeekDate[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1706749877" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2261104Z" end-time="2022-01-16T22:25:19.2272976Z" duration="0.001188" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2009-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-4&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Thu 31 Dec 2009'
Expr is '($ts := $toMillis('2009-12-31', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1624" name="function-fromMillis.isoWeekDate[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1866405537" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2277284Z" end-time="2022-01-16T22:25:19.2295267Z" duration="0.001798" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-5&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Fri 1 Jan 2010'
Expr is '($ts := $toMillis('2010-01-01', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1625" name="function-fromMillis.isoWeekDate[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="826756327" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2304978Z" end-time="2022-01-16T22:25:19.2310451Z" duration="0.000547" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-6&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sat 2 Jan 2010'
Expr is '($ts := $toMillis('2010-01-02', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1626" name="function-fromMillis.isoWeekDate[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-fromMillis.isoWeekDate[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1201824351" result="Failed" label="Error" start-time="2022-01-16T22:25:19.2310608Z" end-time="2022-01-16T22:25:19.2315712Z" duration="0.000511" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($ts := $toMillis('2010-01-03', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )';&#xA; result: &quot;2009-W53-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'Sun 3 Jan 2010'
Expr is '($ts := $toMillis('2010-01-03', '[Y]-[M]-[D]'); $fromMillis($ts, '[X0001]-W[W01]-[F1]') )'
]]></output>
                </test-case>
                <test-case id="0-1627" name="function-join.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="12905788" result="Passed" start-time="2022-01-16T22:25:19.2320415Z" end-time="2022-01-16T22:25:19.2321605Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(&quot;hello&quot;)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join("hello")'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1628" name="function-join.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="288790512" result="Passed" start-time="2022-01-16T22:25:19.2321734Z" end-time="2022-01-16T22:25:19.2322504Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;])';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello"])'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1629" name="function-join.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="222129650" result="Passed" start-time="2022-01-16T22:25:19.2322806Z" end-time="2022-01-16T22:25:19.2326241Z" duration="0.000344" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;, &quot;world&quot;])';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello", "world"])'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-1630" name="function-join.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="841602724" result="Passed" start-time="2022-01-16T22:25:19.2326359Z" end-time="2022-01-16T22:25:19.2327069Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;, &quot;world&quot;], &quot;, &quot;)';&#xA; result: &quot;hello, world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(["hello", "world"], ", ")'
Result: '"hello, world"'
Expected: '"hello, world"'
]]></output>
                </test-case>
                <test-case id="0-1631" name="function-join.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="220260467" result="Passed" start-time="2022-01-16T22:25:19.2327147Z" end-time="2022-01-16T22:25:19.2330244Z" duration="0.000310" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join([], &quot;, &quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join([], ", ")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1632" name="function-join.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1981143629" result="Passed" start-time="2022-01-16T22:25:19.2330335Z" end-time="2022-01-16T22:25:19.2341099Z" duration="0.001077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.Order.Product.Description.Colour, &quot;, &quot;)';&#xA; result: &quot;Purple, Orange, Purple, Black&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.Order.Product.Description.Colour, ", ")'
Result: '"Purple, Orange, Purple, Black"'
Expected: '"Purple, Orange, Purple, Black"'
]]></output>
                </test-case>
                <test-case id="0-1633" name="function-join.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="466493039" result="Passed" start-time="2022-01-16T22:25:19.2344538Z" end-time="2022-01-16T22:25:19.2347067Z" duration="0.000253" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.Order.Product.Description.Colour, no.sep)';&#xA; result: &quot;PurpleOrangePurpleBlack&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.Order.Product.Description.Colour, no.sep)'
Result: '"PurpleOrangePurpleBlack"'
Expected: '"PurpleOrangePurpleBlack"'
]]></output>
                </test-case>
                <test-case id="0-1634" name="function-join.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="156711399" result="Passed" start-time="2022-01-16T22:25:19.2349093Z" end-time="2022-01-16T22:25:19.2350424Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$join(Account.blah.Product.Description.Colour, &quot;, &quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$join(Account.blah.Product.Description.Colour, ", ")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1635" name="function-join.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="15357320" result="Passed" start-time="2022-01-16T22:25:19.2365243Z" end-time="2022-01-16T22:25:19.2375833Z" duration="0.001059" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join(true, &quot;, &quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join(true, ", ")'
]]></output>
                </test-case>
                <test-case id="0-1636" name="function-join.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1796513266" result="Passed" start-time="2022-01-16T22:25:19.2387494Z" end-time="2022-01-16T22:25:19.2393456Z" duration="0.000596" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join([1,2,3], &quot;, &quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join([1,2,3], ", ")'
]]></output>
                </test-case>
                <test-case id="0-1637" name="function-join.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1240127910" result="Passed" start-time="2022-01-16T22:25:19.2394078Z" end-time="2022-01-16T22:25:19.2400704Z" duration="0.000662" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join([&quot;hello&quot;], 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join(["hello"], 3)'
]]></output>
                </test-case>
                <test-case id="0-1638" name="function-join.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-join.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1289008556" result="Passed" start-time="2022-01-16T22:25:19.2407525Z" end-time="2022-01-16T22:25:19.2412036Z" duration="0.000450" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$join()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$join()'
]]></output>
                </test-case>
                <test-case id="0-1639" name="function-keys.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1379537390" result="Passed" start-time="2022-01-16T22:25:19.2413379Z" end-time="2022-01-16T22:25:19.2423981Z" duration="0.001060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(Account)';&#xA; result: [&quot;Account Name&quot;,&quot;Order&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(Account)'
Result: '["Account Name","Order"]'
Expected: '["Account Name","Order"]'
]]></output>
                </test-case>
                <test-case id="0-1640" name="function-keys.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="464622388" result="Passed" start-time="2022-01-16T22:25:19.2424165Z" end-time="2022-01-16T22:25:19.2429852Z" duration="0.000569" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(Account.Order.Product)';&#xA; result: [&quot;Product Name&quot;,&quot;ProductID&quot;,&quot;SKU&quot;,&quot;Description&quot;,&quot;Price&quot;,&quot;Quantity&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(Account.Order.Product)'
Result: '["Product Name","ProductID","SKU","Description","Price","Quantity"]'
Expected: '["Product Name","ProductID","SKU","Description","Price","Quantity"]'
]]></output>
                </test-case>
                <test-case id="0-1641" name="function-keys.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1531921839" result="Passed" start-time="2022-01-16T22:25:19.2429988Z" end-time="2022-01-16T22:25:19.2430791Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys({})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys({})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1642" name="function-keys.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1522970841" result="Passed" start-time="2022-01-16T22:25:19.2430876Z" end-time="2022-01-16T22:25:19.2431658Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys({&quot;foo&quot;:{}})';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$keys({"foo":{}})'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1643" name="function-keys.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1776271594" result="Passed" start-time="2022-01-16T22:25:19.2431739Z" end-time="2022-01-16T22:25:19.2444392Z" duration="0.001266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(&quot;foo&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys("foo")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1644" name="function-keys.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1070295778" result="Passed" start-time="2022-01-16T22:25:19.2470646Z" end-time="2022-01-16T22:25:19.2472116Z" duration="0.000147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys(function(){1})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(function(){1})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1645" name="function-keys.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-keys.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2114776055" result="Passed" start-time="2022-01-16T22:25:19.2476044Z" end-time="2022-01-16T22:25:19.2489643Z" duration="0.001360" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$keys([&quot;foo&quot;, &quot;bar&quot;])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$keys(["foo", "bar"])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1646" name="function-length.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="838059813" result="Passed" start-time="2022-01-16T22:25:19.2498421Z" end-time="2022-01-16T22:25:19.2501135Z" duration="0.000271" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;&quot;)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$length("")'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1647" name="function-length.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1551467437" result="Passed" start-time="2022-01-16T22:25:19.2505576Z" end-time="2022-01-16T22:25:19.2506523Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;hello&quot;)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$length("hello")'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-1648" name="function-length.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="914861413" result="Passed" start-time="2022-01-16T22:25:19.2510019Z" end-time="2022-01-16T22:25:19.2510895Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(missing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$length(missing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1649" name="function-length.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1948828449" result="Passed" start-time="2022-01-16T22:25:19.2511006Z" end-time="2022-01-16T22:25:19.2513122Z" duration="0.000212" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\u03BB-calculus&quot;)';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\u03BB-calculus")'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1650" name="function-length.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="408231466" result="Failed" start-time="2022-01-16T22:25:19.2513859Z" end-time="2022-01-16T22:25:19.2522737Z" duration="0.000888" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\uD834\uDD1E&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("\uD834\uDD1E")'
Result: '2'
Expected: '1'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1651" name="function-length.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2138864744" result="Failed" start-time="2022-01-16T22:25:19.2534760Z" end-time="2022-01-16T22:25:19.2545981Z" duration="0.001122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;𝄞&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("𝄞")'
Result: '2'
Expected: '1'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '1', got '2'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1652" name="function-length.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1337282576" result="Passed" start-time="2022-01-16T22:25:19.2547309Z" end-time="2022-01-16T22:25:19.2548640Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;超明體繁&quot;)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$length("超明體繁")'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1653" name="function-length.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="853391829" result="Passed" start-time="2022-01-16T22:25:19.2548752Z" end-time="2022-01-16T22:25:19.2551206Z" duration="0.000246" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\t&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\t")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1654" name="function-length.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1474359951" result="Passed" start-time="2022-01-16T22:25:19.2551762Z" end-time="2022-01-16T22:25:19.2552767Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;\n&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$length("\n")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1655" name="function-length.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="156925157" result="Passed" start-time="2022-01-16T22:25:19.2552857Z" end-time="2022-01-16T22:25:19.2557992Z" duration="0.000514" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(1234)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(1234)'
]]></output>
                </test-case>
                <test-case id="0-1656" name="function-length.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1475666781" result="Passed" start-time="2022-01-16T22:25:19.2558119Z" end-time="2022-01-16T22:25:19.2562348Z" duration="0.000423" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(null)'
]]></output>
                </test-case>
                <test-case id="0-1657" name="function-length.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="507848515" result="Passed" start-time="2022-01-16T22:25:19.2562469Z" end-time="2022-01-16T22:25:19.2566596Z" duration="0.000413" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(true)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(true)'
]]></output>
                </test-case>
                <test-case id="0-1658" name="function-length.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="946612666" result="Passed" start-time="2022-01-16T22:25:19.2566719Z" end-time="2022-01-16T22:25:19.2571733Z" duration="0.000501" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length([&quot;str&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length(["str"])'
]]></output>
                </test-case>
                <test-case id="0-1659" name="function-length.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1171012118" result="Passed" start-time="2022-01-16T22:25:19.2571854Z" end-time="2022-01-16T22:25:19.2576998Z" duration="0.000515" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length()';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length()'
]]></output>
                </test-case>
                <test-case id="0-1660" name="function-length.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2034533567" result="Passed" start-time="2022-01-16T22:25:19.2581460Z" end-time="2022-01-16T22:25:19.2585179Z" duration="0.000372" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length()';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length()'
]]></output>
                </test-case>
                <test-case id="0-1661" name="function-length.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="865827603" result="Passed" start-time="2022-01-16T22:25:19.2592722Z" end-time="2022-01-16T22:25:19.2614285Z" duration="0.002157" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;Hello&quot;, &quot;World&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$length("Hello", "World")'
]]></output>
                </test-case>
                <test-case id="0-1662" name="function-length.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-length.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="859736966" result="Failed" start-time="2022-01-16T22:25:19.2615163Z" end-time="2022-01-16T22:25:19.2623945Z" duration="0.000878" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$length(&quot;𝄞💩&quot;)';&#xA; result: 2" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '2', got '4'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$length("𝄞💩")'
Result: '4'
Expected: '2'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '2', got '4'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1663" name="function-lookup.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1776115589" result="Passed" start-time="2022-01-16T22:25:19.2624368Z" end-time="2022-01-16T22:25:19.2626067Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account, &quot;Account Name&quot;)';&#xA; result: &quot;Firefly&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account, "Account Name")'
Result: '"Firefly"'
Expected: '"Firefly"'
]]></output>
                </test-case>
                <test-case id="0-1664" name="function-lookup.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1176997977" result="Passed" start-time="2022-01-16T22:25:19.2626149Z" end-time="2022-01-16T22:25:19.2630885Z" duration="0.000474" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account.Order.Product, &quot;Product Name&quot;)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;,&quot;Bowler Hat&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account.Order.Product, "Product Name")'
Result: '["Bowler Hat","Trilby hat","Bowler Hat","Cloak"]'
Expected: '["Bowler Hat","Trilby hat","Bowler Hat","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-1665" name="function-lookup.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="537619887" result="Passed" start-time="2022-01-16T22:25:19.2631027Z" end-time="2022-01-16T22:25:19.2638024Z" duration="0.000700" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup(Account.Order.Product.ProductID, &quot;Product Name&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup(Account.Order.Product.ProductID, "Product Name")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1666" name="function-lookup.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lookup.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1895291075" result="Passed" start-time="2022-01-16T22:25:19.2638208Z" end-time="2022-01-16T22:25:19.2649024Z" duration="0.001082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lookup($$, &quot;gust&quot;)';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$lookup($$, "gust")'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-1667" name="function-lowercase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1401933479" result="Passed" start-time="2022-01-16T22:25:19.2649230Z" end-time="2022-01-16T22:25:19.2653018Z" duration="0.000379" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Hello World&quot;)';&#xA; result: &quot;hello world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase("Hello World")'
Result: '"hello world"'
Expected: '"hello world"'
]]></output>
                </test-case>
                <test-case id="0-1668" name="function-lowercase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-lowercase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="287849406" result="Passed" start-time="2022-01-16T22:25:19.2660607Z" end-time="2022-01-16T22:25:19.2662892Z" duration="0.000229" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1669" name="function-max.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="703353127" result="Passed" start-time="2022-01-16T22:25:19.2666068Z" end-time="2022-01-16T22:25:19.2684132Z" duration="0.001807" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(Account.Order.Product.(Price * Quantity))';&#xA; result: 137.8" />
                  </properties>
                  <output><![CDATA[Expr is '$max(Account.Order.Product.(Price * Quantity))'
Result: '137.8'
Expected: '137.8'
]]></output>
                </test-case>
                <test-case id="0-1670" name="function-max.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="716488672" result="Passed" start-time="2022-01-16T22:25:19.2694658Z" end-time="2022-01-16T22:25:19.2700783Z" duration="0.000612" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$max(Product.(Price * Quantity))';&#xA; result: [68.9,137.8]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$max(Product.(Price * Quantity))'
Result: '[68.9,137.8]'
Expected: '[68.9,137.8]'
]]></output>
                </test-case>
                <test-case id="0-1671" name="function-max.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1036452252" result="Passed" start-time="2022-01-16T22:25:19.2701927Z" end-time="2022-01-16T22:25:19.2707101Z" duration="0.000517" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $count(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 2&quot;,&quot;order104: 2&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $count(Product.(Price*Quantity)))'
Result: '["order103: 2","order104: 2"]'
Expected: '["order103: 2","order104: 2"]'
]]></output>
                </test-case>
                <test-case id="0-1672" name="function-max.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1620936564" result="Passed" start-time="2022-01-16T22:25:19.2707267Z" end-time="2022-01-16T22:25:19.2708139Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$max([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1673" name="function-max.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="357919786" result="Passed" start-time="2022-01-16T22:25:19.2708218Z" end-time="2022-01-16T22:25:19.2708888Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2,3])';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$max([1,2,3])'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1674" name="function-max.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="634510450" result="Passed" start-time="2022-01-16T22:25:19.2708964Z" end-time="2022-01-16T22:25:19.2720969Z" duration="0.001201" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1675" name="function-max.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1572057128" result="Passed" start-time="2022-01-16T22:25:19.2721189Z" end-time="2022-01-16T22:25:19.2728691Z" duration="0.000750" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1676" name="function-max.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="203602741" result="Passed" start-time="2022-01-16T22:25:19.2728881Z" end-time="2022-01-16T22:25:19.2729947Z" duration="0.000107" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$max(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1677" name="function-max.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1471382216" result="Passed" start-time="2022-01-16T22:25:19.2730028Z" end-time="2022-01-16T22:25:19.2730837Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max([-1,-5])';&#xA; result: -1" />
                  </properties>
                  <output><![CDATA[Expr is '$max([-1,-5])'
Result: '-1'
Expected: '-1'
]]></output>
                </test-case>
                <test-case id="0-1678" name="function-max.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="636454099" result="Passed" start-time="2022-01-16T22:25:19.2758150Z" end-time="2022-01-16T22:25:19.2769144Z" duration="0.001099" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([],[])'
]]></output>
                </test-case>
                <test-case id="0-1679" name="function-max.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1899113129" result="Passed" start-time="2022-01-16T22:25:19.2775979Z" end-time="2022-01-16T22:25:19.2780878Z" duration="0.000490" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1680" name="function-max.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2136180161" result="Passed" start-time="2022-01-16T22:25:19.2781035Z" end-time="2022-01-16T22:25:19.2798221Z" duration="0.001719" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1681" name="function-max.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1797840561" result="Passed" start-time="2022-01-16T22:25:19.2798441Z" end-time="2022-01-16T22:25:19.2807026Z" duration="0.000859" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$max([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$max([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1682" name="function-max.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1245528022" result="Passed" start-time="2022-01-16T22:25:19.2807600Z" end-time="2022-01-16T22:25:19.2808659Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$max(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$max(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1683" name="function-max.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="487445710" result="Passed" start-time="2022-01-16T22:25:19.2812309Z" end-time="2022-01-16T22:25:19.2818440Z" duration="0.000613" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(Account.Order.Product.(Price * Quantity))';&#xA; result: 21.67" />
                  </properties>
                  <output><![CDATA[Expr is '$min(Account.Order.Product.(Price * Quantity))'
Result: '21.67'
Expected: '21.67'
]]></output>
                </test-case>
                <test-case id="0-1684" name="function-max.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1961381831" result="Passed" start-time="2022-01-16T22:25:19.2818588Z" end-time="2022-01-16T22:25:19.2822518Z" duration="0.000393" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$min(Product.(Price * Quantity))';&#xA; result: [21.67,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$min(Product.(Price * Quantity))'
Result: '[21.67,107.99]'
Expected: '[21.67,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1685" name="function-max.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="850221627" result="Passed" start-time="2022-01-16T22:25:19.2822639Z" end-time="2022-01-16T22:25:19.2835595Z" duration="0.001295" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $min(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 21.67&quot;,&quot;order104: 107.99&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $min(Product.(Price*Quantity)))'
Result: '["order103: 21.67","order104: 107.99"]'
Expected: '["order103: 21.67","order104: 107.99"]'
]]></output>
                </test-case>
                <test-case id="0-1686" name="function-max.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1030461538" result="Passed" start-time="2022-01-16T22:25:19.2843713Z" end-time="2022-01-16T22:25:19.2845355Z" duration="0.000164" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min([])';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$min([])'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1687" name="function-max.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1127751800" result="Passed" start-time="2022-01-16T22:25:19.2848491Z" end-time="2022-01-16T22:25:19.2849351Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2,3])';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$min([1,2,3])'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1688" name="function-max.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1139616735" result="Passed" start-time="2022-01-16T22:25:19.2867186Z" end-time="2022-01-16T22:25:19.2873555Z" duration="0.000637" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min(["1","2","3"])'
]]></output>
                </test-case>
                <test-case id="0-1689" name="function-max.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2147269889" result="Passed" start-time="2022-01-16T22:25:19.2881313Z" end-time="2022-01-16T22:25:19.2886901Z" duration="0.000558" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([&quot;1&quot;,&quot;2&quot;,3])';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min(["1","2",3])'
]]></output>
                </test-case>
                <test-case id="0-1690" name="function-max.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="687174186" result="Passed" start-time="2022-01-16T22:25:19.2887049Z" end-time="2022-01-16T22:25:19.2887786Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$min(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1691" name="function-max.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1288664751" result="Passed" start-time="2022-01-16T22:25:19.2887870Z" end-time="2022-01-16T22:25:19.2894264Z" duration="0.000639" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([],[])'
]]></output>
                </test-case>
                <test-case id="0-1692" name="function-max.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="293515244" result="Passed" start-time="2022-01-16T22:25:19.2898674Z" end-time="2022-01-16T22:25:19.2902816Z" duration="0.000414" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2,3],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([1,2,3],[])'
]]></output>
                </test-case>
                <test-case id="0-1693" name="function-max.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117996438" result="Passed" start-time="2022-01-16T22:25:19.2907516Z" end-time="2022-01-16T22:25:19.2911226Z" duration="0.000371" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1694" name="function-max.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1492487470" result="Passed" start-time="2022-01-16T22:25:19.2911618Z" end-time="2022-01-16T22:25:19.2917586Z" duration="0.000597" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$min([1,2],[],[])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$min([1,2],[],[])'
]]></output>
                </test-case>
                <test-case id="0-1695" name="function-max.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-max.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1746278432" result="Passed" start-time="2022-01-16T22:25:19.2917725Z" end-time="2022-01-16T22:25:19.2918564Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$min(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$min(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1696" name="function-merge.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="672184873" result="Passed" start-time="2022-01-16T22:25:19.2918646Z" end-time="2022-01-16T22:25:19.2928556Z" duration="0.000991" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$merge(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1697" name="function-merge.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1894338899" result="Passed" start-time="2022-01-16T22:25:19.2942424Z" end-time="2022-01-16T22:25:19.2953038Z" duration="0.001061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge({&quot;a&quot;:1})';&#xA; result: {&quot;a&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge({"a":1})'
Result: '{"a":1}'
Expected: '{"a":1}'
]]></output>
                </test-case>
                <test-case id="0-1698" name="function-merge.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="599273617" result="Passed" start-time="2022-01-16T22:25:19.2960126Z" end-time="2022-01-16T22:25:19.2966701Z" duration="0.000657" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;:1}, {&quot;b&quot;:2}])';&#xA; result: {&quot;a&quot;:1,&quot;b&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a":1}, {"b":2}])'
Result: '{"a":1,"b":2}'
Expected: '{"a":1,"b":2}'
]]></output>
                </test-case>
                <test-case id="0-1699" name="function-merge.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="532675891" result="Passed" start-time="2022-01-16T22:25:19.2968560Z" end-time="2022-01-16T22:25:19.2972545Z" duration="0.000398" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;: 1}, {&quot;b&quot;: 2, &quot;c&quot;: 3}])';&#xA; result: {&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a": 1}, {"b": 2, "c": 3}])'
Result: '{"a":1,"b":2,"c":3}'
Expected: '{"a":1,"b":2,"c":3}'
]]></output>
                </test-case>
                <test-case id="0-1700" name="function-merge.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-merge.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="219484980" result="Passed" start-time="2022-01-16T22:25:19.2973450Z" end-time="2022-01-16T22:25:19.2990159Z" duration="0.001671" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$merge([{&quot;a&quot;: 1}, {&quot;b&quot;: 2, &quot;a&quot;: 3}])';&#xA; result: {&quot;a&quot;:3,&quot;b&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '$merge([{"a": 1}, {"b": 2, "a": 3}])'
Result: '{"a":3,"b":2}'
Expected: '{"a":3,"b":2}'
]]></output>
                </test-case>
                <test-case id="0-1701" name="function-number.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1583609981" result="Passed" start-time="2022-01-16T22:25:19.2997627Z" end-time="2022-01-16T22:25:19.2998901Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(0)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number(0)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1702" name="function-number.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1263618031" result="Passed" start-time="2022-01-16T22:25:19.2999046Z" end-time="2022-01-16T22:25:19.2999677Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(10)';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$number(10)'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1703" name="function-number.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="211508286" result="Passed" start-time="2022-01-16T22:25:19.2999758Z" end-time="2022-01-16T22:25:19.3000447Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(-0.05)';&#xA; result: -0.05" />
                  </properties>
                  <output><![CDATA[Expr is '$number(-0.05)'
Result: '-0.05'
Expected: '-0.05'
]]></output>
                </test-case>
                <test-case id="0-1704" name="function-number.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1232339777" result="Passed" start-time="2022-01-16T22:25:19.3000525Z" end-time="2022-01-16T22:25:19.3004217Z" duration="0.000369" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;0&quot;)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number("0")'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1705" name="function-number.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1519262861" result="Passed" start-time="2022-01-16T22:25:19.3015440Z" end-time="2022-01-16T22:25:19.3016775Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;-0.05&quot;)';&#xA; result: -0.05" />
                  </properties>
                  <output><![CDATA[Expr is '$number("-0.05")'
Result: '-0.05'
Expected: '-0.05'
]]></output>
                </test-case>
                <test-case id="0-1706" name="function-number.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="517928180" result="Passed" start-time="2022-01-16T22:25:19.3016856Z" end-time="2022-01-16T22:25:19.3017487Z" duration="0.000063" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1e2&quot;)';&#xA; result: 100" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1e2")'
Result: '100'
Expected: '100'
]]></output>
                </test-case>
                <test-case id="0-1707" name="function-number.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="979362790" result="Passed" start-time="2022-01-16T22:25:19.3035038Z" end-time="2022-01-16T22:25:19.3037565Z" duration="0.000253" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1.0e-2&quot;)';&#xA; result: 0.01" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1.0e-2")'
Result: '0.01'
Expected: '0.01'
]]></output>
                </test-case>
                <test-case id="0-1708" name="function-number.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="218881379" result="Passed" start-time="2022-01-16T22:25:19.3056522Z" end-time="2022-01-16T22:25:19.3057908Z" duration="0.000138" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1e0&quot;)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$number("1e0")'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1709" name="function-number.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2049786470" result="Passed" start-time="2022-01-16T22:25:19.3062916Z" end-time="2022-01-16T22:25:19.3068473Z" duration="0.000555" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;10e500&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("10e500")'
]]></output>
                </test-case>
                <test-case id="0-1710" name="function-number.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2100806063" result="Passed" start-time="2022-01-16T22:25:19.3071902Z" end-time="2022-01-16T22:25:19.3078057Z" duration="0.000616" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;Hello world&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("Hello world")'
]]></output>
                </test-case>
                <test-case id="0-1711" name="function-number.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="4284565" result="Passed" start-time="2022-01-16T22:25:19.3078275Z" end-time="2022-01-16T22:25:19.3084182Z" duration="0.000591" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1/2&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("1/2")'
]]></output>
                </test-case>
                <test-case id="0-1712" name="function-number.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2018878063" result="Passed" start-time="2022-01-16T22:25:19.3084394Z" end-time="2022-01-16T22:25:19.3089637Z" duration="0.000524" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;1234 hello&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("1234 hello")'
]]></output>
                </test-case>
                <test-case id="0-1713" name="function-number.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1194983184" result="Passed" start-time="2022-01-16T22:25:19.3089764Z" end-time="2022-01-16T22:25:19.3119329Z" duration="0.002957" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("")'
]]></output>
                </test-case>
                <test-case id="0-1714" name="function-number.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1182315604" result="Passed" start-time="2022-01-16T22:25:19.3133713Z" end-time="2022-01-16T22:25:19.3135760Z" duration="0.000204" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(true)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$number(true)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1715" name="function-number.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="236693006" result="Passed" start-time="2022-01-16T22:25:19.3143316Z" end-time="2022-01-16T22:25:19.3144725Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(false)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number(false)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1716" name="function-number.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1767783228" result="Passed" start-time="2022-01-16T22:25:19.3151022Z" end-time="2022-01-16T22:25:19.3153404Z" duration="0.000238" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number(Account.blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$number(Account.blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1717" name="function-number.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="372291256" result="Passed" start-time="2022-01-16T22:25:19.3153724Z" end-time="2022-01-16T22:25:19.3161863Z" duration="0.000814" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(null)'
]]></output>
                </test-case>
                <test-case id="0-1718" name="function-number.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1962217405" result="Passed" start-time="2022-01-16T22:25:19.3162460Z" end-time="2022-01-16T22:25:19.3173180Z" duration="0.001072" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number([])'
]]></output>
                </test-case>
                <test-case id="0-1719" name="function-number.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="326776350" result="Passed" start-time="2022-01-16T22:25:19.3173361Z" end-time="2022-01-16T22:25:19.3179676Z" duration="0.000632" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(&quot;[1]&quot;)';&#xA; result: error D3030" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3030]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number("[1]")'
]]></output>
                </test-case>
                <test-case id="0-1720" name="function-number.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1654641996" result="Passed" start-time="2022-01-16T22:25:19.3179812Z" end-time="2022-01-16T22:25:19.3190809Z" duration="0.001100" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([1,2])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number([1,2])'
]]></output>
                </test-case>
                <test-case id="0-1721" name="function-number.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="767539275" result="Passed" start-time="2022-01-16T22:25:19.3192113Z" end-time="2022-01-16T22:25:19.3198821Z" duration="0.000670" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([&quot;hello&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(["hello"])'
]]></output>
                </test-case>
                <test-case id="0-1722" name="function-number.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="262316744" result="Passed" start-time="2022-01-16T22:25:19.3198972Z" end-time="2022-01-16T22:25:19.3204571Z" duration="0.000560" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number([&quot;2&quot;])';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(["2"])'
]]></output>
                </test-case>
                <test-case id="0-1723" name="function-number.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="288063164" result="Passed" start-time="2022-01-16T22:25:19.3204937Z" end-time="2022-01-16T22:25:19.3208970Z" duration="0.000403" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number({})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number({})'
]]></output>
                </test-case>
                <test-case id="0-1724" name="function-number.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="16178941" result="Passed" start-time="2022-01-16T22:25:19.3209093Z" end-time="2022-01-16T22:25:19.3238040Z" duration="0.002895" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number({&quot;hello&quot;:&quot;world&quot;})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number({"hello":"world"})'
]]></output>
                </test-case>
                <test-case id="0-1725" name="function-number.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1575307568" result="Passed" start-time="2022-01-16T22:25:19.3247727Z" end-time="2022-01-16T22:25:19.3256267Z" duration="0.000854" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number($number)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number($number)'
]]></output>
                </test-case>
                <test-case id="0-1726" name="function-number.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="742937008" result="Passed" start-time="2022-01-16T22:25:19.3256825Z" end-time="2022-01-16T22:25:19.3265782Z" duration="0.000896" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(function(){5})';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(function(){5})'
]]></output>
                </test-case>
                <test-case id="0-1727" name="function-number.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1502940126" result="Passed" start-time="2022-01-16T22:25:19.3293511Z" end-time="2022-01-16T22:25:19.3312629Z" duration="0.001912" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$number(1,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$number(1,2)'
]]></output>
                </test-case>
                <test-case id="0-1728" name="function-number.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1012915963" result="Passed" start-time="2022-01-16T22:25:19.3318002Z" end-time="2022-01-16T22:25:19.3322458Z" duration="0.000446" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('00')';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$number('00')'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1729" name="function-number.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1035715665" result="Passed" start-time="2022-01-16T22:25:19.3323789Z" end-time="2022-01-16T22:25:19.3327254Z" duration="0.000346" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('0123')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Expr is '$number('0123')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1730" name="function-number.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="899872255" result="Passed" start-time="2022-01-16T22:25:19.3328809Z" end-time="2022-01-16T22:25:19.3333802Z" duration="0.000500" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('-007')';&#xA; result: -7" />
                  </properties>
                  <output><![CDATA[Expr is '$number('-007')'
Result: '-7'
Expected: '-7'
]]></output>
                </test-case>
                <test-case id="0-1731" name="function-number.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-number.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="456747489" result="Passed" start-time="2022-01-16T22:25:19.3340247Z" end-time="2022-01-16T22:25:19.3358845Z" duration="0.001860" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$number('000.00123000')';&#xA; result: 0.00123" />
                  </properties>
                  <output><![CDATA[Expr is '$number('000.00123000')'
Result: '0.00123'
Expected: '0.00123'
]]></output>
                </test-case>
                <test-case id="0-1732" name="function-pad.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="872108599" result="Passed" start-time="2022-01-16T22:25:19.3397053Z" end-time="2022-01-16T22:25:19.3421438Z" duration="0.002438" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 5)';&#xA; result: &quot;foo  &quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 5)'
Result: '"foo  "'
Expected: '"foo  "'
]]></output>
                </test-case>
                <test-case id="0-1733" name="function-pad.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="103778208" result="Passed" start-time="2022-01-16T22:25:19.3433060Z" end-time="2022-01-16T22:25:19.3437666Z" duration="0.000460" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, -5)';&#xA; result: &quot;  foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", -5)'
Result: '"  foo"'
Expected: '"  foo"'
]]></output>
                </test-case>
                <test-case id="0-1734" name="function-pad.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1679628149" result="Passed" start-time="2022-01-16T22:25:19.3440664Z" end-time="2022-01-16T22:25:19.3447643Z" duration="0.000698" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, -5, &quot;#&quot;)';&#xA; result: &quot;##foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", -5, "#")'
Result: '"##foo"'
Expected: '"##foo"'
]]></output>
                </test-case>
                <test-case id="0-1735" name="function-pad.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="552570180" result="Passed" start-time="2022-01-16T22:25:19.3448811Z" end-time="2022-01-16T22:25:19.3453065Z" duration="0.000426" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 5, &quot;&quot;)';&#xA; result: &quot;foo  &quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 5, "")'
Result: '"foo  "'
Expected: '"foo  "'
]]></output>
                </test-case>
                <test-case id="0-1736" name="function-pad.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="534222530" result="Passed" start-time="2022-01-16T22:25:19.3454417Z" end-time="2022-01-16T22:25:19.3459341Z" duration="0.000492" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 1)';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 1)'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-1737" name="function-pad.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1034019736" result="Passed" start-time="2022-01-16T22:25:19.3462586Z" end-time="2022-01-16T22:25:19.3465460Z" duration="0.000288" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(&quot;foo&quot;, 8, &quot;-+&quot;)';&#xA; result: &quot;foo-+-+-&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$pad("foo", 8, "-+")'
Result: '"foo-+-+-"'
Expected: '"foo-+-+-"'
]]></output>
                </test-case>
                <test-case id="0-1738" name="function-pad.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1402589580" result="Passed" start-time="2022-01-16T22:25:19.3469260Z" end-time="2022-01-16T22:25:19.3470504Z" duration="0.000124" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad(nothing, 1)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$pad(nothing, 1)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1739" name="function-pad.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="442118970" result="Failed" start-time="2022-01-16T22:25:19.3471080Z" end-time="2022-01-16T22:25:19.3495822Z" duration="0.002474" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 7)';&#xA; result: &quot;a𝄞💩    &quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩    "', got '"a𝄞💩  "'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 7)'
Result: '"a𝄞💩  "'
Expected: '"a𝄞💩    "'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩    "', got '"a𝄞💩  "'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1740" name="function-pad.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="332293447" result="Failed" start-time="2022-01-16T22:25:19.3496139Z" end-time="2022-01-16T22:25:19.3529689Z" duration="0.003356" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('𝄞💩', -7)';&#xA; result: &quot;     𝄞💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"     𝄞💩"', got '"   𝄞💩"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('𝄞💩', -7)'
Result: '"   𝄞💩"'
Expected: '"     𝄞💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"     𝄞💩"', got '"   𝄞💩"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1741" name="function-pad.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="51098748" result="Failed" start-time="2022-01-16T22:25:19.3535708Z" end-time="2022-01-16T22:25:19.3555456Z" duration="0.001975" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 7, '💩')';&#xA; result: &quot;a𝄞💩💩💩💩💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩💩💩💩💩"', got '"a𝄞💩💩"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 7, '💩')'
Result: '"a𝄞💩💩"'
Expected: '"a𝄞💩💩💩💩💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩💩💩💩💩"', got '"a𝄞💩💩"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1742" name="function-pad.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-pad.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="908870421" result="Failed" start-time="2022-01-16T22:25:19.3568581Z" end-time="2022-01-16T22:25:19.3592235Z" duration="0.002365" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$pad('a𝄞💩', 6, '💩')';&#xA; result: &quot;a𝄞💩💩💩💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"a𝄞💩💩💩💩"', got '"a𝄞💩\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$pad('a𝄞💩', 6, '💩')'
Result: '"a𝄞💩\ud83d"'
Expected: '"a𝄞💩💩💩💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"a𝄞💩💩💩💩"', got '"a𝄞💩\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1743" name="function-parseInteger.parseInteger[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1237313912" result="Passed" start-time="2022-01-16T22:25:19.3592468Z" end-time="2022-01-16T22:25:19.3600491Z" duration="0.000803" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger(undefined, '0')';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Description: 'should return result object'
Expr is '$parseInteger(undefined, '0')'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1744" name="function-parseInteger.parseInteger[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="46463826" result="Passed" start-time="2022-01-16T22:25:19.3600675Z" end-time="2022-01-16T22:25:19.3609487Z" duration="0.000881" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('123', '000')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Description: 'should parse a number'
Expr is '$parseInteger('123', '000')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1745" name="function-parseInteger.parseInteger[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="682889621" result="Passed" start-time="2022-01-16T22:25:19.3609707Z" end-time="2022-01-16T22:25:19.3615425Z" duration="0.000572" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('0123', '0000')';&#xA; result: 123" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number padded with zeros'
Expr is '$parseInteger('0123', '0000')'
Result: '123'
Expected: '123'
]]></output>
                </test-case>
                <test-case id="0-1746" name="function-parseInteger.parseInteger[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1417270335" result="Passed" start-time="2022-01-16T22:25:19.3615594Z" end-time="2022-01-16T22:25:19.3616985Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234', '0')';&#xA; result: 1234" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number'
Expr is '$parseInteger('1234', '0')'
Result: '1234'
Expected: '1234'
]]></output>
                </test-case>
                <test-case id="0-1747" name="function-parseInteger.parseInteger[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1246015707" result="Passed" start-time="2022-01-16T22:25:19.3617145Z" end-time="2022-01-16T22:25:19.3623418Z" duration="0.000628" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234', '###0')';&#xA; result: 1234" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number with optional digits'
Expr is '$parseInteger('1234', '###0')'
Result: '1234'
Expected: '1234'
]]></output>
                </test-case>
                <test-case id="0-1748" name="function-parseInteger.parseInteger[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1083164481" result="Passed" start-time="2022-01-16T22:25:19.3632082Z" end-time="2022-01-16T22:25:19.3636882Z" duration="0.000480" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12', '###0')';&#xA; result: 12" />
                  </properties>
                  <output><![CDATA[Description: 'should parse number with optional digits'
Expr is '$parseInteger('12', '###0')'
Result: '12'
Expected: '12'
]]></output>
                </test-case>
                <test-case id="0-1749" name="function-parseInteger.parseInteger[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1255794464" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3637042Z" end-time="2022-01-16T22:25:19.3721396Z" duration="0.008436" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('123rd', '000;o')';&#xA; result: 123" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should parse a number'
Expr is '$parseInteger('123rd', '000;o')'
]]></output>
                </test-case>
                <test-case id="0-1750" name="function-parseInteger.parseInteger[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2125978851" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3810397Z" end-time="2022-01-16T22:25:19.3825777Z" duration="0.001538" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1st', '0;o')';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('1st', '0;o')'
]]></output>
                </test-case>
                <test-case id="0-1751" name="function-parseInteger.parseInteger[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="299893617" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3837079Z" end-time="2022-01-16T22:25:19.3847925Z" duration="0.001084" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('28th', '#0;o')';&#xA; result: 28" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('28th', '#0;o')'
]]></output>
                </test-case>
                <test-case id="0-1752" name="function-parseInteger.parseInteger[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2079605141" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3848384Z" end-time="2022-01-16T22:25:19.3864063Z" duration="0.001568" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234th', '###0;o')';&#xA; result: 1234" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('1234th', '###0;o')'
]]></output>
                </test-case>
                <test-case id="0-1753" name="function-parseInteger.parseInteger[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="272497267" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3865165Z" end-time="2022-01-16T22:25:19.3884150Z" duration="0.001898" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12th', '###0;o')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should pad number with zeros'
Expr is '$parseInteger('12th', '###0;o')'
]]></output>
                </test-case>
                <test-case id="0-1754" name="function-parseInteger.parseInteger[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1025517542" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3886501Z" end-time="2022-01-16T22:25:19.3907264Z" duration="0.002076" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('١٢٣٤٠', '###١')';&#xA; result: 12340" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('١٢٣٤٠', '###١')'
]]></output>
                </test-case>
                <test-case id="0-1755" name="function-parseInteger.parseInteger[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1599429352" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3910639Z" end-time="2022-01-16T22:25:19.3928268Z" duration="0.001763" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('１２３４０', '###０')';&#xA; result: 12340" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('１２３４０', '###０')'
]]></output>
                </test-case>
                <test-case id="0-1756" name="function-parseInteger.parseInteger[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1321293237" result="Passed" start-time="2022-01-16T22:25:19.3929466Z" end-time="2022-01-16T22:25:19.3936479Z" duration="0.000702" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12', '#,##0')';&#xA; result: 12" />
                  </properties>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('12', '#,##0')'
Result: '12'
Expected: '12'
]]></output>
                </test-case>
                <test-case id="0-1757" name="function-parseInteger.parseInteger[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="975554867" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3936901Z" end-time="2022-01-16T22:25:19.3950881Z" duration="0.001398" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,200', '#,##0')';&#xA; result: 1200" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,200', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1758" name="function-parseInteger.parseInteger[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="195329345" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.3952596Z" end-time="2022-01-16T22:25:19.4026578Z" duration="0.007399" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12,345,678', '#,##0')';&#xA; result: 12345678" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('12,345,678', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1759" name="function-parseInteger.parseInteger[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1804515856" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4041714Z" end-time="2022-01-16T22:25:19.4057188Z" duration="0.001547" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,234,567,890', '#,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,234,567,890', '#,##0')'
]]></output>
                </test-case>
                <test-case id="0-1760" name="function-parseInteger.parseInteger[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="776325853" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4057393Z" end-time="2022-01-16T22:25:19.4068381Z" duration="0.001099" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1,234,567,890', '#,###,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert regular groups'
Expr is '$parseInteger('1,234,567,890', '#,###,##0')'
]]></output>
                </test-case>
                <test-case id="0-1761" name="function-parseInteger.parseInteger[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1162471701" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4068958Z" end-time="2022-01-16T22:25:19.4080054Z" duration="0.001110" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('1234:567,890', '#:###,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert non-regular groups - different chars'
Expr is '$parseInteger('1234:567,890', '#:###,##0')'
]]></output>
                </test-case>
                <test-case id="0-1762" name="function-parseInteger.parseInteger[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2113930474" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4080245Z" end-time="2022-01-16T22:25:19.4096316Z" duration="0.001607" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('12345,67,890', '##,##,##0')';&#xA; result: 1234567890" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: 'should insert non-regular groups - different positions'
Expr is '$parseInteger('12345,67,890', '##,##,##0')'
]]></output>
                </test-case>
                <test-case id="0-1763" name="function-parseInteger.parseInteger[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1330649361" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4097530Z" end-time="2022-01-16T22:25:19.4109813Z" duration="0.001228" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('', 'I')';&#xA; result: 0" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '0'
Expr is '$parseInteger('', 'I')'
]]></output>
                </test-case>
                <test-case id="0-1764" name="function-parseInteger.parseInteger[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1149914215" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4110184Z" end-time="2022-01-16T22:25:19.4120439Z" duration="0.001026" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('MCMLXXXIV', 'I')';&#xA; result: 1984" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1984'
Expr is '$parseInteger('MCMLXXXIV', 'I')'
]]></output>
                </test-case>
                <test-case id="0-1765" name="function-parseInteger.parseInteger[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1644058574" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4121015Z" end-time="2022-01-16T22:25:19.4134772Z" duration="0.001376" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('xcix', 'i')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('xcix', 'i')'
]]></output>
                </test-case>
                <test-case id="0-1766" name="function-parseInteger.parseInteger[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1279659613" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4135236Z" end-time="2022-01-16T22:25:19.4147426Z" duration="0.001219" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twelve', 'w')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('twelve', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1767" name="function-parseInteger.parseInteger[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1915099855" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4147619Z" end-time="2022-01-16T22:25:19.4163340Z" duration="0.001572" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twenty', 'w')';&#xA; result: 20" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$parseInteger('twenty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1768" name="function-parseInteger.parseInteger[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1662838682" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4176230Z" end-time="2022-01-16T22:25:19.4217626Z" duration="0.004139" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('thirty-four', 'w')';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$parseInteger('thirty-four', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1769" name="function-parseInteger.parseInteger[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="629745424" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4233169Z" end-time="2022-01-16T22:25:19.4242470Z" duration="0.000930" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('NINETY-NINE', 'W')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('NINETY-NINE', 'W')'
]]></output>
                </test-case>
                <test-case id="0-1770" name="function-parseInteger.parseInteger[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1849954123" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4242687Z" end-time="2022-01-16T22:25:19.4249165Z" duration="0.000648" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one hundred', 'w')';&#xA; result: 100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$parseInteger('one hundred', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1771" name="function-parseInteger.parseInteger[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="733763492" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4249349Z" end-time="2022-01-16T22:25:19.4258529Z" duration="0.000918" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FIVE HUNDRED AND FIFTY-FIVE', 'W')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('FIVE HUNDRED AND FIFTY-FIVE', 'W')'
]]></output>
                </test-case>
                <test-case id="0-1772" name="function-parseInteger.parseInteger[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1117185323" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4283059Z" end-time="2022-01-16T22:25:19.4295726Z" duration="0.001266" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('Five Hundred and Fifty-Five', 'Ww')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('Five Hundred and Fifty-Five', 'Ww')'
]]></output>
                </test-case>
                <test-case id="0-1773" name="function-parseInteger.parseInteger[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1520098435" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4306249Z" end-time="2022-01-16T22:25:19.4316042Z" duration="0.000979" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('nine hundred and nineteen', 'w')';&#xA; result: 919" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$parseInteger('nine hundred and nineteen', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1774" name="function-parseInteger.parseInteger[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2141966550" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4317391Z" end-time="2022-01-16T22:25:19.4328814Z" duration="0.001143" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('seven hundred and thirty', 'w')';&#xA; result: 730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$parseInteger('seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1775" name="function-parseInteger.parseInteger[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1603543248" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4329867Z" end-time="2022-01-16T22:25:19.4341224Z" duration="0.001136" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousand', 'w')';&#xA; result: 1000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$parseInteger('one thousand', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1776" name="function-parseInteger.parseInteger[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2006152501" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4341420Z" end-time="2022-01-16T22:25:19.4364712Z" duration="0.002330" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three thousand, seven hundred and thirty', 'w')';&#xA; result: 3730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$parseInteger('three thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1777" name="function-parseInteger.parseInteger[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1172486479" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4371163Z" end-time="2022-01-16T22:25:19.4394694Z" duration="0.002353" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirty', 'w')';&#xA; result: 327730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1778" name="function-parseInteger.parseInteger[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="241599338" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4416477Z" end-time="2022-01-16T22:25:19.4435667Z" duration="0.001918" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty', 'w')';&#xA; result: 4327730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1779" name="function-parseInteger.parseInteger[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1480772967" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4464758Z" end-time="2022-01-16T22:25:19.4484265Z" duration="0.001950" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion and one', 'w')';&#xA; result: 1000000000001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$parseInteger('one trillion and one', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1780" name="function-parseInteger.parseInteger[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="158037233" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4509308Z" end-time="2022-01-16T22:25:19.4524423Z" duration="0.001511" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three', 'w')';&#xA; result: 1234567890123" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1234567890123'
Expr is '$parseInteger('one trillion, two hundred and thirty-four billion, five hundred and sixty-seven million, eight hundred and ninety thousand, one hundred and twenty-three', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1781" name="function-parseInteger.parseInteger[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1644404948" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4551627Z" end-time="2022-01-16T22:25:19.4567134Z" duration="0.001551" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousand trillion', 'w')';&#xA; result: 1000000000000000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e15'
Expr is '$parseInteger('one thousand trillion', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1782" name="function-parseInteger.parseInteger[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="419775645" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4582379Z" end-time="2022-01-16T22:25:19.4624638Z" duration="0.004226" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('ten billion trillion trillion trillion', 'w')';&#xA; result: 1E+46" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e46'
Expr is '$parseInteger('ten billion trillion trillion trillion', 'w')'
]]></output>
                </test-case>
                <test-case id="0-1783" name="function-parseInteger.parseInteger[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1904605146" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4648531Z" end-time="2022-01-16T22:25:19.4660626Z" duration="0.001210" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twelfth', 'w;o')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('twelfth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1784" name="function-parseInteger.parseInteger[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1057220461" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4660859Z" end-time="2022-01-16T22:25:19.4671518Z" duration="0.001067" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('twentieth', 'w;o')';&#xA; result: 20" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '20'
Expr is '$parseInteger('twentieth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1785" name="function-parseInteger.parseInteger[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="599978638" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4671971Z" end-time="2022-01-16T22:25:19.4684761Z" duration="0.001279" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('thirty-fourth', 'w;o')';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '34'
Expr is '$parseInteger('thirty-fourth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1786" name="function-parseInteger.parseInteger[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="524625995" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4706704Z" end-time="2022-01-16T22:25:19.4718281Z" duration="0.001157" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('NINETY-NINTH', 'W;o')';&#xA; result: 99" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '99'
Expr is '$parseInteger('NINETY-NINTH', 'W;o')'
]]></output>
                </test-case>
                <test-case id="0-1787" name="function-parseInteger.parseInteger[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="599611332" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4719032Z" end-time="2022-01-16T22:25:19.4727539Z" duration="0.000851" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one hundredth', 'w;o')';&#xA; result: 100" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '100'
Expr is '$parseInteger('one hundredth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1788" name="function-parseInteger.parseInteger[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1225744313" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4738147Z" end-time="2022-01-16T22:25:19.4751178Z" duration="0.001303" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FIVE HUNDRED AND FIFTY-FIFTH', 'W;o')';&#xA; result: 555" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '555'
Expr is '$parseInteger('FIVE HUNDRED AND FIFTY-FIFTH', 'W;o')'
]]></output>
                </test-case>
                <test-case id="0-1789" name="function-parseInteger.parseInteger[47]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[47]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="80198797" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4753813Z" end-time="2022-01-16T22:25:19.4765845Z" duration="0.001203" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('nine hundred and nineteenth', 'w;o')';&#xA; result: 919" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '919'
Expr is '$parseInteger('nine hundred and nineteenth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1790" name="function-parseInteger.parseInteger[48]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[48]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1378760590" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4766485Z" end-time="2022-01-16T22:25:19.4776837Z" duration="0.001035" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('seven hundred and thirtieth', 'w;o')';&#xA; result: 730" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '730'
Expr is '$parseInteger('seven hundred and thirtieth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1791" name="function-parseInteger.parseInteger[49]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[49]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1706151310" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4777036Z" end-time="2022-01-16T22:25:19.4788791Z" duration="0.001175" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('Seven Hundred and Thirty-Third', 'Ww;o')';&#xA; result: 733" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '733'
Expr is '$parseInteger('Seven Hundred and Thirty-Third', 'Ww;o')'
]]></output>
                </test-case>
                <test-case id="0-1792" name="function-parseInteger.parseInteger[50]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[50]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="838690391" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4795559Z" end-time="2022-01-16T22:25:19.4804014Z" duration="0.000846" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one thousandth', 'w;o')';&#xA; result: 1000" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1000'
Expr is '$parseInteger('one thousandth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1793" name="function-parseInteger.parseInteger[51]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[51]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1745557371" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4811823Z" end-time="2022-01-16T22:25:19.4824589Z" duration="0.001277" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three thousand, seven hundred and thirty-first', 'w;o')';&#xA; result: 3731" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '3730'
Expr is '$parseInteger('three thousand, seven hundred and thirty-first', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1794" name="function-parseInteger.parseInteger[52]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[52]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1813276764" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4851199Z" end-time="2022-01-16T22:25:19.4861493Z" duration="0.001029" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirteenth', 'w;o')';&#xA; result: 327713" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '327730'
Expr is '$parseInteger('three hundred and twenty-seven thousand, seven hundred and thirteenth', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1795" name="function-parseInteger.parseInteger[53]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[53]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1317305393" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4886769Z" end-time="2022-01-16T22:25:19.4900395Z" duration="0.001362" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty-second', 'w;o')';&#xA; result: 4327732" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '4327730'
Expr is '$parseInteger('four million, three hundred and twenty-seven thousand, seven hundred and thirty-second', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1796" name="function-parseInteger.parseInteger[54]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[54]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="84651921" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4906520Z" end-time="2022-01-16T22:25:19.4916439Z" duration="0.000992" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('one trillion and first', 'w;o')';&#xA; result: 1000000000001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1e12 + 1'
Expr is '$parseInteger('one trillion and first', 'w;o')'
]]></output>
                </test-case>
                <test-case id="0-1797" name="function-parseInteger.parseInteger[55]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[55]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1725704707" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4916814Z" end-time="2022-01-16T22:25:19.4927805Z" duration="0.001099" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('A', 'A')';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '1'
Expr is '$parseInteger('A', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1798" name="function-parseInteger.parseInteger[56]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[56]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="87399697" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4927995Z" end-time="2022-01-16T22:25:19.4940094Z" duration="0.001210" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('l', 'a')';&#xA; result: 12" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '12'
Expr is '$parseInteger('l', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1799" name="function-parseInteger.parseInteger[57]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[57]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="549888899" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4940348Z" end-time="2022-01-16T22:25:19.4950723Z" duration="0.001038" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('z', 'a')';&#xA; result: 26" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '26'
Expr is '$parseInteger('z', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1800" name="function-parseInteger.parseInteger[58]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[58]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1550713655" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4951010Z" end-time="2022-01-16T22:25:19.4961249Z" duration="0.001024" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('aa', 'a')';&#xA; result: 27" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '27'
Expr is '$parseInteger('aa', 'a')'
]]></output>
                </test-case>
                <test-case id="0-1801" name="function-parseInteger.parseInteger[59]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[59]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1649654127" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4962128Z" end-time="2022-01-16T22:25:19.4971166Z" duration="0.000904" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('KN', 'A')';&#xA; result: 300" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '300'
Expr is '$parseInteger('KN', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1802" name="function-parseInteger.parseInteger[60]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[60]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1730660672" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.4971344Z" end-time="2022-01-16T22:25:19.4988765Z" duration="0.001742" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('FZPH', 'A')';&#xA; result: 123456" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Error evaluating function 'parseInteger': Input string was not in a correct format.
(Exception)
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 62
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Description: '123456'
Expr is '$parseInteger('FZPH', 'A')'
]]></output>
                </test-case>
                <test-case id="0-1803" name="function-parseInteger.parseInteger[61]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-parseInteger.parseInteger[61]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="453419057" result="Failed" start-time="2022-01-16T22:25:19.4991832Z" end-time="2022-01-16T22:25:19.5010626Z" duration="0.001879" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$parseInteger('50', '#')';&#xA; result: error D3130" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D3130 (), got '50']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'unsupported picture string'
Expr is '$parseInteger('50', '#')'
Result: '50'
Expected error D3130
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D3130 (), got '50']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1804" name="function-power.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1553323988" result="Passed" start-time="2022-01-16T22:25:19.5024249Z" end-time="2022-01-16T22:25:19.5029285Z" duration="0.000504" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(4, 2)';&#xA; result: 16" />
                  </properties>
                  <output><![CDATA[Expr is '$power(4, 2)'
Result: '16'
Expected: '16'
]]></output>
                </test-case>
                <test-case id="0-1805" name="function-power.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1392215359" result="Passed" start-time="2022-01-16T22:25:19.5034908Z" end-time="2022-01-16T22:25:19.5036194Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(4, 0.5)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$power(4, 0.5)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1806" name="function-power.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1330191941" result="Passed" start-time="2022-01-16T22:25:19.5040910Z" end-time="2022-01-16T22:25:19.5042060Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(10, -2)';&#xA; result: 0.01" />
                  </properties>
                  <output><![CDATA[Expr is '$power(10, -2)'
Result: '0.01'
Expected: '0.01'
]]></output>
                </test-case>
                <test-case id="0-1807" name="function-power.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="559506706" result="Passed" start-time="2022-01-16T22:25:19.5050440Z" end-time="2022-01-16T22:25:19.5052200Z" duration="0.000176" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(-2, 3)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$power(-2, 3)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1808" name="function-power.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="278014364" result="Passed" start-time="2022-01-16T22:25:19.5052350Z" end-time="2022-01-16T22:25:19.5053259Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$power(nothing, 3)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$power(nothing, 3)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1809" name="function-power.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1569457941" result="Passed" start-time="2022-01-16T22:25:19.5053350Z" end-time="2022-01-16T22:25:19.5063414Z" duration="0.001007" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$power(-2, 1/3)';&#xA; result: error D3061" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3061]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$power(-2, 1/3)'
]]></output>
                </test-case>
                <test-case id="0-1810" name="function-power.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-power.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1740760498" result="Passed" start-time="2022-01-16T22:25:19.5065246Z" end-time="2022-01-16T22:25:19.5077273Z" duration="0.001203" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$power(100, 1000)';&#xA; result: error D3061" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3061]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$power(100, 1000)'
]]></output>
                </test-case>
                <test-case id="0-1811" name="function-replace.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="148806758" result="Passed" start-time="2022-01-16T22:25:19.5077517Z" end-time="2022-01-16T22:25:19.5090945Z" duration="0.001343" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;Hello World&quot;, &quot;World&quot;, &quot;Everyone&quot;)';&#xA; result: &quot;Hello Everyone&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("Hello World", "World", "Everyone")'
Result: '"Hello Everyone"'
Expected: '"Hello Everyone"'
]]></output>
                </test-case>
                <test-case id="0-1812" name="function-replace.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="733955529" result="Passed" start-time="2022-01-16T22:25:19.5091923Z" end-time="2022-01-16T22:25:19.5093565Z" duration="0.000164" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;)';&#xA; result: &quot;the cit sit on the mit&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it")'
Result: '"the cit sit on the mit"'
Expected: '"the cit sit on the mit"'
]]></output>
                </test-case>
                <test-case id="0-1813" name="function-replace.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="862040025" result="Passed" start-time="2022-01-16T22:25:19.5096055Z" end-time="2022-01-16T22:25:19.5098078Z" duration="0.000203" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;, 0)';&#xA; result: &quot;the cat sat on the mat&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it", 0)'
Result: '"the cat sat on the mat"'
Expected: '"the cat sat on the mat"'
]]></output>
                </test-case>
                <test-case id="0-1814" name="function-replace.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1646478623" result="Passed" start-time="2022-01-16T22:25:19.5098506Z" end-time="2022-01-16T22:25:19.5125343Z" duration="0.002684" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;the cat sat on the mat&quot;, &quot;at&quot;, &quot;it&quot;, 2)';&#xA; result: &quot;the cit sit on the mat&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("the cat sat on the mat", "at", "it", 2)'
Result: '"the cit sit on the mat"'
Expected: '"the cit sit on the mat"'
]]></output>
                </test-case>
                <test-case id="0-1815" name="function-replace.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1279404552" result="Passed" start-time="2022-01-16T22:25:19.5159273Z" end-time="2022-01-16T22:25:19.5161289Z" duration="0.000201" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(nothing, &quot;at&quot;, &quot;it&quot;, 2)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$replace(nothing, "at", "it", 2)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1816" name="function-replace.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="742696056" result="Passed" start-time="2022-01-16T22:25:19.5161778Z" end-time="2022-01-16T22:25:19.5174285Z" duration="0.001251" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello")'
]]></output>
                </test-case>
                <test-case id="0-1817" name="function-replace.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="209325328" result="Passed" start-time="2022-01-16T22:25:19.5183610Z" end-time="2022-01-16T22:25:19.5198583Z" duration="0.001497" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;l&quot;, &quot;1&quot;, null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "l", "1", null)'
]]></output>
                </test-case>
                <test-case id="0-1818" name="function-replace.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="273428900" result="Passed" start-time="2022-01-16T22:25:19.5198800Z" end-time="2022-01-16T22:25:19.5212502Z" duration="0.001370" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;l&quot;, &quot;1&quot;, -2)';&#xA; result: error D3011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3011]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "l", "1", -2)'
]]></output>
                </test-case>
                <test-case id="0-1819" name="function-replace.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="549935577" result="Passed" start-time="2022-01-16T22:25:19.5223897Z" end-time="2022-01-16T22:25:19.5230674Z" duration="0.000677" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", 1)'
]]></output>
                </test-case>
                <test-case id="0-1820" name="function-replace.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1119432579" result="Passed" start-time="2022-01-16T22:25:19.5231169Z" end-time="2022-01-16T22:25:19.5241729Z" duration="0.001056" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, &quot;&quot;, &quot;bye&quot;)';&#xA; result: error D3010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3010]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", "", "bye")'
]]></output>
                </test-case>
                <test-case id="0-1821" name="function-replace.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="680048281" result="Passed" start-time="2022-01-16T22:25:19.5257136Z" end-time="2022-01-16T22:25:19.5263313Z" duration="0.000617" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;hello&quot;, 2, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace("hello", 2, 1)'
]]></output>
                </test-case>
                <test-case id="0-1822" name="function-replace.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-replace.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="689355542" result="Passed" start-time="2022-01-16T22:25:19.5281352Z" end-time="2022-01-16T22:25:19.5286511Z" duration="0.000516" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(123, 2, 1)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$replace(123, 2, 1)'
]]></output>
                </test-case>
                <test-case id="0-1823" name="function-reverse.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1582639885" result="Passed" start-time="2022-01-16T22:25:19.5298311Z" end-time="2022-01-16T22:25:19.5302344Z" duration="0.000403" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse([1..5])';&#xA; result: [5,4,3,2,1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse([1..5])'
Result: '[5,4,3,2,1]'
Expected: '[5,4,3,2,1]'
]]></output>
                </test-case>
                <test-case id="0-1824" name="function-reverse.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1398468481" result="Passed" start-time="2022-01-16T22:25:19.5322355Z" end-time="2022-01-16T22:25:19.5326751Z" duration="0.000440" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[[$], [$reverse($)], [$]]';&#xA; result: [[1,2,3],[3,2,1],[1,2,3]]" />
                  </properties>
                  <output><![CDATA[Expr is '[[$], [$reverse($)], [$]]'
Result: '[[1,2,3],[3,2,1],[1,2,3]]'
Expected: '[[1,2,3],[3,2,1],[1,2,3]]'
]]></output>
                </test-case>
                <test-case id="0-1825" name="function-reverse.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="143802813" result="Passed" start-time="2022-01-16T22:25:19.5335297Z" end-time="2022-01-16T22:25:19.5339103Z" duration="0.000381" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1826" name="function-reverse.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-reverse.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2042556748" result="Passed" start-time="2022-01-16T22:25:19.5356074Z" end-time="2022-01-16T22:25:19.5357475Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reverse([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reverse([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1827" name="function-round.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1519111599" result="Passed" start-time="2022-01-16T22:25:19.5369737Z" end-time="2022-01-16T22:25:19.5373447Z" duration="0.000370" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1828" name="function-round.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1854305318" result="Passed" start-time="2022-01-16T22:25:19.5392151Z" end-time="2022-01-16T22:25:19.5394007Z" duration="0.000185" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.3)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.3)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1829" name="function-round.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="824661157" result="Passed" start-time="2022-01-16T22:25:19.5396172Z" end-time="2022-01-16T22:25:19.5398487Z" duration="0.000232" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.7)';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.7)'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-1830" name="function-round.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1518891327" result="Passed" start-time="2022-01-16T22:25:19.5413698Z" end-time="2022-01-16T22:25:19.5416964Z" duration="0.000326" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(2.5)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$round(2.5)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1831" name="function-round.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="280447794" result="Passed" start-time="2022-01-16T22:25:19.5431971Z" end-time="2022-01-16T22:25:19.5434398Z" duration="0.000242" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(3.5)';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '$round(3.5)'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-1832" name="function-round.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1085086782" result="Passed" start-time="2022-01-16T22:25:19.5448435Z" end-time="2022-01-16T22:25:19.5450714Z" duration="0.000228" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-0.5)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-0.5)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1833" name="function-round.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1839194086" result="Passed" start-time="2022-01-16T22:25:19.5458112Z" end-time="2022-01-16T22:25:19.5459643Z" duration="0.000153" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-0.3)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-0.3)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1834" name="function-round.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2077542959" result="Passed" start-time="2022-01-16T22:25:19.5469399Z" end-time="2022-01-16T22:25:19.5471368Z" duration="0.000197" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(0.5)';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$round(0.5)'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-1835" name="function-round.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="655866753" result="Passed" start-time="2022-01-16T22:25:19.5475850Z" end-time="2022-01-16T22:25:19.5477526Z" duration="0.000167" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-7.5)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-7.5)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1836" name="function-round.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2061227923" result="Passed" start-time="2022-01-16T22:25:19.5481133Z" end-time="2022-01-16T22:25:19.5482926Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(-8.5)';&#xA; result: -8" />
                  </properties>
                  <output><![CDATA[Expr is '$round(-8.5)'
Result: '-8'
Expected: '-8'
]]></output>
                </test-case>
                <test-case id="0-1837" name="function-round.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2113840235" result="Passed" start-time="2022-01-16T22:25:19.5487050Z" end-time="2022-01-16T22:25:19.5488819Z" duration="0.000177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.49, 1)';&#xA; result: 4.5" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.49, 1)'
Result: '4.5'
Expected: '4.5'
]]></output>
                </test-case>
                <test-case id="0-1838" name="function-round.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="351281158" result="Passed" start-time="2022-01-16T22:25:19.5492695Z" end-time="2022-01-16T22:25:19.5495058Z" duration="0.000236" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.525, 2)';&#xA; result: 4.52" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.525, 2)'
Result: '4.52'
Expected: '4.52'
]]></output>
                </test-case>
                <test-case id="0-1839" name="function-round.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1812488749" result="Passed" start-time="2022-01-16T22:25:19.5505959Z" end-time="2022-01-16T22:25:19.5507402Z" duration="0.000144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(4.515, 2)';&#xA; result: 4.52" />
                  </properties>
                  <output><![CDATA[Expr is '$round(4.515, 2)'
Result: '4.52'
Expected: '4.52'
]]></output>
                </test-case>
                <test-case id="0-1840" name="function-round.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1417270344" result="Passed" start-time="2022-01-16T22:25:19.5528140Z" end-time="2022-01-16T22:25:19.5530193Z" duration="0.000205" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12345, -2)';&#xA; result: 12300" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12345, -2)'
Result: '12300'
Expected: '12300'
]]></output>
                </test-case>
                <test-case id="0-1841" name="function-round.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2112602936" result="Passed" start-time="2022-01-16T22:25:19.5536439Z" end-time="2022-01-16T22:25:19.5538005Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12450, -2)';&#xA; result: 12400" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12450, -2)'
Result: '12400'
Expected: '12400'
]]></output>
                </test-case>
                <test-case id="0-1842" name="function-round.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="321596968" result="Passed" start-time="2022-01-16T22:25:19.5538117Z" end-time="2022-01-16T22:25:19.5538781Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(12350, -2)';&#xA; result: 12400" />
                  </properties>
                  <output><![CDATA[Expr is '$round(12350, -2)'
Result: '12400'
Expected: '12400'
]]></output>
                </test-case>
                <test-case id="0-1843" name="function-round.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1803770019" result="Passed" start-time="2022-01-16T22:25:19.5538857Z" end-time="2022-01-16T22:25:19.5539608Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(6.022e-23, 24)';&#xA; result: 6E-23" />
                  </properties>
                  <output><![CDATA[Expr is '$round(6.022e-23, 24)'
Result: '0.000000000000000000000060'
Expected: '6E-23'
]]></output>
                </test-case>
                <test-case id="0-1844" name="function-round.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-round.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="486921946" result="Passed" start-time="2022-01-16T22:25:19.5539681Z" end-time="2022-01-16T22:25:19.5540900Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$round(unknown)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$round(unknown)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1845" name="function-shuffle.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1229953832" result="Passed" start-time="2022-01-16T22:25:19.5544749Z" end-time="2022-01-16T22:25:19.5556299Z" duration="0.001156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$count($shuffle([1..10]))';&#xA; result: 10" />
                  </properties>
                  <output><![CDATA[Expr is '$count($shuffle([1..10]))'
Result: '10'
Expected: '10'
]]></output>
                </test-case>
                <test-case id="0-1846" name="function-shuffle.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="972195781" result="Passed" start-time="2022-01-16T22:25:19.5560410Z" end-time="2022-01-16T22:25:19.5572760Z" duration="0.001235" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort($shuffle([1..10]))';&#xA; result: [1,2,3,4,5,6,7,8,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort($shuffle([1..10]))'
Result: '[1,2,3,4,5,6,7,8,9,10]'
Expected: '[1,2,3,4,5,6,7,8,9,10]'
]]></output>
                </test-case>
                <test-case id="0-1847" name="function-shuffle.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2124134013" result="Passed" start-time="2022-01-16T22:25:19.5572947Z" end-time="2022-01-16T22:25:19.5576352Z" duration="0.000340" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$shuffle(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$shuffle(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1848" name="function-shuffle.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-shuffle.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="99078748" result="Passed" start-time="2022-01-16T22:25:19.5577484Z" end-time="2022-01-16T22:25:19.5579905Z" duration="0.000242" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$shuffle([1])';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$shuffle([1])'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1849" name="function-sift.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="533872212" result="Passed" start-time="2022-01-16T22:25:19.5581188Z" end-time="2022-01-16T22:25:19.5597251Z" duration="0.001607" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift(λ($v){$v.**.Postcode})';&#xA; result: {&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;},&quot;Other&quot;:{&quot;Over 18 ?&quot;:true,&quot;Misc&quot;:null,&quot;Alternative.Address&quot;:{&quot;Street&quot;:&quot;Brick Lane&quot;,&quot;City&quot;:&quot;London&quot;,&quot;Postcode&quot;:&quot;E1 6RF&quot;}}}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift(λ($v){$v.**.Postcode})'
Result: '{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"},"Other":{"Over 18 ?":true,"Misc":null,"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}}'
Expected: '{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"},"Other":{"Over 18 ?":true,"Misc":null,"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}}'
]]></output>
                </test-case>
                <test-case id="0-1850" name="function-sift.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="574609337" result="Passed" start-time="2022-01-16T22:25:19.5601863Z" end-time="2022-01-16T22:25:19.5618445Z" duration="0.001658" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '**[*].$sift(λ($v){$v.Postcode})';&#xA; result: [{&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;}},{&quot;Alternative.Address&quot;:{&quot;Street&quot;:&quot;Brick Lane&quot;,&quot;City&quot;:&quot;London&quot;,&quot;Postcode&quot;:&quot;E1 6RF&quot;}}]" />
                  </properties>
                  <output><![CDATA[Expr is '**[*].$sift(λ($v){$v.Postcode})'
Result: '[{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}},{"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}]'
Expected: '[{"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}},{"Alternative.Address":{"Street":"Brick Lane","City":"London","Postcode":"E1 6RF"}}]'
]]></output>
                </test-case>
                <test-case id="0-1851" name="function-sift.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2022810240" result="Passed" start-time="2022-01-16T22:25:19.5618653Z" end-time="2022-01-16T22:25:19.5636128Z" duration="0.001748" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift(λ($v, $k){$k ~&gt; /^A/})';&#xA; result: {&quot;Age&quot;:28,&quot;Address&quot;:{&quot;Street&quot;:&quot;Hursley Park&quot;,&quot;City&quot;:&quot;Winchester&quot;,&quot;Postcode&quot;:&quot;SO21 2JN&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift(λ($v, $k){$k ~> /^A/})'
Result: '{"Age":28,"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}}'
Expected: '{"Age":28,"Address":{"Street":"Hursley Park","City":"Winchester","Postcode":"SO21 2JN"}}'
]]></output>
                </test-case>
                <test-case id="0-1852" name="function-sift.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1452275807" result="Passed" start-time="2022-01-16T22:25:19.5636388Z" end-time="2022-01-16T22:25:19.5638100Z" duration="0.000171" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift({'a': 1, 'b': 0}, $boolean)';&#xA; result: {&quot;a&quot;:1}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift({'a': 1, 'b': 0}, $boolean)'
Result: '{"a":1}'
Expected: '{"a":1}'
]]></output>
                </test-case>
                <test-case id="0-1853" name="function-sift.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sift.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1684947767" result="Passed" start-time="2022-01-16T22:25:19.5638205Z" end-time="2022-01-16T22:25:19.5641158Z" duration="0.000296" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sift({'a': 'hello', 'b': 'world', 'hello': 'again'}, λ($v,$k,$o){$lookup($o, $v)})';&#xA; result: {&quot;a&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '$sift({'a': 'hello', 'b': 'world', 'hello': 'again'}, λ($v,$k,$o){$lookup($o, $v)})'
Result: '{"a":"hello"}'
Expected: '{"a":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-1854" name="function-signatures.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1577939967" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5641490Z" end-time="2022-01-16T22:25:19.5729636Z" duration="0.008815" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;b:b&gt;{$not($arg)}(true)';&#xA; result: false" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<b:b>{$not($arg)}(true)'
]]></output>
                </test-case>
                <test-case id="0-1855" name="function-signatures.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="870665374" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5730668Z" end-time="2022-01-16T22:25:19.5743507Z" duration="0.001284" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;b:b&gt;{$not($arg)}(foo)';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<b:b>{$not($arg)}(foo)'
]]></output>
                </test-case>
                <test-case id="0-1856" name="function-signatures.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="960298585" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5759883Z" end-time="2022-01-16T22:25:19.5769428Z" duration="0.000954" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;x:b&gt;{$not($arg)}(null)';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<x:b>{$not($arg)}(null)'
]]></output>
                </test-case>
                <test-case id="0-1857" name="function-signatures.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="148020787" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5802239Z" end-time="2022-01-16T22:25:19.5810184Z" duration="0.000794" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'function($x,$y)&lt;n-n:n&gt;{$x+$y}(2, 6)';&#xA; result: 8" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'function($x,$y)<n-n:n>{$x+$y}(2, 6)'
]]></output>
                </test-case>
                <test-case id="0-1858" name="function-signatures.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1202434223" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5818561Z" end-time="2022-01-16T22:25:19.5825422Z" duration="0.000686" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].function($x,$y)&lt;n-n:n&gt;{$x+$y}(6)';&#xA; result: [7,8,9,10,11]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].function($x,$y)<n-n:n>{$x+$y}(6)'
]]></output>
                </test-case>
                <test-case id="0-1859" name="function-signatures.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1409521175" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5834261Z" end-time="2022-01-16T22:25:19.5840211Z" duration="0.000595" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].function($x,$y)&lt;n-n:n&gt;{$x+$y}(2, 6)';&#xA; result: [8,8,8,8,8]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].function($x,$y)<n-n:n>{$x+$y}(2, 6)'
]]></output>
                </test-case>
                <test-case id="0-1860" name="function-signatures.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1497142258" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5842547Z" end-time="2022-01-16T22:25:19.5854722Z" duration="0.001217" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Age.function($x,$y)&lt;n-n:n&gt;{$x+$y}(6)';&#xA; result: 34" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Age.function($x,$y)<n-n:n>{$x+$y}(6)'
]]></output>
                </test-case>
                <test-case id="0-1861" name="function-signatures.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1958563989" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5864149Z" end-time="2022-01-16T22:25:19.5882218Z" duration="0.001812" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($str)&lt;s-&gt;{$uppercase($str)}(&quot;hello&quot;)';&#xA; result: &quot;HELLO&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($str)<s->{$uppercase($str)}("hello")'
]]></output>
                </test-case>
                <test-case id="0-1862" name="function-signatures.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="852685035" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5894323Z" end-time="2022-01-16T22:25:19.5913051Z" duration="0.001872" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.Colour.λ($str)&lt;s-&gt;{$uppercase($str)}()';&#xA; result: [&quot;PURPLE&quot;,&quot;ORANGE&quot;,&quot;PURPLE&quot;,&quot;BLACK&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.Colour.λ($str)<s->{$uppercase($str)}()'
]]></output>
                </test-case>
                <test-case id="0-1863" name="function-signatures.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1600836854" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5913275Z" end-time="2022-01-16T22:25:19.5924694Z" duration="0.001142" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($str, $prefix)&lt;s-s&gt;{$prefix &amp; $str}(&quot;World&quot;, &quot;Hello &quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($str, $prefix)<s-s>{$prefix & $str}("World", "Hello ")'
]]></output>
                </test-case>
                <test-case id="0-1864" name="function-signatures.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="50566614" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5925506Z" end-time="2022-01-16T22:25:19.5940760Z" duration="0.001526" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'FirstName.λ($str, $prefix)&lt;s-s&gt;{$prefix &amp; $str}(&quot;Hello &quot;)';&#xA; result: &quot;Hello Fred&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'FirstName.λ($str, $prefix)<s-s>{$prefix & $str}("Hello ")'
]]></output>
                </test-case>
                <test-case id="0-1865" name="function-signatures.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1460312704" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5941246Z" end-time="2022-01-16T22:25:19.5957390Z" duration="0.001614" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(&quot;a&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}("a")'
]]></output>
                </test-case>
                <test-case id="0-1866" name="function-signatures.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1211203623" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5958564Z" end-time="2022-01-16T22:25:19.5982641Z" duration="0.002408" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;])';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a"])'
]]></output>
                </test-case>
                <test-case id="0-1867" name="function-signatures.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1042245090" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.5982877Z" end-time="2022-01-16T22:25:19.6000907Z" duration="0.001803" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(&quot;a&quot;, &quot;-&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}("a", "-")'
]]></output>
                </test-case>
                <test-case id="0-1868" name="function-signatures.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="931980713" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6012442Z" end-time="2022-01-16T22:25:19.6062172Z" duration="0.004972" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;], &quot;-&quot;)';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1869" name="function-signatures.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="990611870" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6080870Z" end-time="2022-01-16T22:25:19.6111368Z" duration="0.003050" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([&quot;a&quot;, &quot;b&quot;], &quot;-&quot;)';&#xA; result: &quot;a-b&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a", "b"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1870" name="function-signatures.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1365660276" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6111594Z" end-time="2022-01-16T22:25:19.6131478Z" duration="0.001989" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;as?:s&gt;{$join($arr, $sep)}([&quot;a&quot;, &quot;b&quot;], &quot;-&quot;)';&#xA; result: &quot;a-b&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<as?:s>{$join($arr, $sep)}(["a", "b"], "-")'
]]></output>
                </test-case>
                <test-case id="0-1871" name="function-signatures.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="776339468" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6131992Z" end-time="2022-01-16T22:25:19.6149582Z" duration="0.001759" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}([], &quot;-&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}([], "-")'
]]></output>
                </test-case>
                <test-case id="0-1872" name="function-signatures.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2005527817" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6150213Z" end-time="2022-01-16T22:25:19.6166604Z" duration="0.001639" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr, $sep)&lt;a&lt;s&gt;s?:s&gt;{$join($arr, $sep)}(foo, &quot;-&quot;)';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(foo, "-")'
]]></output>
                </test-case>
                <test-case id="0-1873" name="function-signatures.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="608423798" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6167226Z" end-time="2022-01-16T22:25:19.6184200Z" duration="0.001698" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($obj)&lt;o&gt;{$obj}({&quot;hello&quot;: &quot;world&quot;})';&#xA; result: {&quot;hello&quot;:&quot;world&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($obj)<o>{$obj}({"hello": "world"})'
]]></output>
                </test-case>
                <test-case id="0-1874" name="function-signatures.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1280148880" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6184384Z" end-time="2022-01-16T22:25:19.6202327Z" duration="0.001795" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;a&lt;n&gt;&gt;&gt;{$arr}([[1]])';&#xA; result: [[1]]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<a<n>>>{$arr}([[1]])'
]]></output>
                </test-case>
                <test-case id="0-1875" name="function-signatures.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1154313290" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6202892Z" end-time="2022-01-16T22:25:19.6230021Z" duration="0.002713" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($num)&lt;(ns)-:n&gt;{$number($num)}(5)';&#xA; result: 5" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($num)<(ns)-:n>{$number($num)}(5)'
]]></output>
                </test-case>
                <test-case id="0-1876" name="function-signatures.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="358451313" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6238528Z" end-time="2022-01-16T22:25:19.6247955Z" duration="0.000943" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($num)&lt;(ns)-:n&gt;{$number($num)}(&quot;5&quot;)';&#xA; result: 5" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($num)<(ns)-:n>{$number($num)}("5")'
]]></output>
                </test-case>
                <test-case id="0-1877" name="function-signatures.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1033069170" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6248652Z" end-time="2022-01-16T22:25:19.6279793Z" duration="0.003114" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..5].λ($num)&lt;(ns)-:n&gt;{$number($num)}()';&#xA; result: [1,2,3,4,5]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPathStep(Node step, JArray array, Environment env, Boolean lastStep) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1298
   at Jsonata.Net.Native.Eval.EvalProcessor.evalPath(PathNode node, JToken data, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 1260
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 87
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..5].λ($num)<(ns)-:n>{$number($num)}()'
]]></output>
                </test-case>
                <test-case id="0-1878" name="function-signatures.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1095717939" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6280412Z" end-time="2022-01-16T22:25:19.6298467Z" duration="0.001806" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($twice := function($f)&lt;f:f&gt;{function($x)&lt;n:n&gt;{$f($f($x))}};$add2 := function($x)&lt;n:n&gt;{$x+2};$add4 := $twice($add2);$add4(5))';&#xA; result: 9" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($twice := function($f)<f:f>{function($x)<n:n>{$f($f($x))}};$add2 := function($x)<n:n>{$x+2};$add4 := $twice($add2);$add4(5))'
]]></output>
                </test-case>
                <test-case id="0-1879" name="function-signatures.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="168514649" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6299874Z" end-time="2022-01-16T22:25:19.6322137Z" duration="0.002230" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($twice := function($f)&lt;f&lt;n:n&gt;:f&lt;n:n&gt;&gt;{function($x)&lt;n:n&gt;{$f($f($x))}};$add2 := function($x)&lt;n:n&gt;{$x+2};$add4 := $twice($add2);$add4(5))';&#xA; result: 9" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 399
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($twice := function($f)<f<n:n>:f<n:n>>{function($x)<n:n>{$f($f($x))}};$add2 := function($x)<n:n>{$x+2};$add4 := $twice($add2);$add4(5))'
]]></output>
                </test-case>
                <test-case id="0-1880" name="function-signatures.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1319090679" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6323057Z" end-time="2022-01-16T22:25:19.6343065Z" duration="0.002001" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg)&lt;n&lt;n&gt;&gt;{$arg}(5)';&#xA; result: error S0401" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg)<n<n>>{$arg}(5)'
]]></output>
                </test-case>
                <test-case id="0-1881" name="function-signatures.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2065906382" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6369521Z" end-time="2022-01-16T22:25:19.6380392Z" duration="0.001087" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn:a&gt;{[$arg1, $arg2]}(1,&quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn:a>{[$arg1, $arg2]}(1,"2")'
]]></output>
                </test-case>
                <test-case id="0-1882" name="function-signatures.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1420032851" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6398205Z" end-time="2022-01-16T22:25:19.6407974Z" duration="0.000977" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn:a&gt;{[$arg1, $arg2]}(1,3,&quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn:a>{[$arg1, $arg2]}(1,3,"2")'
]]></output>
                </test-case>
                <test-case id="0-1883" name="function-signatures.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1320433106" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6408167Z" end-time="2022-01-16T22:25:19.6418137Z" duration="0.000998" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arg1, $arg2)&lt;nn+:a&gt;{[$arg1, $arg2]}(1,3, 2,&quot;g&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arg1, $arg2)<nn+:a>{[$arg1, $arg2]}(1,3, 2,"g")'
]]></output>
                </test-case>
                <test-case id="0-1884" name="function-signatures.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="250051820" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6420335Z" end-time="2022-01-16T22:25:19.6436373Z" duration="0.001604" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}([&quot;3&quot;]) ';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}(["3"]) '
]]></output>
                </test-case>
                <test-case id="0-1885" name="function-signatures.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1643564734" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6442794Z" end-time="2022-01-16T22:25:19.6447962Z" duration="0.000517" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}([1, 2, &quot;3&quot;]) ';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}([1, 2, "3"]) '
]]></output>
                </test-case>
                <test-case id="0-1886" name="function-signatures.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="975655634" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6467369Z" end-time="2022-01-16T22:25:19.6477998Z" duration="0.001063" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;a&lt;n&gt;&gt;{$arr}(&quot;f&quot;)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<a<n>>{$arr}("f")'
]]></output>
                </test-case>
                <test-case id="0-1887" name="function-signatures.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1547622662" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6478186Z" end-time="2022-01-16T22:25:19.6490478Z" duration="0.001230" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($fun := λ($arr)&lt;a&lt;n&gt;&gt;{$arr};$fun(&quot;f&quot;))';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($fun := λ($arr)<a<n>>{$arr};$fun("f"))'
]]></output>
                </test-case>
                <test-case id="0-1888" name="function-signatures.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.function-signatures.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="261254119" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.6490650Z" end-time="2022-01-16T22:25:19.6503790Z" duration="0.001314" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'λ($arr)&lt;(sa&lt;n&gt;)&gt;&gt;{$arr}([[1]])';&#xA; result: error S0402" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to parse lambda signature: Unexpected param type char '<'. Remainder string '<n>)>', Whole string was: '<(sa<n>)>'
(Exception)
   at Jsonata.Net.Native.Parsing.SignatureParser.Parse(String str) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\SignatureParser.cs:line 32
   at Jsonata.Net.Native.Parsing.Parser.ParseLambdaDefinition(Boolean isShorthand) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 58
   at Jsonata.Net.Native.Parsing.Parser.parseFunctionCall(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'λ($arr)<(sa<n>)>>{$arr}([[1]])'
]]></output>
                </test-case>
                <test-case id="0-1889" name="function-sort.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1206877585" result="Passed" start-time="2022-01-16T22:25:19.6509963Z" end-time="2022-01-16T22:25:19.6513821Z" duration="0.000385" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1890" name="function-sort.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1843051815" result="Passed" start-time="2022-01-16T22:25:19.6516774Z" end-time="2022-01-16T22:25:19.6519596Z" duration="0.000282" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(1)';&#xA; result: [1]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(1)'
Result: '[1]'
Expected: '[1]'
]]></output>
                </test-case>
                <test-case id="0-1891" name="function-sort.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1913207136" result="Passed" start-time="2022-01-16T22:25:19.6525280Z" end-time="2022-01-16T22:25:19.6527248Z" duration="0.000197" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort([1,3,2])';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort([1,3,2])'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
                <test-case id="0-1892" name="function-sort.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="911406012" result="Passed" start-time="2022-01-16T22:25:19.6527490Z" end-time="2022-01-16T22:25:19.6531188Z" duration="0.000370" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort([1,3,22,11])';&#xA; result: [1,3,11,22]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort([1,3,22,11])'
Result: '[1,3,11,22]'
Expected: '[1,3,11,22]'
]]></output>
                </test-case>
                <test-case id="0-1893" name="function-sort.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1089243630" result="Passed" start-time="2022-01-16T22:25:19.6532250Z" end-time="2022-01-16T22:25:19.6536637Z" duration="0.000439" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[[$], [$sort($)], [$]]';&#xA; result: [[1,3,2],[1,2,3],[1,3,2]]" />
                  </properties>
                  <output><![CDATA[Expr is '[[$], [$sort($)], [$]]'
Result: '[[1,3,2],[1,2,3],[1,3,2]]'
Expected: '[[1,3,2],[1,2,3],[1,3,2]]'
]]></output>
                </test-case>
                <test-case id="0-1894" name="function-sort.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="315346491" result="Passed" start-time="2022-01-16T22:25:19.6537020Z" end-time="2022-01-16T22:25:19.6544609Z" duration="0.000759" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product.Price)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product.Price)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-1895" name="function-sort.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1606190002" result="Passed" start-time="2022-01-16T22:25:19.6548096Z" end-time="2022-01-16T22:25:19.6553535Z" duration="0.000544" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product.&quot;Product Name&quot;)';&#xA; result: [&quot;Bowler Hat&quot;,&quot;Bowler Hat&quot;,&quot;Cloak&quot;,&quot;Trilby hat&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product."Product Name")'
Result: '["Bowler Hat","Bowler Hat","Cloak","Trilby hat"]'
Expected: '["Bowler Hat","Bowler Hat","Cloak","Trilby hat"]'
]]></output>
                </test-case>
                <test-case id="0-1896" name="function-sort.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1259917901" result="Passed" start-time="2022-01-16T22:25:19.6553686Z" end-time="2022-01-16T22:25:19.6563328Z" duration="0.000964" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product)';&#xA; result: error D3070" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3070]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product)'
]]></output>
                </test-case>
                <test-case id="0-1897" name="function-sort.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="868243761" result="Passed" start-time="2022-01-16T22:25:19.6569048Z" end-time="2022-01-16T22:25:19.6592178Z" duration="0.002313" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product, function($a, $b) { $a.(Price * Quantity) &gt; $b.(Price * Quantity) }).(Price &amp; &quot; x &quot; &amp; Quantity)';&#xA; result: [&quot;21.67 x 1&quot;,&quot;34.45 x 2&quot;,&quot;107.99 x 1&quot;,&quot;34.45 x 4&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product, function($a, $b) { $a.(Price * Quantity) > $b.(Price * Quantity) }).(Price & " x " & Quantity)'
Result: '["21.67 x 1","34.45 x 2","107.99 x 1","34.45 x 4"]'
Expected: '["21.67 x 1","34.45 x 2","107.99 x 1","34.45 x 4"]'
]]></output>
                </test-case>
                <test-case id="0-1898" name="function-sort.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1753203405" result="Failed" start-time="2022-01-16T22:25:19.6592821Z" end-time="2022-01-16T22:25:19.6608198Z" duration="0.001538" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sort(Account.Order.Product, function($a, $b) { $a.Price &gt; $b.Price }).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '["0406634348","0406654608","040657863","0406654603"]', got '["0406634348","040657863","0406654608","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$sort(Account.Order.Product, function($a, $b) { $a.Price > $b.Price }).SKU'
Result: '["0406634348","040657863","0406654608","0406654603"]'
Expected: '["0406634348","0406654608","040657863","0406654603"]'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '["0406634348","0406654608","040657863","0406654603"]', got '["0406634348","040657863","0406654608","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1899" name="function-sort.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sort.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1174092889" result="Failed" start-time="2022-01-16T22:25:19.6610900Z" end-time="2022-01-16T22:25:19.6650759Z" duration="0.003986" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&#xA;                (Account.Order.Product&#xA;                  ~&gt; $sort(λ($a,$b){$a.Quantity &lt; $b.Quantity})&#xA;                  ~&gt; $sort(λ($a,$b){$a.Price &gt; $b.Price})&#xA;                ).SKU&#xA;            ';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654608&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '["0406634348","040657863","0406654608","0406654603"]', got '["0406634348","0406654608","040657863","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '
                (Account.Order.Product
                  ~> $sort(λ($a,$b){$a.Quantity < $b.Quantity})
                  ~> $sort(λ($a,$b){$a.Price > $b.Price})
                ).SKU
            '
Result: '["0406634348","0406654608","040657863","0406654603"]'
Expected: '["0406634348","040657863","0406654608","0406654603"]'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '["0406634348","040657863","0406654608","0406654603"]', got '["0406634348","0406654608","040657863","0406654603"]'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1900" name="function-split.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="18750209" result="Passed" start-time="2022-01-16T22:25:19.6653792Z" end-time="2022-01-16T22:25:19.6670564Z" duration="0.001677" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;,&quot;World&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello World", " ")'
Result: '["Hello","World"]'
Expected: '["Hello","World"]'
]]></output>
                </test-case>
                <test-case id="0-1901" name="function-split.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2077434338" result="Passed" start-time="2022-01-16T22:25:19.6670809Z" end-time="2022-01-16T22:25:19.6672288Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello", " ")'
Result: '["Hello"]'
Expected: '["Hello"]'
]]></output>
                </test-case>
                <test-case id="0-1902" name="function-split.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1192153300" result="Passed" start-time="2022-01-16T22:25:19.6672397Z" end-time="2022-01-16T22:25:19.6673366Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello  World&quot;, &quot; &quot;)';&#xA; result: [&quot;Hello&quot;,&quot;&quot;,&quot;World&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello  World", " ")'
Result: '["Hello","","World"]'
Expected: '["Hello","","World"]'
]]></output>
                </test-case>
                <test-case id="0-1903" name="function-split.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1255950525" result="Passed" start-time="2022-01-16T22:25:19.6673462Z" end-time="2022-01-16T22:25:19.6676656Z" duration="0.000326" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;Hello&quot;, &quot;&quot;)';&#xA; result: [&quot;H&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("Hello", "")'
Result: '["H","e","l","l","o"]'
Expected: '["H","e","l","l","o"]'
]]></output>
                </test-case>
                <test-case id="0-1904" name="function-split.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1315695583" result="Passed" start-time="2022-01-16T22:25:19.6678048Z" end-time="2022-01-16T22:25:19.6679521Z" duration="0.000147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum($split(&quot;12345&quot;, &quot;&quot;).$number($))';&#xA; result: 15" />
                  </properties>
                  <output><![CDATA[Expr is '$sum($split("12345", "").$number($))'
Result: '15'
Expected: '15'
]]></output>
                </test-case>
                <test-case id="0-1905" name="function-split.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1945753516" result="Passed" start-time="2022-01-16T22:25:19.6679614Z" end-time="2022-01-16T22:25:19.6690144Z" duration="0.001053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;)';&#xA; result: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ")'
Result: '["a","b","c","d"]'
Expected: '["a","b","c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1906" name="function-split.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="17282423" result="Passed" start-time="2022-01-16T22:25:19.6693700Z" end-time="2022-01-16T22:25:19.6694817Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 2)';&#xA; result: [&quot;a&quot;,&quot;b&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 2)'
Result: '["a","b"]'
Expected: '["a","b"]'
]]></output>
                </test-case>
                <test-case id="0-1907" name="function-split.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="843852009" result="Passed" start-time="2022-01-16T22:25:19.6699613Z" end-time="2022-01-16T22:25:19.6700700Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 2.5)';&#xA; result: [&quot;a&quot;,&quot;b&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 2.5)'
Result: '["a","b"]'
Expected: '["a","b"]'
]]></output>
                </test-case>
                <test-case id="0-1908" name="function-split.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="404798887" result="Passed" start-time="2022-01-16T22:25:19.6705379Z" end-time="2022-01-16T22:25:19.6710885Z" duration="0.000551" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 10)';&#xA; result: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 10)'
Result: '["a","b","c","d"]'
Expected: '["a","b","c","d"]'
]]></output>
                </test-case>
                <test-case id="0-1909" name="function-split.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="423626677" result="Passed" start-time="2022-01-16T22:25:19.6721031Z" end-time="2022-01-16T22:25:19.6723159Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, 0)';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", 0)'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-1910" name="function-split.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="512214061" result="Passed" start-time="2022-01-16T22:25:19.6727388Z" end-time="2022-01-16T22:25:19.6728653Z" duration="0.000127" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(nothing, &quot; &quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$split(nothing, " ")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1911" name="function-split.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2074713062" result="Passed" start-time="2022-01-16T22:25:19.6728780Z" end-time="2022-01-16T22:25:19.6738832Z" duration="0.001005" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, -3)';&#xA; result: error D3020" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3020]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", -3)'
]]></output>
                </test-case>
                <test-case id="0-1912" name="function-split.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1199786495" result="Passed" start-time="2022-01-16T22:25:19.6741812Z" end-time="2022-01-16T22:25:19.6752700Z" duration="0.001089" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, null)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", null)'
]]></output>
                </test-case>
                <test-case id="0-1913" name="function-split.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1033919574" result="Passed" start-time="2022-01-16T22:25:19.6752869Z" end-time="2022-01-16T22:25:19.6759652Z" duration="0.000679" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, -5)';&#xA; result: error D3020" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3020]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", -5)'
]]></output>
                </test-case>
                <test-case id="0-1914" name="function-split.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="90430496" result="Passed" start-time="2022-01-16T22:25:19.6759803Z" end-time="2022-01-16T22:25:19.6770094Z" duration="0.001029" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, &quot;, &quot;, &quot;2&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", ", ", "2")'
]]></output>
                </test-case>
                <test-case id="0-1915" name="function-split.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1578719523" result="Passed" start-time="2022-01-16T22:25:19.6770861Z" end-time="2022-01-16T22:25:19.6779796Z" duration="0.000894" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;a, b, c, d&quot;, true)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split("a, b, c, d", true)'
]]></output>
                </test-case>
                <test-case id="0-1916" name="function-split.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="538531138" result="Passed" start-time="2022-01-16T22:25:19.6779953Z" end-time="2022-01-16T22:25:19.6789024Z" duration="0.000907" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(12345, 3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split(12345, 3)'
]]></output>
                </test-case>
                <test-case id="0-1917" name="function-split.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1679735576" result="Passed" start-time="2022-01-16T22:25:19.6789613Z" end-time="2022-01-16T22:25:19.6797830Z" duration="0.000822" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split(12345)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split(12345)'
]]></output>
                </test-case>
                <test-case id="0-1918" name="function-split.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-split.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1350785034" result="Passed" start-time="2022-01-16T22:25:19.6798687Z" end-time="2022-01-16T22:25:19.6802762Z" duration="0.000407" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split('12💩345💩6', '💩')';&#xA; result: [&quot;12&quot;,&quot;345&quot;,&quot;6&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split('12💩345💩6', '💩')'
Result: '["12","345","6"]'
Expected: '["12","345","6"]'
]]></output>
                </test-case>
                <test-case id="0-1919" name="function-spread.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="554485527" result="Passed" start-time="2022-01-16T22:25:19.6804242Z" end-time="2022-01-16T22:25:19.6813920Z" duration="0.000968" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread(&quot;Hello World&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$spread("Hello World")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1920" name="function-spread.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="484657070" result="Passed" start-time="2022-01-16T22:25:19.6856191Z" end-time="2022-01-16T22:25:19.6860341Z" duration="0.000415" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread((Account.Order.Product.Description))';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Orange&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.6},{&quot;Colour&quot;:&quot;Purple&quot;},{&quot;Width&quot;:300},{&quot;Height&quot;:200},{&quot;Depth&quot;:210},{&quot;Weight&quot;:0.75},{&quot;Colour&quot;:&quot;Black&quot;},{&quot;Width&quot;:30},{&quot;Height&quot;:20},{&quot;Depth&quot;:210},{&quot;Weight&quot;:2}]" />
                  </properties>
                  <output><![CDATA[Expr is '$spread((Account.Order.Product.Description))'
Result: '[{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Orange"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.6},{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Black"},{"Width":30},{"Height":20},{"Depth":210},{"Weight":2}]'
Expected: '[{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Orange"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.6},{"Colour":"Purple"},{"Width":300},{"Height":200},{"Depth":210},{"Weight":0.75},{"Colour":"Black"},{"Width":30},{"Height":20},{"Depth":210},{"Weight":2}]'
]]></output>
                </test-case>
                <test-case id="0-1921" name="function-spread.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1811064608" result="Passed" start-time="2022-01-16T22:25:19.6881354Z" end-time="2022-01-16T22:25:19.6883292Z" duration="0.000194" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$spread(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$spread(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1922" name="function-spread.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-spread.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="780990971" result="Passed" start-time="2022-01-16T22:25:19.6883431Z" end-time="2022-01-16T22:25:19.6884584Z" duration="0.000115" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string($spread(function($x){$x*$x}))';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string($spread(function($x){$x*$x}))'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1923" name="function-sqrt.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1872586775" result="Passed" start-time="2022-01-16T22:25:19.6884681Z" end-time="2022-01-16T22:25:19.6888986Z" duration="0.000431" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(4)';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(4)'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-1924" name="function-sqrt.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1295043702" result="Passed" start-time="2022-01-16T22:25:19.6889134Z" end-time="2022-01-16T22:25:19.6890048Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(2)';&#xA; result: 1.4142135623730951" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(2)'
Result: '1.4142135623730951'
Expected: '1.4142135623730951'
]]></output>
                </test-case>
                <test-case id="0-1925" name="function-sqrt.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1599936787" result="Passed" start-time="2022-01-16T22:25:19.6890127Z" end-time="2022-01-16T22:25:19.6891751Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(nothing)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sqrt(nothing)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1926" name="function-sqrt.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sqrt.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2012417103" result="Passed" start-time="2022-01-16T22:25:19.6892557Z" end-time="2022-01-16T22:25:19.6897417Z" duration="0.000486" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sqrt(-2)';&#xA; result: error D3060" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3060]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sqrt(-2)'
]]></output>
                </test-case>
                <test-case id="0-1927" name="function-string.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="916284187" result="Passed" start-time="2022-01-16T22:25:19.6897538Z" end-time="2022-01-16T22:25:19.6898389Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(5)';&#xA; result: &quot;5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(5)'
Result: '"5"'
Expected: '"5"'
]]></output>
                </test-case>
                <test-case id="0-1928" name="function-string.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="293077307" result="Failed" start-time="2022-01-16T22:25:19.6898464Z" end-time="2022-01-16T22:25:19.6907197Z" duration="0.000873" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(22/7)';&#xA; result: &quot;3.14285714285714&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"3.14285714285714"', got '"3.142857142857143"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(22/7)'
Result: '"3.142857142857143"'
Expected: '"3.14285714285714"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"3.14285714285714"', got '"3.142857142857143"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1929" name="function-string.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1821442525" result="Failed" start-time="2022-01-16T22:25:19.6938191Z" end-time="2022-01-16T22:25:19.6948997Z" duration="0.001080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e100)';&#xA; result: &quot;1e+100&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e+100"', got '"1E+100"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e100)'
Result: '"1E+100"'
Expected: '"1e+100"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e+100"', got '"1E+100"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1930" name="function-string.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2041879036" result="Failed" start-time="2022-01-16T22:25:19.6954833Z" end-time="2022-01-16T22:25:19.6966859Z" duration="0.001202" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-100)';&#xA; result: &quot;1e-100&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e-100"', got '"1E-100"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e-100)'
Result: '"1E-100"'
Expected: '"1e-100"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e-100"', got '"1E-100"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1931" name="function-string.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1637691199" result="Failed" start-time="2022-01-16T22:25:19.6974285Z" end-time="2022-01-16T22:25:19.6991860Z" duration="0.001758" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-6)';&#xA; result: &quot;0.000001&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"0.000001"', got '"1E-06"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e-6)'
Result: '"1E-06"'
Expected: '"0.000001"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"0.000001"', got '"1E-06"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1932" name="function-string.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1427349412" result="Failed" start-time="2022-01-16T22:25:19.6998230Z" end-time="2022-01-16T22:25:19.7013411Z" duration="0.001518" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e-7)';&#xA; result: &quot;1e-7&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e-7"', got '"1E-07"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e-7)'
Result: '"1E-07"'
Expected: '"1e-7"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e-7"', got '"1E-07"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1933" name="function-string.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2069108697" result="Failed" start-time="2022-01-16T22:25:19.7014126Z" end-time="2022-01-16T22:25:19.7027659Z" duration="0.001353" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e20)';&#xA; result: &quot;100000000000000000000&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"100000000000000000000"', got '"1E+20"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e20)'
Result: '"1E+20"'
Expected: '"100000000000000000000"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"100000000000000000000"', got '"1E+20"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1934" name="function-string.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="149764440" result="Failed" start-time="2022-01-16T22:25:19.7029425Z" end-time="2022-01-16T22:25:19.7039289Z" duration="0.000987" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(1e21)';&#xA; result: &quot;1e+21&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"1e+21"', got '"1E+21"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(1e21)'
Result: '"1E+21"'
Expected: '"1e+21"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"1e+21"', got '"1E+21"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1935" name="function-string.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1389139988" result="Passed" start-time="2022-01-16T22:25:19.7039449Z" end-time="2022-01-16T22:25:19.7043168Z" duration="0.000372" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$string($sum(Product.(Price* Quantity)))';&#xA; result: [&quot;90.57&quot;,&quot;245.79&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$string($sum(Product.(Price* Quantity)))'
Result: '["90.57","245.79"]'
Expected: '["90.57","245.79"]'
]]></output>
                </test-case>
                <test-case id="0-1936" name="function-string.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="873753082" result="Passed" start-time="2022-01-16T22:25:19.7043322Z" end-time="2022-01-16T22:25:19.7044916Z" duration="0.000160" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(true)';&#xA; result: &quot;true&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(true)'
Result: '"true"'
Expected: '"true"'
]]></output>
                </test-case>
                <test-case id="0-1937" name="function-string.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="164082326" result="Passed" start-time="2022-01-16T22:25:19.7052511Z" end-time="2022-01-16T22:25:19.7054385Z" duration="0.000187" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(false)';&#xA; result: &quot;false&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(false)'
Result: '"false"'
Expected: '"false"'
]]></output>
                </test-case>
                <test-case id="0-1938" name="function-string.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="4737523" result="Passed" start-time="2022-01-16T22:25:19.7059303Z" end-time="2022-01-16T22:25:19.7061226Z" duration="0.000192" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(null)';&#xA; result: &quot;null&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(null)'
Result: '"null"'
Expected: '"null"'
]]></output>
                </test-case>
                <test-case id="0-1939" name="function-string.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="451781951" result="Passed" start-time="2022-01-16T22:25:19.7066723Z" end-time="2022-01-16T22:25:19.7068338Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$string(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1940" name="function-string.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1626282311" result="Passed" start-time="2022-01-16T22:25:19.7070883Z" end-time="2022-01-16T22:25:19.7071767Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string($string)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string($string)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1941" name="function-string.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="131803625" result="Passed" start-time="2022-01-16T22:25:19.7074330Z" end-time="2022-01-16T22:25:19.7075275Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(function(){true})';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(function(){true})'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1942" name="function-string.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1142823775" result="Passed" start-time="2022-01-16T22:25:19.7078644Z" end-time="2022-01-16T22:25:19.7079752Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string(function(){1})';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(function(){1})'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1943" name="function-string.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1985111089" result="Passed" start-time="2022-01-16T22:25:19.7086520Z" end-time="2022-01-16T22:25:19.7087866Z" duration="0.000135" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;})';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({"string": "hello"})'
Result: '"{\"string\":\"hello\"}"'
Expected: '"{\"string\":\"hello\"}"'
]]></output>
                </test-case>
                <test-case id="0-1944" name="function-string.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="694663524" result="Passed" start-time="2022-01-16T22:25:19.7088059Z" end-time="2022-01-16T22:25:19.7092328Z" duration="0.000427" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5])';&#xA; result: &quot;[\&quot;string\&quot;,5]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(["string", 5])'
Result: '"[\"string\",5]"'
Expected: '"[\"string\",5]"'
]]></output>
                </test-case>
                <test-case id="0-1945" name="function-string.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1915822400" result="Failed" start-time="2022-01-16T22:25:19.7095835Z" end-time="2022-01-16T22:25:19.7111831Z" duration="0.001600" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []})';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;,\&quot;number\&quot;:39.4,\&quot;null\&quot;:null,\&quot;boolean\&quot;:false,\&quot;function\&quot;:\&quot;\&quot;,\&quot;lambda\&quot;:\&quot;\&quot;,\&quot;object\&quot;:{\&quot;str\&quot;:\&quot;another\&quot;,\&quot;lambda2\&quot;:\&quot;\&quot;},\&quot;array\&quot;:[]}&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"', got '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":new BuiltinFunctions.sum(),\"lambda\":new lambda(),\"object\":{\"str\":\"another\",\"lambda2\":new lambda()},\"array\":[]}"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []})'
Result: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":new BuiltinFunctions.sum(),\"lambda\":new lambda(),\"object\":{\"str\":\"another\",\"lambda2\":new lambda()},\"array\":[]}"'
Expected: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"', got '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":new BuiltinFunctions.sum(),\"lambda\":new lambda(),\"object\":{\"str\":\"another\",\"lambda2\":new lambda()},\"array\":[]}"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1946" name="function-string.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="713420641" result="Passed" start-time="2022-01-16T22:25:19.7112019Z" end-time="2022-01-16T22:25:19.7120601Z" duration="0.000859" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string(1/0)';&#xA; result: error D3001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3001]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$string(1/0)'
]]></output>
                </test-case>
                <test-case id="0-1947" name="function-string.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2024970085" result="Failed" start-time="2022-01-16T22:25:19.7121944Z" end-time="2022-01-16T22:25:19.7132528Z" duration="0.001058" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;inf&quot;: 1/0})';&#xA; result: error D1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D1001 (), got '"{\"inf\":\"Infinity\"}"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string({"inf": 1/0})'
Result: '"{\"inf\":\"Infinity\"}"'
Expected error D1001
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D1001 (), got '"{\"inf\":\"Infinity\"}"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1948" name="function-string.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="998813134" result="Passed" start-time="2022-01-16T22:25:19.7144008Z" end-time="2022-01-16T22:25:19.7150800Z" duration="0.000679" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$string(2,3)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$string(2,3)'
]]></output>
                </test-case>
                <test-case id="0-1949" name="function-string.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="884110615" result="Passed" start-time="2022-01-16T22:25:19.7154999Z" end-time="2022-01-16T22:25:19.7156496Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$string()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1950" name="function-string.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1067658864" result="Passed" start-time="2022-01-16T22:25:19.7156605Z" end-time="2022-01-16T22:25:19.7157465Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;}, false)';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;}&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string({"string": "hello"}, false)'
Result: '"{\"string\":\"hello\"}"'
Expected: '"{\"string\":\"hello\"}"'
]]></output>
                </test-case>
                <test-case id="0-1951" name="function-string.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1727665972" result="Failed" start-time="2022-01-16T22:25:19.7158857Z" end-time="2022-01-16T22:25:19.7178524Z" duration="0.001967" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({&quot;string&quot;: &quot;hello&quot;}, true)';&#xA; result: &quot;{\n  \&quot;string\&quot;: \&quot;hello\&quot;\n}&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"{\n  \"string\": \"hello\"\n}"', got '"{\r\n  \"string\": \"hello\"\r\n}"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string({"string": "hello"}, true)'
Result: '"{\r\n  \"string\": \"hello\"\r\n}"'
Expected: '"{\n  \"string\": \"hello\"\n}"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"{\n  \"string\": \"hello\"\n}"', got '"{\r\n  \"string\": \"hello\"\r\n}"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1952" name="function-string.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1664942374" result="Passed" start-time="2022-01-16T22:25:19.7178928Z" end-time="2022-01-16T22:25:19.7180923Z" duration="0.000200" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5], false)';&#xA; result: &quot;[\&quot;string\&quot;,5]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$string(["string", 5], false)'
Result: '"[\"string\",5]"'
Expected: '"[\"string\",5]"'
]]></output>
                </test-case>
                <test-case id="0-1953" name="function-string.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1198717878" result="Failed" start-time="2022-01-16T22:25:19.7181017Z" end-time="2022-01-16T22:25:19.7193901Z" duration="0.001289" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string([&quot;string&quot;, 5], true)';&#xA; result: &quot;[\n  \&quot;string\&quot;,\n  5\n]&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"[\n  \"string\",\n  5\n]"', got '"[\r\n  \"string\",\r\n  5\r\n]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string(["string", 5], true)'
Result: '"[\r\n  \"string\",\r\n  5\r\n]"'
Expected: '"[\n  \"string\",\n  5\n]"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"[\n  \"string\",\n  5\n]"', got '"[\r\n  \"string\",\r\n  5\r\n]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1954" name="function-string.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="689435819" result="Failed" start-time="2022-01-16T22:25:19.7194339Z" end-time="2022-01-16T22:25:19.7203189Z" duration="0.000885" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []}, false)';&#xA; result: &quot;{\&quot;string\&quot;:\&quot;hello\&quot;,\&quot;number\&quot;:39.4,\&quot;null\&quot;:null,\&quot;boolean\&quot;:false,\&quot;function\&quot;:\&quot;\&quot;,\&quot;lambda\&quot;:\&quot;\&quot;,\&quot;object\&quot;:{\&quot;str\&quot;:\&quot;another\&quot;,\&quot;lambda2\&quot;:\&quot;\&quot;},\&quot;array\&quot;:[]}&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"', got '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":new BuiltinFunctions.sum(),\"lambda\":new lambda(),\"object\":{\"str\":\"another\",\"lambda2\":new lambda()},\"array\":[]}"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []}, false)'
Result: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":new BuiltinFunctions.sum(),\"lambda\":new lambda(),\"object\":{\"str\":\"another\",\"lambda2\":new lambda()},\"array\":[]}"'
Expected: '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":\"\",\"lambda\":\"\",\"object\":{\"str\":\"another\",\"lambda2\":\"\"},\"array\":[]}"', got '"{\"string\":\"hello\",\"number\":39.4,\"null\":null,\"boolean\":false,\"function\":new BuiltinFunctions.sum(),\"lambda\":new lambda(),\"object\":{\"str\":\"another\",\"lambda2\":new lambda()},\"array\":[]}"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1955" name="function-string.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="355169248" result="Failed" start-time="2022-01-16T22:25:19.7203358Z" end-time="2022-01-16T22:25:19.7210368Z" duration="0.000701" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string({  &quot;string&quot;: &quot;hello&quot;,  &quot;number&quot;: 78.8 / 2,  &quot;null&quot;:null,  &quot;boolean&quot;: false,  &quot;function&quot;: $sum,  &quot;lambda&quot;: function(){true},  &quot;object&quot;: {    &quot;str&quot;: &quot;another&quot;,    &quot;lambda2&quot;: function($n){$n}  },  &quot;array&quot;: []}, true)';&#xA; result: &quot;{\n  \&quot;string\&quot;: \&quot;hello\&quot;,\n  \&quot;number\&quot;: 39.4,\n  \&quot;null\&quot;: null,\n  \&quot;boolean\&quot;: false,\n  \&quot;function\&quot;: \&quot;\&quot;,\n  \&quot;lambda\&quot;: \&quot;\&quot;,\n  \&quot;object\&quot;: {\n    \&quot;str\&quot;: \&quot;another\&quot;,\n    \&quot;lambda2\&quot;: \&quot;\&quot;\n  },\n  \&quot;array\&quot;: []\n}&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"{\n  \"string\": \"hello\",\n  \"number\": 39.4,\n  \"null\": null,\n  \"boolean\": false,\n  \"function\": \"\",\n  \"lambda\": \"\",\n  \"object\": {\n    \"str\": \"another\",\n    \"lambda2\": \"\"\n  },\n  \"array\": []\n}"', got '"{\r\n  \"string\": \"hello\",\r\n  \"number\": 39.4,\r\n  \"null\": null,\r\n  \"boolean\": false,\r\n  \"function\": new BuiltinFunctions.sum(\r\n  ),\r\n  \"lambda\": new lambda(\r\n  ),\r\n  \"object\": {\r\n    \"str\": \"another\",\r\n    \"lambda2\": new lambda(\r\n    )\r\n  },\r\n  \"array\": []\r\n}"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []}, true)'
Result: '"{\r\n  \"string\": \"hello\",\r\n  \"number\": 39.4,\r\n  \"null\": null,\r\n  \"boolean\": false,\r\n  \"function\": new BuiltinFunctions.sum(\r\n  ),\r\n  \"lambda\": new lambda(\r\n  ),\r\n  \"object\": {\r\n    \"str\": \"another\",\r\n    \"lambda2\": new lambda(\r\n    )\r\n  },\r\n  \"array\": []\r\n}"'
Expected: '"{\n  \"string\": \"hello\",\n  \"number\": 39.4,\n  \"null\": null,\n  \"boolean\": false,\n  \"function\": \"\",\n  \"lambda\": \"\",\n  \"object\": {\n    \"str\": \"another\",\n    \"lambda2\": \"\"\n  },\n  \"array\": []\n}"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"{\n  \"string\": \"hello\",\n  \"number\": 39.4,\n  \"null\": null,\n  \"boolean\": false,\n  \"function\": \"\",\n  \"lambda\": \"\",\n  \"object\": {\n    \"str\": \"another\",\n    \"lambda2\": \"\"\n  },\n  \"array\": []\n}"', got '"{\r\n  \"string\": \"hello\",\r\n  \"number\": 39.4,\r\n  \"null\": null,\r\n  \"boolean\": false,\r\n  \"function\": new BuiltinFunctions.sum(\r\n  ),\r\n  \"lambda\": new lambda(\r\n  ),\r\n  \"object\": {\r\n    \"str\": \"another\",\r\n    \"lambda2\": new lambda(\r\n    )\r\n  },\r\n  \"array\": []\r\n}"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1956" name="function-string.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.function-string.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1296443367" result="Failed" start-time="2022-01-16T22:25:19.7210528Z" end-time="2022-01-16T22:25:19.7223557Z" duration="0.001303" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$string()';&#xA; result: &quot;[4,true]&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"[4,true]"', got '"[[4,true]]"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$string()'
Result: '"[[4,true]]"'
Expected: '"[4,true]"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"[4,true]"', got '"[[4,true]]"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1957" name="function-substring.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1467050172" result="Passed" start-time="2022-01-16T22:25:19.7243580Z" end-time="2022-01-16T22:25:19.7245572Z" duration="0.000199" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 0, 5)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 0, 5)'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-1958" name="function-substring.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2108390470" result="Passed" start-time="2022-01-16T22:25:19.7261414Z" end-time="2022-01-16T22:25:19.7264016Z" duration="0.000260" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1959" name="function-substring.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1863242443" result="Passed" start-time="2022-01-16T22:25:19.7264273Z" end-time="2022-01-16T22:25:19.7267270Z" duration="0.000300" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 6)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 6)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1960" name="function-substring.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2080820060" result="Passed" start-time="2022-01-16T22:25:19.7268173Z" end-time="2022-01-16T22:25:19.7270999Z" duration="0.000282" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(blah, 6)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(blah, 6)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1961" name="function-substring.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1248481883" result="Failed" start-time="2022-01-16T22:25:19.7272221Z" end-time="2022-01-16T22:25:19.7281395Z" duration="0.000917" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 0, 2)';&#xA; result: &quot;𝄞💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"𝄞💩"', got '"𝄞"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 0, 2)'
Result: '"𝄞"'
Expected: '"𝄞💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"𝄞💩"', got '"𝄞"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1962" name="function-substring.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="550774702" result="Failed" start-time="2022-01-16T22:25:19.7282690Z" end-time="2022-01-16T22:25:19.7290315Z" duration="0.000763" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 0, 1)';&#xA; result: &quot;𝄞&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"𝄞"', got '"\ud834"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 0, 1)'
Result: '"\ud834"'
Expected: '"𝄞"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"𝄞"', got '"\ud834"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1963" name="function-substring.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="730840009" result="Failed" start-time="2022-01-16T22:25:19.7290472Z" end-time="2022-01-16T22:25:19.7296576Z" duration="0.000611" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring('𝄞💩', 1, 1)';&#xA; result: &quot;💩&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"💩"', got '"\udd1e"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring('𝄞💩', 1, 1)'
Result: '"\udd1e"'
Expected: '"💩"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"💩"', got '"\udd1e"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1964" name="function-substring.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="529231288" result="Passed" start-time="2022-01-16T22:25:19.7296733Z" end-time="2022-01-16T22:25:19.7299643Z" duration="0.000291" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1965" name="function-substring.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1022006509" result="Passed" start-time="2022-01-16T22:25:19.7300681Z" end-time="2022-01-16T22:25:19.7303111Z" duration="0.000243" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 5)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 5)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-1966" name="function-substring.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="647363650" result="Passed" start-time="2022-01-16T22:25:19.7303419Z" end-time="2022-01-16T22:25:19.7305545Z" duration="0.000213" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 4)';&#xA; result: &quot;worl&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 4)'
Result: '"worl"'
Expected: '"worl"'
]]></output>
                </test-case>
                <test-case id="0-1967" name="function-substring.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1278161445" result="Passed" start-time="2022-01-16T22:25:19.7305644Z" end-time="2022-01-16T22:25:19.7306565Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 1)';&#xA; result: &quot;w&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 1)'
Result: '"w"'
Expected: '"w"'
]]></output>
                </test-case>
                <test-case id="0-1968" name="function-substring.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="884155134" result="Passed" start-time="2022-01-16T22:25:19.7311020Z" end-time="2022-01-16T22:25:19.7311941Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, 0)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, 0)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1969" name="function-substring.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="848774155" result="Passed" start-time="2022-01-16T22:25:19.7313514Z" end-time="2022-01-16T22:25:19.7314317Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -5, -1)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -5, -1)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1970" name="function-substring.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="704966441" result="Passed" start-time="2022-01-16T22:25:19.7316001Z" end-time="2022-01-16T22:25:19.7316753Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, 0, -6)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", 0, -6)'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1971" name="function-substring.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="374448812" result="Passed" start-time="2022-01-16T22:25:19.7318380Z" end-time="2022-01-16T22:25:19.7319129Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;hello world&quot;, -100, 3)';&#xA; result: &quot;hel&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("hello world", -100, 3)'
Result: '"hel"'
Expected: '"hel"'
]]></output>
                </test-case>
                <test-case id="0-1972" name="function-substring.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674998053" result="Failed" start-time="2022-01-16T22:25:19.7320756Z" end-time="2022-01-16T22:25:19.7336740Z" duration="0.001599" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -2, 1)';&#xA; result: &quot;😁&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😁"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -2, 1)'
Result: '"\ud83d"'
Expected: '"😁"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😁"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1973" name="function-substring.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="899003083" result="Failed" start-time="2022-01-16T22:25:19.7337187Z" end-time="2022-01-16T22:25:19.7348311Z" duration="0.001112" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -3, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ude01"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -3, 1)'
Result: '"\ude01"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ude01"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1974" name="function-substring.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1075686863" result="Failed" start-time="2022-01-16T22:25:19.7348495Z" end-time="2022-01-16T22:25:19.7372865Z" duration="0.002437" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -4, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -4, 1)'
Result: '"\ud83d"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ud83d"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1975" name="function-substring.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substring.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="352853445" result="Failed" start-time="2022-01-16T22:25:19.7373855Z" end-time="2022-01-16T22:25:19.7388145Z" duration="0.001429" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;😂😁😀&quot;, -5, 1)';&#xA; result: &quot;😂&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"😂"', got '"\ude02"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$substring("😂😁😀", -5, 1)'
Result: '"\ude02"'
Expected: '"😂"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"😂"', got '"\ude02"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-1976" name="function-substringAfter.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="668240833" result="Passed" start-time="2022-01-16T22:25:19.7392362Z" end-time="2022-01-16T22:25:19.7393670Z" duration="0.000131" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: &quot;World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", " ")'
Result: '"World"'
Expected: '"World"'
]]></output>
                </test-case>
                <test-case id="0-1977" name="function-substringAfter.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="943363529" result="Passed" start-time="2022-01-16T22:25:19.7393938Z" end-time="2022-01-16T22:25:19.7396622Z" duration="0.000268" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;l&quot;)';&#xA; result: &quot;lo World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "l")'
Result: '"lo World"'
Expected: '"lo World"'
]]></output>
                </test-case>
                <test-case id="0-1978" name="function-substringAfter.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1177923251" result="Passed" start-time="2022-01-16T22:25:19.7397075Z" end-time="2022-01-16T22:25:19.7399906Z" duration="0.000283" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;f&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "f")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1979" name="function-substringAfter.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1526704949" result="Passed" start-time="2022-01-16T22:25:19.7404443Z" end-time="2022-01-16T22:25:19.7406716Z" duration="0.000227" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hello World&quot;, &quot;ld&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hello World", "ld")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1980" name="function-substringAfter.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringAfter.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="886516146" result="Passed" start-time="2022-01-16T22:25:19.7409551Z" end-time="2022-01-16T22:25:19.7411347Z" duration="0.000180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(blah, &quot;ld&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(blah, "ld")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1981" name="function-substringBefore.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2134930665" result="Passed" start-time="2022-01-16T22:25:19.7412802Z" end-time="2022-01-16T22:25:19.7414142Z" duration="0.000086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot; &quot;)';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", " ")'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-1982" name="function-substringBefore.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2064954700" result="Passed" start-time="2022-01-16T22:25:19.7414260Z" end-time="2022-01-16T22:25:19.7414918Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;l&quot;)';&#xA; result: &quot;He&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "l")'
Result: '"He"'
Expected: '"He"'
]]></output>
                </test-case>
                <test-case id="0-1983" name="function-substringBefore.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1556450339" result="Passed" start-time="2022-01-16T22:25:19.7414991Z" end-time="2022-01-16T22:25:19.7415685Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;f&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "f")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-1984" name="function-substringBefore.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="753783661" result="Passed" start-time="2022-01-16T22:25:19.7416440Z" end-time="2022-01-16T22:25:19.7418338Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hello World&quot;, &quot;He&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hello World", "He")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-1985" name="function-substringBefore.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-substringBefore.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="314213064" result="Passed" start-time="2022-01-16T22:25:19.7418426Z" end-time="2022-01-16T22:25:19.7421025Z" duration="0.000260" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(blah, &quot;He&quot;)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore(blah, "He")'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1986" name="function-sum.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2120232472" result="Passed" start-time="2022-01-16T22:25:19.7439521Z" end-time="2022-01-16T22:25:19.7443170Z" duration="0.000365" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(Account.Order.Product.(Price * Quantity))';&#xA; result: 336.36" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(Account.Order.Product.(Price * Quantity))'
Result: '336.36'
Expected: '336.36'
]]></output>
                </test-case>
                <test-case id="0-1987" name="function-sum.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="228631534" result="Passed" start-time="2022-01-16T22:25:19.7447747Z" end-time="2022-01-16T22:25:19.7452558Z" duration="0.000481" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.$sum(Product.(Price * Quantity))';&#xA; result: [90.57000000000001,245.79000000000002]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.$sum(Product.(Price * Quantity))'
Result: '[90.57,245.79]'
Expected: '[90.57000000000001,245.79000000000002]'
]]></output>
                </test-case>
                <test-case id="0-1988" name="function-sum.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1379672878" result="Passed" start-time="2022-01-16T22:25:19.7452721Z" end-time="2022-01-16T22:25:19.7460993Z" duration="0.000827" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(OrderID &amp; &quot;: &quot; &amp; $sum(Product.(Price*Quantity)))';&#xA; result: [&quot;order103: 90.57&quot;,&quot;order104: 245.79&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.(OrderID & ": " & $sum(Product.(Price*Quantity)))'
Result: '["order103: 90.57","order104: 245.79"]'
Expected: '["order103: 90.57","order104: 245.79"]'
]]></output>
                </test-case>
                <test-case id="0-1989" name="function-sum.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1942078839" result="Passed" start-time="2022-01-16T22:25:19.7464250Z" end-time="2022-01-16T22:25:19.7474073Z" duration="0.000982" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sum()';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sum()'
]]></output>
                </test-case>
                <test-case id="0-1990" name="function-sum.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="92696621" result="Passed" start-time="2022-01-16T22:25:19.7478697Z" end-time="2022-01-16T22:25:19.7479808Z" duration="0.000111" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(1)';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(1)'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-1991" name="function-sum.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1554186557" result="Passed" start-time="2022-01-16T22:25:19.7479947Z" end-time="2022-01-16T22:25:19.7489353Z" duration="0.000941" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$sum(Account.Order)';&#xA; result: error T0412" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0412]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$sum(Account.Order)'
]]></output>
                </test-case>
                <test-case id="0-1992" name="function-sum.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-sum.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="203175503" result="Passed" start-time="2022-01-16T22:25:19.7489643Z" end-time="2022-01-16T22:25:19.7494053Z" duration="0.000442" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$sum(undefined)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$sum(undefined)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-1993" name="function-tomillis.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="288978727" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7494712Z" end-time="2022-01-16T22:25:19.7511429Z" duration="0.001672" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;1970-01-01T00:00:00.001Z&quot;)';&#xA; result: 1" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("1970-01-01T00:00:00.001Z")'
]]></output>
                </test-case>
                <test-case id="0-1994" name="function-tomillis.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="518445538" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7533626Z" end-time="2022-01-16T22:25:19.7547518Z" duration="0.001389" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018-02-01T09:42:13.123+0000&quot;)';&#xA; result: 1517478133123" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2018-02-01T09:42:13.123+0000")'
]]></output>
                </test-case>
                <test-case id="0-1995" name="function-tomillis.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="377800428" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7547717Z" end-time="2022-01-16T22:25:19.7553622Z" duration="0.000591" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2017-10-30&quot;)';&#xA; result: 1509321600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2017-10-30")'
]]></output>
                </test-case>
                <test-case id="0-1996" name="function-tomillis.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1728512570" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7553772Z" end-time="2022-01-16T22:25:19.7560389Z" duration="0.000662" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2017-10-30T15:28:34Z&quot;)';&#xA; result: 1509377314000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2017-10-30T15:28:34Z")'
]]></output>
                </test-case>
                <test-case id="0-1997" name="function-tomillis.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="411983766" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7561090Z" end-time="2022-01-16T22:25:19.7568169Z" duration="0.000708" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018&quot;)';&#xA; result: 1514764800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis("2018")'
]]></output>
                </test-case>
                <test-case id="0-1998" name="function-tomillis.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1455879801" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7568694Z" end-time="2022-01-16T22:25:19.7574635Z" duration="0.000594" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(foo)';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$toMillis(foo)'
]]></output>
                </test-case>
                <test-case id="0-1999" name="function-tomillis.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1820140662" result="Passed" start-time="2022-01-16T22:25:19.7574940Z" end-time="2022-01-16T22:25:19.7581062Z" duration="0.000612" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;foo&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("foo")'
]]></output>
                </test-case>
                <test-case id="0-2000" name="function-tomillis.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1268458750" result="Passed" start-time="2022-01-16T22:25:19.7581264Z" end-time="2022-01-16T22:25:19.7589704Z" duration="0.000844" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;01-02-2018&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("01-02-2018")'
]]></output>
                </test-case>
                <test-case id="0-2001" name="function-tomillis.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1582742843" result="Passed" start-time="2022-01-16T22:25:19.7599092Z" end-time="2022-01-16T22:25:19.7604991Z" duration="0.000590" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(&quot;2018-02-03 11:15:33&quot;)';&#xA; result: error D3110" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3110]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$toMillis("2018-02-03 11:15:33")'
]]></output>
                </test-case>
                <test-case id="0-2002" name="function-tomillis.parseDateTime[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1140814951" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7610512Z" end-time="2022-01-16T22:25:19.7614699Z" duration="0.000418" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis(undefined, 'pic')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should return undefined'
Expr is '$toMillis(undefined, 'pic')'
]]></output>
                </test-case>
                <test-case id="0-2003" name="function-tomillis.parseDateTime[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="150038979" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7624851Z" end-time="2022-01-16T22:25:19.7629563Z" duration="0.000471" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Hello', 'Hello')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse string literal'
Expr is '$toMillis('Hello', 'Hello')'
]]></output>
                </test-case>
                <test-case id="0-2004" name="function-tomillis.parseDateTime[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="179144174" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7630538Z" end-time="2022-01-16T22:25:19.7640660Z" duration="0.001012" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018', '[Y1]')';&#xA; result: 1514764800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year'
Expr is '$toMillis('2018', '[Y1]')'
]]></output>
                </test-case>
                <test-case id="0-2005" name="function-tomillis.parseDateTime[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="693210052" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7640998Z" end-time="2022-01-16T22:25:19.7649643Z" duration="0.000865" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-03-27', '[Y1]-[M01]-[D01]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2018-03-27', '[Y1]-[M01]-[D01]')'
]]></output>
                </test-case>
                <test-case id="0-2006" name="function-tomillis.parseDateTime[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="52667919" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7650036Z" end-time="2022-01-16T22:25:19.7656728Z" duration="0.000669" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-03-27T14:03:00.123Z', '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f001]Z')';&#xA; result: 1522159380123" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ISO 8601 format'
Expr is '$toMillis('2018-03-27T14:03:00.123Z', '[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f001]Z')'
]]></output>
                </test-case>
                <test-case id="0-2007" name="function-tomillis.parseDateTime[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="765939291" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7656894Z" end-time="2022-01-16T22:25:19.7660348Z" duration="0.000345" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27th 3 1976', '[D1o] [M#1] [Y0001]')';&#xA; result: 196732800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27th 3 1976', '[D1o] [M#1] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2008" name="function-tomillis.parseDateTime[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="123031015" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7660453Z" end-time="2022-01-16T22:25:19.7664266Z" duration="0.000381" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('21st 12 1881', '[D1o] [M01] [Y0001]')';&#xA; result: -2777932800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('21st 12 1881', '[D1o] [M01] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2009" name="function-tomillis.parseDateTime[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="336582374" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7664390Z" end-time="2022-01-16T22:25:19.7671831Z" duration="0.000744" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2nd 12 2012', '[D1o] [M01] [Y0001]')';&#xA; result: 1354406400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2nd 12 2012', '[D1o] [M01] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2010" name="function-tomillis.parseDateTime[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1834412062" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7672990Z" end-time="2022-01-16T22:25:19.7682674Z" duration="0.000968" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('MCMLXXXIV', '[YI]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year'
Expr is '$toMillis('MCMLXXXIV', '[YI]')'
]]></output>
                </test-case>
                <test-case id="0-2011" name="function-tomillis.parseDateTime[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="353079838" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7686695Z" end-time="2022-01-16T22:25:19.7695066Z" duration="0.000837" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27 03 MMXVIII', '[D1] [M01] [YI]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27 03 MMXVIII', '[D1] [M01] [YI]')'
]]></output>
                </test-case>
                <test-case id="0-2012" name="function-tomillis.parseDateTime[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="289126921" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7695232Z" end-time="2022-01-16T22:25:19.7705719Z" duration="0.001049" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27 iii MMXVIII', '[D1] [Mi] [YI]')';&#xA; result: 1522108800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27 iii MMXVIII', '[D1] [Mi] [YI]')'
]]></output>
                </test-case>
                <test-case id="0-2013" name="function-tomillis.parseDateTime[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="581685521" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7713794Z" end-time="2022-01-16T22:25:19.7718304Z" duration="0.000451" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('w C mmxviii', '[Da] [MA] [Yi]')';&#xA; result: 1521763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$toMillis('w C mmxviii', '[Da] [MA] [Yi]')'
]]></output>
                </test-case>
                <test-case id="0-2014" name="function-tomillis.parseDateTime[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="976726297" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7722168Z" end-time="2022-01-16T22:25:19.7730131Z" duration="0.000796" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('ae C mmxviii', '[Da] [MA] [Yi]')';&#xA; result: 1522454400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'day/month in letters, year in roman numerals'
Expr is '$toMillis('ae C mmxviii', '[Da] [MA] [Yi]')'
]]></output>
                </test-case>
                <test-case id="0-2015" name="function-tomillis.parseDateTime[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2093373042" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7730306Z" end-time="2022-01-16T22:25:19.7737455Z" duration="0.000715" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('27th April 2008', '[D1o] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('27th April 2008', '[D1o] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2016" name="function-tomillis.parseDateTime[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1331010830" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7737868Z" end-time="2022-01-16T22:25:19.7743570Z" duration="0.000570" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('21 August 2017', '[D1] [MNn] [Y0001]')';&#xA; result: 1503273600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('21 August 2017', '[D1] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2017" name="function-tomillis.parseDateTime[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1141808010" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7743733Z" end-time="2022-01-16T22:25:19.7750329Z" duration="0.000660" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2 Feb 2012', '[D1] [MNn,3-3] [Y0001]')';&#xA; result: 1328140800000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year/month/day'
Expr is '$toMillis('2 Feb 2012', '[D1] [MNn,3-3] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2018" name="function-tomillis.parseDateTime[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2124539995" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7750483Z" end-time="2022-01-16T22:25:19.7757091Z" duration="0.000661" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('one thousand, nine hundred and eighty-four', '[Yw]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year in words'
Expr is '$toMillis('one thousand, nine hundred and eighty-four', '[Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2019" name="function-tomillis.parseDateTime[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="215018224" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7757245Z" end-time="2022-01-16T22:25:19.7762941Z" duration="0.000570" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('nineteen hundred and eighty-four', '[Yw]')';&#xA; result: 441763200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse year in words'
Expr is '$toMillis('nineteen hundred and eighty-four', '[Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2020" name="function-tomillis.parseDateTime[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1049257684" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7763298Z" end-time="2022-01-16T22:25:19.7769266Z" duration="0.000597" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-seven April 2008', '[Dw] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse date/month in words'
Expr is '$toMillis('twenty-seven April 2008', '[Dw] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2021" name="function-tomillis.parseDateTime[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="418732116" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7769411Z" end-time="2022-01-16T22:25:19.7772559Z" duration="0.000315" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-seventh April 2008', '[Dw] [MNn] [Y0001]')';&#xA; result: 1209254400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse date/month in ordinal words'
Expr is '$toMillis('twenty-seventh April 2008', '[Dw] [MNn] [Y0001]')'
]]></output>
                </test-case>
                <test-case id="0-2022" name="function-tomillis.parseDateTime[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2045972214" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7772677Z" end-time="2022-01-16T22:25:19.7777422Z" duration="0.000475" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('twenty-first August two thousand and seventeen', '[Dw] [MNn] [Yw]')';&#xA; result: 1503273600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('twenty-first August two thousand and seventeen', '[Dw] [MNn] [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2023" name="function-tomillis.parseDateTime[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1089559942" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7780079Z" end-time="2022-01-16T22:25:19.7783469Z" duration="0.000339" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('TWENTY-SECOND August two thousand and seventeen', '[DW] [MNn] [Yw]')';&#xA; result: 1503360000000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('TWENTY-SECOND August two thousand and seventeen', '[DW] [MNn] [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2024" name="function-tomillis.parseDateTime[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="756077534" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7795565Z" end-time="2022-01-16T22:25:19.7800772Z" duration="0.000521" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Twentieth of August, two thousand and seventeen', '[DW] of [MNn], [Yw]')';&#xA; result: 1503187200000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse ordinal date/month/year'
Expr is '$toMillis('Twentieth of August, two thousand and seventeen', '[DW] of [MNn], [Yw]')'
]]></output>
                </test-case>
                <test-case id="0-2025" name="function-tomillis.parseDateTime[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1298263531" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7806281Z" end-time="2022-01-16T22:25:19.7811669Z" duration="0.000539" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 12:06 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522800360000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just after midnight'
Expr is '$toMillis('4/4/2018 12:06 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2026" name="function-tomillis.parseDateTime[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="171273309" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7811811Z" end-time="2022-01-16T22:25:19.7817710Z" duration="0.000590" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 06:30 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522823400000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'breakfast time'
Expr is '$toMillis('4/4/2018 06:30 am', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2027" name="function-tomillis.parseDateTime[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1386019326" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7819361Z" end-time="2022-01-16T22:25:19.7828399Z" duration="0.000904" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 12:06 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522843560000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just after midday'
Expr is '$toMillis('4/4/2018 12:06 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2028" name="function-tomillis.parseDateTime[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="380557545" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7845980Z" end-time="2022-01-16T22:25:19.7850777Z" duration="0.000479" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('4/4/2018 11:30 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')';&#xA; result: 1522884600000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'just before midnight'
Expr is '$toMillis('4/4/2018 11:30 pm', '[D1]/[M1]/[Y0001] [h]:[m] [P]')'
]]></output>
                </test-case>
                <test-case id="0-2029" name="function-tomillis.parseDateTime[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="697886435" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7868213Z" end-time="2022-01-16T22:25:19.7882554Z" duration="0.001434" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-094', '[Y0001]-[d001]')';&#xA; result: 1522800000000" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'ordinal date: day 94 of the year 2018'
Expr is '$toMillis('2018-094', '[Y0001]-[d001]')'
]]></output>
                </test-case>
                <test-case id="0-2030" name="function-tomillis.parseDateTime[29]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[29]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="771824522" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7882763Z" end-time="2022-01-16T22:25:19.7889114Z" duration="0.000635" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('13:45', '[H]:[m]') ~&gt; $fromMillis() ~&gt; $substringBefore('T') = $substringBefore($now(), 'T')';&#xA; result: true" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalComparisonOperator(ComparisonOperatorNode comparisonOperatorNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 672
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 125
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'time only defaults to todays date'
Expr is '$toMillis('13:45', '[H]:[m]') ~> $fromMillis() ~> $substringBefore('T') = $substringBefore($now(), 'T')'
]]></output>
                </test-case>
                <test-case id="0-2031" name="function-tomillis.parseDateTime[30]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[30]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="256257067" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7889262Z" end-time="2022-01-16T22:25:19.7897147Z" duration="0.000789" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('13:45', '[H]:[m]') ~&gt; $fromMillis() ~&gt; $substringAfter('T')';&#xA; result: &quot;13:45:00.000Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'hours/minutes only defaults seconds to zero'
Expr is '$toMillis('13:45', '[H]:[m]') ~> $fromMillis() ~> $substringAfter('T')'
]]></output>
                </test-case>
                <test-case id="0-2032" name="function-tomillis.parseDateTime[31]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[31]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1634967375" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7897313Z" end-time="2022-01-16T22:25:19.7903737Z" duration="0.000643" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Wednesday, 14th November 2018', '[FNn], [D1o] [MNn] [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-11-14T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'date only defaults time to midnight'
Expr is '$toMillis('Wednesday, 14th November 2018', '[FNn], [D1o] [MNn] [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2033" name="function-tomillis.parseDateTime[32]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[32]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1505266236" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7903891Z" end-time="2022-01-16T22:25:19.7908458Z" duration="0.000457" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('Mon, Twelfth November 2018', '[FNn,*-3], [DWwo] [MNn] [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-11-12T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'date only defaults time to midnight'
Expr is '$toMillis('Mon, Twelfth November 2018', '[FNn,*-3], [DWwo] [MNn] [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2034" name="function-tomillis.parseDateTime[33]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[33]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="258246199" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7908585Z" end-time="2022-01-16T22:25:19.7912814Z" duration="0.000423" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018--180', '[Y]--[d]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-06-29T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '180th day of 2018 is 29th June'
Expr is '$toMillis('2018--180', '[Y]--[d]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2035" name="function-tomillis.parseDateTime[34]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[34]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1451256950" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7916705Z" end-time="2022-01-16T22:25:19.7922667Z" duration="0.000596" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('three hundred and sixty-fifth day of 2018', '[dwo] day of [Y]') ~&gt; $fromMillis()';&#xA; result: &quot;2018-12-31T00:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: '365th day of 2018 is 31st December'
Expr is '$toMillis('three hundred and sixty-fifth day of 2018', '[dwo] day of [Y]') ~> $fromMillis()'
]]></output>
                </test-case>
                <test-case id="0-2036" name="function-tomillis.parseDateTime[35]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[35]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="994115714" result="Failed" label="Error" start-time="2022-01-16T22:25:19.7922830Z" end-time="2022-01-16T22:25:19.7930223Z" duration="0.000740" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('irrelevent string', '[Y]-[M]-[D]')';&#xA; result: undefined" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'parsing a non-date string returns undefined'
Expr is '$toMillis('irrelevent string', '[Y]-[M]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2037" name="function-tomillis.parseDateTime[36]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[36]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1914915721" result="Passed" start-time="2022-01-16T22:25:19.7930371Z" end-time="2022-01-16T22:25:19.7937561Z" duration="0.000719" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-05-22', '[Y]-[M]-[q]')';&#xA; result: error D3132" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3132]]></message>
                  </reason>
                  <output><![CDATA[Description: 'picture string contains an unknown component'
Expr is '$toMillis('2018-05-22', '[Y]-[M]-[q]')'
]]></output>
                </test-case>
                <test-case id="0-2038" name="function-tomillis.parseDateTime[37]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[37]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1377306165" result="Passed" start-time="2022-01-16T22:25:19.7949494Z" end-time="2022-01-16T22:25:19.7954575Z" duration="0.000508" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-05-22', '[YN]-[M]-[D]')';&#xA; result: error D3133" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3133]]></message>
                  </reason>
                  <output><![CDATA[Description: 'picture string contains a named year'
Expr is '$toMillis('2018-05-22', '[YN]-[M]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2039" name="function-tomillis.parseDateTime[38]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[38]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="60573609" result="Passed" start-time="2022-01-16T22:25:19.7960060Z" end-time="2022-01-16T22:25:19.7963818Z" duration="0.000376" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-22', '[Y]-[D]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136]]></message>
                  </reason>
                  <output><![CDATA[Description: 'year/date with no month'
Expr is '$toMillis('2018-22', '[Y]-[D]')'
]]></output>
                </test-case>
                <test-case id="0-2040" name="function-tomillis.parseDateTime[39]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[39]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="261545145" result="Passed" start-time="2022-01-16T22:25:19.7967422Z" end-time="2022-01-16T22:25:19.7974915Z" duration="0.000749" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('5-22 23:59', '[M]-[D] [m]:[s]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136]]></message>
                  </reason>
                  <output><![CDATA[Description: 'month/date, min/sec with no hours'
Expr is '$toMillis('5-22 23:59', '[M]-[D] [m]:[s]')'
]]></output>
                </test-case>
                <test-case id="0-2041" name="function-tomillis.parseDateTime[40]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[40]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1354293181" result="Passed" start-time="2022-01-16T22:25:19.7982452Z" end-time="2022-01-16T22:25:19.7990407Z" duration="0.000795" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-3-2-5', '[X]-[x]-[w]-[F1]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136]]></message>
                  </reason>
                  <output><![CDATA[Description: 'currently no support for year/month-of-year/week-of-month/day-of-week'
Expr is '$toMillis('2018-3-2-5', '[X]-[x]-[w]-[F1]')'
]]></output>
                </test-case>
                <test-case id="0-2042" name="function-tomillis.parseDateTime[41]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[41]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="105600519" result="Passed" start-time="2022-01-16T22:25:19.7995143Z" end-time="2022-01-16T22:25:19.8001682Z" duration="0.000654" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2018-32-5', '[X]-[W]-[F1]')';&#xA; result: error D3136" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3136]]></message>
                  </reason>
                  <output><![CDATA[Description: 'currently no support for year/week-of-year/day-of-week'
Expr is '$toMillis('2018-32-5', '[X]-[W]-[F1]')'
]]></output>
                </test-case>
                <test-case id="0-2043" name="function-tomillis.parseDateTime[42]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[42]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1043090504" result="Failed" label="Error" start-time="2022-01-16T22:25:19.8007420Z" end-time="2022-01-16T22:25:19.8014206Z" duration="0.000678" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 08:00:00 +02:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 08:00:00 +02:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2044" name="function-tomillis.parseDateTime[43]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[43]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="107666777" result="Failed" label="Error" start-time="2022-01-16T22:25:19.8014952Z" end-time="2022-01-16T22:25:19.8022170Z" duration="0.000722" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 08:00:00 GMT-05:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T13:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 08:00:00 GMT-05:00', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2045" name="function-tomillis.parseDateTime[44]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[44]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1887100430" result="Failed" label="Error" start-time="2022-01-16T22:25:19.8022562Z" end-time="2022-01-16T22:25:19.8030592Z" duration="0.000803" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 +05:30', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:30:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 +05:30', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2046" name="function-tomillis.parseDateTime[45]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[45]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1265059636" result="Failed" label="Error" start-time="2022-01-16T22:25:19.8031515Z" end-time="2022-01-16T22:25:19.8039376Z" duration="0.000786" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 GMT-5', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z01]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T17:00:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 GMT-5', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [z01]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2047" name="function-tomillis.parseDateTime[46]" fullname="Jsonata.Net.Native.TestSuite.Tests.function-tomillis.parseDateTime[46]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1768973629" result="Failed" label="Error" start-time="2022-01-16T22:25:19.8046591Z" end-time="2022-01-16T22:25:19.8054222Z" duration="0.000763" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$toMillis('2020-09-09 12:00:00 +0530', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z0001]') ~&gt; $fromMillis() ';&#xA; result: &quot;2020-09-09T06:30:00Z&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T1006: Attempted to invoke a non-function 'undefined' got from '$toMillis']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 425
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 309
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Description: 'should parse a date containing timezones'
Expr is '$toMillis('2020-09-09 12:00:00 +0530', '[Y0001]-[M01]-[D01] [H01]:[m01]:[s01] [Z0001]') ~> $fromMillis() '
]]></output>
                </test-case>
                <test-case id="0-2048" name="function-trim.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1459736077" result="Passed" start-time="2022-01-16T22:25:19.8060015Z" end-time="2022-01-16T22:25:19.8061751Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim(&quot;Hello World&quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$trim("Hello World")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-2049" name="function-trim.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="572556143" result="Passed" start-time="2022-01-16T22:25:19.8067918Z" end-time="2022-01-16T22:25:19.8069131Z" duration="0.000121" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim(&quot;   Hello  &#xA;  &#x9; World  &#x9; &quot;)';&#xA; result: &quot;Hello World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$trim("   Hello  
  	 World  	 ")'
Result: '"Hello World"'
Expected: '"Hello World"'
]]></output>
                </test-case>
                <test-case id="0-2050" name="function-trim.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-trim.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1194273245" result="Passed" start-time="2022-01-16T22:25:19.8074574Z" end-time="2022-01-16T22:25:19.8076192Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$trim()';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$trim()'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2051" name="function-typeOf.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="586704560" result="Passed" start-time="2022-01-16T22:25:19.8076832Z" end-time="2022-01-16T22:25:19.8079987Z" duration="0.000315" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= undefined; $type($var))';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= undefined; $type($var))'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2052" name="function-typeOf.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="434927418" result="Passed" start-time="2022-01-16T22:25:19.8080104Z" end-time="2022-01-16T22:25:19.8081034Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= null; $type($var))';&#xA; result: &quot;null&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= null; $type($var))'
Result: '"null"'
Expected: '"null"'
]]></output>
                </test-case>
                <test-case id="0-2053" name="function-typeOf.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1240861577" result="Passed" start-time="2022-01-16T22:25:19.8081116Z" end-time="2022-01-16T22:25:19.8084623Z" duration="0.000350" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= 123; $type($var))';&#xA; result: &quot;number&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= 123; $type($var))'
Result: '"number"'
Expected: '"number"'
]]></output>
                </test-case>
                <test-case id="0-2054" name="function-typeOf.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="770882978" result="Passed" start-time="2022-01-16T22:25:19.8085444Z" end-time="2022-01-16T22:25:19.8086878Z" duration="0.000143" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= '123'; $type($var))';&#xA; result: &quot;string&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= '123'; $type($var))'
Result: '"string"'
Expected: '"string"'
]]></output>
                </test-case>
                <test-case id="0-2055" name="function-typeOf.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="849726634" result="Passed" start-time="2022-01-16T22:25:19.8098606Z" end-time="2022-01-16T22:25:19.8100085Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= true; $type($var))';&#xA; result: &quot;boolean&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= true; $type($var))'
Result: '"boolean"'
Expected: '"boolean"'
]]></output>
                </test-case>
                <test-case id="0-2056" name="function-typeOf.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1684254276" result="Passed" start-time="2022-01-16T22:25:19.8120232Z" end-time="2022-01-16T22:25:19.8122967Z" duration="0.000273" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= 'true'; $type($var))';&#xA; result: &quot;string&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= 'true'; $type($var))'
Result: '"string"'
Expected: '"string"'
]]></output>
                </test-case>
                <test-case id="0-2057" name="function-typeOf.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="51255009" result="Passed" start-time="2022-01-16T22:25:19.8133665Z" end-time="2022-01-16T22:25:19.8136144Z" duration="0.000248" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= []; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= []; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2058" name="function-typeOf.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1541445092" result="Passed" start-time="2022-01-16T22:25:19.8137765Z" end-time="2022-01-16T22:25:19.8140267Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= ['a']; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= ['a']; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2059" name="function-typeOf.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1028364290" result="Passed" start-time="2022-01-16T22:25:19.8147177Z" end-time="2022-01-16T22:25:19.8148602Z" duration="0.000142" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= ['a','b']; $type($var))';&#xA; result: &quot;array&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= ['a','b']; $type($var))'
Result: '"array"'
Expected: '"array"'
]]></output>
                </test-case>
                <test-case id="0-2060" name="function-typeOf.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="521936743" result="Passed" start-time="2022-01-16T22:25:19.8152336Z" end-time="2022-01-16T22:25:19.8153257Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= function(){true}; $type($var))';&#xA; result: &quot;function&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= function(){true}; $type($var))'
Result: '"function"'
Expected: '"function"'
]]></output>
                </test-case>
                <test-case id="0-2061" name="function-typeOf.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="814132240" result="Passed" start-time="2022-01-16T22:25:19.8153365Z" end-time="2022-01-16T22:25:19.8155801Z" duration="0.000244" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= (λ($v, $i, $a) {$v.price = $max($a.price)}); $type($var))';&#xA; result: &quot;function&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= (λ($v, $i, $a) {$v.price = $max($a.price)}); $type($var))'
Result: '"function"'
Expected: '"function"'
]]></output>
                </test-case>
                <test-case id="0-2062" name="function-typeOf.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="385381746" result="Passed" start-time="2022-01-16T22:25:19.8157302Z" end-time="2022-01-16T22:25:19.8159557Z" duration="0.000225" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= {}; $type($var))';&#xA; result: &quot;object&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= {}; $type($var))'
Result: '"object"'
Expected: '"object"'
]]></output>
                </test-case>
                <test-case id="0-2063" name="function-typeOf.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.function-typeOf.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1572628227" result="Passed" start-time="2022-01-16T22:25:19.8159674Z" end-time="2022-01-16T22:25:19.8163768Z" duration="0.000410" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($var:= {&quot;foo&quot;:&quot;bar&quot;}; $type($var))';&#xA; result: &quot;object&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($var:= {"foo":"bar"}; $type($var))'
Result: '"object"'
Expected: '"object"'
]]></output>
                </test-case>
                <test-case id="0-2064" name="function-uppercase.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1712241499" result="Passed" start-time="2022-01-16T22:25:19.8163886Z" end-time="2022-01-16T22:25:19.8164930Z" duration="0.000104" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello World&quot;)';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello World")'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-2065" name="function-uppercase.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-uppercase.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1578154995" result="Passed" start-time="2022-01-16T22:25:19.8165039Z" end-time="2022-01-16T22:25:19.8169499Z" duration="0.000446" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(blah)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(blah)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2066" name="function-zip.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="865596110" result="Passed" start-time="2022-01-16T22:25:19.8171220Z" end-time="2022-01-16T22:25:19.8193127Z" duration="0.002191" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5,6])';&#xA; result: [[1,4],[2,5],[3,6]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5,6])'
Result: '[[1,4],[2,5],[3,6]]'
Expected: '[[1,4],[2,5],[3,6]]'
]]></output>
                </test-case>
                <test-case id="0-2067" name="function-zip.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="931344332" result="Passed" start-time="2022-01-16T22:25:19.8196967Z" end-time="2022-01-16T22:25:19.8198243Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5,6],[7,8,9])';&#xA; result: [[1,4,7],[2,5,8],[3,6,9]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5,6],[7,8,9])'
Result: '[[1,4,7],[2,5,8],[3,6,9]]'
Expected: '[[1,4,7],[2,5,8],[3,6,9]]'
]]></output>
                </test-case>
                <test-case id="0-2068" name="function-zip.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="323439322" result="Passed" start-time="2022-01-16T22:25:19.8198355Z" end-time="2022-01-16T22:25:19.8199237Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3],[4,5],[7,8,9])';&#xA; result: [[1,4,7],[2,5,8]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3],[4,5],[7,8,9])'
Result: '[[1,4,7],[2,5,8]]'
Expected: '[[1,4,7],[2,5,8]]'
]]></output>
                </test-case>
                <test-case id="0-2069" name="function-zip.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1672952994" result="Passed" start-time="2022-01-16T22:25:19.8199318Z" end-time="2022-01-16T22:25:19.8202373Z" duration="0.000306" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3])';&#xA; result: [[1],[2],[3]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3])'
Result: '[[1],[2],[3]]'
Expected: '[[1],[2],[3]]'
]]></output>
                </test-case>
                <test-case id="0-2070" name="function-zip.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1099257328" result="Passed" start-time="2022-01-16T22:25:19.8206820Z" end-time="2022-01-16T22:25:19.8207831Z" duration="0.000101" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip(1,2,3)';&#xA; result: [[1,2,3]]" />
                  </properties>
                  <output><![CDATA[Expr is '$zip(1,2,3)'
Result: '[[1,2,3]]'
Expected: '[[1,2,3]]'
]]></output>
                </test-case>
                <test-case id="0-2071" name="function-zip.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.function-zip.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1563578756" result="Passed" start-time="2022-01-16T22:25:19.8207991Z" end-time="2022-01-16T22:25:19.8209730Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$zip([1,2,3], [4,5,6], nothing)';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '$zip([1,2,3], [4,5,6], nothing)'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2072" name="higher-order-functions.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1911985492" result="Passed" start-time="2022-01-16T22:25:19.8211979Z" end-time="2022-01-16T22:25:19.8213527Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($twice:=function($f){function($x){$f($f($x))}}; $add3:=function($y){$y+3}; $add6:=$twice($add3); $add6(7))';&#xA; result: 13" />
                  </properties>
                  <output><![CDATA[Expr is '($twice:=function($f){function($x){$f($f($x))}}; $add3:=function($y){$y+3}; $add6:=$twice($add3); $add6(7))'
Result: '13'
Expected: '13'
]]></output>
                </test-case>
                <test-case id="0-2073" name="higher-order-functions.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2063966386" result="Passed" start-time="2022-01-16T22:25:19.8213645Z" end-time="2022-01-16T22:25:19.8218496Z" duration="0.000485" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n &lt; 2 ? 1 : $n * $f($n - 1) } })(6)';&#xA; result: 720" />
                  </properties>
                  <output><![CDATA[Expr is 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n < 2 ? 1 : $n * $f($n - 1) } })(6)'
Result: '720'
Expected: '720'
]]></output>
                </test-case>
                <test-case id="0-2074" name="higher-order-functions.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.higher-order-functions.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2100956726" result="Passed" start-time="2022-01-16T22:25:19.8219063Z" end-time="2022-01-16T22:25:19.8225665Z" duration="0.000660" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n &lt;= 1 ? $n : $f($n-1) + $f($n-2) } })(6) ';&#xA; result: 8" />
                  </properties>
                  <output><![CDATA[Expr is 'λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n <= 1 ? $n : $f($n-1) + $f($n-2) } })(6) '
Result: '8'
Expected: '8'
]]></output>
                </test-case>
                <test-case id="0-2075" name="hof-filter.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1842448150" result="Passed" start-time="2022-01-16T22:25:19.8236077Z" end-time="2022-01-16T22:25:19.8245236Z" duration="0.000916" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(library.books~&gt;$filter(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn';&#xA; result: &quot;9780262510875&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(library.books~>$filter(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn'
Result: '"9780262510875"'
Expected: '"9780262510875"'
]]></output>
                </test-case>
                <test-case id="0-2076" name="hof-filter.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="313131597" result="Passed" start-time="2022-01-16T22:25:19.8252598Z" end-time="2022-01-16T22:25:19.8255517Z" duration="0.000290" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing~&gt;$filter(λ($v, $i, $a) {$v.price = $max($a.price)})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing~>$filter(λ($v, $i, $a) {$v.price = $max($a.price)})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2077" name="hof-filter.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1002881710" result="Passed" start-time="2022-01-16T22:25:19.8255644Z" end-time="2022-01-16T22:25:19.8257434Z" duration="0.000179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter(data, function($d) { true })';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$filter(data, function($d) { true })'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2078" name="hof-filter.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-filter.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="981893165" result="Passed" start-time="2022-01-16T22:25:19.8259897Z" end-time="2022-01-16T22:25:19.8261265Z" duration="0.000137" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$filter([0, 1, 2], $boolean)';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$filter([0, 1, 2], $boolean)'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2079" name="hof-map.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1016460751" result="Passed" start-time="2022-01-16T22:25:19.8261721Z" end-time="2022-01-16T22:25:19.8264697Z" duration="0.000298" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($data.one, $add) )  ';&#xA; result: [1,4,9,16,25]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($data.one, $add) )  '
Result: '[1,4,9,16,25]'
Expected: '[1,4,9,16,25]'
]]></output>
                </test-case>
                <test-case id="0-2080" name="hof-map.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="33203895" result="Passed" start-time="2022-01-16T22:25:19.8265376Z" end-time="2022-01-16T22:25:19.8274061Z" duration="0.000868" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($add) )  ';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($add) )  '
]]></output>
                </test-case>
                <test-case id="0-2081" name="hof-map.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="549783327" result="Failed" label="Error" start-time="2022-01-16T22:25:19.8274224Z" end-time="2022-01-16T22:25:19.8298350Z" duration="0.002413" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$map([1,2,3], $string)';&#xA; result: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T0410: Argument 2 ('prettify') of function string should be Boolean bun incompatible value of type Integer was specified]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.ConvertFunctionArg(String functionName, Int32 parameterIndex, JToken argToken, ParameterInfo parameterInfo, Boolean& returnUndefined) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 310
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.BindFunctionArguments(String functionName, ParameterInfo[] parameterList, List`1 args, Environment env, Boolean& returnUndefined) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 21
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.BuiltinFunctions.map(JArray array, FunctionToken function) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 1834
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$map([1,2,3], $string)'
]]></output>
                </test-case>
                <test-case id="0-2082" name="hof-map.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2073766896" result="Passed" start-time="2022-01-16T22:25:19.8298546Z" end-time="2022-01-16T22:25:19.8303297Z" duration="0.000475" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product ~&gt; $map(λ($prod, $index) { $index+1 &amp; &quot;: &quot; &amp; $prod.&quot;Product Name&quot; })';&#xA; result: [&quot;1: Bowler Hat&quot;,&quot;2: Trilby hat&quot;,&quot;3: Bowler Hat&quot;,&quot;4: Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product ~> $map(λ($prod, $index) { $index+1 & ": " & $prod."Product Name" })'
Result: '["1: Bowler Hat","2: Trilby hat","3: Bowler Hat","4: Cloak"]'
Expected: '["1: Bowler Hat","2: Trilby hat","3: Bowler Hat","4: Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2083" name="hof-map.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1955485049" result="Passed" start-time="2022-01-16T22:25:19.8303644Z" end-time="2022-01-16T22:25:19.8309543Z" duration="0.000590" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product ~&gt; $map(λ($prod, $index, $arr) { $index+1 &amp; &quot;/&quot; &amp; $count($arr) &amp; &quot;: &quot; &amp; $prod.&quot;Product Name&quot; })';&#xA; result: [&quot;1/4: Bowler Hat&quot;,&quot;2/4: Trilby hat&quot;,&quot;3/4: Bowler Hat&quot;,&quot;4/4: Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product ~> $map(λ($prod, $index, $arr) { $index+1 & "/" & $count($arr) & ": " & $prod."Product Name" })'
Result: '["1/4: Bowler Hat","2/4: Trilby hat","3/4: Bowler Hat","4/4: Cloak"]'
Expected: '["1/4: Bowler Hat","2/4: Trilby hat","3/4: Bowler Hat","4/4: Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2084" name="hof-map.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1651096837" result="Passed" start-time="2022-01-16T22:25:19.8310524Z" end-time="2022-01-16T22:25:19.8311982Z" duration="0.000146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$i[$v.type=&quot;office&quot;]})';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$i[$v.type="office"]})'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2085" name="hof-map.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="185119962" result="Passed" start-time="2022-01-16T22:25:19.8312064Z" end-time="2022-01-16T22:25:19.8313615Z" duration="0.000155" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i})';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i})'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2086" name="hof-map.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1968813296" result="Passed" start-time="2022-01-16T22:25:19.8313694Z" end-time="2022-01-16T22:25:19.8318542Z" duration="0.000485" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i: null})';&#xA; result: [null,1,2,null]" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i: null})'
Result: '[null,1,2,null]'
Expected: '[null,1,2,null]'
]]></output>
                </test-case>
                <test-case id="0-2087" name="hof-map.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="394105798" result="Passed" start-time="2022-01-16T22:25:19.8320694Z" end-time="2022-01-16T22:25:19.8321992Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map(Phone, function($v, $i) {$v.type=&quot;office&quot; ? $i: null})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$map(Phone, function($v, $i) {$v.type="office" ? $i: null})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2088" name="hof-map.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-map.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="734383258" result="Passed" start-time="2022-01-16T22:25:19.8323933Z" end-time="2022-01-16T22:25:19.8325237Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map([0, 1, 2], $boolean)';&#xA; result: [false,true,true]" />
                  </properties>
                  <output><![CDATA[Expr is '$map([0, 1, 2], $boolean)'
Result: '[false,true,true]'
Expected: '[false,true,true]'
]]></output>
                </test-case>
                <test-case id="0-2089" name="hof-reduce.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1556003212" result="Passed" start-time="2022-01-16T22:25:19.8332078Z" end-time="2022-01-16T22:25:19.8335329Z" duration="0.000325" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y})) ';&#xA; result: 15" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y})) '
Result: '15'
Expected: '15'
]]></output>
                </test-case>
                <test-case id="0-2090" name="hof-reduce.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1914486321" result="Passed" start-time="2022-01-16T22:25:19.8335492Z" end-time="2022-01-16T22:25:19.8337240Z" duration="0.000175" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $concat := function($s){function($a, $b){$string($a) &amp; $s &amp; $string($b)}};  $comma_join := $concat(' ... ');  $reduce([1,2,3,4,5], $comma_join))      ';&#xA; result: &quot;1 ... 2 ... 3 ... 4 ... 5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $concat := function($s){function($a, $b){$string($a) & $s & $string($b)}};  $comma_join := $concat(' ... ');  $reduce([1,2,3,4,5], $comma_join))      '
Result: '"1 ... 2 ... 3 ... 4 ... 5"'
Expected: '"1 ... 2 ... 3 ... 4 ... 5"'
]]></output>
                </test-case>
                <test-case id="0-2091" name="hof-reduce.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="942860705" result="Passed" start-time="2022-01-16T22:25:19.8337327Z" end-time="2022-01-16T22:25:19.8338263Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y}, 2))';&#xA; result: 17" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y}, 2))'
Result: '17'
Expected: '17'
]]></output>
                </test-case>
                <test-case id="0-2092" name="hof-reduce.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="373470629" result="Passed" start-time="2022-01-16T22:25:19.8338725Z" end-time="2022-01-16T22:25:19.8340744Z" duration="0.000202" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-2093" name="hof-reduce.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="348941875" result="Passed" start-time="2022-01-16T22:25:19.8340832Z" end-time="2022-01-16T22:25:19.8341810Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))';&#xA; result: 1" />
                  </properties>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))'
Result: '1'
Expected: '1'
]]></output>
                </test-case>
                <test-case id="0-2094" name="hof-reduce.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1686120513" result="Passed" start-time="2022-01-16T22:25:19.8342151Z" end-time="2022-01-16T22:25:19.8349130Z" duration="0.000698" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reduce(Account.Order.Product.Quantity, $append)';&#xA; result: [2,1,4,1]" />
                  </properties>
                  <output><![CDATA[Expr is '$reduce(Account.Order.Product.Quantity, $append)'
Result: '[2,1,4,1]'
Expected: '[2,1,4,1]'
]]></output>
                </test-case>
                <test-case id="0-2095" name="hof-reduce.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1594896552" result="Passed" start-time="2022-01-16T22:25:19.8361362Z" end-time="2022-01-16T22:25:19.8364121Z" duration="0.000275" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$reduce(Account.Order.Product.Quantity, $append)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$reduce(Account.Order.Product.Quantity, $append)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2096" name="hof-reduce.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="968911435" result="Passed" start-time="2022-01-16T22:25:19.8372133Z" end-time="2022-01-16T22:25:19.8377778Z" duration="0.000565" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($product := function($a, $b) { $a * $b };$power := function($x, $n) { $n = 0 ? 1 : $reduce([1..$n].($x), $product) };[0..5].$power(2, $))';&#xA; result: [1,2,4,8,16,32]" />
                  </properties>
                  <output><![CDATA[Expr is '($product := function($a, $b) { $a * $b };$power := function($x, $n) { $n = 0 ? 1 : $reduce([1..$n].($x), $product) };[0..5].$power(2, $))'
Result: '[1,2,4,8,16,32]'
Expected: '[1,2,4,8,16,32]'
]]></output>
                </test-case>
                <test-case id="0-2097" name="hof-reduce.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="680455939" result="Passed" start-time="2022-01-16T22:25:19.8395639Z" end-time="2022-01-16T22:25:19.8409927Z" duration="0.001428" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $seq := 1;  $reduce($seq, function($x){$x}))';&#xA; result: error D3050" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3050]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(  $seq := 1;  $reduce($seq, function($x){$x}))'
]]></output>
                </test-case>
                <test-case id="0-2098" name="hof-reduce.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1478332652" result="Passed" start-time="2022-01-16T22:25:19.8410129Z" end-time="2022-01-16T22:25:19.8415572Z" duration="0.000545" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(&#xA; $months := [&#xA;        &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;,&#xA;        &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;&#xA; ];&#xA; $indexof := λ($array, $value) {&#xA;  $reduce($array, λ($acc, $v, $i) {&#xA;   $v=$value ? $i : $acc&#xA;  })&#xA; };&#xA; $indexof($months, 'May')&#xA;)&#xA;';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '(
 $months := [
        "Jan", "Feb", "Mar", "Apr", "May", "Jun",
        "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
 ];
 $indexof := λ($array, $value) {
  $reduce($array, λ($acc, $v, $i) {
   $v=$value ? $i : $acc
  })
 };
 $indexof($months, 'May')
)
'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-2099" name="hof-reduce.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-reduce.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="676995429" result="Passed" start-time="2022-01-16T22:25:19.8415895Z" end-time="2022-01-16T22:25:19.8424000Z" duration="0.000811" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(&#xA;  $mean := $reduce(?, λ($acc, $v, $i, $arr) {(&#xA;    $total := $acc + $v;&#xA;    $length := $count($arr);&#xA;    $i = $length - 1 ? $total / $length : $total&#xA;  )});&#xA;&#xA;  $mean([7,3,8])&#xA;)&#xA;';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(
  $mean := $reduce(?, λ($acc, $v, $i, $arr) {(
    $total := $acc + $v;
    $length := $count($arr);
    $i = $length - 1 ? $total / $length : $total
  )});

  $mean([7,3,8])
)
'
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2100" name="hof-single.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1021504320" result="Passed" start-time="2022-01-16T22:25:19.8425733Z" end-time="2022-01-16T22:25:19.8442306Z" duration="0.001658" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(library.books~&gt;$single(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn';&#xA; result: &quot;9780262510875&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(library.books~>$single(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn'
Result: '"9780262510875"'
Expected: '"9780262510875"'
]]></output>
                </test-case>
                <test-case id="0-2101" name="hof-single.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="333715304" result="Passed" start-time="2022-01-16T22:25:19.8463862Z" end-time="2022-01-16T22:25:19.8465806Z" duration="0.000194" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing~&gt;$single(λ($v, $i, $a) {$v.price = $max($a.price)})';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing~>$single(λ($v, $i, $a) {$v.price = $max($a.price)})'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2102" name="hof-single.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1445534307" result="Passed" start-time="2022-01-16T22:25:19.8475122Z" end-time="2022-01-16T22:25:19.8476836Z" duration="0.000171" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single(data, function($d) { true })';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$single(data, function($d) { true })'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2103" name="hof-single.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1934266730" result="Passed" start-time="2022-01-16T22:25:19.8482177Z" end-time="2022-01-16T22:25:19.8493104Z" duration="0.001093" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2], $boolean)';&#xA; result: error D3138" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3138]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2], $boolean)'
]]></output>
                </test-case>
                <test-case id="0-2104" name="hof-single.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1620782462" result="Passed" start-time="2022-01-16T22:25:19.8493300Z" end-time="2022-01-16T22:25:19.8500633Z" duration="0.000734" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2], function($v) {$v = 3})';&#xA; result: error D3139" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3139]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2], function($v) {$v = 3})'
]]></output>
                </test-case>
                <test-case id="0-2105" name="hof-single.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1778178136" result="Passed" start-time="2022-01-16T22:25:19.8505182Z" end-time="2022-01-16T22:25:19.8513435Z" duration="0.000825" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([0, 1, 2])';&#xA; result: error D3138" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3138]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([0, 1, 2])'
]]></output>
                </test-case>
                <test-case id="0-2106" name="hof-single.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="822202715" result="Passed" start-time="2022-01-16T22:25:19.8513589Z" end-time="2022-01-16T22:25:19.8514923Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single([0])';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$single([0])'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-2107" name="hof-single.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="518444679" result="Passed" start-time="2022-01-16T22:25:19.8515029Z" end-time="2022-01-16T22:25:19.8528396Z" duration="0.001337" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$single([])';&#xA; result: error D3139" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3139]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$single([])'
]]></output>
                </test-case>
                <test-case id="0-2108" name="hof-single.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1287388498" result="Passed" start-time="2022-01-16T22:25:19.8533591Z" end-time="2022-01-16T22:25:19.8535692Z" duration="0.000210" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single([true, false, true], function($v) {$v=false})';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$single([true, false, true], function($v) {$v=false})'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2109" name="hof-single.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1075918475" result="Passed" start-time="2022-01-16T22:25:19.8536251Z" end-time="2022-01-16T22:25:19.8537419Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$single(['zero', 'one', 'two'], function($v, $i, $k) {$i=1})';&#xA; result: &quot;one&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$single(['zero', 'one', 'two'], function($v, $i, $k) {$i=1})'
Result: '"one"'
Expected: '"one"'
]]></output>
                </test-case>
                <test-case id="0-2110" name="hof-single.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-single.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="536595037" result="Passed" start-time="2022-01-16T22:25:19.8541165Z" end-time="2022-01-16T22:25:19.8545424Z" duration="0.000426" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone ~&gt; $filter(function($p) {$p.type = 'home'}) ~&gt; $single(function($p) {$p.number = '0203 544 1234'})';&#xA; result: {&quot;type&quot;:&quot;home&quot;,&quot;number&quot;:&quot;0203 544 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone ~> $filter(function($p) {$p.type = 'home'}) ~> $single(function($p) {$p.number = '0203 544 1234'})'
Result: '{"type":"home","number":"0203 544 1234"}'
Expected: '{"type":"home","number":"0203 544 1234"}'
]]></output>
                </test-case>
                <test-case id="0-2111" name="hof-zip-map.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="681372566" result="Passed" start-time="2022-01-16T22:25:19.8548256Z" end-time="2022-01-16T22:25:19.8552579Z" duration="0.000418" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $map($zip($data.one, $data.two), $sum)) ';&#xA; result: [6,6,6,6,6]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $map($zip($data.one, $data.two), $sum)) '
Result: '[6,6,6,6,6]'
Expected: '[6,6,6,6,6]'
]]></output>
                </test-case>
                <test-case id="0-2112" name="hof-zip-map.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1216845491" result="Passed" start-time="2022-01-16T22:25:19.8555676Z" end-time="2022-01-16T22:25:19.8557206Z" duration="0.000153" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1,2,3,4,5],    &quot;two&quot;: [5,4,3,2,1]  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: [6,6,6,6,6]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '[6,6,6,6,6]'
Expected: '[6,6,6,6,6]'
]]></output>
                </test-case>
                <test-case id="0-2113" name="hof-zip-map.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="524984341" result="Passed" start-time="2022-01-16T22:25:19.8567760Z" end-time="2022-01-16T22:25:19.8569656Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: [1],    &quot;two&quot;: [5]  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": [1],    "two": [5]  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2114" name="hof-zip-map.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.hof-zip-map.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="995160395" result="Passed" start-time="2022-01-16T22:25:19.8578081Z" end-time="2022-01-16T22:25:19.8579744Z" duration="0.000167" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $data := {    &quot;one&quot;: 1,    &quot;two&quot;: 5  };  $data.$zip(one, two) ~&gt; $map($sum)) ';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $data := {    "one": 1,    "two": 5  };  $data.$zip(one, two) ~> $map($sum)) '
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2115" name="inclusion-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2119637063" result="Passed" start-time="2022-01-16T22:25:19.8583611Z" end-time="2022-01-16T22:25:19.8584526Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1 in [1,2]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '1 in [1,2]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2116" name="inclusion-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="887848991" result="Passed" start-time="2022-01-16T22:25:19.8592175Z" end-time="2022-01-16T22:25:19.8593108Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3 in [1,2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '3 in [1,2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2117" name="inclusion-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="577380344" result="Passed" start-time="2022-01-16T22:25:19.8604543Z" end-time="2022-01-16T22:25:19.8606212Z" duration="0.000167" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; in [1,2]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" in [1,2]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2118" name="inclusion-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2069015037" result="Passed" start-time="2022-01-16T22:25:19.8650074Z" end-time="2022-01-16T22:25:19.8651855Z" duration="0.000178" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;world&quot; in [&quot;hello&quot;, &quot;world&quot;]';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"world" in ["hello", "world"]'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2119" name="inclusion-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1527121537" result="Passed" start-time="2022-01-16T22:25:19.8657352Z" end-time="2022-01-16T22:25:19.8658695Z" duration="0.000134" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'in in [&quot;hello&quot;, &quot;world&quot;]';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'in in ["hello", "world"]'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2120" name="inclusion-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1756825346" result="Passed" start-time="2022-01-16T22:25:19.8664047Z" end-time="2022-01-16T22:25:19.8666028Z" duration="0.000198" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;world&quot; in in';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '"world" in in'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2121" name="inclusion-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="471490312" result="Passed" start-time="2022-01-16T22:25:19.8676850Z" end-time="2022-01-16T22:25:19.8678039Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot; in &quot;hello&quot;';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '"hello" in "hello"'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2122" name="inclusion-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="196961074" result="Passed" start-time="2022-01-16T22:25:19.8683258Z" end-time="2022-01-16T22:25:19.8687282Z" duration="0.000402" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'library.books[&quot;Aho&quot; in authors].title';&#xA; result: [&quot;The AWK Programming Language&quot;,&quot;Compilers: Principles, Techniques, and Tools&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'library.books["Aho" in authors].title'
Result: '["The AWK Programming Language","Compilers: Principles, Techniques, and Tools"]'
Expected: '["The AWK Programming Language","Compilers: Principles, Techniques, and Tools"]'
]]></output>
                </test-case>
                <test-case id="0-2123" name="inclusion-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.inclusion-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="914919757" result="Passed" start-time="2022-01-16T22:25:19.8693235Z" end-time="2022-01-16T22:25:19.8694823Z" duration="0.000159" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'content.integration.$lowercase(name)';&#xA; result: &quot;fakeintegrationname&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'content.integration.$lowercase(name)'
Result: '"fakeintegrationname"'
Expected: '"fakeintegrationname"'
]]></output>
                </test-case>
                <test-case id="0-2124" name="joins.employee-map-reduce[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1905950320" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8700495Z" end-time="2022-01-16T22:25:19.8708006Z" duration="0.000751" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.(Contact)[ssn = $e.SSN].{ 'name': $e.(FirstName &amp; ' ' &amp; Surname), 'phone': Phone[type='mobile'].number }';&#xA; result: [{&quot;name&quot;:&quot;Fred Smith&quot;,&quot;phone&quot;:&quot;077 7700 1234&quot;},{&quot;name&quot;:&quot;Darren Cruse&quot;,&quot;phone&quot;:&quot;315 782 9279&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;},{&quot;name&quot;:&quot;Hugh Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.(Contact)[ssn = $e.SSN].{ 'name': $e.(FirstName & ' ' & Surname), 'phone': Phone[type='mobile'].number }'
]]></output>
                </test-case>
                <test-case id="0-2125" name="joins.employee-map-reduce[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="156396623" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8708178Z" end-time="2022-01-16T22:25:19.8711664Z" duration="0.000349" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.(Contact)[ssn = $e.SSN]{ $e.FirstName: Phone[type='mobile'].number }';&#xA; result: {&quot;Fred&quot;:&quot;077 7700 1234&quot;,&quot;Darren&quot;:&quot;315 782 9279&quot;,&quot;Hugh&quot;:&quot;07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.(Contact)[ssn = $e.SSN]{ $e.FirstName: Phone[type='mobile'].number }'
]]></output>
                </test-case>
                <test-case id="0-2126" name="joins.employee-map-reduce[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1190108127" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8734477Z" end-time="2022-01-16T22:25:19.8740176Z" duration="0.000570" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $join($c.Phone.number, ', ') }';&#xA; result: {&quot;Fred Smith&quot;:&quot;0203 544 1234, 01962 001234, 077 7700 1234&quot;,&quot;Darren Cruse&quot;:&quot;3146458343, 315 782 9279&quot;,&quot;Hugh Jones&quot;:&quot;0280 564 6543, 0280 864 8643, 07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $join($c.Phone.number, ', ') }'
]]></output>
                </test-case>
                <test-case id="0-2127" name="joins.employee-map-reduce[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1563043617" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8805449Z" end-time="2022-01-16T22:25:19.8811408Z" duration="0.000596" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number ~&gt; $join(', ') }';&#xA; result: {&quot;Fred Smith&quot;:&quot;01962 001234, 077 7700 1234&quot;,&quot;Darren Cruse&quot;:&quot;315 782 9279&quot;,&quot;Hugh Jones&quot;:&quot;0280 864 8643, 07735 853535&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number ~> $join(', ') }'
]]></output>
                </test-case>
                <test-case id="0-2128" name="joins.employee-map-reduce[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="377845873" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8825222Z" end-time="2022-01-16T22:25:19.8832090Z" duration="0.000686" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number }';&#xA; result: {&quot;Fred Smith&quot;:[&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren Cruse&quot;:&quot;315 782 9279&quot;,&quot;Hugh Jones&quot;:[&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number }'
]]></output>
                </test-case>
                <test-case id="0-2129" name="joins.employee-map-reduce[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="506060174" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8832301Z" end-time="2022-01-16T22:25:19.8835869Z" duration="0.000357" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName &amp; ' ' &amp; Surname): $c.Phone[type != 'home'].number[] }';&#xA; result: {&quot;Fred Smith&quot;:[&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren Cruse&quot;:[&quot;315 782 9279&quot;],&quot;Hugh Jones&quot;:[&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.(FirstName & ' ' & Surname): $c.Phone[type != 'home'].number[] }'
]]></output>
                </test-case>
                <test-case id="0-2130" name="joins.employee-map-reduce[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="873536715" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8847962Z" end-time="2022-01-16T22:25:19.8854911Z" duration="0.000694" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.FirstName: $c.Phone.number }';&#xA; result: {&quot;Fred&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;],&quot;Darren&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;],&quot;Hugh&quot;:[&quot;0280 564 6543&quot;,&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$c.ssn = $e.SSN]{ $e.FirstName: $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2131" name="joins.employee-map-reduce[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1780159305" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8862642Z" end-time="2022-01-16T22:25:19.8871837Z" duration="0.000920" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e^($e.Surname).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }';&#xA; result: [{&quot;name&quot;:&quot;Cruse&quot;,&quot;phone&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;]},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 564 6543&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 864 8643&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;},{&quot;name&quot;:&quot;Smith&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e^($e.Surname).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2132" name="joins.employee-map-reduce[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1672032705" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8872033Z" end-time="2022-01-16T22:25:19.8879347Z" duration="0.000732" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e^($e.FirstName).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }';&#xA; result: [{&quot;name&quot;:&quot;Cruse&quot;,&quot;phone&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;]},{&quot;name&quot;:&quot;Smith&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;077 7700 1234&quot;]},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 564 6543&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;0280 864 8643&quot;},{&quot;name&quot;:&quot;Jones&quot;,&quot;phone&quot;:&quot;07735 853535&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e^($e.FirstName).Contact@$c[$e.SSN=$c.ssn].{ 'name': $e.Surname, 'phone': $c.Phone.number }'
]]></output>
                </test-case>
                <test-case id="0-2133" name="joins.employee-map-reduce[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="304897736" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8886308Z" end-time="2022-01-16T22:25:19.8896246Z" duration="0.000994" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^($) }';&#xA; result: {&quot;Smith&quot;:[&quot;01962 001234&quot;,&quot;0203 544 1234&quot;,&quot;077 7700 1234&quot;],&quot;Cruse&quot;:[&quot;3146458343&quot;,&quot;315 782 9279&quot;],&quot;Jones&quot;:[&quot;0280 564 6543&quot;,&quot;0280 864 8643&quot;,&quot;07735 853535&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^($) }'
]]></output>
                </test-case>
                <test-case id="0-2134" name="joins.employee-map-reduce[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2142440078" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8904070Z" end-time="2022-01-16T22:25:19.8917377Z" duration="0.001330" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^(&gt;$) }';&#xA; result: {&quot;Smith&quot;:[&quot;077 7700 1234&quot;,&quot;0203 544 1234&quot;,&quot;01962 001234&quot;],&quot;Cruse&quot;:[&quot;315 782 9279&quot;,&quot;3146458343&quot;],&quot;Jones&quot;:[&quot;07735 853535&quot;,&quot;0280 864 8643&quot;,&quot;0280 564 6543&quot;]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employee@$e.Contact@$c[$e.SSN=$c.ssn]{ $e.Surname: $c.Phone.number^(>$) }'
]]></output>
                </test-case>
                <test-case id="0-2135" name="joins.employee-map-reduce[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.employee-map-reduce[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1846972238" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8918886Z" end-time="2022-01-16T22:25:19.8924806Z" duration="0.000592" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$@$i';&#xA; result: [1,2,3]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$@$i'
]]></output>
                </test-case>
                <test-case id="0-2136" name="joins.errors[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1251732667" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8934813Z" end-time="2022-01-16T22:25:19.8949774Z" duration="0.001496" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order@o.Product';&#xA; result: error S0214" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order@o.Product'
]]></output>
                </test-case>
                <test-case id="0-2137" name="joins.errors[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="139500166" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8953435Z" end-time="2022-01-16T22:25:19.8960315Z" duration="0.000688" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order@$o#i.Product';&#xA; result: error S0214" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order@$o#i.Product'
]]></output>
                </test-case>
                <test-case id="0-2138" name="joins.errors[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="334702587" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8966715Z" end-time="2022-01-16T22:25:19.8972885Z" duration="0.000617" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order[1]@$o.Product';&#xA; result: error S0215" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 200
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 156
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order[1]@$o.Product'
]]></output>
                </test-case>
                <test-case id="0-2139" name="joins.errors[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.errors[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2020402348" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.8981307Z" end-time="2022-01-16T22:25:19.8997659Z" duration="0.001635" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order^(&gt;OrderID)@$o.Product.{ 'name':`Product Name`, 'orderid':$o.OrderID }';&#xA; result: error S0216" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 200
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 237
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order^(>OrderID)@$o.Product.{ 'name':`Product Name`, 'orderid':$o.OrderID }'
]]></output>
                </test-case>
                <test-case id="0-2140" name="joins.index[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1510400894" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9011283Z" end-time="2022-01-16T22:25:19.9021604Z" duration="0.001032" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]';&#xA; result: [3,1,4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]'
]]></output>
                </test-case>
                <test-case id="0-2141" name="joins.index[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1450368617" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9023318Z" end-time="2022-01-16T22:25:19.9039843Z" duration="0.001652" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3] = $[[0..2]]';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3] = $[[0..2]]'
]]></output>
                </test-case>
                <test-case id="0-2142" name="joins.index[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1254200947" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9050964Z" end-time="2022-01-16T22:25:19.9060041Z" duration="0.000908" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.$#$pos[$pos&lt;3]';&#xA; result: [3,1,4,1,5,9]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.$#$pos[$pos<3]'
]]></output>
                </test-case>
                <test-case id="0-2143" name="joins.index[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1805948430" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9061013Z" end-time="2022-01-16T22:25:19.9072587Z" duration="0.001158" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.$#$pos[$pos&lt;3] = $.$[[0..2]]';&#xA; result: true" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.$#$pos[$pos<3] = $.$[[0..2]]'
]]></output>
                </test-case>
                <test-case id="0-2144" name="joins.index[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1019408175" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9081815Z" end-time="2022-01-16T22:25:19.9092501Z" duration="0.001069" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)';&#xA; result: [1,3,4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)'
]]></output>
                </test-case>
                <test-case id="0-2145" name="joins.index[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1233113755" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9094520Z" end-time="2022-01-16T22:25:19.9115775Z" duration="0.002126" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^(&gt;$)';&#xA; result: [4,3,1]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^(>$)'
]]></output>
                </test-case>
                <test-case id="0-2146" name="joins.index[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1873498861" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9122824Z" end-time="2022-01-16T22:25:19.9135158Z" duration="0.001233" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$^($)#$pos[$pos&lt;3] ';&#xA; result: [1,1,3]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 200
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 237
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$^($)#$pos[$pos<3] '
]]></output>
                </test-case>
                <test-case id="0-2147" name="joins.index[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1995969935" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9145745Z" end-time="2022-01-16T22:25:19.9151828Z" duration="0.000608" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3][1]';&#xA; result: 1" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3][1]'
]]></output>
                </test-case>
                <test-case id="0-2148" name="joins.index[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1501265127" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9153642Z" end-time="2022-01-16T22:25:19.9166450Z" duration="0.001281" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3][1][]';&#xA; result: [1]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3][1][]'
]]></output>
                </test-case>
                <test-case id="0-2149" name="joins.index[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1713967097" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9176013Z" end-time="2022-01-16T22:25:19.9184073Z" duration="0.000806" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)[-1]';&#xA; result: 4" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)[-1]'
]]></output>
                </test-case>
                <test-case id="0-2150" name="joins.index[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="707047561" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9194331Z" end-time="2022-01-16T22:25:19.9203758Z" duration="0.000942" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[][$pos&lt;3]^($)[-1]';&#xA; result: [4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[][$pos<3]^($)[-1]'
]]></output>
                </test-case>
                <test-case id="0-2151" name="joins.index[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="391531091" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9207520Z" end-time="2022-01-16T22:25:19.9216434Z" duration="0.000892" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$#$pos[$pos&lt;3]^($)[-1][]';&#xA; result: [4]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 82
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 17
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$#$pos[$pos<3]^($)[-1][]'
]]></output>
                </test-case>
                <test-case id="0-2152" name="joins.index[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="758924549" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9224261Z" end-time="2022-01-16T22:25:19.9230585Z" duration="0.000632" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$[[1..4]]#$pos[$pos&gt;=2]';&#xA; result: [1,5]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.consume(TokenType expected, Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 200
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 156
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$[[1..4]]#$pos[$pos>=2]'
]]></output>
                </test-case>
                <test-case id="0-2153" name="joins.index[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2098694762" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9232862Z" end-time="2022-01-16T22:25:19.9241450Z" duration="0.000859" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$o.Product[ProductID=858383].{ 'Product': `Product Name`, 'Order Index': $o }';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:1}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$o.Product[ProductID=858383].{ 'Product': `Product Name`, 'Order Index': $o }'
]]></output>
                </test-case>
                <test-case id="0-2154" name="joins.index[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1067653730" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9247246Z" end-time="2022-01-16T22:25:19.9259173Z" duration="0.001193" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$i.Missing';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$i.Missing'
]]></output>
                </test-case>
                <test-case id="0-2155" name="joins.index[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.index[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="550014008" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9276020Z" end-time="2022-01-16T22:25:19.9282939Z" duration="0.000692" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$i.Product{ $string(ProductID): $i }';&#xA; result: {&quot;345664&quot;:1,&quot;858236&quot;:0,&quot;858383&quot;:[0,1]}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$i.Product{ $string(ProductID): $i }'
]]></output>
                </test-case>
                <test-case id="0-2156" name="joins.library-joins[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="136754230" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9290908Z" end-time="2022-01-16T22:25:19.9300390Z" duration="0.000948" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2157" name="joins.library-joins[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="530614550" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9309398Z" end-time="2022-01-16T22:25:19.9317973Z" duration="0.000858" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books[$l.isbn=isbn].{&#xA;  'title': title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books[$l.isbn=isbn].{
  'title': title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2158" name="joins.library-joins[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="28316410" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9320672Z" end-time="2022-01-16T22:25:19.9331960Z" duration="0.001129" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.books#$pos.$[$substring(title,0,3) = 'The'].$pos';&#xA; result: [1,2]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.books#$pos.$[$substring(title,0,3) = 'The'].$pos'
]]></output>
                </test-case>
                <test-case id="0-2159" name="joins.library-joins[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1464385839" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9358970Z" end-time="2022-01-16T22:25:19.9383089Z" duration="0.002416" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers[$l.customer=id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': name&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers[$l.customer=id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': name
}
'
]]></output>
                </test-case>
                <test-case id="0-2160" name="joins.library-joins[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="588070009" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9383436Z" end-time="2022-01-16T22:25:19.9412860Z" duration="0.002942" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers@$c[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn].customers@$c[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name
}
'
]]></output>
                </test-case>
                <test-case id="0-2161" name="joins.library-joins[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1406642745" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9413581Z" end-time="2022-01-16T22:25:19.9431881Z" duration="0.001830" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn].customers@$c#$ic[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name,&#xA;  'loan-index': $il,&#xA;  'book-index': $ib,&#xA;  'customer-index': $ic&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;,&quot;loan-index&quot;:0,&quot;book-index&quot;:0,&quot;customer-index&quot;:0},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:1,&quot;book-index&quot;:3,&quot;customer-index&quot;:2},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:2,&quot;book-index&quot;:0,&quot;customer-index&quot;:2}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn].customers@$c#$ic[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name,
  'loan-index': $il,
  'book-index': $ib,
  'customer-index': $ic
}
'
]]></output>
                </test-case>
                <test-case id="0-2162" name="joins.library-joins[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="140598806" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9448477Z" end-time="2022-01-16T22:25:19.9463097Z" duration="0.001462" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.customers#$ic[$il=$ic].{&#xA;  'customer': name,&#xA;  'return': $l.return&#xA;}&#xA;';&#xA; result: [{&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;return&quot;:&quot;2016-12-05&quot;},{&quot;customer&quot;:&quot;Fred Bloggs&quot;,&quot;return&quot;:&quot;2016-10-22&quot;},{&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;return&quot;:&quot;2016-12-22&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.customers#$ic[$il=$ic].{
  'customer': name,
  'return': $l.return
}
'
]]></output>
                </test-case>
                <test-case id="0-2163" name="joins.library-joins[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="781328324" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9463332Z" end-time="2022-01-16T22:25:19.9485964Z" duration="0.002263" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn]#$ib2.customers@$c#$ic[$l.customer=$c.id].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer,&#xA;  'name': $c.name,&#xA;  'loan-index': $il,&#xA;  'book-index': $ib,&#xA;  'customer-index': $ic,&#xA;  'ib2': $ib2&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10001&quot;,&quot;name&quot;:&quot;Joe Doe&quot;,&quot;loan-index&quot;:0,&quot;book-index&quot;:0,&quot;customer-index&quot;:0,&quot;ib2&quot;:0},{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:1,&quot;book-index&quot;:3,&quot;customer-index&quot;:2,&quot;ib2&quot;:1},{&quot;title&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;10003&quot;,&quot;name&quot;:&quot;Jason Arthur&quot;,&quot;loan-index&quot;:2,&quot;book-index&quot;:0,&quot;customer-index&quot;:2,&quot;ib2&quot;:2}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l#$il.books@$b#$ib[$l.isbn=$b.isbn]#$ib2.customers@$c#$ic[$l.customer=$c.id].{
  'title': $b.title,
  'customer': $l.customer,
  'name': $c.name,
  'loan-index': $il,
  'book-index': $ib,
  'customer-index': $ic,
  'ib2': $ib2
}
'
]]></output>
                </test-case>
                <test-case id="0-2164" name="joins.library-joins[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="202381760" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9510548Z" end-time="2022-01-16T22:25:19.9522445Z" duration="0.001189" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: {&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;}" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2165" name="joins.library-joins[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="903919379" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9533303Z" end-time="2022-01-16T22:25:19.9564586Z" duration="0.003128" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][5].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][5].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2166" name="joins.library-joins[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.joins.library-joins[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1156823508" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:19.9583661Z" end-time="2022-01-16T22:25:19.9598930Z" duration="0.001527" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1][].{&#xA;  'title': $b.title,&#xA;  'customer': $l.customer&#xA;}&#xA;';&#xA; result: [{&quot;title&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;10003&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$l.books@$b[$l.isbn=$b.isbn][1][].{
  'title': $b.title,
  'customer': $l.customer
}
'
]]></output>
                </test-case>
                <test-case id="0-2167" name="lambdas.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="911947755" result="Passed" start-time="2022-01-16T22:25:19.9606953Z" end-time="2022-01-16T22:25:19.9612360Z" duration="0.000413" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x*$x}(5)';&#xA; result: 25" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x*$x}(5)'
Result: '25'
Expected: '25'
]]></output>
                </test-case>
                <test-case id="0-2168" name="lambdas.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="530027910" result="Passed" start-time="2022-01-16T22:25:19.9616767Z" end-time="2022-01-16T22:25:19.9619973Z" duration="0.000321" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x&gt;5 ? &quot;foo&quot;}(6)';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x>5 ? "foo"}(6)'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2169" name="lambdas.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1295671804" result="Passed" start-time="2022-01-16T22:25:19.9660315Z" end-time="2022-01-16T22:25:19.9662627Z" duration="0.000231" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'function($x){$x&gt;5 ? &quot;foo&quot;}(3)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'function($x){$x>5 ? "foo"}(3)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2170" name="lambdas.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="867904396" result="Passed" start-time="2022-01-16T22:25:19.9670331Z" end-time="2022-01-16T22:25:19.9675496Z" duration="0.000517" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($factorial:= function($x){$x &lt;= 1 ? 1 : $x * $factorial($x-1)}; $factorial(4))';&#xA; result: 24" />
                  </properties>
                  <output><![CDATA[Expr is '($factorial:= function($x){$x <= 1 ? 1 : $x * $factorial($x-1)}; $factorial(4))'
Result: '24'
Expected: '24'
]]></output>
                </test-case>
                <test-case id="0-2171" name="lambdas.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="748348825" result="Passed" start-time="2022-01-16T22:25:19.9681551Z" end-time="2022-01-16T22:25:19.9702335Z" duration="0.002078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($fibonacci := function($x){$x &lt;= 1 ? $x : $fibonacci($x-1) + $fibonacci($x-2)}; [1,2,3,4,5,6,7,8,9].$fibonacci($))';&#xA; result: [1,1,2,3,5,8,13,21,34]" />
                  </properties>
                  <output><![CDATA[Expr is '($fibonacci := function($x){$x <= 1 ? $x : $fibonacci($x-1) + $fibonacci($x-2)}; [1,2,3,4,5,6,7,8,9].$fibonacci($))'
Result: '[1,1,2,3,5,8,13,21,34]'
Expected: '[1,1,2,3,5,8,13,21,34]'
]]></output>
                </test-case>
                <test-case id="0-2172" name="lambdas.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="242677757" result="Passed" start-time="2022-01-16T22:25:19.9703344Z" end-time="2022-01-16T22:25:19.9720792Z" duration="0.001745" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($nth_price := function($n) { (Account.Order.Product.Price)[$n] }; $nth_price(1) )';&#xA; result: 21.67" />
                  </properties>
                  <output><![CDATA[Expr is '($nth_price := function($n) { (Account.Order.Product.Price)[$n] }; $nth_price(1) )'
Result: '21.67'
Expected: '21.67'
]]></output>
                </test-case>
                <test-case id="0-2173" name="lambdas.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="48612689" result="Passed" start-time="2022-01-16T22:25:19.9723810Z" end-time="2022-01-16T22:25:19.9734231Z" duration="0.001042" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };              $odd := function($n) { $n = 0 ? false : $even($n-1) };              $even(82)            )';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };              $odd := function($n) { $n = 0 ? false : $even($n-1) };              $even(82)            )'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2174" name="lambdas.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="16720643" result="Passed" start-time="2022-01-16T22:25:19.9739511Z" end-time="2022-01-16T22:25:19.9745331Z" duration="0.000582" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };               $odd := function($n) { $n = 0 ? false : $even($n-1) };               $even(65) )';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $even := function($n) { $n = 0 ? true : $odd($n-1) };               $odd := function($n) { $n = 0 ? false : $even($n-1) };               $even(65) )'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2175" name="lambdas.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="306456729" result="Passed" start-time="2022-01-16T22:25:19.9749892Z" end-time="2022-01-16T22:25:19.9783430Z" duration="0.003354" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(65)         )';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(65)         )'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2176" name="lambdas.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1364773012" result="Passed" start-time="2022-01-16T22:25:19.9796431Z" end-time="2022-01-16T22:25:19.9798496Z" duration="0.000206" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $gcd := λ($a, $b){$b = 0 ? $a : $gcd($b, $a%$b) };  [$gcd(8,12), $gcd(9,12)])';&#xA; result: [4,3]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $gcd := λ($a, $b){$b = 0 ? $a : $gcd($b, $a%$b) };  [$gcd(8,12), $gcd(9,12)])'
Result: '[4,3]'
Expected: '[4,3]'
]]></output>
                </test-case>
                <test-case id="0-2177" name="lambdas.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="538496291" result="Passed" start-time="2022-01-16T22:25:19.9801518Z" end-time="2022-01-16T22:25:19.9804527Z" duration="0.000301" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $range := function($start, $end, $step) { (    $step:=($step?$step:1);    $start+$step &gt; $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15))        ';&#xA; result: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $range := function($start, $end, $step) { (    $step:=($step?$step:1);    $start+$step > $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15))        '
Result: '[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]'
Expected: '[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]'
]]></output>
                </test-case>
                <test-case id="0-2178" name="lambdas.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2042995229" result="Passed" start-time="2022-01-16T22:25:19.9810350Z" end-time="2022-01-16T22:25:19.9813605Z" duration="0.000325" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $range := function($start, $end, $step) { (      $step:=($step?$step:1);        $start+$step &gt; $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15,2))        ';&#xA; result: [0,2,4,6,8,10,12,14]" />
                  </properties>
                  <output><![CDATA[Expr is '(  $range := function($start, $end, $step) { (      $step:=($step?$step:1);        $start+$step > $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15,2))        '
Result: '[0,2,4,6,8,10,12,14]'
Expected: '[0,2,4,6,8,10,12,14]'
]]></output>
                </test-case>
                <test-case id="0-2179" name="lambdas.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.lambdas.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="672836565" result="Passed" start-time="2022-01-16T22:25:19.9817556Z" end-time="2022-01-16T22:25:19.9820201Z" duration="0.000264" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $median := λ($x){$sort($x)[$count($x)/2]};  $median([5,4,3,2,1,6,7,8,1]) )';&#xA; result: 4" />
                  </properties>
                  <output><![CDATA[Expr is '( $median := λ($x){$sort($x)[$count($x)/2]};  $median([5,4,3,2,1,6,7,8,1]) )'
Result: '4'
Expected: '4'
]]></output>
                </test-case>
                <test-case id="0-2180" name="literals.array-inputs[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="430381409" result="Passed" start-time="2022-01-16T22:25:19.9831738Z" end-time="2022-01-16T22:25:19.9833238Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2181" name="literals.array-inputs[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1341621839" result="Passed" start-time="2022-01-16T22:25:19.9833410Z" end-time="2022-01-16T22:25:19.9834310Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2182" name="literals.array-inputs[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="61778490" result="Passed" start-time="2022-01-16T22:25:19.9834422Z" end-time="2022-01-16T22:25:19.9835228Z" duration="0.000081" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2183" name="literals.array-inputs[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.array-inputs[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="811362423" result="Passed" start-time="2022-01-16T22:25:19.9835327Z" end-time="2022-01-16T22:25:19.9846792Z" duration="0.001147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}';&#xA; result: {&quot;fgFoo:0:hausnummer&quot;:{&quot;type&quot;:&quot;de.example.api.PossibleValuesList&quot;,&quot;value&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '{'fgFoo:0:hausnummer': {'type': 'de.example.api.PossibleValuesList', 'value': [{'label': '', 'value': ''}] }}'
Result: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
Expected: '{"fgFoo:0:hausnummer":{"type":"de.example.api.PossibleValuesList","value":[{"label":"","value":""}]}}'
]]></output>
                </test-case>
                <test-case id="0-2184" name="literals.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1946496260" result="Passed" start-time="2022-01-16T22:25:19.9870030Z" end-time="2022-01-16T22:25:19.9873629Z" duration="0.000360" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot;';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello"'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2185" name="literals.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="482005624" result="Passed" start-time="2022-01-16T22:25:19.9886820Z" end-time="2022-01-16T22:25:19.9888360Z" duration="0.000154" asserts="1">
                  <properties>
                    <property name="Description" value="expr: ''hello'';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is ''hello''
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2186" name="literals.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1021234756" result="Passed" start-time="2022-01-16T22:25:19.9895321Z" end-time="2022-01-16T22:25:19.9897890Z" duration="0.000257" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Wayne's World&quot;';&#xA; result: &quot;Wayne's World&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Wayne's World"'
Result: '"Wayne's World"'
Expected: '"Wayne's World"'
]]></output>
                </test-case>
                <test-case id="0-2187" name="literals.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1720821590" result="Passed" start-time="2022-01-16T22:25:19.9899278Z" end-time="2022-01-16T22:25:19.9900075Z" duration="0.000079" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '42';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is '42'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2188" name="literals.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1384727653" result="Passed" start-time="2022-01-16T22:25:19.9909596Z" end-time="2022-01-16T22:25:19.9910994Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '-42';&#xA; result: -42" />
                  </properties>
                  <output><![CDATA[Expr is '-42'
Result: '-42'
Expected: '-42'
]]></output>
                </test-case>
                <test-case id="0-2189" name="literals.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1592426070" result="Passed" start-time="2022-01-16T22:25:19.9921668Z" end-time="2022-01-16T22:25:19.9922852Z" duration="0.000118" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '3.14159';&#xA; result: 3.14159" />
                  </properties>
                  <output><![CDATA[Expr is '3.14159'
Result: '3.14159'
Expected: '3.14159'
]]></output>
                </test-case>
                <test-case id="0-2190" name="literals.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1710218008" result="Passed" start-time="2022-01-16T22:25:20.0003795Z" end-time="2022-01-16T22:25:20.0005292Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '6.022e23';&#xA; result: 6.022E+23" />
                  </properties>
                  <output><![CDATA[Expr is '6.022e23'
Result: '6.022E+23'
Expected: '6.022E+23'
]]></output>
                </test-case>
                <test-case id="0-2191" name="literals.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="721118117" result="Passed" start-time="2022-01-16T22:25:20.0020386Z" end-time="2022-01-16T22:25:20.0021678Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1.602E-19';&#xA; result: 1.602E-19" />
                  </properties>
                  <output><![CDATA[Expr is '1.602E-19'
Result: '1.602E-19'
Expected: '1.602E-19'
]]></output>
                </test-case>
                <test-case id="0-2192" name="literals.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="111183756" result="Failed" start-time="2022-01-16T22:25:20.0025780Z" end-time="2022-01-16T22:25:20.0032814Z" duration="0.000703" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '10e1000';&#xA; result: error S0102" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error S0102 (), got '"Infinity"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '10e1000'
Result: '"Infinity"'
Expected error S0102
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error S0102 (), got '"Infinity"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2193" name="literals.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1017800395" result="Passed" start-time="2022-01-16T22:25:20.0056873Z" end-time="2022-01-16T22:25:20.0058645Z" duration="0.000177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello\tworld&quot;';&#xA; result: &quot;hello\tworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello\tworld"'
Result: '"hello\tworld"'
Expected: '"hello\tworld"'
]]></output>
                </test-case>
                <test-case id="0-2194" name="literals.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1432332339" result="Passed" start-time="2022-01-16T22:25:20.0063372Z" end-time="2022-01-16T22:25:20.0065177Z" duration="0.000181" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello\nworld&quot;';&#xA; result: &quot;hello\nworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello\nworld"'
Result: '"hello\nworld"'
Expected: '"hello\nworld"'
]]></output>
                </test-case>
                <test-case id="0-2195" name="literals.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="103758149" result="Passed" start-time="2022-01-16T22:25:20.0070424Z" end-time="2022-01-16T22:25:20.0071755Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello \&quot;world\&quot;&quot;';&#xA; result: &quot;hello \&quot;world\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello \"world\""'
Result: '"hello \"world\""'
Expected: '"hello \"world\""'
]]></output>
                </test-case>
                <test-case id="0-2196" name="literals.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1309769811" result="Passed" start-time="2022-01-16T22:25:20.0077971Z" end-time="2022-01-16T22:25:20.0080558Z" duration="0.000258" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;C:\\Test\\test.txt&quot;';&#xA; result: &quot;C:\\Test\\test.txt&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"C:\\Test\\test.txt"'
Result: '"C:\\Test\\test.txt"'
Expected: '"C:\\Test\\test.txt"'
]]></output>
                </test-case>
                <test-case id="0-2197" name="literals.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="472872623" result="Passed" start-time="2022-01-16T22:25:20.0085264Z" end-time="2022-01-16T22:25:20.0087519Z" duration="0.000225" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u03BB-calculus rocks&quot;';&#xA; result: &quot;λ-calculus rocks&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"\u03BB-calculus rocks"'
Result: '"λ-calculus rocks"'
Expected: '"λ-calculus rocks"'
]]></output>
                </test-case>
                <test-case id="0-2198" name="literals.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1603566670" result="Passed" start-time="2022-01-16T22:25:20.0091739Z" end-time="2022-01-16T22:25:20.0093384Z" duration="0.000164" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;𝄞&quot;';&#xA; result: &quot;𝄞&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"𝄞"'
Result: '"𝄞"'
Expected: '"𝄞"'
]]></output>
                </test-case>
                <test-case id="0-2199" name="literals.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="115488796" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.0102147Z" end-time="2022-01-16T22:25:20.0115562Z" duration="0.001342" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\y&quot;';&#xA; result: error S0103" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\y' at offset 2. Unrecognized escape sequence \\y.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Helpers.cs:line 51
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\y"'
]]></output>
                </test-case>
                <test-case id="0-2200" name="literals.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="76290247" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.0120193Z" end-time="2022-01-16T22:25:20.0135589Z" duration="0.001540" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u&quot;';&#xA; result: error S0104" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\u' at offset 2. Insufficient hexadecimal digits.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanHex(Int32 c)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Helpers.cs:line 51
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\u"'
]]></output>
                </test-case>
                <test-case id="0-2201" name="literals.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="961551106" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.0135809Z" end-time="2022-01-16T22:25:20.0144998Z" duration="0.000919" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;\u123t&quot;';&#xA; result: error S0104" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Invalid pattern '\u123t' at offset 6. Insufficient hexadecimal digits.
(RegexParseException)
   at System.Text.RegularExpressions.RegexParser.ScanHex(Int32 c)
   at System.Text.RegularExpressions.RegexParser.ScanCharEscape()
   at System.Text.RegularExpressions.RegexParser.UnescapeImpl(String input, Int32 i)
   at System.Text.RegularExpressions.RegexParser.Unescape(String input)
   at System.Text.RegularExpressions.Regex.Unescape(String str)
   at Jsonata.Net.Native.Parsing.Helpers.Unescape(String src) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Helpers.cs:line 51
   at Jsonata.Net.Native.Parsing.Parser.parseString(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 16
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"\u123t"'
]]></output>
                </test-case>
                <test-case id="0-2202" name="literals.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1465942025" result="Passed" start-time="2022-01-16T22:25:20.0146012Z" end-time="2022-01-16T22:25:20.0150942Z" duration="0.000493" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'foo': { 'sequence': 123, 'bar': 'baz' } } ';&#xA; result: {&quot;foo&quot;:{&quot;sequence&quot;:123,&quot;bar&quot;:&quot;baz&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'foo': { 'sequence': 123, 'bar': 'baz' } } '
Result: '{"foo":{"sequence":123,"bar":"baz"}}'
Expected: '{"foo":{"sequence":123,"bar":"baz"}}'
]]></output>
                </test-case>
                <test-case id="0-2203" name="literals.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.literals.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="205593323" result="Passed" start-time="2022-01-16T22:25:20.0155856Z" end-time="2022-01-16T22:25:20.0156904Z" duration="0.000105" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{ 'foo': { 'sequence': true, 'bar': 'baz' } } ';&#xA; result: {&quot;foo&quot;:{&quot;sequence&quot;:true,&quot;bar&quot;:&quot;baz&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{ 'foo': { 'sequence': true, 'bar': 'baz' } } '
Result: '{"foo":{"sequence":true,"bar":"baz"}}'
Expected: '{"foo":{"sequence":true,"bar":"baz"}}'
]]></output>
                </test-case>
                <test-case id="0-2204" name="matchers.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.matchers.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="846062701" result="Failed" label="Error" start-time="2022-01-16T22:25:20.0157864Z" end-time="2022-01-16T22:25:20.0184730Z" duration="0.002687" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(&#xA;    $generateMatcher := function($ch) {&#xA;      $match := function($str, $offset) {(&#xA;        $before := $substringBefore($str, $ch);&#xA;        $start := $length($before) + ($exists($offset) ? $offset : 0);&#xA;        $end := $start + $length($ch);&#xA;        $before != $str and $length($ch) &gt; 0 ? {&#xA;          'match': $ch,&#xA;          'start': $start,&#xA;          'end': $end,&#xA;          'groups': [],&#xA;          'next': function() {$match($substringAfter($str, $ch), $end)}&#xA;        }&#xA;      )}&#xA;    };&#xA;&#xA;    $match(&quot;abracadabra&quot;, $generateMatcher('a'))&#xA;)';&#xA; result: [{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:0,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:3,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:5,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:7,&quot;groups&quot;:[]},{&quot;match&quot;:&quot;a&quot;,&quot;index&quot;:10,&quot;groups&quot;:[]}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : T0410: Argument 2 of function match should be regex. Passed Constructor (new lambda())]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.BuiltinFunctions.match(String str, JToken pattern, Int32 limit) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\BuiltinFunctions.cs:line 403
--- End of stack trace from previous location ---
   at Jsonata.Net.Native.Eval.EvalProcessor_Functions.CallCsharpFunction(String functionName, MethodInfo methodInfo, List`1 args, JToken inputAsContext, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Functions.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 450
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(
    $generateMatcher := function($ch) {
      $match := function($str, $offset) {(
        $before := $substringBefore($str, $ch);
        $start := $length($before) + ($exists($offset) ? $offset : 0);
        $end := $start + $length($ch);
        $before != $str and $length($ch) > 0 ? {
          'match': $ch,
          'start': $start,
          'end': $end,
          'groups': [],
          'next': function() {$match($substringAfter($str, $ch), $end)}
        }
      )}
    };

    $match("abracadabra", $generateMatcher('a'))
)'
]]></output>
                </test-case>
                <test-case id="0-2205" name="matchers.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.matchers.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2106182383" result="Passed" start-time="2022-01-16T22:25:20.0187088Z" end-time="2022-01-16T22:25:20.0196663Z" duration="0.000961" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$split('some text', $uppercase)';&#xA; result: error T1010" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1010]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$split('some text', $uppercase)'
]]></output>
                </test-case>
                <test-case id="0-2206" name="missing-paths.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="148853334" result="Passed" start-time="2022-01-16T22:25:20.0197206Z" end-time="2022-01-16T22:25:20.0206051Z" duration="0.000884" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2207" name="missing-paths.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="710311860" result="Passed" start-time="2022-01-16T22:25:20.0206154Z" end-time="2022-01-16T22:25:20.0212288Z" duration="0.000613" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2208" name="missing-paths.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2081974119" result="Passed" start-time="2022-01-16T22:25:20.0240066Z" end-time="2022-01-16T22:25:20.0241551Z" duration="0.000148" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett[10]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett[10]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2209" name="missing-paths.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="761197001" result="Passed" start-time="2022-01-16T22:25:20.0241753Z" end-time="2022-01-16T22:25:20.0242426Z" duration="0.000068" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett[vc &gt; 10]';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett[vc > 10]'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2210" name="missing-paths.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1332724643" result="Passed" start-time="2022-01-16T22:25:20.0242508Z" end-time="2022-01-16T22:25:20.0243115Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'fdf.ett + 27';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'fdf.ett + 27'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2211" name="missing-paths.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.missing-paths.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1745741586" result="Passed" start-time="2022-01-16T22:25:20.0243184Z" end-time="2022-01-16T22:25:20.0243667Z" duration="0.000048" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$fdsd';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$fdsd'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2212" name="multiple-array-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="635102968" result="Passed" start-time="2022-01-16T22:25:20.0243731Z" end-time="2022-01-16T22:25:20.0245889Z" duration="0.000216" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,-1]]';&#xA; result: [2,3,4,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,-1]]'
Result: '[2,3,4,9,10]'
Expected: '[2,3,4,9,10]'
]]></output>
                </test-case>
                <test-case id="0-2213" name="multiple-array-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1502963492" result="Passed" start-time="2022-01-16T22:25:20.0246170Z" end-time="2022-01-16T22:25:20.0255986Z" duration="0.000982" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,5]]';&#xA; result: [2,3,4,6,9]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,5]]'
Result: '[2,3,4,6,9]'
Expected: '[2,3,4,6,9]'
]]></output>
                </test-case>
                <test-case id="0-2214" name="multiple-array-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.multiple-array-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1034004430" result="Passed" start-time="2022-01-16T22:25:20.0258655Z" end-time="2022-01-16T22:25:20.0260065Z" duration="0.000141" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10][[1..3,8,false]]';&#xA; result: [1,2,3,4,5,6,7,8,9,10]" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10][[1..3,8,false]]'
Result: '[1,2,3,4,5,6,7,8,9,10]'
Expected: '[1,2,3,4,5,6,7,8,9,10]'
]]></output>
                </test-case>
                <test-case id="0-2215" name="null.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1393931817" result="Passed" start-time="2022-01-16T22:25:20.0262181Z" end-time="2022-01-16T22:25:20.0262948Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'null'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2216" name="null.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1344864255" result="Passed" start-time="2022-01-16T22:25:20.0263050Z" end-time="2022-01-16T22:25:20.0263576Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[null]';&#xA; result: [null]" />
                  </properties>
                  <output><![CDATA[Expr is '[null]'
Result: '[null]'
Expected: '[null]'
]]></output>
                </test-case>
                <test-case id="0-2217" name="null.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1476720030" result="Passed" start-time="2022-01-16T22:25:20.0263859Z" end-time="2022-01-16T22:25:20.0266147Z" duration="0.000229" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[null, null]';&#xA; result: [null,null]" />
                  </properties>
                  <output><![CDATA[Expr is '[null, null]'
Result: '[null,null]'
Expected: '[null,null]'
]]></output>
                </test-case>
                <test-case id="0-2218" name="null.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="982315711" result="Passed" start-time="2022-01-16T22:25:20.0266999Z" end-time="2022-01-16T22:25:20.0267759Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$not(null)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$not(null)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2219" name="null.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1867859783" result="Passed" start-time="2022-01-16T22:25:20.0268107Z" end-time="2022-01-16T22:25:20.0269094Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null = null';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is 'null = null'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2220" name="null.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2030168270" result="Passed" start-time="2022-01-16T22:25:20.0286014Z" end-time="2022-01-16T22:25:20.0295021Z" duration="0.000900" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'null != null';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'null != null'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2221" name="null.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.null.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1583485565" result="Passed" start-time="2022-01-16T22:25:20.0301907Z" end-time="2022-01-16T22:25:20.0303486Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;true&quot;: true, &quot;false&quot;:false, &quot;null&quot;: null}';&#xA; result: {&quot;true&quot;:true,&quot;false&quot;:false,&quot;null&quot;:null}" />
                  </properties>
                  <output><![CDATA[Expr is '{"true": true, "false":false, "null": null}'
Result: '{"true":true,"false":false,"null":null}'
Expected: '{"true":true,"false":false,"null":null}'
]]></output>
                </test-case>
                <test-case id="0-2222" name="numeric-operators.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674703749" result="Passed" start-time="2022-01-16T22:25:20.0322072Z" end-time="2022-01-16T22:25:20.0323663Z" duration="0.000159" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar + bar';&#xA; result: 140" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar + bar'
Result: '140'
Expected: '140'
]]></output>
                </test-case>
                <test-case id="0-2223" name="numeric-operators.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1085085487" result="Passed" start-time="2022-01-16T22:25:20.0328200Z" end-time="2022-01-16T22:25:20.0330392Z" duration="0.000219" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar + foo.bar';&#xA; result: 140" />
                  </properties>
                  <output><![CDATA[Expr is 'bar + foo.bar'
Result: '140'
Expected: '140'
]]></output>
                </test-case>
                <test-case id="0-2224" name="numeric-operators.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1732937443" result="Passed" start-time="2022-01-16T22:25:20.0334630Z" end-time="2022-01-16T22:25:20.0336073Z" duration="0.000144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar - bar';&#xA; result: -56" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar - bar'
Result: '-56'
Expected: '-56'
]]></output>
                </test-case>
                <test-case id="0-2225" name="numeric-operators.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="146786279" result="Passed" start-time="2022-01-16T22:25:20.0337911Z" end-time="2022-01-16T22:25:20.0339478Z" duration="0.000157" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar - foo.bar';&#xA; result: 56" />
                  </properties>
                  <output><![CDATA[Expr is 'bar - foo.bar'
Result: '56'
Expected: '56'
]]></output>
                </test-case>
                <test-case id="0-2226" name="numeric-operators.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="637165069" result="Passed" start-time="2022-01-16T22:25:20.0340540Z" end-time="2022-01-16T22:25:20.0343085Z" duration="0.000254" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar * bar';&#xA; result: 4116" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar * bar'
Result: '4116'
Expected: '4116'
]]></output>
                </test-case>
                <test-case id="0-2227" name="numeric-operators.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1372361009" result="Passed" start-time="2022-01-16T22:25:20.0343988Z" end-time="2022-01-16T22:25:20.0345545Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar * foo.bar';&#xA; result: 4116" />
                  </properties>
                  <output><![CDATA[Expr is 'bar * foo.bar'
Result: '4116'
Expected: '4116'
]]></output>
                </test-case>
                <test-case id="0-2228" name="numeric-operators.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="763763997" result="Passed" start-time="2022-01-16T22:25:20.0345639Z" end-time="2022-01-16T22:25:20.0350774Z" duration="0.000513" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar / bar';&#xA; result: 0.42857142857142855" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar / bar'
Result: '0.42857142857142855'
Expected: '0.42857142857142855'
]]></output>
                </test-case>
                <test-case id="0-2229" name="numeric-operators.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2060446141" result="Passed" start-time="2022-01-16T22:25:20.0376732Z" end-time="2022-01-16T22:25:20.0382223Z" duration="0.000549" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar / foo.bar';&#xA; result: 2.3333333333333335" />
                  </properties>
                  <output><![CDATA[Expr is 'bar / foo.bar'
Result: '2.3333333333333335'
Expected: '2.3333333333333335'
]]></output>
                </test-case>
                <test-case id="0-2230" name="numeric-operators.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1144170565" result="Passed" start-time="2022-01-16T22:25:20.0394759Z" end-time="2022-01-16T22:25:20.0396441Z" duration="0.000168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar % bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar % bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2231" name="numeric-operators.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="891900389" result="Passed" start-time="2022-01-16T22:25:20.0397651Z" end-time="2022-01-16T22:25:20.0398732Z" duration="0.000108" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar % foo.bar';&#xA; result: 14" />
                  </properties>
                  <output><![CDATA[Expr is 'bar % foo.bar'
Result: '14'
Expected: '14'
]]></output>
                </test-case>
                <test-case id="0-2232" name="numeric-operators.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1082413268" result="Passed" start-time="2022-01-16T22:25:20.0402997Z" end-time="2022-01-16T22:25:20.0404096Z" duration="0.000110" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar + foo.bar * bar';&#xA; result: 4214" />
                  </properties>
                  <output><![CDATA[Expr is 'bar + foo.bar * bar'
Result: '4214'
Expected: '4214'
]]></output>
                </test-case>
                <test-case id="0-2233" name="numeric-operators.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1927506433" result="Passed" start-time="2022-01-16T22:25:20.0404220Z" end-time="2022-01-16T22:25:20.0407305Z" duration="0.000309" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar * bar + bar';&#xA; result: 4214" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar * bar + bar'
Result: '4214'
Expected: '4214'
]]></output>
                </test-case>
                <test-case id="0-2234" name="numeric-operators.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="596546318" result="Passed" start-time="2022-01-16T22:25:20.0408238Z" end-time="2022-01-16T22:25:20.0409491Z" duration="0.000125" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '24 * notexist';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '24 * notexist'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2235" name="numeric-operators.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1616313950" result="Passed" start-time="2022-01-16T22:25:20.0410360Z" end-time="2022-01-16T22:25:20.0414257Z" duration="0.000389" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'notexist + 1';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'notexist + 1'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2236" name="numeric-operators.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2023163461" result="Failed" start-time="2022-01-16T22:25:20.0414788Z" end-time="2022-01-16T22:25:20.0429665Z" duration="0.001488" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '1/(10e300 * 10e100) ';&#xA; result: error D1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D1001 (), got '0']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '1/(10e300 * 10e100) '
Result: '0'
Expected error D1001
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D1001 (), got '0']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2237" name="numeric-operators.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2003668814" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.0434993Z" end-time="2022-01-16T22:25:20.0440145Z" duration="0.000515" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '&quot;5&quot; + &quot;5&quot;';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to evaluate numeric operation 5 + 5
(ErrBadNumericArguments)
   at Jsonata.Net.Native.Eval.EvalProcessor.evalNumericOperator(NumericOperatorNode numericOperatorNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 994
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 123
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '"5" + "5"'
]]></output>
                </test-case>
                <test-case id="0-2238" name="numeric-operators.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2112783369" result="Passed" start-time="2022-01-16T22:25:20.0446123Z" end-time="2022-01-16T22:25:20.0448015Z" duration="0.000190" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '- notexist';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '- notexist'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2239" name="numeric-operators.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1987797524" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.0455016Z" end-time="2022-01-16T22:25:20.0461319Z" duration="0.000630" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false + 1';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Failed to evaluate numeric operation False + 1
(ErrBadNumericArguments)
   at Jsonata.Net.Native.Eval.EvalProcessor.evalNumericOperator(NumericOperatorNode numericOperatorNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 994
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 123
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'false + 1'
]]></output>
                </test-case>
                <test-case id="0-2240" name="numeric-operators.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.numeric-operators.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="333152290" result="Failed" start-time="2022-01-16T22:25:20.0462037Z" end-time="2022-01-16T22:25:20.0471823Z" duration="0.000979" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'false + $x';&#xA; result: error T2001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error T2001 (), got 'undefined']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'false + $x'
Result: 'undefined'
Expected error T2001
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error T2001 (), got 'undefined']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2241" name="object-constructor.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="310922896" result="Passed" start-time="2022-01-16T22:25:20.0472158Z" end-time="2022-01-16T22:25:20.0473411Z" duration="0.000126" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{}';&#xA; result: {}" />
                  </properties>
                  <output><![CDATA[Expr is '{}'
Result: '{}'
Expected: '{}'
]]></output>
                </test-case>
                <test-case id="0-2242" name="object-constructor.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1786331118" result="Passed" start-time="2022-01-16T22:25:20.0473516Z" end-time="2022-01-16T22:25:20.0475756Z" duration="0.000224" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;key&quot;: &quot;value&quot;}';&#xA; result: {&quot;key&quot;:&quot;value&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '{"key": "value"}'
Result: '{"key":"value"}'
Expected: '{"key":"value"}'
]]></output>
                </test-case>
                <test-case id="0-2243" name="object-constructor.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="623530652" result="Passed" start-time="2022-01-16T22:25:20.0481160Z" end-time="2022-01-16T22:25:20.0482630Z" duration="0.000147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: 2}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:2}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": 2}'
Result: '{"one":1,"two":2}'
Expected: '{"one":1,"two":2}'
]]></output>
                </test-case>
                <test-case id="0-2244" name="object-constructor.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="259701427" result="Passed" start-time="2022-01-16T22:25:20.0482747Z" end-time="2022-01-16T22:25:20.0487288Z" duration="0.000454" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: 2}.two';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": 2}.two'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-2245" name="object-constructor.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2111960069" result="Passed" start-time="2022-01-16T22:25:20.0488157Z" end-time="2022-01-16T22:25:20.0490650Z" duration="0.000249" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: {&quot;three&quot;: 3, &quot;four&quot;: &quot;4&quot;}}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:{&quot;three&quot;:3,&quot;four&quot;:&quot;4&quot;}}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": {"three": 3, "four": "4"}}'
Result: '{"one":1,"two":{"three":3,"four":"4"}}'
Expected: '{"one":1,"two":{"three":3,"four":"4"}}'
]]></output>
                </test-case>
                <test-case id="0-2246" name="object-constructor.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="86015149" result="Passed" start-time="2022-01-16T22:25:20.0490816Z" end-time="2022-01-16T22:25:20.0496760Z" duration="0.000594" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;one&quot;: 1, &quot;two&quot;: [3, &quot;four&quot;]}';&#xA; result: {&quot;one&quot;:1,&quot;two&quot;:[3,&quot;four&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is '{"one": 1, "two": [3, "four"]}'
Result: '{"one":1,"two":[3,"four"]}'
Expected: '{"one":1,"two":[3,"four"]}'
]]></output>
                </test-case>
                <test-case id="0-2247" name="object-constructor.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="755703911" result="Passed" start-time="2022-01-16T22:25:20.0512762Z" end-time="2022-01-16T22:25:20.0514051Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{&quot;test&quot;: ()}';&#xA; result: {}" />
                  </properties>
                  <output><![CDATA[Expr is '{"test": ()}'
Result: '{}'
Expected: '{}'
]]></output>
                </test-case>
                <test-case id="0-2248" name="object-constructor.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2131279612" result="Passed" start-time="2022-01-16T22:25:20.0514731Z" end-time="2022-01-16T22:25:20.0515648Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'blah.{}';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'blah.{}'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2249" name="object-constructor.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="38400522" result="Passed" start-time="2022-01-16T22:25:20.0515736Z" end-time="2022-01-16T22:25:20.0518490Z" duration="0.000275" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{OrderID: Product.&quot;Product Name&quot;}';&#xA; result: {&quot;order103&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;],&quot;order104&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{OrderID: Product."Product Name"}'
Result: '{"order103":["Bowler Hat","Trilby hat"],"order104":["Bowler Hat","Cloak"]}'
Expected: '{"order103":["Bowler Hat","Trilby hat"],"order104":["Bowler Hat","Cloak"]}'
]]></output>
                </test-case>
                <test-case id="0-2250" name="object-constructor.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="906377541" result="Passed" start-time="2022-01-16T22:25:20.0518617Z" end-time="2022-01-16T22:25:20.0529091Z" duration="0.001048" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.{OrderID: Product.&quot;Product Name&quot;}';&#xA; result: [{&quot;order103&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;]},{&quot;order104&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.{OrderID: Product."Product Name"}'
Result: '[{"order103":["Bowler Hat","Trilby hat"]},{"order104":["Bowler Hat","Cloak"]}]'
Expected: '[{"order103":["Bowler Hat","Trilby hat"]},{"order104":["Bowler Hat","Cloak"]}]'
]]></output>
                </test-case>
                <test-case id="0-2251" name="object-constructor.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1980533428" result="Passed" start-time="2022-01-16T22:25:20.0529208Z" end-time="2022-01-16T22:25:20.0532324Z" duration="0.000312" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$string(ProductID): Price}';&#xA; result: {&quot;345664&quot;:107.99,&quot;858236&quot;:21.67,&quot;858383&quot;:[34.45,34.45]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{$string(ProductID): Price}'
Result: '{"858383":[34.45,34.45],"858236":21.67,"345664":107.99}'
Expected: '{"345664":107.99,"858236":21.67,"858383":[34.45,34.45]}'
]]></output>
                </test-case>
                <test-case id="0-2252" name="object-constructor.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1638040559" result="Passed" start-time="2022-01-16T22:25:20.0535185Z" end-time="2022-01-16T22:25:20.0545349Z" duration="0.001017" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$string(ProductID): (Price)[0]}';&#xA; result: {&quot;345664&quot;:107.99,&quot;858236&quot;:21.67,&quot;858383&quot;:34.45}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{$string(ProductID): (Price)[0]}'
Result: '{"858383":34.45,"858236":21.67,"345664":107.99}'
Expected: '{"345664":107.99,"858236":21.67,"858383":34.45}'
]]></output>
                </test-case>
                <test-case id="0-2253" name="object-constructor.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1883190534" result="Passed" start-time="2022-01-16T22:25:20.0551067Z" end-time="2022-01-16T22:25:20.0558336Z" duration="0.000726" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{$string(ProductID): Price}';&#xA; result: [{&quot;858383&quot;:34.45},{&quot;858236&quot;:21.67},{&quot;858383&quot;:34.45},{&quot;345664&quot;:107.99}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.{$string(ProductID): Price}'
Result: '[{"858383":34.45},{"858236":21.67},{"858383":34.45},{"345664":107.99}]'
Expected: '[{"858383":34.45},{"858236":21.67},{"858383":34.45},{"345664":107.99}]'
]]></output>
                </test-case>
                <test-case id="0-2254" name="object-constructor.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="232804173" result="Passed" start-time="2022-01-16T22:25:20.0583152Z" end-time="2022-01-16T22:25:20.0594047Z" duration="0.001089" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{ProductID: &quot;Product Name&quot;}';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product{ProductID: "Product Name"}'
]]></output>
                </test-case>
                <test-case id="0-2255" name="object-constructor.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="640288329" result="Passed" start-time="2022-01-16T22:25:20.0594231Z" end-time="2022-01-16T22:25:20.0606614Z" duration="0.001239" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ProductID: &quot;Product Name&quot;}';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ProductID: "Product Name"}'
]]></output>
                </test-case>
                <test-case id="0-2256" name="object-constructor.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1434331004" result="Passed" start-time="2022-01-16T22:25:20.0606807Z" end-time="2022-01-16T22:25:20.0613237Z" duration="0.000643" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{OrderID: $sum(Product.(Price*Quantity))}';&#xA; result: {&quot;order103&quot;:90.57000000000001,&quot;order104&quot;:245.79000000000002}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{OrderID: $sum(Product.(Price*Quantity))}'
Result: '{"order103":90.57,"order104":245.79}'
Expected: '{"order103":90.57000000000001,"order104":245.79000000000002}'
]]></output>
                </test-case>
                <test-case id="0-2257" name="object-constructor.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="380856538" result="Passed" start-time="2022-01-16T22:25:20.0616325Z" end-time="2022-01-16T22:25:20.0620672Z" duration="0.000434" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.{OrderID: $sum(Product.(Price*Quantity))}';&#xA; result: [{&quot;order103&quot;:90.57000000000001},{&quot;order104&quot;:245.79000000000002}]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.{OrderID: $sum(Product.(Price*Quantity))}'
Result: '[{"order103":90.57},{"order104":245.79}]'
Expected: '[{"order103":90.57000000000001},{"order104":245.79000000000002}]'
]]></output>
                </test-case>
                <test-case id="0-2258" name="object-constructor.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="620139527" result="Passed" start-time="2022-01-16T22:25:20.0621946Z" end-time="2022-01-16T22:25:20.0630341Z" duration="0.000839" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{$.&quot;Product Name&quot;: Price, $.&quot;Product Name&quot;: Price}';&#xA; result: error D1009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1009]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product{$."Product Name": Price, $."Product Name": Price}'
]]></output>
                </test-case>
                <test-case id="0-2259" name="object-constructor.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="699276422" result="Passed" start-time="2022-01-16T22:25:20.0631557Z" end-time="2022-01-16T22:25:20.0635527Z" duration="0.000397" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product{`Product Name`: Price, SKU: Price}';&#xA; result: {&quot;Bowler Hat&quot;:[34.45,34.45],&quot;0406654608&quot;:34.45,&quot;Trilby hat&quot;:21.67,&quot;0406634348&quot;:21.67,&quot;040657863&quot;:34.45,&quot;Cloak&quot;:107.99,&quot;0406654603&quot;:107.99}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product{`Product Name`: Price, SKU: Price}'
Result: '{"Bowler Hat":[34.45,34.45],"0406654608":34.45,"Trilby hat":21.67,"0406634348":21.67,"040657863":34.45,"Cloak":107.99,"0406654603":107.99}'
Expected: '{"Bowler Hat":[34.45,34.45],"0406654608":34.45,"Trilby hat":21.67,"0406634348":21.67,"040657863":34.45,"Cloak":107.99,"0406654603":107.99}'
]]></output>
                </test-case>
                <test-case id="0-2260" name="object-constructor.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1469017314" result="Passed" start-time="2022-01-16T22:25:20.0635835Z" end-time="2022-01-16T22:25:20.0640834Z" duration="0.000500" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order{  OrderID: {    &quot;TotalPrice&quot;:$sum(Product.(Price * Quantity)),    &quot;Items&quot;: Product.&quot;Product Name&quot;  }}';&#xA; result: {&quot;order103&quot;:{&quot;TotalPrice&quot;:90.57000000000001,&quot;Items&quot;:[&quot;Bowler Hat&quot;,&quot;Trilby hat&quot;]},&quot;order104&quot;:{&quot;TotalPrice&quot;:245.79000000000002,&quot;Items&quot;:[&quot;Bowler Hat&quot;,&quot;Cloak&quot;]}}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order{  OrderID: {    "TotalPrice":$sum(Product.(Price * Quantity)),    "Items": Product."Product Name"  }}'
Result: '{"order103":{"TotalPrice":90.57,"Items":["Bowler Hat","Trilby hat"]},"order104":{"TotalPrice":245.79,"Items":["Bowler Hat","Cloak"]}}'
Expected: '{"order103":{"TotalPrice":90.57000000000001,"Items":["Bowler Hat","Trilby hat"]},"order104":{"TotalPrice":245.79000000000002,"Items":["Bowler Hat","Cloak"]}}'
]]></output>
                </test-case>
                <test-case id="0-2261" name="object-constructor.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="923975972" result="Passed" start-time="2022-01-16T22:25:20.0641223Z" end-time="2022-01-16T22:25:20.0660504Z" duration="0.001929" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{  &quot;Order&quot;: Account.Order.{      &quot;ID&quot;: OrderID,      &quot;Product&quot;: Product.{          &quot;Name&quot;: $.&quot;Product Name&quot;,          &quot;SKU&quot;: ProductID,          &quot;Details&quot;: {            &quot;Weight&quot;: Description.Weight,            &quot;Dimensions&quot;: Description.(Width &amp; &quot; x &quot; &amp; Height &amp; &quot; x &quot; &amp; Depth)          }        },      &quot;Total Price&quot;: $sum(Product.(Price * Quantity))    }}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{  "Order": Account.Order.{      "ID": OrderID,      "Product": Product.{          "Name": $."Product Name",          "SKU": ProductID,          "Details": {            "Weight": Description.Weight,            "Dimensions": Description.(Width & " x " & Height & " x " & Depth)          }        },      "Total Price": $sum(Product.(Price * Quantity))    }}'
Result: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2262" name="object-constructor.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2094031510" result="Passed" start-time="2022-01-16T22:25:20.0660685Z" end-time="2022-01-16T22:25:20.0668476Z" duration="0.000779" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{  &quot;Order&quot;: Account.Order.{      &quot;ID&quot;: OrderID,      &quot;Product&quot;: Product.{          &quot;Name&quot;: `Product Name`,          &quot;SKU&quot;: ProductID,          &quot;Details&quot;: {            &quot;Weight&quot;: Description.Weight,            &quot;Dimensions&quot;: Description.(Width &amp; &quot; x &quot; &amp; Height &amp; &quot; x &quot; &amp; Depth)          }        },      &quot;Total Price&quot;: $sum(Product.(Price * Quantity))    }}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Trilby hat&quot;,&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Name&quot;:&quot;Bowler Hat&quot;,&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;Name&quot;:&quot;Cloak&quot;,&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{  "Order": Account.Order.{      "ID": OrderID,      "Product": Product.{          "Name": `Product Name`,          "SKU": ProductID,          "Details": {            "Weight": Description.Weight,            "Dimensions": Description.(Width & " x " & Height & " x " & Depth)          }        },      "Total Price": $sum(Product.(Price * Quantity))    }}'
Result: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Trilby hat","SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"Name":"Bowler Hat","SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"Name":"Cloak","SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2263" name="object-constructor.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="21527978" result="Passed" start-time="2022-01-16T22:25:20.0668992Z" end-time="2022-01-16T22:25:20.0672965Z" duration="0.000397" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Phone{type: $join(number, &quot;, &quot;), &quot;phone&quot;:number}';&#xA; result: {&quot;home&quot;:&quot;0203 544 1234&quot;,&quot;phone&quot;:[&quot;0203 544 1234&quot;,&quot;01962 001234&quot;,&quot;01962 001235&quot;,&quot;077 7700 1234&quot;],&quot;office&quot;:&quot;01962 001234, 01962 001235&quot;,&quot;mobile&quot;:&quot;077 7700 1234&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'Phone{type: $join(number, ", "), "phone":number}'
Result: '{"home":"0203 544 1234","phone":["0203 544 1234","01962 001234","01962 001235","077 7700 1234"],"office":"01962 001234, 01962 001235","mobile":"077 7700 1234"}'
Expected: '{"home":"0203 544 1234","phone":["0203 544 1234","01962 001234","01962 001235","077 7700 1234"],"office":"01962 001234, 01962 001235","mobile":"077 7700 1234"}'
]]></output>
                </test-case>
                <test-case id="0-2264" name="object-constructor.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1764510083" result="Passed" start-time="2022-01-16T22:25:20.0673723Z" end-time="2022-01-16T22:25:20.0678697Z" duration="0.000497" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.{ type: $average(value), kind: $sum(value) } ';&#xA; result: error D1009" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D1009]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.{ type: $average(value), kind: $sum(value) } '
]]></output>
                </test-case>
                <test-case id="0-2265" name="object-constructor.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="440824254" result="Passed" start-time="2022-01-16T22:25:20.0678833Z" end-time="2022-01-16T22:25:20.0683464Z" duration="0.000463" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{ type: $average(value), kind: $sum(value) } ';&#xA; result: error T1003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{ type: $average(value), kind: $sum(value) } '
]]></output>
                </test-case>
                <test-case id="0-2266" name="object-constructor.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.object-constructor.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="663328318" result="Passed" start-time="2022-01-16T22:25:20.0685764Z" end-time="2022-01-16T22:25:20.1364707Z" duration="0.067895" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$each(jsonata, λ($v, $k){&#xA;{&#xA;  'date': $k,&#xA;  'count': $v&#xA;}&#xA;}){&#xA;  $substring(date, 0, 7): $sum(count)&#xA;}&#xA;';&#xA; result: {&quot;2019-01&quot;:68281,&quot;2019-02&quot;:63672,&quot;2019-03&quot;:78625,&quot;2019-04&quot;:76505,&quot;2019-05&quot;:129360,&quot;2019-06&quot;:484244,&quot;2019-07&quot;:698748,&quot;2019-08&quot;:788322}" />
                  </properties>
                  <output><![CDATA[Expr is '$each(jsonata, λ($v, $k){
{
  'date': $k,
  'count': $v
}
}){
  $substring(date, 0, 7): $sum(count)
}
'
Result: '{"2019-01":68281,"2019-02":63672,"2019-03":78625,"2019-04":76505,"2019-05":129360,"2019-06":484244,"2019-07":698748,"2019-08":788322}'
Expected: '{"2019-01":68281,"2019-02":63672,"2019-03":78625,"2019-04":76505,"2019-05":129360,"2019-06":484244,"2019-07":698748,"2019-08":788322}'
]]></output>
                </test-case>
                <test-case id="0-2267" name="parent-operator.errors[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="855080182" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1365428Z" end-time="2022-01-16T22:25:20.1379049Z" duration="0.001362" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{'hello': 'world'}.% ';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{'hello': 'world'}.% '
]]></output>
                </test-case>
                <test-case id="0-2268" name="parent-operator.errors[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="906417174" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1379640Z" end-time="2022-01-16T22:25:20.1394535Z" duration="0.001489" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%'
]]></output>
                </test-case>
                <test-case id="0-2269" name="parent-operator.errors[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1565174127" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1395920Z" end-time="2022-01-16T22:25:20.1407171Z" duration="0.001125" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%()';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%()'
]]></output>
                </test-case>
                <test-case id="0-2270" name="parent-operator.errors[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1518252003" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1407690Z" end-time="2022-01-16T22:25:20.1423843Z" duration="0.001616" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%(1)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%(1)'
]]></output>
                </test-case>
                <test-case id="0-2271" name="parent-operator.errors[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1488679088" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1424380Z" end-time="2022-01-16T22:25:20.1455358Z" duration="0.003098" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '%%';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '%%'
]]></output>
                </test-case>
                <test-case id="0-2272" name="parent-operator.errors[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1511420308" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1461357Z" end-time="2022-01-16T22:25:20.1478744Z" duration="0.001741" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(%)';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(%)'
]]></output>
                </test-case>
                <test-case id="0-2273" name="parent-operator.errors[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1142001834" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1479097Z" end-time="2022-01-16T22:25:20.1506492Z" duration="0.002740" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(%%)';&#xA; result: error S0211" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(%%)'
]]></output>
                </test-case>
                <test-case id="0-2274" name="parent-operator.errors[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1534707493" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1507814Z" end-time="2022-01-16T22:25:20.1527840Z" duration="0.002003" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans.%%';&#xA; result: error S0207" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans.%%'
]]></output>
                </test-case>
                <test-case id="0-2275" name="parent-operator.errors[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1719245374" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1528157Z" end-time="2022-01-16T22:25:20.1539290Z" duration="0.001113" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.%'
]]></output>
                </test-case>
                <test-case id="0-2276" name="parent-operator.errors[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1944638094" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1539837Z" end-time="2022-01-16T22:25:20.1554882Z" duration="0.001505" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$$.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$$.%'
]]></output>
                </test-case>
                <test-case id="0-2277" name="parent-operator.errors[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1051173097" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1555063Z" end-time="2022-01-16T22:25:20.1571397Z" duration="0.001633" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans.%.%.%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans.%.%.%'
]]></output>
                </test-case>
                <test-case id="0-2278" name="parent-operator.errors[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="825384060" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1572801Z" end-time="2022-01-16T22:25:20.1587801Z" duration="0.001500" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.%%%';&#xA; result: error S0217" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.%%%'
]]></output>
                </test-case>
                <test-case id="0-2279" name="parent-operator.errors[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1768461021" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1587982Z" end-time="2022-01-16T22:25:20.1600099Z" duration="0.001212" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(%%%)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(%%%)'
]]></output>
                </test-case>
                <test-case id="0-2280" name="parent-operator.errors[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="60771130" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1601439Z" end-time="2022-01-16T22:25:20.1633579Z" duration="0.003214" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(%% %)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(%% %)'
]]></output>
                </test-case>
                <test-case id="0-2281" name="parent-operator.errors[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2028944805" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1639450Z" end-time="2022-01-16T22:25:20.1656672Z" duration="0.001722" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(% %%)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(% %%)'
]]></output>
                </test-case>
                <test-case id="0-2282" name="parent-operator.errors[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.errors[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1388565044" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1657303Z" end-time="2022-01-16T22:25:20.1677042Z" duration="0.001975" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.(% % %)';&#xA; result: error T2001" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.(% % %)'
]]></output>
                </test-case>
                <test-case id="0-2283" name="parent-operator.parent[1]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[1]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="725363475" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1678415Z" end-time="2022-01-16T22:25:20.1694013Z" duration="0.001560" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{&#xA;  &quot;order&quot;: %.OrderID,&#xA;  &quot;Product&quot;: `Product Name`,&#xA;  &quot;Weight&quot;: Description.Weight&#xA;}&#xA;';&#xA; result: [{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Weight&quot;:0.6},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Cloak&quot;,&quot;Weight&quot;:2}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.{
  "order": %.OrderID,
  "Product": `Product Name`,
  "Weight": Description.Weight
}
'
]]></output>
                </test-case>
                <test-case id="0-2284" name="parent-operator.parent[2]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[2]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1154068600" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1701632Z" end-time="2022-01-16T22:25:20.1708325Z" duration="0.000669" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order.Product).{&#xA;  &quot;order&quot;: %.OrderID,&#xA;  &quot;Product&quot;: `Product Name`,&#xA;  &quot;Weight&quot;: Description.Weight&#xA;}&#xA;';&#xA; result: [{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Weight&quot;:0.6},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Weight&quot;:0.75},{&quot;order&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;Cloak&quot;,&quot;Weight&quot;:2}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.(Order.Product).{
  "order": %.OrderID,
  "Product": `Product Name`,
  "Weight": Description.Weight
}
'
]]></output>
                </test-case>
                <test-case id="0-2285" name="parent-operator.parent[3]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[3]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1311120784" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1715476Z" end-time="2022-01-16T22:25:20.1723940Z" duration="0.000846" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.[`Product Name`, %.OrderID]';&#xA; result: [&quot;Bowler Hat&quot;,&quot;order103&quot;,&quot;Trilby hat&quot;,&quot;order103&quot;,&quot;Bowler Hat&quot;,&quot;order104&quot;,&quot;Cloak&quot;,&quot;order104&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 119
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.[`Product Name`, %.OrderID]'
]]></output>
                </test-case>
                <test-case id="0-2286" name="parent-operator.parent[4]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[4]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1401343477" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1724272Z" end-time="2022-01-16T22:25:20.1746125Z" duration="0.002186" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ `Product Name`: [Quantity, %.OrderID] }';&#xA; result: [{&quot;Bowler Hat&quot;:[2,&quot;order103&quot;]},{&quot;Trilby hat&quot;:[1,&quot;order103&quot;]},{&quot;Bowler Hat&quot;:[4,&quot;order104&quot;]},{&quot;Cloak&quot;:[1,&quot;order104&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 119
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ `Product Name`: [Quantity, %.OrderID] }'
]]></output>
                </test-case>
                <test-case id="0-2287" name="parent-operator.parent[5]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[5]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1346706381" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1746765Z" end-time="2022-01-16T22:25:20.1756235Z" duration="0.000947" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ `Product Name`: [Quantity, (%.OrderID)] }';&#xA; result: [{&quot;Bowler Hat&quot;:[2,&quot;order103&quot;]},{&quot;Trilby hat&quot;:[1,&quot;order103&quot;]},{&quot;Bowler Hat&quot;:[4,&quot;order104&quot;]},{&quot;Cloak&quot;:[1,&quot;order104&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseArray(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 119
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ `Product Name`: [Quantity, (%.OrderID)] }'
]]></output>
                </test-case>
                <test-case id="0-2288" name="parent-operator.parent[6]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[6]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1694702260" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1784631Z" end-time="2022-01-16T22:25:20.1790267Z" duration="0.000563" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.OrderID='order104'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.OrderID='order104'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2289" name="parent-operator.parent[7]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[7]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2103741636" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1791750Z" end-time="2022-01-16T22:25:20.1812600Z" duration="0.002085" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.%.`Account Name`='Firefly'].SKU';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.%.`Account Name`='Firefly'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2290" name="parent-operator.parent[8]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[8]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="181982946" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1855200Z" end-time="2022-01-16T22:25:20.1862387Z" duration="0.000718" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price[%.%.OrderID='order103']';&#xA; result: [34.45,21.67]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price[%.%.OrderID='order103']'
]]></output>
                </test-case>
                <test-case id="0-2291" name="parent-operator.parent[9]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[9]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1642306923" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1862602Z" end-time="2022-01-16T22:25:20.1866227Z" duration="0.000363" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price.%[%.OrderID='order103'].SKU';&#xA; result: [&quot;0406654608&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price.%[%.OrderID='order103'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2292" name="parent-operator.parent[10]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[10]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1383529287" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1866345Z" end-time="2022-01-16T22:25:20.1875522Z" duration="0.000918" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[%.OrderID='order104'][%.%.`Account Name`='Firefly'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product[%.OrderID='order104'][%.%.`Account Name`='Firefly'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2293" name="parent-operator.parent[11]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[11]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1413506947" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1886084Z" end-time="2022-01-16T22:25:20.1897440Z" duration="0.001136" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(Account.Order.Product)[%.OrderID='order104'].SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parsePredicate(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 154
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(Account.Order.Product)[%.OrderID='order104'].SKU'
]]></output>
                </test-case>
                <test-case id="0-2294" name="parent-operator.parent[12]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[12]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="518780210" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1897616Z" end-time="2022-01-16T22:25:20.1906161Z" duration="0.000855" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{ %.OrderID: Price * Quantity }';&#xA; result: [{&quot;order103&quot;:68.9},{&quot;order103&quot;:21.67},{&quot;order104&quot;:137.8},{&quot;order104&quot;:107.99}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 148
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.{ %.OrderID: Price * Quantity }'
]]></output>
                </test-case>
                <test-case id="0-2295" name="parent-operator.parent[13]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[13]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1556659965" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1907161Z" end-time="2022-01-16T22:25:20.1914982Z" duration="0.000782" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.().%';&#xA; result: undefined" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.().%'
]]></output>
                </test-case>
                <test-case id="0-2296" name="parent-operator.parent[14]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[14]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="364375033" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1915248Z" end-time="2022-01-16T22:25:20.1924557Z" duration="0.000931" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2297" name="parent-operator.parent[15]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[15]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1764803140" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1929834Z" end-time="2022-01-16T22:25:20.1935799Z" duration="0.000597" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2298" name="parent-operator.parent[16]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[16]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1006504216" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1935977Z" end-time="2022-01-16T22:25:20.1953863Z" duration="0.001789" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order.(Product)).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.(Order.(Product)).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2299" name="parent-operator.parent[17]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[17]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1966360820" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1962527Z" end-time="2022-01-16T22:25:20.1968178Z" duration="0.000565" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.(Order).(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.(Order).(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2300" name="parent-operator.parent[18]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[18]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1448631751" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1969850Z" end-time="2022-01-16T22:25:20.1981312Z" duration="0.001146" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(Account.Order).(Product).{&#xA;  'Product': `Product Name`,&#xA;  'Order': %.OrderID,&#xA;  'Account': %.%.`Account Name`&#xA;}&#xA;';&#xA; result: [{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order&quot;:&quot;order103&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;},{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order&quot;:&quot;order104&quot;,&quot;Account&quot;:&quot;Firefly&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '(Account.Order).(Product).{
  'Product': `Product Name`,
  'Order': %.OrderID,
  'Account': %.%.`Account Name`
}
'
]]></output>
                </test-case>
                <test-case id="0-2301" name="parent-operator.parent[19]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[19]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1378418614" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1987211Z" end-time="2022-01-16T22:25:20.1997725Z" duration="0.001051" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.SKU^(%.Price)';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 228
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.SKU^(%.Price)'
]]></output>
                </test-case>
                <test-case id="0-2302" name="parent-operator.parent[20]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[20]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1996770384" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.1998978Z" end-time="2022-01-16T22:25:20.2005987Z" duration="0.000701" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.SKU^(%.Price, &gt;%.%.OrderID)';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654608&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseSort(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 228
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.SKU^(%.Price, >%.%.OrderID)'
]]></output>
                </test-case>
                <test-case id="0-2303" name="parent-operator.parent[21]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[21]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="566105485" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.2007475Z" end-time="2022-01-16T22:25:20.2018306Z" duration="0.001083" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.{ 'Colour': Colour, 'Total': %.Price * %.Quantity }';&#xA; result: [{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Total&quot;:68.9},{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Total&quot;:21.67},{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Total&quot;:137.8},{&quot;Colour&quot;:&quot;Black&quot;,&quot;Total&quot;:107.99}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.{ 'Colour': Colour, 'Total': %.Price * %.Quantity }'
]]></output>
                </test-case>
                <test-case id="0-2304" name="parent-operator.parent[22]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[22]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="667632166" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.2018499Z" end-time="2022-01-16T22:25:20.2041131Z" duration="0.002263" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Description.{ 'Item': Colour &amp; ' ' &amp; %.`Product Name`, 'Discounted': (%.%.OrderID = 'order103') ? %.Price / 2 : %.Price }';&#xA; result: [{&quot;Item&quot;:&quot;Purple Bowler Hat&quot;,&quot;Discounted&quot;:17.225},{&quot;Item&quot;:&quot;Orange Trilby hat&quot;,&quot;Discounted&quot;:10.835},{&quot;Item&quot;:&quot;Purple Bowler Hat&quot;,&quot;Discounted&quot;:34.45},{&quot;Item&quot;:&quot;Black Cloak&quot;,&quot;Discounted&quot;:107.99}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseStringConcatenation(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 204
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseObject(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 150
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.Description.{ 'Item': Colour & ' ' & %.`Product Name`, 'Discounted': (%.%.OrderID = 'order103') ? %.Price / 2 : %.Price }'
]]></output>
                </test-case>
                <test-case id="0-2305" name="parent-operator.parent[23]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[23]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1565182100" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.2064311Z" end-time="2022-01-16T22:25:20.2072000Z" duration="0.000769" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.( $parent := %; %.OrderID )';&#xA; result: [&quot;order103&quot;,&quot;order103&quot;,&quot;order104&quot;,&quot;order104&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseAssignment(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 188
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.( $parent := %; %.OrderID )'
]]></output>
                </test-case>
                <test-case id="0-2306" name="parent-operator.parent[24]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[24]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="469113120" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.2072184Z" end-time="2022-01-16T22:25:20.2080021Z" duration="0.000784" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.( $parent := %; $parent.OrderID )';&#xA; result: [&quot;order103&quot;,&quot;order103&quot;,&quot;order104&quot;,&quot;order104&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: the symbol 'Jsonata.Net.Native.Parsing.Token' cannot be used as a prefix operator
(ErrPrefix)
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 218
   at Jsonata.Net.Native.Parsing.Parser.parseAssignment(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 188
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.parseBlock(Token t) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Nuds.cs:line 167
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 220
   at Jsonata.Net.Native.Parsing.Parser.parseDot(Token t, Node lhs) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser_Leds.cs:line 244
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 230
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.( $parent := %; $parent.OrderID )'
]]></output>
                </test-case>
                <test-case id="0-2307" name="parent-operator.parent[25]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[25]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="496038725" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.2117984Z" end-time="2022-01-16T22:25:20.2123728Z" duration="0.000574" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].{ 'book': $B.title, 'parent': $keys(%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].{ 'book': $B.title, 'parent': $keys(%) }'
]]></output>
                </test-case>
                <test-case id="0-2308" name="parent-operator.parent[26]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[26]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="348483041" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.2123952Z" end-time="2022-01-16T22:25:20.2135154Z" duration="0.001121" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%) }'
]]></output>
                </test-case>
                <test-case id="0-2309" name="parent-operator.parent[27]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[27]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="661042446" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.2135758Z" end-time="2022-01-16T22:25:20.2147507Z" duration="0.001175" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%.%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;parent&quot;:[&quot;books&quot;,&quot;loans&quot;,&quot;customers&quot;]}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers[id=$L.customer].{ 'book': $B.title, 'customer': name, 'parent': $keys(%.%) }'
]]></output>
                </test-case>
                <test-case id="0-2310" name="parent-operator.parent[28]" fullname="Jsonata.Net.Native.TestSuite.Tests.parent-operator.parent[28]" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="843133882" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:20.2147848Z" end-time="2022-01-16T22:25:20.2159862Z" duration="0.001202" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers@$C[$C.id=$L.customer].{ 'book': $B.title, 'customer': $C.name, 'grandparent': $keys(%.%) }';&#xA; result: [{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Joe Doe&quot;,&quot;grandparent&quot;:&quot;library&quot;},{&quot;book&quot;:&quot;Compilers: Principles, Techniques, and Tools&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;grandparent&quot;:&quot;library&quot;},{&quot;book&quot;:&quot;Structure and Interpretation of Computer Programs&quot;,&quot;customer&quot;:&quot;Jason Arthur&quot;,&quot;grandparent&quot;:&quot;library&quot;}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: @
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'library.loans@$L.books@$B[$L.isbn=$B.isbn].customers@$C[$C.id=$L.customer].{ 'book': $B.title, 'customer': $C.name, 'grandparent': $keys(%.%) }'
]]></output>
                </test-case>
                <test-case id="0-2311" name="parentheses.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="383157907" result="Passed" start-time="2022-01-16T22:25:20.2160982Z" end-time="2022-01-16T22:25:20.2165951Z" duration="0.000497" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah).baz.fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah).baz.fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2312" name="parentheses.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1702956125" result="Passed" start-time="2022-01-16T22:25:20.2169407Z" end-time="2022-01-16T22:25:20.2171705Z" duration="0.000230" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah.baz).fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah.baz).fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2313" name="parentheses.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="999162153" result="Passed" start-time="2022-01-16T22:25:20.2171825Z" end-time="2022-01-16T22:25:20.2174585Z" duration="0.000276" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz).fud';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz).fud'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2314" name="parentheses.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="638505292" result="Passed" start-time="2022-01-16T22:25:20.2175780Z" end-time="2022-01-16T22:25:20.2177984Z" duration="0.000220" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.(baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.(baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2315" name="parentheses.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1587556156" result="Passed" start-time="2022-01-16T22:25:20.2178729Z" end-time="2022-01-16T22:25:20.2183662Z" duration="0.000493" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2316" name="parentheses.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1682894575" result="Passed" start-time="2022-01-16T22:25:20.2184431Z" end-time="2022-01-16T22:25:20.2187296Z" duration="0.000286" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo).(blah).baz.(fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo).(blah).baz.(fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2317" name="parentheses.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1368668035" result="Passed" start-time="2022-01-16T22:25:20.2197705Z" end-time="2022-01-16T22:25:20.2211352Z" duration="0.001364" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.(blah).baz.fud)';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.(blah).baz.fud)'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2318" name="parentheses.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.parentheses.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1014943025" result="Passed" start-time="2022-01-16T22:25:20.2227373Z" end-time="2022-01-16T22:25:20.2228659Z" duration="0.000128" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(4 + 2) / 2';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '(4 + 2) / 2'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2319" name="partial-application.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="453389299" result="Passed" start-time="2022-01-16T22:25:20.2235242Z" end-time="2022-01-16T22:25:20.2236685Z" duration="0.000144" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $add := function($x, $y){$x+$y};  $add2 := $add(?, 2);  $add2(3))';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '(  $add := function($x, $y){$x+$y};  $add2 := $add(?, 2);  $add2(3))'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2320" name="partial-application.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1186964424" result="Passed" start-time="2022-01-16T22:25:20.2246795Z" end-time="2022-01-16T22:25:20.2248183Z" duration="0.000139" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $add := function($x, $y){$x+$y};  $add2 := $add(2, ?);  $add2(4))';&#xA; result: 6" />
                  </properties>
                  <output><![CDATA[Expr is '(  $add := function($x, $y){$x+$y};  $add2 := $add(2, ?);  $add2(4))'
Result: '6'
Expected: '6'
]]></output>
                </test-case>
                <test-case id="0-2321" name="partial-application.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1464105584" result="Passed" start-time="2022-01-16T22:25:20.2258444Z" end-time="2022-01-16T22:25:20.2259872Z" duration="0.000143" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $firstn := $substring(?, 0, ?);  $first5 := $firstn(?, 5);  $first5(&quot;Hello World&quot;))';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(  $firstn := $substring(?, 0, ?);  $first5 := $firstn(?, 5);  $first5("Hello World"))'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-2322" name="partial-application.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1307861569" result="Passed" start-time="2022-01-16T22:25:20.2271820Z" end-time="2022-01-16T22:25:20.2276665Z" duration="0.000484" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'substring(?, 0, ?)';&#xA; result: error T1007" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1007]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'substring(?, 0, ?)'
]]></output>
                </test-case>
                <test-case id="0-2323" name="partial-application.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.partial-application.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="950159185" result="Passed" start-time="2022-01-16T22:25:20.2276840Z" end-time="2022-01-16T22:25:20.2281984Z" duration="0.000514" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'unknown(?)';&#xA; result: error T1008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1008]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'unknown(?)'
]]></output>
                </test-case>
                <test-case id="0-2324" name="predicates.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1383191181" result="Passed" start-time="2022-01-16T22:25:20.2298777Z" end-time="2022-01-16T22:25:20.2301340Z" duration="0.000257" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nothing[x=6][y=3].number';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'nothing[x=6][y=3].number'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2325" name="predicates.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2023428727" result="Passed" start-time="2022-01-16T22:25:20.2331642Z" end-time="2022-01-16T22:25:20.2333311Z" duration="0.000167" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'clues[x=6][y=3].number';&#xA; result: 7" />
                  </properties>
                  <output><![CDATA[Expr is 'clues[x=6][y=3].number'
Result: '7'
Expected: '7'
]]></output>
                </test-case>
                <test-case id="0-2326" name="predicates.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="105149801" result="Passed" start-time="2022-01-16T22:25:20.2343511Z" end-time="2022-01-16T22:25:20.2344818Z" duration="0.000131" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[x=6][y=3].number';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$[x=6][y=3].number'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2327" name="predicates.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.predicates.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="97913361" result="Passed" start-time="2022-01-16T22:25:20.2349612Z" end-time="2022-01-16T22:25:20.2353681Z" duration="0.000407" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$lowercase(Description.Colour) = &quot;purple&quot;][0].Price';&#xA; result: [34.45,34.45]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$lowercase(Description.Colour) = "purple"][0].Price'
Result: '[34.45,34.45]'
Expected: '[34.45,34.45]'
]]></output>
                </test-case>
                <test-case id="0-2328" name="quoted-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="623221624" result="Passed" start-time="2022-01-16T22:25:20.2362894Z" end-time="2022-01-16T22:25:20.2364183Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah&quot;';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah"'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-2329" name="quoted-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2125531175" result="Passed" start-time="2022-01-16T22:25:20.2368735Z" end-time="2022-01-16T22:25:20.2372494Z" duration="0.000376" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah&quot;.baz.'fud'';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah".baz.'fud''
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2330" name="quoted-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1354870341" result="Passed" start-time="2022-01-16T22:25:20.2377423Z" end-time="2022-01-16T22:25:20.2378622Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;.&quot;blah&quot;.&quot;baz&quot;.&quot;fud&quot;';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '"foo"."blah"."baz"."fud"'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2331" name="quoted-selectors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="179834954" result="Passed" start-time="2022-01-16T22:25:20.2382975Z" end-time="2022-01-16T22:25:20.2383901Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.&quot;blah.baz&quot;';&#xA; result: &quot;here&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo."blah.baz"'
Result: '"here"'
Expected: '"here"'
]]></output>
                </test-case>
                <test-case id="0-2332" name="quoted-selectors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="44668881" result="Passed" start-time="2022-01-16T22:25:20.2387394Z" end-time="2022-01-16T22:25:20.2391738Z" duration="0.000435" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah`';&#xA; result: [{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah`'
Result: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
Expected: '[{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"}]'
]]></output>
                </test-case>
                <test-case id="0-2333" name="quoted-selectors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1006506887" result="Passed" start-time="2022-01-16T22:25:20.2396513Z" end-time="2022-01-16T22:25:20.2398307Z" duration="0.000180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah`.baz.'fud'';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah`.baz.'fud''
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2334" name="quoted-selectors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="319829270" result="Passed" start-time="2022-01-16T22:25:20.2413231Z" end-time="2022-01-16T22:25:20.2414698Z" duration="0.000146" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '`foo`.`blah`.`baz`.`fud`';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '`foo`.`blah`.`baz`.`fud`'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2335" name="quoted-selectors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.quoted-selectors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="829836163" result="Passed" start-time="2022-01-16T22:25:20.2425318Z" end-time="2022-01-16T22:25:20.2426519Z" duration="0.000120" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.`blah.baz`';&#xA; result: &quot;here&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.`blah.baz`'
Result: '"here"'
Expected: '"here"'
]]></output>
                </test-case>
                <test-case id="0-2336" name="range-operator.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="32174421" result="Passed" start-time="2022-01-16T22:25:20.2430009Z" end-time="2022-01-16T22:25:20.2430984Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0..9]';&#xA; result: [0,1,2,3,4,5,6,7,8,9]" />
                  </properties>
                  <output><![CDATA[Expr is '[0..9]'
Result: '[0,1,2,3,4,5,6,7,8,9]'
Expected: '[0,1,2,3,4,5,6,7,8,9]'
]]></output>
                </test-case>
                <test-case id="0-2337" name="range-operator.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="822459559" result="Passed" start-time="2022-01-16T22:25:20.2441142Z" end-time="2022-01-16T22:25:20.2442639Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0..9][$ % 2 = 0]';&#xA; result: [0,2,4,6,8]" />
                  </properties>
                  <output><![CDATA[Expr is '[0..9][$ % 2 = 0]'
Result: '[0,2,4,6,8]'
Expected: '[0,2,4,6,8]'
]]></output>
                </test-case>
                <test-case id="0-2338" name="range-operator.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="57731309" result="Passed" start-time="2022-01-16T22:25:20.2466037Z" end-time="2022-01-16T22:25:20.2468027Z" duration="0.000199" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[0, 4..9, 20, 22]';&#xA; result: [0,4,5,6,7,8,9,20,22]" />
                  </properties>
                  <output><![CDATA[Expr is '[0, 4..9, 20, 22]'
Result: '[0,4,5,6,7,8,9,20,22]'
Expected: '[0,4,5,6,7,8,9,20,22]'
]]></output>
                </test-case>
                <test-case id="0-2339" name="range-operator.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1736370147" result="Passed" start-time="2022-01-16T22:25:20.2472162Z" end-time="2022-01-16T22:25:20.2473690Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[5..2]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[5..2]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2340" name="range-operator.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="842007664" result="Passed" start-time="2022-01-16T22:25:20.2477901Z" end-time="2022-01-16T22:25:20.2481777Z" duration="0.000388" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[5..2, 2..5]';&#xA; result: [2,3,4,5]" />
                  </properties>
                  <output><![CDATA[Expr is '[5..2, 2..5]'
Result: '[2,3,4,5]'
Expected: '[2,3,4,5]'
]]></output>
                </test-case>
                <test-case id="0-2341" name="range-operator.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="905304752" result="Passed" start-time="2022-01-16T22:25:20.2485804Z" end-time="2022-01-16T22:25:20.2487102Z" duration="0.000130" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..2]';&#xA; result: [-2,-1,0,1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..2]'
Result: '[-2,-1,0,1,2]'
Expected: '[-2,-1,0,1,2]'
]]></output>
                </test-case>
                <test-case id="0-2342" name="range-operator.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="998223340" result="Passed" start-time="2022-01-16T22:25:20.2492176Z" end-time="2022-01-16T22:25:20.2494253Z" duration="0.000208" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..2].($*$)';&#xA; result: [4,1,0,1,4]" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..2].($*$)'
Result: '[4,1,0,1,4]'
Expected: '[4,1,0,1,4]'
]]></output>
                </test-case>
                <test-case id="0-2343" name="range-operator.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1033659814" result="Passed" start-time="2022-01-16T22:25:20.2504912Z" end-time="2022-01-16T22:25:20.2506005Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[-2..blah]';&#xA; result: []" />
                  </properties>
                  <output><![CDATA[Expr is '[-2..blah]'
Result: '[]'
Expected: '[]'
]]></output>
                </test-case>
                <test-case id="0-2344" name="range-operator.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1260607754" result="Passed" start-time="2022-01-16T22:25:20.2506189Z" end-time="2022-01-16T22:25:20.2506859Z" duration="0.000067" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[blah..5, 3, -2..blah]';&#xA; result: [3]" />
                  </properties>
                  <output><![CDATA[Expr is '[blah..5, 3, -2..blah]'
Result: '[3]'
Expected: '[3]'
]]></output>
                </test-case>
                <test-case id="0-2345" name="range-operator.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1946308686" result="Passed" start-time="2022-01-16T22:25:20.2506938Z" end-time="2022-01-16T22:25:20.2511303Z" duration="0.000437" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1.1 .. 5]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1.1 .. 5]'
]]></output>
                </test-case>
                <test-case id="0-2346" name="range-operator.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2086834445" result="Passed" start-time="2022-01-16T22:25:20.2515921Z" end-time="2022-01-16T22:25:20.2532298Z" duration="0.001638" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1 .. 5.5]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1 .. 5.5]'
]]></output>
                </test-case>
                <test-case id="0-2347" name="range-operator.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="384367134" result="Passed" start-time="2022-01-16T22:25:20.2554844Z" end-time="2022-01-16T22:25:20.2561027Z" duration="0.000618" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[10..1.5]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[10..1.5]'
]]></output>
                </test-case>
                <test-case id="0-2348" name="range-operator.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="775001655" result="Passed" start-time="2022-01-16T22:25:20.2572676Z" end-time="2022-01-16T22:25:20.2579863Z" duration="0.000719" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[true..false]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[true..false]'
]]></output>
                </test-case>
                <test-case id="0-2349" name="range-operator.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1078707701" result="Passed" start-time="2022-01-16T22:25:20.2591338Z" end-time="2022-01-16T22:25:20.2597997Z" duration="0.000666" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '['dogs'..'cats']';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '['dogs'..'cats']'
]]></output>
                </test-case>
                <test-case id="0-2350" name="range-operator.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2021249037" result="Passed" start-time="2022-01-16T22:25:20.2598175Z" end-time="2022-01-16T22:25:20.2603947Z" duration="0.000577" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..'']';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..'']'
]]></output>
                </test-case>
                <test-case id="0-2351" name="range-operator.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1143190645" result="Passed" start-time="2022-01-16T22:25:20.2615883Z" end-time="2022-01-16T22:25:20.2623266Z" duration="0.000738" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..[]]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..[]]'
]]></output>
                </test-case>
                <test-case id="0-2352" name="range-operator.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="749860115" result="Passed" start-time="2022-01-16T22:25:20.2673483Z" end-time="2022-01-16T22:25:20.2678907Z" duration="0.000542" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..{}]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..{}]'
]]></output>
                </test-case>
                <test-case id="0-2353" name="range-operator.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="553114917" result="Passed" start-time="2022-01-16T22:25:20.2693409Z" end-time="2022-01-16T22:25:20.2701433Z" duration="0.000802" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..false]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..false]'
]]></output>
                </test-case>
                <test-case id="0-2354" name="range-operator.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="779396396" result="Passed" start-time="2022-01-16T22:25:20.2702118Z" end-time="2022-01-16T22:25:20.2707983Z" duration="0.000586" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[2..true]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[2..true]'
]]></output>
                </test-case>
                <test-case id="0-2355" name="range-operator.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2132009814" result="Passed" start-time="2022-01-16T22:25:20.2712279Z" end-time="2022-01-16T22:25:20.2718657Z" duration="0.000638" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[$x..true]';&#xA; result: error T2004" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2004]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[$x..true]'
]]></output>
                </test-case>
                <test-case id="0-2356" name="range-operator.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="70557045" result="Passed" start-time="2022-01-16T22:25:20.2722606Z" end-time="2022-01-16T22:25:20.2727910Z" duration="0.000530" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[false..$x]';&#xA; result: error T2003" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2003]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[false..$x]'
]]></output>
                </test-case>
                <test-case id="0-2357" name="range-operator.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1046611199" result="Passed" start-time="2022-01-16T22:25:20.2728767Z" end-time="2022-01-16T22:25:25.0353249Z" duration="4.762509" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1..10000000] ~&gt; $count()';&#xA; result: 10000000" />
                  </properties>
                  <output><![CDATA[Expr is '[1..10000000] ~> $count()'
Result: '10000000'
Expected: '10000000'
]]></output>
                </test-case>
                <test-case id="0-2358" name="range-operator.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1330397951" result="Passed" start-time="2022-01-16T22:25:25.0353792Z" end-time="2022-01-16T22:25:25.0373854Z" duration="0.002007" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[0..10000000] ~&gt; $count()';&#xA; result: error D2014" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D2014]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[0..10000000] ~> $count()'
]]></output>
                </test-case>
                <test-case id="0-2359" name="range-operator.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="791687086" result="Passed" start-time="2022-01-16T22:25:25.0374084Z" end-time="2022-01-16T22:25:25.0405680Z" duration="0.003160" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '[1..10000001] ~&gt; $count()';&#xA; result: error D2014" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D2014]]></message>
                  </reason>
                  <output><![CDATA[Expr is '[1..10000001] ~> $count()'
]]></output>
                </test-case>
                <test-case id="0-2360" name="range-operator.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.range-operator.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1460032299" result="Passed" start-time="2022-01-16T22:25:25.0406151Z" end-time="2022-01-16T22:25:30.2738595Z" duration="5.233310" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[100..10000099] ~&gt; $count()';&#xA; result: 10000000" />
                  </properties>
                  <output><![CDATA[Expr is '[100..10000099] ~> $count()'
Result: '10000000'
Expected: '10000000'
]]></output>
                </test-case>
                <test-case id="0-2361" name="regex.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="371199759" result="Passed" start-time="2022-01-16T22:25:30.2738897Z" end-time="2022-01-16T22:25:30.2741705Z" duration="0.000281" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/b+/)';&#xA; result: [&quot;a&quot;,&quot;a&quot;,&quot;xa&quot;,&quot;cc&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/b+/)'
Result: '["a","a","xa","cc"]'
Expected: '["a","a","xa","cc"]'
]]></output>
                </test-case>
                <test-case id="0-2362" name="regex.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2020300748" result="Passed" start-time="2022-01-16T22:25:30.2741819Z" end-time="2022-01-16T22:25:30.2742734Z" duration="0.000091" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/b+/, 2)';&#xA; result: [&quot;a&quot;,&quot;a&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/b+/, 2)'
Result: '["a","a"]'
Expected: '["a","a"]'
]]></output>
                </test-case>
                <test-case id="0-2363" name="regex.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="370435513" result="Passed" start-time="2022-01-16T22:25:30.2742807Z" end-time="2022-01-16T22:25:30.2745294Z" duration="0.000249" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$split(&quot;ababbxabbcc&quot;,/d+/)';&#xA; result: [&quot;ababbxabbcc&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$split("ababbxabbcc",/d+/)'
Result: '["ababbxabbcc"]'
Expected: '["ababbxabbcc"]'
]]></output>
                </test-case>
                <test-case id="0-2364" name="regex.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1453655752" result="Passed" start-time="2022-01-16T22:25:30.2749158Z" end-time="2022-01-16T22:25:30.2750743Z" duration="0.000158" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;ababbxabbcc&quot;,/ab+/)';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("ababbxabbcc",/ab+/)'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2365" name="regex.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="663298928" result="Passed" start-time="2022-01-16T22:25:30.2753360Z" end-time="2022-01-16T22:25:30.2754936Z" duration="0.000157" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$contains(&quot;ababbxabbcc&quot;,/ax+/)';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is '$contains("ababbxabbcc",/ax+/)'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2366" name="regex.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="338489026" result="Passed" start-time="2022-01-16T22:25:30.2755229Z" end-time="2022-01-16T22:25:30.2762648Z" duration="0.000742" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$contains($.&quot;Product Name&quot;, /hat/)].ProductID';&#xA; result: 858236" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$contains($."Product Name", /hat/)].ProductID'
Result: '858236'
Expected: '858236'
]]></output>
                </test-case>
                <test-case id="0-2367" name="regex.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="696449238" result="Passed" start-time="2022-01-16T22:25:30.2762757Z" end-time="2022-01-16T22:25:30.2774844Z" duration="0.001209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product[$contains($.&quot;Product Name&quot;, /hat/i)].ProductID';&#xA; result: [858383,858236,858383]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product[$contains($."Product Name", /hat/i)].ProductID'
Result: '[858383,858236,858383]'
Expected: '[858383,858236,858383]'
]]></output>
                </test-case>
                <test-case id="0-2368" name="regex.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="679332883" result="Passed" start-time="2022-01-16T22:25:30.2775212Z" end-time="2022-01-16T22:25:30.2780365Z" duration="0.000516" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;)';&#xA; result: &quot;ayyayyxayycc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy")'
Result: '"ayyayyxayycc"'
Expected: '"ayyayyxayycc"'
]]></output>
                </test-case>
                <test-case id="0-2369" name="regex.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1956152776" result="Passed" start-time="2022-01-16T22:25:30.2780640Z" end-time="2022-01-16T22:25:30.2783133Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;, 2)';&#xA; result: &quot;ayyayyxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy", 2)'
Result: '"ayyayyxabbcc"'
Expected: '"ayyayyxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2370" name="regex.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1555381735" result="Passed" start-time="2022-01-16T22:25:30.2783242Z" end-time="2022-01-16T22:25:30.2788452Z" duration="0.000521" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/b+/, &quot;yy&quot;, 0)';&#xA; result: &quot;ababbxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/b+/, "yy", 0)'
Result: '"ababbxabbcc"'
Expected: '"ababbxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2371" name="regex.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="860435016" result="Passed" start-time="2022-01-16T22:25:30.2791779Z" end-time="2022-01-16T22:25:30.2794275Z" duration="0.000250" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;ababbxabbcc&quot;,/d+/, &quot;yy&quot;)';&#xA; result: &quot;ababbxabbcc&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("ababbxabbcc",/d+/, "yy")'
Result: '"ababbxabbcc"'
Expected: '"ababbxabbcc"'
]]></output>
                </test-case>
                <test-case id="0-2372" name="regex.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1310936726" result="Passed" start-time="2022-01-16T22:25:30.2797285Z" end-time="2022-01-16T22:25:30.2801300Z" duration="0.000401" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;John Smith&quot;, /(\w+)\s(\w+)/, &quot;$2, $1&quot;)';&#xA; result: &quot;Smith, John&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("John Smith", /(\w+)\s(\w+)/, "$2, $1")'
Result: '"Smith, John"'
Expected: '"Smith, John"'
]]></output>
                </test-case>
                <test-case id="0-2373" name="regex.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1426056525" result="Passed" start-time="2022-01-16T22:25:30.2801517Z" end-time="2022-01-16T22:25:30.2804095Z" duration="0.000258" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$$$1&quot;)';&#xA; result: &quot;$265&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$$$1")'
Result: '"$265"'
Expected: '"$265"'
]]></output>
                </test-case>
                <test-case id="0-2374" name="regex.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1758865282" result="Passed" start-time="2022-01-16T22:25:30.2804313Z" end-time="2022-01-16T22:25:30.2806975Z" duration="0.000266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$w&quot;)';&#xA; result: &quot;$w&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$w")'
Result: '"$w"'
Expected: '"$w"'
]]></output>
                </test-case>
                <test-case id="0-2375" name="regex.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="281659672" result="Passed" start-time="2022-01-16T22:25:30.2809725Z" end-time="2022-01-16T22:25:30.2813372Z" duration="0.000365" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$0 -&gt; $$$1&quot;)';&#xA; result: &quot;265USD -&gt; $265&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$0 -> $$$1")'
Result: '"265USD -> $265"'
Expected: '"265USD -> $265"'
]]></output>
                </test-case>
                <test-case id="0-2376" name="regex.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="465882244" result="Failed" start-time="2022-01-16T22:25:30.2813601Z" end-time="2022-01-16T22:25:30.2827484Z" duration="0.001388" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;265USD&quot;, /([0-9]+)USD/, &quot;$0$1$2&quot;)';&#xA; result: &quot;265USD265&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"265USD265"', got '"265USD265$2"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("265USD", /([0-9]+)USD/, "$0$1$2")'
Result: '"265USD265$2"'
Expected: '"265USD265"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"265USD265"', got '"265USD265$2"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2377" name="regex.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="274201755" result="Passed" start-time="2022-01-16T22:25:30.2828251Z" end-time="2022-01-16T22:25:30.2865140Z" duration="0.003689" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcd&quot;, /(ab)|(a)/, &quot;[1=$1][2=$2]&quot;)';&#xA; result: &quot;[1=ab][2=]cd&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcd", /(ab)|(a)/, "[1=$1][2=$2]")'
Result: '"[1=ab][2=]cd"'
Expected: '"[1=ab][2=]cd"'
]]></output>
                </test-case>
                <test-case id="0-2378" name="regex.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1837035078" result="Passed" start-time="2022-01-16T22:25:30.2865430Z" end-time="2022-01-16T22:25:30.2867965Z" duration="0.000254" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /bra/, &quot;*&quot;)';&#xA; result: &quot;a*cada*&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /bra/, "*")'
Result: '"a*cada*"'
Expected: '"a*cada*"'
]]></output>
                </test-case>
                <test-case id="0-2379" name="regex.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1584366142" result="Passed" start-time="2022-01-16T22:25:30.2868110Z" end-time="2022-01-16T22:25:30.2873191Z" duration="0.000508" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a.*a/, &quot;*&quot;)';&#xA; result: &quot;*&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a.*a/, "*")'
Result: '"*"'
Expected: '"*"'
]]></output>
                </test-case>
                <test-case id="0-2380" name="regex.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2084077929" result="Passed" start-time="2022-01-16T22:25:30.2873489Z" end-time="2022-01-16T22:25:30.2889232Z" duration="0.001574" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a.*?a/, &quot;*&quot;)';&#xA; result: &quot;*c*bra&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a.*?a/, "*")'
Result: '"*c*bra"'
Expected: '"*c*bra"'
]]></output>
                </test-case>
                <test-case id="0-2381" name="regex.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1868266314" result="Passed" start-time="2022-01-16T22:25:30.2889600Z" end-time="2022-01-16T22:25:30.2891701Z" duration="0.000210" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a/, &quot;&quot;)';&#xA; result: &quot;brcdbr&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a/, "")'
Result: '"brcdbr"'
Expected: '"brcdbr"'
]]></output>
                </test-case>
                <test-case id="0-2382" name="regex.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1470395353" result="Passed" start-time="2022-01-16T22:25:30.2891936Z" end-time="2022-01-16T22:25:30.2893422Z" duration="0.000149" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /a(.)/, &quot;a$1$1&quot;)';&#xA; result: &quot;abbraccaddabbra&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abracadabra", /a(.)/, "a$1$1")'
Result: '"abbraccaddabbra"'
Expected: '"abbraccaddabbra"'
]]></output>
                </test-case>
                <test-case id="0-2383" name="regex.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1691997570" result="Failed" start-time="2022-01-16T22:25:30.2893518Z" end-time="2022-01-16T22:25:30.2901448Z" duration="0.000793" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abracadabra&quot;, /.*?/, &quot;$1&quot;)';&#xA; result: error D1004" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error D1004 (), got '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abracadabra", /.*?/, "$1")'
Result: '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"'
Expected error D1004
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error D1004 (), got '"$1a$1b$1r$1a$1c$1a$1d$1a$1b$1r$1a$1"']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2384" name="regex.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="104282138" result="Passed" start-time="2022-01-16T22:25:30.2901557Z" end-time="2022-01-16T22:25:30.2902650Z" duration="0.000109" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;AAAA&quot;, /A+/, &quot;b&quot;)';&#xA; result: &quot;b&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("AAAA", /A+/, "b")'
Result: '"b"'
Expected: '"b"'
]]></output>
                </test-case>
                <test-case id="0-2385" name="regex.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="211679696" result="Passed" start-time="2022-01-16T22:25:30.2902719Z" end-time="2022-01-16T22:25:30.2903779Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;AAAA&quot;, /A+?/, &quot;b&quot;)';&#xA; result: &quot;bbbb&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("AAAA", /A+?/, "b")'
Result: '"bbbb"'
Expected: '"bbbb"'
]]></output>
                </test-case>
                <test-case id="0-2386" name="regex.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1577458486" result="Passed" start-time="2022-01-16T22:25:30.2911585Z" end-time="2022-01-16T22:25:30.2917568Z" duration="0.000598" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;darted&quot;, /^(.*?)d(.*)$/, &quot;$1c$2&quot;)';&#xA; result: &quot;carted&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("darted", /^(.*?)d(.*)$/, "$1c$2")'
Result: '"carted"'
Expected: '"carted"'
]]></output>
                </test-case>
                <test-case id="0-2387" name="regex.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1639037611" result="Failed" start-time="2022-01-16T22:25:30.2917849Z" end-time="2022-01-16T22:25:30.2933426Z" duration="0.001558" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;hella8l3no&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"hella8l3no"', got '"hell$18$123no"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)/, "$8$5$12$12$18$123")'
Result: '"hell$18$123no"'
Expected: '"hella8l3no"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"hella8l3no"', got '"hell$18$123no"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2388" name="regex.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="227110491" result="Passed" start-time="2022-01-16T22:25:30.2933576Z" end-time="2022-01-16T22:25:30.2935508Z" duration="0.000193" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /xyz/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefghijklmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /xyz/, "$8$5$12$12$18$123")'
Result: '"abcdefghijklmno"'
Expected: '"abcdefghijklmno"'
]]></output>
                </test-case>
                <test-case id="0-2389" name="regex.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="335303103" result="Failed" start-time="2022-01-16T22:25:30.2935593Z" end-time="2022-01-16T22:25:30.2964243Z" duration="0.002865" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /ijk/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefgh22823lmno&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"abcdefgh22823lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /ijk/, "$8$5$12$12$18$123")'
Result: '"abcdefgh$8$5$12$12$18$123lmno"'
Expected: '"abcdefgh22823lmno"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"abcdefgh22823lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2390" name="regex.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="759279118" result="Failed" start-time="2022-01-16T22:25:30.2964485Z" end-time="2022-01-16T22:25:30.2974522Z" duration="0.001004" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(ijk)/, &quot;$8$5$12$12$18$123&quot;)';&#xA; result: &quot;abcdefghijk2ijk2ijk8ijk23lmno&quot;" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '"abcdefghijk2ijk2ijk8ijk23lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(ijk)/, "$8$5$12$12$18$123")'
Result: '"abcdefgh$8$5$12$12$18$123lmno"'
Expected: '"abcdefghijk2ijk2ijk8ijk23lmno"'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '"abcdefghijk2ijk2ijk8ijk23lmno"', got '"abcdefgh$8$5$12$12$18$123lmno"'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2391" name="regex.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1133046869" result="Passed" start-time="2022-01-16T22:25:30.2974724Z" end-time="2022-01-16T22:25:30.2976222Z" duration="0.000150" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /ijk/, &quot;$x&quot;)';&#xA; result: &quot;abcdefgh$xlmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /ijk/, "$x")'
Result: '"abcdefgh$xlmno"'
Expected: '"abcdefgh$xlmno"'
]]></output>
                </test-case>
                <test-case id="0-2392" name="regex.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1639545255" result="Passed" start-time="2022-01-16T22:25:30.2976303Z" end-time="2022-01-16T22:25:30.2978537Z" duration="0.000224" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;abcdefghijklmno&quot;, /(ijk)/, &quot;$x$&quot;)';&#xA; result: &quot;abcdefgh$x$lmno&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("abcdefghijklmno", /(ijk)/, "$x$")'
Result: '"abcdefgh$x$lmno"'
Expected: '"abcdefgh$x$lmno"'
]]></output>
                </test-case>
                <test-case id="0-2393" name="regex.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1413527870" result="Passed" start-time="2022-01-16T22:25:30.2978619Z" end-time="2022-01-16T22:25:30.2985060Z" duration="0.000645" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { &quot;foo&quot; })';&#xA; result: [&quot;Bowler foo&quot;,&quot;Trilby foo&quot;,&quot;Bowler foo&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { "foo" })'
Result: '["Bowler foo","Trilby foo","Bowler foo","Cloak"]'
Expected: '["Bowler foo","Trilby foo","Bowler foo","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2394" name="regex.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="276337848" result="Passed" start-time="2022-01-16T22:25:30.2985181Z" end-time="2022-01-16T22:25:30.3030824Z" duration="0.004565" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /(h)(at)/i, function($match) { $uppercase($match.match) })';&#xA; result: [&quot;Bowler HAT&quot;,&quot;Trilby HAT&quot;,&quot;Bowler HAT&quot;,&quot;Cloak&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /(h)(at)/i, function($match) { $uppercase($match.match) })'
Result: '["Bowler HAT","Trilby HAT","Bowler HAT","Cloak"]'
Expected: '["Bowler HAT","Trilby HAT","Bowler HAT","Cloak"]'
]]></output>
                </test-case>
                <test-case id="0-2395" name="regex.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="470807905" result="Passed" start-time="2022-01-16T22:25:30.3031226Z" end-time="2022-01-16T22:25:30.3033885Z" duration="0.000266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$replace(&quot;temperature = 68F today&quot;, /(-?\d+(?:\.\d*)?)F\b/, function($m) { ($number($m.groups[0]) - 32) * 5/9 &amp; &quot;C&quot; })';&#xA; result: &quot;temperature = 20C today&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$replace("temperature = 68F today", /(-?\d+(?:\.\d*)?)F\b/, function($m) { ($number($m.groups[0]) - 32) * 5/9 & "C" })'
Result: '"temperature = 20C today"'
Expected: '"temperature = 20C today"'
]]></output>
                </test-case>
                <test-case id="0-2396" name="regex.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1032487651" result="Passed" start-time="2022-01-16T22:25:30.3034854Z" end-time="2022-01-16T22:25:30.3045006Z" duration="0.001015" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { true })';&#xA; result: error D3012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3012]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { true })'
]]></output>
                </test-case>
                <test-case id="0-2397" name="regex.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="627787827" result="Passed" start-time="2022-01-16T22:25:30.3045163Z" end-time="2022-01-16T22:25:30.3060401Z" duration="0.001524" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.$replace($.&quot;Product Name&quot;, /hat/i, function($match) { 42 })';&#xA; result: error D3012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code D3012]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { 42 })'
]]></output>
                </test-case>
                <test-case id="0-2398" name="regex.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1727487709" result="Passed" start-time="2022-01-16T22:25:30.3060573Z" end-time="2022-01-16T22:25:30.3063695Z" duration="0.000312" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map($, $match(?, /^(\w*\s\w*)/)).match';&#xA; result: [&quot;Felicia Saunders&quot;,&quot;Jimmy Schultz&quot;,&quot;Dolores Figueroa&quot;,&quot;Craig Moreno&quot;,&quot;Lindsey Hall&quot;,&quot;Bonnie Russell&quot;,&quot;Kristin Stewart&quot;,&quot;Owen Reid&quot;,&quot;Brenda Sherman&quot;,&quot;Dwayne Baldwin&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$map($, $match(?, /^(\w*\s\w*)/)).match'
Result: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
Expected: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
]]></output>
                </test-case>
                <test-case id="0-2399" name="regex.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.regex.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="597308826" result="Passed" start-time="2022-01-16T22:25:30.3063809Z" end-time="2022-01-16T22:25:30.3066562Z" duration="0.000276" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$map($, function($i){ $match($i, /^(\w*\s\w*)/) }).match';&#xA; result: [&quot;Felicia Saunders&quot;,&quot;Jimmy Schultz&quot;,&quot;Dolores Figueroa&quot;,&quot;Craig Moreno&quot;,&quot;Lindsey Hall&quot;,&quot;Bonnie Russell&quot;,&quot;Kristin Stewart&quot;,&quot;Owen Reid&quot;,&quot;Brenda Sherman&quot;,&quot;Dwayne Baldwin&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$map($, function($i){ $match($i, /^(\w*\s\w*)/) }).match'
Result: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
Expected: '["Felicia Saunders","Jimmy Schultz","Dolores Figueroa","Craig Moreno","Lindsey Hall","Bonnie Russell","Kristin Stewart","Owen Reid","Brenda Sherman","Dwayne Baldwin"]'
]]></output>
                </test-case>
                <test-case id="0-2400" name="simple-array-selectors.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1607819660" result="Passed" start-time="2022-01-16T22:25:30.3066662Z" end-time="2022-01-16T22:25:30.3067387Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'nest0.nest1[0]';&#xA; result: [1,3,5,6]" />
                  </properties>
                  <output><![CDATA[Expr is 'nest0.nest1[0]'
Result: '[1,3,5,6]'
Expected: '[1,3,5,6]'
]]></output>
                </test-case>
                <test-case id="0-2401" name="simple-array-selectors.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1390385207" result="Passed" start-time="2022-01-16T22:25:30.3067456Z" end-time="2022-01-16T22:25:30.3068156Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz.fud';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz.fud'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2402" name="simple-array-selectors.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1852517898" result="Passed" start-time="2022-01-16T22:25:30.3068220Z" end-time="2022-01-16T22:25:30.3069198Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[1].baz.fud';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[1].baz.fud'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2403" name="simple-array-selectors.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="966332526" result="Passed" start-time="2022-01-16T22:25:30.3069485Z" end-time="2022-01-16T22:25:30.3070182Z" duration="0.000070" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[-1].bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[-1].bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-2404" name="simple-array-selectors.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1670809613" result="Passed" start-time="2022-01-16T22:25:30.3070245Z" end-time="2022-01-16T22:25:30.3070976Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah)[1].baz.fud';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah)[1].baz.fud'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2405" name="simple-array-selectors.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1160814021" result="Passed" start-time="2022-01-16T22:25:30.3071036Z" end-time="2022-01-16T22:25:30.3071872Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud[0]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud[0]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2406" name="simple-array-selectors.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1979737566" result="Passed" start-time="2022-01-16T22:25:30.3071942Z" end-time="2022-01-16T22:25:30.3072645Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz.fud[-1]';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz.fud[-1]'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2407" name="simple-array-selectors.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1471287237" result="Passed" start-time="2022-01-16T22:25:30.3072708Z" end-time="2022-01-16T22:25:30.3074471Z" duration="0.000177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[0]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[0]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2408" name="simple-array-selectors.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="941733282" result="Passed" start-time="2022-01-16T22:25:30.3075821Z" end-time="2022-01-16T22:25:30.3078049Z" duration="0.000223" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[1]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[1]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2409" name="simple-array-selectors.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="497736724" result="Passed" start-time="2022-01-16T22:25:30.3078121Z" end-time="2022-01-16T22:25:30.3089142Z" duration="0.001102" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[5 * 0.2]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[5 * 0.2]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2410" name="simple-array-selectors.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1666127570" result="Passed" start-time="2022-01-16T22:25:30.3091485Z" end-time="2022-01-16T22:25:30.3094507Z" duration="0.000302" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-1]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-1]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2411" name="simple-array-selectors.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1943838937" result="Passed" start-time="2022-01-16T22:25:30.3100752Z" end-time="2022-01-16T22:25:30.3102521Z" duration="0.000177" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-2]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-2]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2412" name="simple-array-selectors.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1357059768" result="Passed" start-time="2022-01-16T22:25:30.3103653Z" end-time="2022-01-16T22:25:30.3105682Z" duration="0.000203" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[2-4]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[2-4]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2413" name="simple-array-selectors.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1893515456" result="Passed" start-time="2022-01-16T22:25:30.3107925Z" end-time="2022-01-16T22:25:30.3109561Z" duration="0.000163" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[-(4-2)]';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[-(4-2)]'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2414" name="simple-array-selectors.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="855092804" result="Passed" start-time="2022-01-16T22:25:30.3111737Z" end-time="2022-01-16T22:25:30.3114699Z" duration="0.000296" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz.fud)[$$.foo.bar / 30]';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz.fud)[$$.foo.bar / 30]'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2415" name="simple-array-selectors.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1739249632" result="Passed" start-time="2022-01-16T22:25:30.3121331Z" end-time="2022-01-16T22:25:30.3122520Z" duration="0.000119" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-2416" name="simple-array-selectors.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1048288053" result="Passed" start-time="2022-01-16T22:25:30.3142794Z" end-time="2022-01-16T22:25:30.3145526Z" duration="0.000273" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah.baz[0]';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah.baz[0]'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-2417" name="simple-array-selectors.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="328303178" result="Passed" start-time="2022-01-16T22:25:30.3147681Z" end-time="2022-01-16T22:25:30.3149999Z" duration="0.000232" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(foo.blah.baz)[0]';&#xA; result: {&quot;fud&quot;:&quot;hello&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is '(foo.blah.baz)[0]'
Result: '{"fud":"hello"}'
Expected: '{"fud":"hello"}'
]]></output>
                </test-case>
                <test-case id="0-2418" name="simple-array-selectors.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="266153375" result="Passed" start-time="2022-01-16T22:25:30.3153124Z" end-time="2022-01-16T22:25:30.3154736Z" duration="0.000162" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]';&#xA; result: [1,2]" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]'
Result: '[1,2]'
Expected: '[1,2]'
]]></output>
                </test-case>
                <test-case id="0-2419" name="simple-array-selectors.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1241976056" result="Passed" start-time="2022-01-16T22:25:30.3157444Z" end-time="2022-01-16T22:25:30.3158361Z" duration="0.000092" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-2420" name="simple-array-selectors.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1233324089" result="Passed" start-time="2022-01-16T22:25:30.3158874Z" end-time="2022-01-16T22:25:30.3160764Z" duration="0.000189" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[-1]';&#xA; result: [3,4]" />
                  </properties>
                  <output><![CDATA[Expr is '$[-1]'
Result: '[3,4]'
Expected: '[3,4]'
]]></output>
                </test-case>
                <test-case id="0-2421" name="simple-array-selectors.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="846935062" result="Passed" start-time="2022-01-16T22:25:30.3163674Z" end-time="2022-01-16T22:25:30.3164637Z" duration="0.000097" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1][0]';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$[1][0]'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2422" name="simple-array-selectors.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.simple-array-selectors.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="469338747" result="Passed" start-time="2022-01-16T22:25:30.3168755Z" end-time="2022-01-16T22:25:30.3171176Z" duration="0.000242" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[1.1][0.9]';&#xA; result: 3" />
                  </properties>
                  <output><![CDATA[Expr is '$[1.1][0.9]'
Result: '3'
Expected: '3'
]]></output>
                </test-case>
                <test-case id="0-2423" name="sorting.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="344029780" result="Passed" start-time="2022-01-16T22:25:30.3174387Z" end-time="2022-01-16T22:25:30.3197251Z" duration="0.002286" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^($)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^($)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2424" name="sorting.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1196873658" result="Passed" start-time="2022-01-16T22:25:30.3197429Z" end-time="2022-01-16T22:25:30.3200056Z" duration="0.000263" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^(&lt;$)';&#xA; result: [21.67,34.45,34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^(<$)'
Result: '[21.67,34.45,34.45,107.99]'
Expected: '[21.67,34.45,34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2425" name="sorting.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="422334866" result="Passed" start-time="2022-01-16T22:25:30.3200152Z" end-time="2022-01-16T22:25:30.3203578Z" duration="0.000343" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product.Price^(&gt;$)';&#xA; result: [107.99,34.45,34.45,21.67]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product.Price^(>$)'
Result: '[107.99,34.45,34.45,21.67]'
Expected: '[107.99,34.45,34.45,21.67]'
]]></output>
                </test-case>
                <test-case id="0-2426" name="sorting.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1368373408" result="Passed" start-time="2022-01-16T22:25:30.3203660Z" end-time="2022-01-16T22:25:30.3208921Z" duration="0.000526" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Purple&quot;,&quot;Purple&quot;,&quot;Black&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).Description.Colour'
Result: '["Orange","Purple","Purple","Black"]'
Expected: '["Orange","Purple","Purple","Black"]'
]]></output>
                </test-case>
                <test-case id="0-2427" name="sorting.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2044892503" result="Passed" start-time="2022-01-16T22:25:30.3210923Z" end-time="2022-01-16T22:25:30.3219565Z" duration="0.000864" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406634348","0406654608","040657863","0406654603"]'
Expected: '["0406634348","0406654608","040657863","0406654603"]'
]]></output>
                </test-case>
                <test-case id="0-2428" name="sorting.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1149718677" result="Passed" start-time="2022-01-16T22:25:30.3224344Z" end-time="2022-01-16T22:25:30.3232021Z" duration="0.000768" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price * Quantity).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Purple&quot;,&quot;Black&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price * Quantity).Description.Colour'
Result: '["Orange","Purple","Black","Purple"]'
Expected: '["Orange","Purple","Black","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2429" name="sorting.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1288057377" result="Passed" start-time="2022-01-16T22:25:30.3235945Z" end-time="2022-01-16T22:25:30.3243627Z" duration="0.000768" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Quantity, Description.Colour).Description.Colour';&#xA; result: [&quot;Black&quot;,&quot;Orange&quot;,&quot;Purple&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Quantity, Description.Colour).Description.Colour'
Result: '["Black","Orange","Purple","Purple"]'
Expected: '["Black","Orange","Purple","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2430" name="sorting.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1396655668" result="Passed" start-time="2022-01-16T22:25:30.3243763Z" end-time="2022-01-16T22:25:30.3383824Z" duration="0.014007" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Quantity, &gt;Description.Colour).Description.Colour';&#xA; result: [&quot;Orange&quot;,&quot;Black&quot;,&quot;Purple&quot;,&quot;Purple&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Quantity, >Description.Colour).Description.Colour'
Result: '["Orange","Black","Purple","Purple"]'
Expected: '["Orange","Black","Purple","Purple"]'
]]></output>
                </test-case>
                <test-case id="0-2431" name="sorting.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1985578064" result="Passed" start-time="2022-01-16T22:25:30.3384069Z" end-time="2022-01-16T22:25:30.3386964Z" duration="0.000289" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406634348&quot;,&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406654608&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406634348","040657863","0406654603","0406654608"]'
Expected: '["0406634348","040657863","0406654603","0406654608"]'
]]></output>
                </test-case>
                <test-case id="0-2432" name="sorting.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="694197693" result="Passed" start-time="2022-01-16T22:25:30.3387069Z" end-time="2022-01-16T22:25:30.3391552Z" duration="0.000449" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;0406654608&quot;,&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["0406654608","040657863","0406654603","0406634348"]'
Expected: '["0406654608","040657863","0406654603","0406634348"]'
]]></output>
                </test-case>
                <test-case id="0-2433" name="sorting.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1239726252" result="Passed" start-time="2022-01-16T22:25:30.3391757Z" end-time="2022-01-16T22:25:30.3395965Z" duration="0.000421" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: [&quot;040657863&quot;,&quot;0406654603&quot;,&quot;0406654608&quot;,&quot;0406634348&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
Result: '["040657863","0406654603","0406654608","0406634348"]'
Expected: '["040657863","0406654603","0406654608","0406634348"]'
]]></output>
                </test-case>
                <test-case id="0-2434" name="sorting.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2124030129" result="Passed" start-time="2022-01-16T22:25:30.3396077Z" end-time="2022-01-16T22:25:30.3405767Z" duration="0.000969" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2007" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2007]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2435" name="sorting.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="693692722" result="Passed" start-time="2022-01-16T22:25:30.3405939Z" end-time="2022-01-16T22:25:30.3412719Z" duration="0.000678" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2008]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2436" name="sorting.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="15748416" result="Passed" start-time="2022-01-16T22:25:30.3412843Z" end-time="2022-01-16T22:25:30.3417069Z" duration="0.000423" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order.Product^(Price).SKU';&#xA; result: error T2008" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2008]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order.Product^(Price).SKU'
]]></output>
                </test-case>
                <test-case id="0-2437" name="sorting.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="504062827" result="Passed" start-time="2022-01-16T22:25:30.3417175Z" end-time="2022-01-16T22:25:30.3418210Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$^(age).name';&#xA; result: [&quot;Sally&quot;,&quot;Bill&quot;,&quot;Jim&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '$^(age).name'
Result: '["Sally","Bill","Jim"]'
Expected: '["Sally","Bill","Jim"]'
]]></output>
                </test-case>
                <test-case id="0-2438" name="sorting.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="21187957" result="Passed" start-time="2022-01-16T22:25:30.3418301Z" end-time="2022-01-16T22:25:30.3419137Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age)).name';&#xA; result: [&quot;Sally&quot;,&quot;Bill&quot;,&quot;Jim&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age)).name'
Result: '["Sally","Bill","Jim"]'
Expected: '["Sally","Bill","Jim"]'
]]></output>
                </test-case>
                <test-case id="0-2439" name="sorting.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1090951764" result="Passed" start-time="2022-01-16T22:25:30.3419206Z" end-time="2022-01-16T22:25:30.3419955Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$^(age)[0].name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$^(age)[0].name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2440" name="sorting.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="379425777" result="Passed" start-time="2022-01-16T22:25:30.3420024Z" end-time="2022-01-16T22:25:30.3420731Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age))[0].name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age))[0].name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2441" name="sorting.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="106171249" result="Passed" start-time="2022-01-16T22:25:30.3420803Z" end-time="2022-01-16T22:25:30.3421525Z" duration="0.000072" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($^(age)[0]).name';&#xA; result: &quot;Sally&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '($^(age)[0]).name'
Result: '"Sally"'
Expected: '"Sally"'
]]></output>
                </test-case>
                <test-case id="0-2442" name="sorting.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="697304329" result="Passed" start-time="2022-01-16T22:25:30.3421588Z" end-time="2022-01-16T22:25:30.3422153Z" duration="0.000057" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$[0]^(age)';&#xA; result: {&quot;name&quot;:&quot;Bill&quot;,&quot;age&quot;:35}" />
                  </properties>
                  <output><![CDATA[Expr is '$[0]^(age)'
Result: '{"name":"Bill","age":35}'
Expected: '{"name":"Bill","age":35}'
]]></output>
                </test-case>
                <test-case id="0-2443" name="sorting.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.sorting.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1876857414" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:30.3422216Z" end-time="2022-01-16T22:25:30.3429156Z" duration="0.000694" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order#$o.Product^(ProductID).{ 'Product': `Product Name`, 'Order Index': $o }';&#xA; result: [{&quot;Product&quot;:&quot;Cloak&quot;,&quot;Order Index&quot;:1},{&quot;Product&quot;:&quot;Trilby hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:0},{&quot;Product&quot;:&quot;Bowler Hat&quot;,&quot;Order Index&quot;:1}]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: Not supported yet: #
(NotImplementedException)
   at Jsonata.Net.Native.Parsing.Lexer.scanName() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 252
   at Jsonata.Net.Native.Parsing.Lexer.next(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Lexer.cs:line 160
   at Jsonata.Net.Native.Parsing.Parser.advance(Boolean allowRegex) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 179
   at Jsonata.Net.Native.Parsing.Parser.parseExpression(Int32 rbp) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 224
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 18
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account.Order#$o.Product^(ProductID).{ 'Product': `Product Name`, 'Order Index': $o }'
]]></output>
                </test-case>
                <test-case id="0-2444" name="string-concat.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="816659180" result="Passed" start-time="2022-01-16T22:25:30.3431975Z" end-time="2022-01-16T22:25:30.3432863Z" duration="0.000089" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot; &amp; &quot;bar&quot;';&#xA; result: &quot;foobar&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"foo" & "bar"'
Result: '"foobar"'
Expected: '"foobar"'
]]></output>
                </test-case>
                <test-case id="0-2445" name="string-concat.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="962923828" result="Passed" start-time="2022-01-16T22:25:30.3436084Z" end-time="2022-01-16T22:25:30.3439806Z" duration="0.000372" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;foo&quot;&amp;&quot;bar&quot;';&#xA; result: &quot;foobar&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"foo"&"bar"'
Result: '"foobar"'
Expected: '"foobar"'
]]></output>
                </test-case>
                <test-case id="0-2446" name="string-concat.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1923470748" result="Passed" start-time="2022-01-16T22:25:30.3444829Z" end-time="2022-01-16T22:25:30.3447307Z" duration="0.000248" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.blah[0].baz.fud &amp;foo.blah[1].baz.fud';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.blah[0].baz.fud &foo.blah[1].baz.fud'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-2447" name="string-concat.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1893513446" result="Passed" start-time="2022-01-16T22:25:30.3447615Z" end-time="2022-01-16T22:25:30.3469398Z" duration="0.002179" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah[0].baz.fud &amp; blah[1].baz.fud)';&#xA; result: &quot;helloworld&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah[0].baz.fud & blah[1].baz.fud)'
Result: '"helloworld"'
Expected: '"helloworld"'
]]></output>
                </test-case>
                <test-case id="0-2448" name="string-concat.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="558435066" result="Passed" start-time="2022-01-16T22:25:30.3472698Z" end-time="2022-01-16T22:25:30.3476302Z" duration="0.000360" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(blah[0].baz.fud &amp; none)';&#xA; result: &quot;hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(blah[0].baz.fud & none)'
Result: '"hello"'
Expected: '"hello"'
]]></output>
                </test-case>
                <test-case id="0-2449" name="string-concat.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="684571863" result="Passed" start-time="2022-01-16T22:25:30.3479366Z" end-time="2022-01-16T22:25:30.3481724Z" duration="0.000236" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.(none.here &amp; blah[1].baz.fud)';&#xA; result: &quot;world&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.(none.here & blah[1].baz.fud)'
Result: '"world"'
Expected: '"world"'
]]></output>
                </test-case>
                <test-case id="0-2450" name="string-concat.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1570003499" result="Passed" start-time="2022-01-16T22:25:30.3482038Z" end-time="2022-01-16T22:25:30.3482729Z" duration="0.000069" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2]&amp;[3,4]';&#xA; result: &quot;[1,2][3,4]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2]&[3,4]'
Result: '"[1,2][3,4]"'
Expected: '"[1,2][3,4]"'
]]></output>
                </test-case>
                <test-case id="0-2451" name="string-concat.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="704184473" result="Passed" start-time="2022-01-16T22:25:30.3482807Z" end-time="2022-01-16T22:25:30.3485189Z" duration="0.000238" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2]&amp;3';&#xA; result: &quot;[1,2]3&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2]&3'
Result: '"[1,2]3"'
Expected: '"[1,2]3"'
]]></output>
                </test-case>
                <test-case id="0-2452" name="string-concat.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="361634452" result="Passed" start-time="2022-01-16T22:25:30.3486219Z" end-time="2022-01-16T22:25:30.3486880Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1&amp;2';&#xA; result: &quot;12&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '1&2'
Result: '"12"'
Expected: '"12"'
]]></output>
                </test-case>
                <test-case id="0-2453" name="string-concat.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="485511653" result="Passed" start-time="2022-01-16T22:25:30.3486964Z" end-time="2022-01-16T22:25:30.3487495Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '1&amp;[2]';&#xA; result: &quot;1[2]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '1&[2]'
Result: '"1[2]"'
Expected: '"1[2]"'
]]></output>
                </test-case>
                <test-case id="0-2454" name="string-concat.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1511468384" result="Passed" start-time="2022-01-16T22:25:30.3487643Z" end-time="2022-01-16T22:25:30.3488615Z" duration="0.000098" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;hello&quot;&amp;5';&#xA; result: &quot;hello5&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"hello"&5'
Result: '"hello5"'
Expected: '"hello5"'
]]></output>
                </test-case>
                <test-case id="0-2455" name="string-concat.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.string-concat.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="760884598" result="Passed" start-time="2022-01-16T22:25:30.3488697Z" end-time="2022-01-16T22:25:30.3491308Z" duration="0.000261" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Prices: &quot; &amp; Account.Order.Product.Price';&#xA; result: &quot;Prices: [34.45,21.67,34.45,107.99]&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Prices: " & Account.Order.Product.Price'
Result: '"Prices: [34.45,21.67,34.45,107.99]"'
Expected: '"Prices: [34.45,21.67,34.45,107.99]"'
]]></output>
                </test-case>
                <test-case id="0-2456" name="tail-recursion.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="921046460" result="Passed" start-time="2022-01-16T22:25:30.3491393Z" end-time="2022-01-16T22:25:30.3493808Z" duration="0.000242" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '            (              $f := function($n){()};              $f(1)            ) ';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '            (              $f := function($n){()};              $f(1)            ) '
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2457" name="tail-recursion.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1508488118" result="Failed" start-time="2022-01-16T22:25:30.3493889Z" end-time="2022-01-16T22:25:30.3506154Z" duration="0.001226" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(99))             ';&#xA; result: 9.33262154439441E+155" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '9.33262154439441E+155', got '0'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(99))             '
Result: '0'
Expected: '9.33262154439441E+155'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '9.33262154439441E+155', got '0'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2458" name="tail-recursion.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1916942515" result="Failed" start-time="2022-01-16T22:25:30.3506308Z" end-time="2022-01-16T22:25:30.3518947Z" duration="0.001264" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(100))             ';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Expected error U1001 (), got '0']]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(100))             '
Result: '0'
Expected error U1001
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Expected error U1001 (), got '0']]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 147
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2459" name="tail-recursion.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1248474747" result="Passed" start-time="2022-01-16T22:25:30.3522751Z" end-time="2022-01-16T22:25:30.3526319Z" duration="0.000357" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(5)) ';&#xA; result: 120" />
                  </properties>
                  <output><![CDATA[Expr is '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(5)) '
Result: '120'
Expected: '120'
]]></output>
                </test-case>
                <test-case id="0-2460" name="tail-recursion.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1939924260" result="Failed" start-time="2022-01-16T22:25:30.3530427Z" end-time="2022-01-16T22:25:30.3554444Z" duration="0.002402" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(150)) ';&#xA; result: 5.7133839564458575E+262" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '5.7133839564458575E+262', got '0'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '(  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(150)) '
Result: '0'
Expected: '5.7133839564458575E+262'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '5.7133839564458575E+262', got '0'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2461" name="tail-recursion.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2082328710" result="Failed" start-time="2022-01-16T22:25:30.3558474Z" end-time="2022-01-16T22:25:30.3571210Z" duration="0.001273" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $inf := function($n){$n+$inf($n-1)};  $inf(5))';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 50
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 50
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2462" name="tail-recursion.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="321568560" result="Failed" start-time="2022-01-16T22:25:30.3571802Z" end-time="2022-01-16T22:25:30.3588060Z" duration="0.001626" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '(  $inf := function(){$inf()};  $inf())';&#xA; result: error U1001" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 50
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 50
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2463" name="tail-recursion.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1801159552" result="Failed" start-time="2022-01-16T22:25:30.3590113Z" end-time="2022-01-16T22:25:30.3595607Z" duration="0.000550" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '        (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(6555)         )';&#xA; result: true" />
                  </properties>
                  <failure>
                    <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 50
]]></stack-trace>
                  </failure>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[Tail recursion is not supported yet, and having StackOverflow here breaks tests]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 50
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2464" name="tail-recursion.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1248564703" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:30.3595788Z" end-time="2022-01-16T22:25:30.3609735Z" duration="0.001395" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($f := function($s, $x)&lt;an:s&gt; { $x &gt; 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )';&#xA; result: [&quot;a&quot;,&quot;a&quot;,&quot;a&quot;,&quot;a&quot;]" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($f := function($s, $x)<an:s> { $x > 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )'
]]></output>
                </test-case>
                <test-case id="0-2465" name="tail-recursion.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.tail-recursion.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1828033153" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:30.3609955Z" end-time="2022-01-16T22:25:30.3619283Z" duration="0.000933" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($f := function($s, $x)&lt;sn:s&gt; { $x &gt; 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: The method or operation is not implemented.
(NotImplementedException)
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.ValidateSignature(Signature signature, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 58
   at Jsonata.Net.Native.Eval.EvalProcessor_Lambda.CallLambdaFunction(FunctionTokenLambda lambdaFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Lambda.cs:line 19
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 453
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionCall(FunctionCallNode functionCallNode, JToken input, Environment env, JToken evalutedFirstArgFromApplication) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 441
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 119
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($f := function($s, $x)<sn:s> { $x > 0 ? $f([$s, $s], $x-1) : $s};  $f('a', 2)  )'
]]></output>
                </test-case>
                <test-case id="0-2466" name="token-conversion.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1249641244" result="Passed" start-time="2022-01-16T22:25:30.3619612Z" end-time="2022-01-16T22:25:30.3620608Z" duration="0.000099" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.'7a'';&#xA; result: 33" />
                  </properties>
                  <output><![CDATA[Expr is '$.'7a''
Result: '33'
Expected: '33'
]]></output>
                </test-case>
                <test-case id="0-2467" name="token-conversion.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="117333516" result="Passed" start-time="2022-01-16T22:25:30.3620765Z" end-time="2022-01-16T22:25:30.3621767Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.'7'';&#xA; result: 88" />
                  </properties>
                  <output><![CDATA[Expr is '$.'7''
Result: '88'
Expected: '88'
]]></output>
                </test-case>
                <test-case id="0-2468" name="token-conversion.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1916968974" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:30.3621876Z" end-time="2022-01-16T22:25:30.3630395Z" duration="0.000852" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.7a';&#xA; result: error S0201" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: syntax error: 'Jsonata.Net.Native.Parsing.Token
(ErrSyntaxError)
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 21
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.7a'
]]></output>
                </test-case>
                <test-case id="0-2469" name="token-conversion.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.token-conversion.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="161400082" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:30.3630528Z" end-time="2022-01-16T22:25:30.3640435Z" duration="0.000991" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$.7';&#xA; result: error S0213" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: invalid path step 7: paths cannot contain nulls, strings, numbers or booleans
(ErrPathLiteral)
   at Jsonata.Net.Native.Parsing.DotNode_.optimize() in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Nodes.cs:line 362
   at Jsonata.Net.Native.Parsing.Parser.Parse(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Parsing\Parser.cs:line 23
   at Jsonata.Net.Native.JsonataQuery..ctor(String queryText) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 18
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 92]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$.7'
]]></output>
                </test-case>
                <test-case id="0-2470" name="transform.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1723501216" result="Passed" start-time="2022-01-16T22:25:30.3640758Z" end-time="2022-01-16T22:25:30.3652045Z" duration="0.001129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '{'Order': Account.Order.{  'ID': OrderID,  'Product': Product.{    'SKU': ProductID,    'Details': {      'Weight': Description.Weight,      'Dimensions': Description.(Width &amp; ' x ' &amp; Height &amp; ' x ' &amp; Depth)    }  },  'Total Price': $sum(Product.(Price * Quantity))}}';&#xA; result: {&quot;Order&quot;:[{&quot;ID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;SKU&quot;:858236,&quot;Details&quot;:{&quot;Weight&quot;:0.6,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}}],&quot;Total Price&quot;:90.57000000000001},{&quot;ID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;SKU&quot;:858383,&quot;Details&quot;:{&quot;Weight&quot;:0.75,&quot;Dimensions&quot;:&quot;300 x 200 x 210&quot;}},{&quot;SKU&quot;:345664,&quot;Details&quot;:{&quot;Weight&quot;:2,&quot;Dimensions&quot;:&quot;30 x 20 x 210&quot;}}],&quot;Total Price&quot;:245.79000000000002}]}" />
                  </properties>
                  <output><![CDATA[Expr is '{'Order': Account.Order.{  'ID': OrderID,  'Product': Product.{    'SKU': ProductID,    'Details': {      'Weight': Description.Weight,      'Dimensions': Description.(Width & ' x ' & Height & ' x ' & Depth)    }  },  'Total Price': $sum(Product.(Price * Quantity))}}'
Result: '{"Order":[{"ID":"order103","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57},{"ID":"order104","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79}]}'
Expected: '{"Order":[{"ID":"order103","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":858236,"Details":{"Weight":0.6,"Dimensions":"300 x 200 x 210"}}],"Total Price":90.57000000000001},{"ID":"order104","Product":[{"SKU":858383,"Details":{"Weight":0.75,"Dimensions":"300 x 200 x 210"}},{"SKU":345664,"Details":{"Weight":2,"Dimensions":"30 x 20 x 210"}}],"Total Price":245.79000000000002}]}'
]]></output>
                </test-case>
                <test-case id="0-2471" name="transform.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="544225226" result="Passed" start-time="2022-01-16T22:25:30.3656899Z" end-time="2022-01-16T22:25:30.3662610Z" duration="0.000571" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&#xA;        (&#xA;          $tempReadings := $count(state.tempReadings) = 5 ?&#xA;              [state.tempReadings[[1..4]], event.t] :&#xA;              [state.tempReadings, event.t];&#xA;        &#xA;          {&#xA;            &quot;tempReadings&quot;: $tempReadings,&#xA;            &quot;sumTemperatures&quot;: $sum($tempReadings),&#xA;            &quot;avgTemperature&quot;: $average($tempReadings) ~&gt; $round(2),&#xA;            &quot;maxTemperature&quot;: $max($tempReadings),&#xA;            &quot;minTemperature&quot;: $min($tempReadings)&#xA;          }&#xA;        )';&#xA; result: {&quot;tempReadings&quot;:[28.9,28,28.2,28.4,28.4],&quot;sumTemperatures&quot;:141.9,&quot;avgTemperature&quot;:28.38,&quot;maxTemperature&quot;:28.9,&quot;minTemperature&quot;:28}" />
                  </properties>
                  <output><![CDATA[Expr is '
        (
          $tempReadings := $count(state.tempReadings) = 5 ?
              [state.tempReadings[[1..4]], event.t] :
              [state.tempReadings, event.t];
        
          {
            "tempReadings": $tempReadings,
            "sumTemperatures": $sum($tempReadings),
            "avgTemperature": $average($tempReadings) ~> $round(2),
            "maxTemperature": $max($tempReadings),
            "minTemperature": $min($tempReadings)
          }
        )'
Result: '{"tempReadings":[28.9,28,28.2,28.4,28.4],"sumTemperatures":141.9,"avgTemperature":28.38,"maxTemperature":28.9,"minTemperature":28}'
Expected: '{"tempReadings":[28.9,28,28.2,28.4,28.4],"sumTemperatures":141.9,"avgTemperature":28.38,"maxTemperature":28.9,"minTemperature":28}'
]]></output>
                </test-case>
                <test-case id="0-2472" name="transform.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="307115221" result="Passed" start-time="2022-01-16T22:25:30.3667606Z" end-time="2022-01-16T22:25:30.3669626Z" duration="0.000202" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: {&quot;output&quot;:{&quot;is&quot;:{&quot;same&quot;:{&quot;as&quot;:&quot;input&quot;}}}}" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '{"output":{"is":{"same":{"as":"input"}}}}'
Expected: '{"output":{"is":{"same":{"as":"input"}}}}'
]]></output>
                </test-case>
                <test-case id="0-2473" name="transform.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1322685258" result="Passed" start-time="2022-01-16T22:25:30.3670978Z" end-time="2022-01-16T22:25:30.3673831Z" duration="0.000285" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo';&#xA; result: {&quot;bar&quot;:42}" />
                  </properties>
                  <output><![CDATA[Expr is 'foo'
Result: '{"bar":42}'
Expected: '{"bar":42}'
]]></output>
                </test-case>
                <test-case id="0-2474" name="transform.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="862550279" result="Passed" start-time="2022-01-16T22:25:30.3675229Z" end-time="2022-01-16T22:25:30.3677408Z" duration="0.000218" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'baz';&#xA; result: {&quot;gar&quot;:50}" />
                  </properties>
                  <output><![CDATA[Expr is 'baz'
Result: '{"gar":50}'
Expected: '{"gar":50}'
]]></output>
                </test-case>
                <test-case id="0-2475" name="transform.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1127152840" result="Passed" start-time="2022-01-16T22:25:30.3681592Z" end-time="2022-01-16T22:25:30.3682368Z" duration="0.000077" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Foo';&#xA; result: {&quot;mama&quot;:45}" />
                  </properties>
                  <output><![CDATA[Expr is 'Foo'
Result: '{"mama":45}'
Expected: '{"mama":45}'
]]></output>
                </test-case>
                <test-case id="0-2476" name="transform.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="149630733" result="Passed" start-time="2022-01-16T22:25:30.3682473Z" end-time="2022-01-16T22:25:30.3683032Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'food';&#xA; result: {&quot;wa&quot;:&quot;hume&quot;}" />
                  </properties>
                  <output><![CDATA[Expr is 'food'
Result: '{"wa":"hume"}'
Expected: '{"wa":"hume"}'
]]></output>
                </test-case>
                <test-case id="0-2477" name="transform.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="739964980" result="Passed" start-time="2022-01-16T22:25:30.3683101Z" end-time="2022-01-16T22:25:30.3685860Z" duration="0.000276" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'maz.rar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is 'maz.rar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2478" name="transform.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1674854247" result="Passed" start-time="2022-01-16T22:25:30.3686669Z" end-time="2022-01-16T22:25:30.3688300Z" duration="0.000163" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'jee.par.waa';&#xA; result: {&quot;bar&quot;:87}" />
                  </properties>
                  <output><![CDATA[Expr is 'jee.par.waa'
Result: '{"bar":87}'
Expected: '{"bar":87}'
]]></output>
                </test-case>
                <test-case id="0-2479" name="transform.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="233949830" result="Passed" start-time="2022-01-16T22:25:30.3688813Z" end-time="2022-01-16T22:25:30.3689948Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2480" name="transform.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="646347765" result="Passed" start-time="2022-01-16T22:25:30.3690029Z" end-time="2022-01-16T22:25:30.3690518Z" duration="0.000049" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.bar';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.bar'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2481" name="transform.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1622343609" result="Passed" start-time="2022-01-16T22:25:30.3690582Z" end-time="2022-01-16T22:25:30.3691037Z" duration="0.000046" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2482" name="transform.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1486457437" result="Passed" start-time="2022-01-16T22:25:30.3691095Z" end-time="2022-01-16T22:25:30.3692317Z" duration="0.000122" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;foo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"foo"'
Expected: '"foo"'
]]></output>
                </test-case>
                <test-case id="0-2483" name="transform.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="465146814" result="Passed" start-time="2022-01-16T22:25:30.3692399Z" end-time="2022-01-16T22:25:30.3693923Z" duration="0.000152" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: 6754322" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '6754322'
Expected: '6754322'
]]></output>
                </test-case>
                <test-case id="0-2484" name="transform.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1865537525" result="Passed" start-time="2022-01-16T22:25:30.3694011Z" end-time="2022-01-16T22:25:30.3695070Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: 0" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '0'
Expected: '0'
]]></output>
                </test-case>
                <test-case id="0-2485" name="transform.case015" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case015" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="692471195" result="Passed" start-time="2022-01-16T22:25:30.3704646Z" end-time="2022-01-16T22:25:30.3705935Z" duration="0.000129" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: -24" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '-24'
Expected: '-24'
]]></output>
                </test-case>
                <test-case id="0-2486" name="transform.case016" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case016" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1623943612" result="Passed" start-time="2022-01-16T22:25:30.3711121Z" end-time="2022-01-16T22:25:30.3713509Z" duration="0.000239" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: 6.54" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '6.54'
Expected: '6.54'
]]></output>
                </test-case>
                <test-case id="0-2487" name="transform.case017" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case017" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="208686040" result="Passed" start-time="2022-01-16T22:25:30.3716244Z" end-time="2022-01-16T22:25:30.3717714Z" duration="0.000147" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: true" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'true'
Expected: 'true'
]]></output>
                </test-case>
                <test-case id="0-2488" name="transform.case018" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case018" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1875741515" result="Passed" start-time="2022-01-16T22:25:30.3738594Z" end-time="2022-01-16T22:25:30.3740161Z" duration="0.000156" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: false" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'false'
Expected: 'false'
]]></output>
                </test-case>
                <test-case id="0-2489" name="transform.case019" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case019" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1363145531" result="Passed" start-time="2022-01-16T22:25:30.3745830Z" end-time="2022-01-16T22:25:30.3747581Z" duration="0.000175" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2490" name="transform.case020" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case020" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1920129909" result="Passed" start-time="2022-01-16T22:25:30.3751255Z" end-time="2022-01-16T22:25:30.3751970Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: null" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'null'
Expected: 'null'
]]></output>
                </test-case>
                <test-case id="0-2491" name="transform.case021" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case021" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="654743945" result="Passed" start-time="2022-01-16T22:25:30.3752199Z" end-time="2022-01-16T22:25:30.3753075Z" duration="0.000088" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2492" name="transform.case022" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case022" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="734603959" result="Passed" start-time="2022-01-16T22:25:30.3753168Z" end-time="2022-01-16T22:25:30.3755200Z" duration="0.000203" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2493" name="transform.case023" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case023" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="920196857" result="Passed" start-time="2022-01-16T22:25:30.3758252Z" end-time="2022-01-16T22:25:30.3758982Z" duration="0.000073" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;\&quot;Hello\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"\"Hello\""'
Expected: '"\"Hello\""'
]]></output>
                </test-case>
                <test-case id="0-2494" name="transform.case024" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case024" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1298511151" result="Passed" start-time="2022-01-16T22:25:30.3759891Z" end-time="2022-01-16T22:25:30.3760492Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;\&quot;Hello\&quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"\"Hello\""'
Expected: '"\"Hello\""'
]]></output>
                </test-case>
                <test-case id="0-2495" name="transform.case025" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case025" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="444580714" result="Passed" start-time="2022-01-16T22:25:30.3761071Z" end-time="2022-01-16T22:25:30.3763021Z" duration="0.000195" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'bar';&#xA; result: &quot;'Hello'&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'bar'
Result: '"'Hello'"'
Expected: '"'Hello'"'
]]></output>
                </test-case>
                <test-case id="0-2496" name="transform.case026" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case026" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1932086336" result="Passed" start-time="2022-01-16T22:25:30.3763130Z" end-time="2022-01-16T22:25:30.3763975Z" duration="0.000085" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$';&#xA; result: &quot;'Hello'&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$'
Result: '"'Hello'"'
Expected: '"'Hello'"'
]]></output>
                </test-case>
                <test-case id="0-2497" name="transform.case027" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case027" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1043628424" result="Passed" start-time="2022-01-16T22:25:30.3764057Z" end-time="2022-01-16T22:25:30.3765796Z" duration="0.000174" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Salutation)';&#xA; result: &quot;mr&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Salutation)'
Result: '"mr"'
Expected: '"mr"'
]]></output>
                </test-case>
                <test-case id="0-2498" name="transform.case028" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case028" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="628292711" result="Passed" start-time="2022-01-16T22:25:30.3765883Z" end-time="2022-01-16T22:25:30.3768111Z" duration="0.000223" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(敷)';&#xA; result: &quot;steve&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(敷)'
Result: '"steve"'
Expected: '"steve"'
]]></output>
                </test-case>
                <test-case id="0-2499" name="transform.case029" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case029" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1136109674" result="Passed" start-time="2022-01-16T22:25:30.3768192Z" end-time="2022-01-16T22:25:30.3769225Z" duration="0.000103" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Español)';&#xA; result: &quot;/ˈspænɪʃ/&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Español)'
Result: '"/ˈspænɪʃ/"'
Expected: '"/ˈspænɪʃ/"'
]]></output>
                </test-case>
                <test-case id="0-2500" name="transform.case030" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case030" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1860766231" result="Passed" start-time="2022-01-16T22:25:30.3773693Z" end-time="2022-01-16T22:25:30.3775775Z" duration="0.000209" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase($.&quot;NI.Number&quot;)';&#xA; result: &quot;no10furbzness&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase($."NI.Number")'
Result: '"no10furbzness"'
Expected: '"no10furbzness"'
]]></output>
                </test-case>
                <test-case id="0-2501" name="transform.case031" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case031" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1806137232" result="Passed" start-time="2022-01-16T22:25:30.3775887Z" end-time="2022-01-16T22:25:30.3776684Z" duration="0.000080" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;COMPENSATION IS : &quot; &amp; Employment.&quot;Executive.Compensation&quot;)';&#xA; result: &quot;compensation is : 1400000&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase("COMPENSATION IS : " & Employment."Executive.Compensation")'
Result: '"compensation is : 1400000"'
Expected: '"compensation is : 1400000"'
]]></output>
                </test-case>
                <test-case id="0-2502" name="transform.case032" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case032" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2124028119" result="Passed" start-time="2022-01-16T22:25:30.3776757Z" end-time="2022-01-16T22:25:30.3777234Z" duration="0.000048" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '&quot;Hello&quot;';&#xA; result: &quot;Hello&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '"Hello"'
Result: '"Hello"'
Expected: '"Hello"'
]]></output>
                </test-case>
                <test-case id="0-2503" name="transform.case033" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case033" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="397034984" result="Passed" start-time="2022-01-16T22:25:30.3777291Z" end-time="2022-01-16T22:25:30.3777943Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation)';&#xA; result: &quot;MR&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation)'
Result: '"MR"'
Expected: '"MR"'
]]></output>
                </test-case>
                <test-case id="0-2504" name="transform.case034" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case034" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1108554294" result="Passed" start-time="2022-01-16T22:25:30.3778009Z" end-time="2022-01-16T22:25:30.3778535Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello World&quot;)';&#xA; result: &quot;HELLO WORLD&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello World")'
Result: '"HELLO WORLD"'
Expected: '"HELLO WORLD"'
]]></output>
                </test-case>
                <test-case id="0-2505" name="transform.case035" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case035" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1025778273" result="Passed" start-time="2022-01-16T22:25:30.3778598Z" end-time="2022-01-16T22:25:30.3779132Z" duration="0.000053" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;鯵噂ソ竹&quot;)';&#xA; result: &quot;鯵噂ソ竹&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("鯵噂ソ竹")'
Result: '"鯵噂ソ竹"'
Expected: '"鯵噂ソ竹"'
]]></output>
                </test-case>
                <test-case id="0-2506" name="transform.case036" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case036" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="397069252" result="Passed" start-time="2022-01-16T22:25:30.3779190Z" end-time="2022-01-16T22:25:30.3779802Z" duration="0.000062" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Name &amp; &quot; is happy&quot;';&#xA; result: &quot;IBM UK is happy&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Name & " is happy"'
Result: '"IBM UK is happy"'
Expected: '"IBM UK is happy"'
]]></output>
                </test-case>
                <test-case id="0-2507" name="transform.case037" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case037" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1186432841" result="Passed" start-time="2022-01-16T22:25:30.3779866Z" end-time="2022-01-16T22:25:30.3780765Z" duration="0.000090" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Name &amp; &quot; is pleased to employ &quot; &amp; Salutation &amp; &quot; &quot; &amp; Surname';&#xA; result: &quot;IBM UK is pleased to employ Mr Smith&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Name & " is pleased to employ " & Salutation & " " & Surname'
Result: '"IBM UK is pleased to employ Mr Smith"'
Expected: '"IBM UK is pleased to employ Mr Smith"'
]]></output>
                </test-case>
                <test-case id="0-2508" name="transform.case038" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case038" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1770445021" result="Passed" start-time="2022-01-16T22:25:30.3780832Z" end-time="2022-01-16T22:25:30.3781608Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Hello &quot; &amp; Salutation &amp; &quot; &quot; &amp; Surname)';&#xA; result: &quot;HELLO MR SMITH&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase("Hello " & Salutation & " " & Surname)'
Result: '"HELLO MR SMITH"'
Expected: '"HELLO MR SMITH"'
]]></output>
                </test-case>
                <test-case id="0-2509" name="transform.case039" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case039" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="384315544" result="Passed" start-time="2022-01-16T22:25:30.3781671Z" end-time="2022-01-16T22:25:30.3782507Z" duration="0.000084" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation &amp; &quot; &quot; &amp; Surname &amp; &quot; - has &quot; &amp; Cars &amp; &quot; registered cars&quot;)';&#xA; result: &quot;MR SMITH - HAS 3 REGISTERED CARS&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation & " " & Surname & " - has " & Cars & " registered cars")'
Result: '"MR SMITH - HAS 3 REGISTERED CARS"'
Expected: '"MR SMITH - HAS 3 REGISTERED CARS"'
]]></output>
                </test-case>
                <test-case id="0-2510" name="transform.case040" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case040" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="611253865" result="Passed" start-time="2022-01-16T22:25:30.3782574Z" end-time="2022-01-16T22:25:30.3783229Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment.ContractType)';&#xA; result: &quot;PERMANENT&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Employment.ContractType)'
Result: '"PERMANENT"'
Expected: '"PERMANENT"'
]]></output>
                </test-case>
                <test-case id="0-2511" name="transform.case041" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case041" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="181081480" result="Passed" start-time="2022-01-16T22:25:30.3783292Z" end-time="2022-01-16T22:25:30.3783860Z" duration="0.000057" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;l&quot;)';&#xA; result: &quot;Ho&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "l")'
Result: '"Ho"'
Expected: '"Ho"'
]]></output>
                </test-case>
                <test-case id="0-2512" name="transform.case042" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case042" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1981117518" result="Passed" start-time="2022-01-16T22:25:30.3783920Z" end-time="2022-01-16T22:25:30.3784675Z" duration="0.000076" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, 'l')';&#xA; result: &quot;Ho&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", 'l')'
Result: '"Ho"'
Expected: '"Ho"'
]]></output>
                </test-case>
                <test-case id="0-2513" name="transform.case043" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case043" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1682992685" result="Passed" start-time="2022-01-16T22:25:30.3813232Z" end-time="2022-01-16T22:25:30.3815725Z" duration="0.000249" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;Q&quot;)';&#xA; result: &quot;Hola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "Q")'
Result: '"Hola"'
Expected: '"Hola"'
]]></output>
                </test-case>
                <test-case id="0-2514" name="transform.case044" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case044" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="602126982" result="Passed" start-time="2022-01-16T22:25:30.3815837Z" end-time="2022-01-16T22:25:30.3818499Z" duration="0.000266" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Hola&quot;, &quot;&quot;)';&#xA; result: &quot;&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("Hola", "")'
Result: '""'
Expected: '""'
]]></output>
                </test-case>
                <test-case id="0-2515" name="transform.case045" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case045" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="317580651" result="Passed" start-time="2022-01-16T22:25:30.3819338Z" end-time="2022-01-16T22:25:30.3821035Z" duration="0.000170" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;鯵噂ソ竹&quot;, &quot;ソ&quot;)';&#xA; result: &quot;鯵噂&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringBefore("鯵噂ソ竹", "ソ")'
Result: '"鯵噂"'
Expected: '"鯵噂"'
]]></output>
                </test-case>
                <test-case id="0-2516" name="transform.case046" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case046" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="595871273" result="Passed" start-time="2022-01-16T22:25:30.3821119Z" end-time="2022-01-16T22:25:30.3826028Z" duration="0.000491" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Coca&quot; &amp; &quot;Cola&quot;, &quot;ca&quot;)';&#xA; result: &quot;Cola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Coca" & "Cola", "ca")'
Result: '"Cola"'
Expected: '"Cola"'
]]></output>
                </test-case>
                <test-case id="0-2517" name="transform.case047" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case047" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2003905393" result="Passed" start-time="2022-01-16T22:25:30.3828473Z" end-time="2022-01-16T22:25:30.3831383Z" duration="0.000291" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salutation &amp; &quot; &quot; &amp; MiddleName &amp;&quot; &quot; &amp; Surname, MiddleName)';&#xA; result: &quot; Smith&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(Salutation & " " & MiddleName &" " & Surname, MiddleName)'
Result: '" Smith"'
Expected: '" Smith"'
]]></output>
                </test-case>
                <test-case id="0-2518" name="transform.case048" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case048" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2083105674" result="Passed" start-time="2022-01-16T22:25:30.3840421Z" end-time="2022-01-16T22:25:30.3844629Z" duration="0.000421" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salutation &amp; &quot; &quot; &amp; Employment.Role, Salutation)';&#xA; result: &quot; Senior Physician&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter(Salutation & " " & Employment.Role, Salutation)'
Result: '" Senior Physician"'
Expected: '" Senior Physician"'
]]></output>
                </test-case>
                <test-case id="0-2519" name="transform.case049" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case049" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="556093508" result="Passed" start-time="2022-01-16T22:25:30.3849136Z" end-time="2022-01-16T22:25:30.3851171Z" duration="0.000204" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hola&quot;, 'l')';&#xA; result: &quot;a&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hola", 'l')'
Result: '"a"'
Expected: '"a"'
]]></output>
                </test-case>
                <test-case id="0-2520" name="transform.case050" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case050" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="204089541" result="Passed" start-time="2022-01-16T22:25:30.3853833Z" end-time="2022-01-16T22:25:30.3854654Z" duration="0.000082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Hola&quot;, &quot;Q&quot;)';&#xA; result: &quot;Hola&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substringAfter("Hola", "Q")'
Result: '"Hola"'
Expected: '"Hola"'
]]></output>
                </test-case>
                <test-case id="0-2521" name="transform.case051" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case051" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1040955204" result="Passed" start-time="2022-01-16T22:25:30.3857271Z" end-time="2022-01-16T22:25:30.3861211Z" duration="0.000394" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Employment.Role) &amp; &quot; (&quot; &amp; Employment.Role &amp; &quot;)&quot;';&#xA; result: &quot;senior physician (Senior Physician)&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$lowercase(Employment.Role) & " (" & Employment.Role & ")"'
Result: '"senior physician (Senior Physician)"'
Expected: '"senior physician (Senior Physician)"'
]]></output>
                </test-case>
                <test-case id="0-2522" name="transform.case052" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case052" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="389075648" result="Passed" start-time="2022-01-16T22:25:30.3866403Z" end-time="2022-01-16T22:25:30.3867351Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Employment.Years &amp; &quot; years of employment&quot;';&#xA; result: &quot;12 years of employment&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'Employment.Years & " years of employment"'
Result: '"12 years of employment"'
Expected: '"12 years of employment"'
]]></output>
                </test-case>
                <test-case id="0-2523" name="transform.case053" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case053" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="553823443" result="Passed" start-time="2022-01-16T22:25:30.3872748Z" end-time="2022-01-16T22:25:30.3877053Z" duration="0.000430" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salutation &amp; &quot; &quot; &amp; Surname &amp; &quot; - has &quot; &amp; Employment.Years &amp; &quot; years of employment&quot;)';&#xA; result: &quot;MR SMITH - HAS 12 YEARS OF EMPLOYMENT&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Salutation & " " & Surname & " - has " & Employment.Years & " years of employment")'
Result: '"MR SMITH - HAS 12 YEARS OF EMPLOYMENT"'
Expected: '"MR SMITH - HAS 12 YEARS OF EMPLOYMENT"'
]]></output>
                </test-case>
                <test-case id="0-2524" name="transform.case054" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case054" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="388753820" result="Passed" start-time="2022-01-16T22:25:30.3892753Z" end-time="2022-01-16T22:25:30.3895346Z" duration="0.000259" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment.Role, 7,4)';&#xA; result: &quot;Phys&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(Employment.Role, 7,4)'
Result: '"Phys"'
Expected: '"Phys"'
]]></output>
                </test-case>
                <test-case id="0-2525" name="transform.case055" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case055" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1068757271" result="Passed" start-time="2022-01-16T22:25:30.3899099Z" end-time="2022-01-16T22:25:30.3901311Z" duration="0.000221" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment.Role, -4,4)';&#xA; result: &quot;cian&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring(Employment.Role, -4,4)'
Result: '"cian"'
Expected: '"cian"'
]]></output>
                </test-case>
                <test-case id="0-2526" name="transform.case056" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case056" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1957104914" result="Passed" start-time="2022-01-16T22:25:30.3903986Z" end-time="2022-01-16T22:25:30.3904982Z" duration="0.000100" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello World&quot;,Cars,5)';&#xA; result: &quot;lo Wo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("Hello World",Cars,5)'
Result: '"lo Wo"'
Expected: '"lo Wo"'
]]></output>
                </test-case>
                <test-case id="0-2527" name="transform.case057" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case057" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1534402011" result="Passed" start-time="2022-01-16T22:25:30.3921703Z" end-time="2022-01-16T22:25:30.3931782Z" duration="0.001008" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Missing close brackets&quot;';&#xA; result: error S0203" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0203]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase("Missing close brackets"'
]]></output>
                </test-case>
                <test-case id="0-2528" name="transform.case058" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case058" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="24174107" result="Passed" start-time="2022-01-16T22:25:30.3941868Z" end-time="2022-01-16T22:25:30.3947938Z" duration="0.000607" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$unknown(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$unknown(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2529" name="transform.case059" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case059" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="417969565" result="Passed" start-time="2022-01-16T22:25:30.3948068Z" end-time="2022-01-16T22:25:30.3953532Z" duration="0.000546" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$decrypt(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$decrypt(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2530" name="transform.case060" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case060" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1342550151" result="Passed" start-time="2022-01-16T22:25:30.3953656Z" end-time="2022-01-16T22:25:30.3959189Z" duration="0.000553" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Employment.authentication(Salutation)';&#xA; result: error T1006" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T1006]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Employment.authentication(Salutation)'
]]></output>
                </test-case>
                <test-case id="0-2531" name="transform.case061" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case061" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1253485956" result="Passed" start-time="2022-01-16T22:25:30.3959307Z" end-time="2022-01-16T22:25:30.3960230Z" duration="0.000093" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Invalid)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Invalid)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2532" name="transform.case062" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case062" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="111672269" result="Passed" start-time="2022-01-16T22:25:30.3960315Z" end-time="2022-01-16T22:25:30.3979176Z" duration="0.001886" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment.Invalid)';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '$uppercase(Employment.Invalid)'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2533" name="transform.case063" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case063" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="538744573" result="Passed" start-time="2022-01-16T22:25:30.3983369Z" end-time="2022-01-16T22:25:30.3987571Z" duration="0.000420" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(&quot;Coca&quot;, &quot;Cola&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase("Coca", "Cola")'
]]></output>
                </test-case>
                <test-case id="0-2534" name="transform.case064" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case064" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="520667246" result="Passed" start-time="2022-01-16T22:25:30.3991087Z" end-time="2022-01-16T22:25:30.4001922Z" duration="0.001083" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Salary)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Salary)'
]]></output>
                </test-case>
                <test-case id="0-2535" name="transform.case065" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case065" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="987694180" result="Passed" start-time="2022-01-16T22:25:30.4008137Z" end-time="2022-01-16T22:25:30.4014612Z" duration="0.000647" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(20)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(20)'
]]></output>
                </test-case>
                <test-case id="0-2536" name="transform.case066" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case066" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1645799137" result="Passed" start-time="2022-01-16T22:25:30.4014745Z" end-time="2022-01-16T22:25:30.4019916Z" duration="0.000517" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(20.55)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(20.55)'
]]></output>
                </test-case>
                <test-case id="0-2537" name="transform.case067" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case067" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1089422453" result="Passed" start-time="2022-01-16T22:25:30.4023315Z" end-time="2022-01-16T22:25:30.4027107Z" duration="0.000379" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Employment)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Employment)'
]]></output>
                </test-case>
                <test-case id="0-2538" name="transform.case068" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case068" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1504076167" result="Passed" start-time="2022-01-16T22:25:30.4027233Z" end-time="2022-01-16T22:25:30.4032432Z" duration="0.000520" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$lowercase(Qualifications)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$lowercase(Qualifications)'
]]></output>
                </test-case>
                <test-case id="0-2539" name="transform.case069" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case069" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="839759252" result="Passed" start-time="2022-01-16T22:25:30.4032552Z" end-time="2022-01-16T22:25:30.4042351Z" duration="0.000980" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(&quot;Coca&quot;, &quot;Cola&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase("Coca", "Cola")'
]]></output>
                </test-case>
                <test-case id="0-2540" name="transform.case070" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case070" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="295401943" result="Passed" start-time="2022-01-16T22:25:30.4042484Z" end-time="2022-01-16T22:25:30.4049134Z" duration="0.000665" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Salary)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Salary)'
]]></output>
                </test-case>
                <test-case id="0-2541" name="transform.case071" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case071" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="437510771" result="Passed" start-time="2022-01-16T22:25:30.4049708Z" end-time="2022-01-16T22:25:30.4059959Z" duration="0.001025" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(28)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(28)'
]]></output>
                </test-case>
                <test-case id="0-2542" name="transform.case072" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case072" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="585724666" result="Passed" start-time="2022-01-16T22:25:30.4074057Z" end-time="2022-01-16T22:25:30.4078808Z" duration="0.000475" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(20.55)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(20.55)'
]]></output>
                </test-case>
                <test-case id="0-2543" name="transform.case073" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case073" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1491425971" result="Passed" start-time="2022-01-16T22:25:30.4082530Z" end-time="2022-01-16T22:25:30.4087384Z" duration="0.000485" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Cars)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Cars)'
]]></output>
                </test-case>
                <test-case id="0-2544" name="transform.case074" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case074" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="751891666" result="Passed" start-time="2022-01-16T22:25:30.4087623Z" end-time="2022-01-16T22:25:30.4091912Z" duration="0.000429" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Employment)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Employment)'
]]></output>
                </test-case>
                <test-case id="0-2545" name="transform.case075" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case075" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1739048429" result="Passed" start-time="2022-01-16T22:25:30.4092030Z" end-time="2022-01-16T22:25:30.4096102Z" duration="0.000408" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$uppercase(Qualifications)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$uppercase(Qualifications)'
]]></output>
                </test-case>
                <test-case id="0-2546" name="transform.case076" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case076" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="821110074" result="Passed" start-time="2022-01-16T22:25:30.4096211Z" end-time="2022-01-16T22:25:30.4100217Z" duration="0.000401" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;Coca&quot; &amp; &quot;ca&quot;)';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("Coca" & "ca")'
]]></output>
                </test-case>
                <test-case id="0-2547" name="transform.case077" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case077" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1199094921" result="Passed" start-time="2022-01-16T22:25:30.4100325Z" end-time="2022-01-16T22:25:30.4104135Z" duration="0.000381" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Salary,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Salary,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2548" name="transform.case078" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case078" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="318069875" result="Passed" start-time="2022-01-16T22:25:30.4104241Z" end-time="2022-01-16T22:25:30.4108035Z" duration="0.000380" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(22,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(22,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2549" name="transform.case079" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case079" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="980930500" result="Passed" start-time="2022-01-16T22:25:30.4108352Z" end-time="2022-01-16T22:25:30.4112246Z" duration="0.000389" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(22.55,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(22.55,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2550" name="transform.case080" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case080" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1996193088" result="Passed" start-time="2022-01-16T22:25:30.4112355Z" end-time="2022-01-16T22:25:30.4121139Z" duration="0.000879" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;22&quot;,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("22",2)'
]]></output>
                </test-case>
                <test-case id="0-2551" name="transform.case081" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case081" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2075664590" result="Passed" start-time="2022-01-16T22:25:30.4122812Z" end-time="2022-01-16T22:25:30.4125870Z" duration="0.000306" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(&quot;22.55&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore("22.55",5)'
]]></output>
                </test-case>
                <test-case id="0-2552" name="transform.case082" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case082" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1108006397" result="Passed" start-time="2022-01-16T22:25:30.4127439Z" end-time="2022-01-16T22:25:30.4130452Z" duration="0.000301" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2553" name="transform.case083" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case083" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="72199203" result="Passed" start-time="2022-01-16T22:25:30.4130555Z" end-time="2022-01-16T22:25:30.4149615Z" duration="0.001906" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringBefore(Qualifications,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringBefore(Qualifications,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2554" name="transform.case084" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case084" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="932020133" result="Passed" start-time="2022-01-16T22:25:30.4157928Z" end-time="2022-01-16T22:25:30.4161807Z" duration="0.000388" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;Coca&quot; &amp; &quot;ca&quot;)';&#xA; result: error T0411" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0411]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("Coca" & "ca")'
]]></output>
                </test-case>
                <test-case id="0-2555" name="transform.case085" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case085" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="819811027" result="Passed" start-time="2022-01-16T22:25:30.4167310Z" end-time="2022-01-16T22:25:30.4170764Z" duration="0.000345" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Salary,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Salary,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2556" name="transform.case086" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case086" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1417061584" result="Passed" start-time="2022-01-16T22:25:30.4170909Z" end-time="2022-01-16T22:25:30.4174872Z" duration="0.000396" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(22,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(22,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2557" name="transform.case087" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case087" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1570204676" result="Passed" start-time="2022-01-16T22:25:30.4175050Z" end-time="2022-01-16T22:25:30.4179910Z" duration="0.000486" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(22.55,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(22.55,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2558" name="transform.case088" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case088" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="8281164" result="Passed" start-time="2022-01-16T22:25:30.4180025Z" end-time="2022-01-16T22:25:30.4184915Z" duration="0.000489" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;22&quot;,2)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("22",2)'
]]></output>
                </test-case>
                <test-case id="0-2559" name="transform.case089" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case089" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="39797023" result="Passed" start-time="2022-01-16T22:25:30.4191547Z" end-time="2022-01-16T22:25:30.4194627Z" duration="0.000308" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(&quot;22.55&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter("22.55",5)'
]]></output>
                </test-case>
                <test-case id="0-2560" name="transform.case090" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case090" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1216157006" result="Passed" start-time="2022-01-16T22:25:30.4198512Z" end-time="2022-01-16T22:25:30.4201784Z" duration="0.000327" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2561" name="transform.case091" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case091" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1010150888" result="Passed" start-time="2022-01-16T22:25:30.4213056Z" end-time="2022-01-16T22:25:30.4223781Z" duration="0.001073" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substringAfter(Qualifications,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substringAfter(Qualifications,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2562" name="transform.case092" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case092" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1162258734" result="Passed" start-time="2022-01-16T22:25:30.4227543Z" end-time="2022-01-16T22:25:30.4231059Z" duration="0.000352" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot; &amp; &quot;ca&quot;, 2, 4, 5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca" & "ca", 2, 4, 5)'
]]></output>
                </test-case>
                <test-case id="0-2563" name="transform.case093" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case093" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1352475456" result="Passed" start-time="2022-01-16T22:25:30.4233945Z" end-time="2022-01-16T22:25:30.4242642Z" duration="0.000869" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot;, &quot;Mr&quot;, 4)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca", "Mr", 4)'
]]></output>
                </test-case>
                <test-case id="0-2564" name="transform.case094" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case094" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1189249040" result="Passed" start-time="2022-01-16T22:25:30.4246171Z" end-time="2022-01-16T22:25:30.4249754Z" duration="0.000358" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Coca&quot;, 3, &quot;Whoops&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Coca", 3, "Whoops")'
]]></output>
                </test-case>
                <test-case id="0-2565" name="transform.case095" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case095" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1505251556" result="Passed" start-time="2022-01-16T22:25:30.4259625Z" end-time="2022-01-16T22:25:30.4263791Z" duration="0.000417" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Salary,2,4)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Salary,2,4)'
]]></output>
                </test-case>
                <test-case id="0-2566" name="transform.case096" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case096" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="69409211" result="Passed" start-time="2022-01-16T22:25:30.4263912Z" end-time="2022-01-16T22:25:30.4267688Z" duration="0.000378" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello&quot;,&quot;World&quot;,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Hello","World",5)'
]]></output>
                </test-case>
                <test-case id="0-2567" name="transform.case097" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case097" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1442372945" result="Passed" start-time="2022-01-16T22:25:30.4267794Z" end-time="2022-01-16T22:25:30.4271474Z" duration="0.000368" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello&quot;,5,&quot;World&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring("Hello",5,"World")'
]]></output>
                </test-case>
                <test-case id="0-2568" name="transform.case098" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case098" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1162325439" result="Passed" start-time="2022-01-16T22:25:30.4271579Z" end-time="2022-01-16T22:25:30.4272319Z" duration="0.000074" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$substring(&quot;Hello World&quot;,5.5,5)';&#xA; result: &quot; Worl&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '$substring("Hello World",5.5,5)'
Result: '" Worl"'
Expected: '" Worl"'
]]></output>
                </test-case>
                <test-case id="0-2569" name="transform.case099" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case099" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1761916449" result="Passed" start-time="2022-01-16T22:25:30.4272388Z" end-time="2022-01-16T22:25:30.4276817Z" duration="0.000443" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Employment,&quot;xx&quot;)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Employment,"xx")'
]]></output>
                </test-case>
                <test-case id="0-2570" name="transform.case100" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case100" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="819265161" result="Passed" start-time="2022-01-16T22:25:30.4276907Z" end-time="2022-01-16T22:25:30.4279872Z" duration="0.000297" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$substring(Qualifications,6,5)';&#xA; result: error T0410" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T0410]]></message>
                  </reason>
                  <output><![CDATA[Expr is '$substring(Qualifications,6,5)'
]]></output>
                </test-case>
                <test-case id="0-2571" name="transform.case101" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case101" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1653932467" result="Passed" start-time="2022-01-16T22:25:30.4279959Z" end-time="2022-01-16T22:25:30.4280623Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.contents';&#xA; result: &quot;stuff&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.contents'
Result: '"stuff"'
Expected: '"stuff"'
]]></output>
                </test-case>
                <test-case id="0-2572" name="transform.case102" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case102" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="499829226" result="Passed" start-time="2022-01-16T22:25:30.4280693Z" end-time="2022-01-16T22:25:30.4281254Z" duration="0.000056" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.meta';&#xA; result: &quot;boo&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.meta'
Result: '"boo"'
Expected: '"boo"'
]]></output>
                </test-case>
                <test-case id="0-2573" name="transform.case103" fullname="Jsonata.Net.Native.TestSuite.Tests.transform.case103" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1243346422" result="Passed" start-time="2022-01-16T22:25:30.4281318Z" end-time="2022-01-16T22:25:30.4281861Z" duration="0.000055" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'detail.meta';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is 'detail.meta'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2574" name="transforms.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="260691565" result="Failed" start-time="2022-01-16T22:25:30.4281924Z" end-time="2022-01-16T22:25:30.4356963Z" duration="0.007504" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{&quot;Total&quot;:Price*Quantity},[&quot;Description&quot;, &quot;SKU&quot;]|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]}}" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{"Total":Price*Quantity},["Description", "SKU"]|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]}}'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2575" name="transforms.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1914062417" result="Failed" start-time="2022-01-16T22:25:30.4357160Z" end-time="2022-01-16T22:25:30.4364785Z" duration="0.000763" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account.Order ~&gt; |Product|{&quot;Total&quot;:Price*Quantity},[&quot;Description&quot;, &quot;SKU&quot;]|';&#xA; result: [{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]', got '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is 'Account.Order ~> |Product|{"Total":Price*Quantity},["Description", "SKU"]|'
Result: '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]'
Expected: '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"Price":21.67,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"Price":34.45,"Quantity":4,"Total":137.8},{"ProductID":345664,"Product Name":"Cloak","Price":107.99,"Quantity":1,"Total":107.99}]}]', got '[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2576" name="transforms.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="455230538" result="Failed" start-time="2022-01-16T22:25:30.4364912Z" end-time="2022-01-16T22:25:30.4373454Z" duration="0.000854" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{&quot;Total&quot;:Price*Quantity, &quot;Price&quot;: Price * 1.2}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:41.34,&quot;Quantity&quot;:2,&quot;Total&quot;:68.9},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:26.004,&quot;Quantity&quot;:1,&quot;Total&quot;:21.67}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:41.34,&quot;Quantity&quot;:4,&quot;Total&quot;:137.8},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:129.588,&quot;Quantity&quot;:1,&quot;Total&quot;:107.99}]}]}}" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":26.004,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":4,"Total":137.8},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":129.588,"Quantity":1,"Total":107.99}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{"Total":Price*Quantity, "Price": Price * 1.2}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":26.004,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":4,"Total":137.8},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":129.588,"Quantity":1,"Total":107.99}]}]}}'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":2,"Total":68.9},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":26.004,"Quantity":1,"Total":21.67}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":41.34,"Quantity":4,"Total":137.8},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":129.588,"Quantity":1,"Total":107.99}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2577" name="transforms.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1045133324" result="Failed" start-time="2022-01-16T22:25:30.4373581Z" end-time="2022-01-16T22:25:30.4380570Z" duration="0.000699" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|{},&quot;Description&quot;|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|{},"Description"|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2578" name="transforms.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1949415424" result="Failed" start-time="2022-01-16T22:25:30.4380675Z" end-time="2022-01-16T22:25:30.4396098Z" duration="0.001542" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |Account.Order.Product|nomatch,&quot;Description&quot;|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$ ~> |Account.Order.Product|nomatch,"Description"|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Price":107.99,"Quantity":1}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2579" name="transforms.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="797189038" result="Failed" start-time="2022-01-16T22:25:30.4417437Z" end-time="2022-01-16T22:25:30.4428298Z" duration="0.001086" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |(Account.Order.Product)[0]|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:&quot;blah&quot;,&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":"blah","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$ ~> |(Account.Order.Product)[0]|{"Description":"blah"}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":"blah","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":"blah","Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}', got '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2580" name="transforms.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="247647197" result="Passed" start-time="2022-01-16T22:25:30.4428452Z" end-time="2022-01-16T22:25:30.4430064Z" duration="0.000161" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; |foo.bar|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: {&quot;Account&quot;:{&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;0406654608&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:2},{&quot;Product Name&quot;:&quot;Trilby hat&quot;,&quot;ProductID&quot;:858236,&quot;SKU&quot;:&quot;0406634348&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Orange&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.6},&quot;Price&quot;:21.67,&quot;Quantity&quot;:1}]},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:[{&quot;Product Name&quot;:&quot;Bowler Hat&quot;,&quot;ProductID&quot;:858383,&quot;SKU&quot;:&quot;040657863&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Purple&quot;,&quot;Width&quot;:300,&quot;Height&quot;:200,&quot;Depth&quot;:210,&quot;Weight&quot;:0.75},&quot;Price&quot;:34.45,&quot;Quantity&quot;:4},{&quot;ProductID&quot;:345664,&quot;SKU&quot;:&quot;0406654603&quot;,&quot;Product Name&quot;:&quot;Cloak&quot;,&quot;Description&quot;:{&quot;Colour&quot;:&quot;Black&quot;,&quot;Width&quot;:30,&quot;Height&quot;:20,&quot;Depth&quot;:210,&quot;Weight&quot;:2},&quot;Price&quot;:107.99,&quot;Quantity&quot;:1}]}]}}" />
                  </properties>
                  <output><![CDATA[Expr is '$ ~> |foo.bar|{"Description":"blah"}|'
Result: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
Expected: '{"Account":{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"0406654608","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":2},{"Product Name":"Trilby hat","ProductID":858236,"SKU":"0406634348","Description":{"Colour":"Orange","Width":300,"Height":200,"Depth":210,"Weight":0.6},"Price":21.67,"Quantity":1}]},{"OrderID":"order104","Product":[{"Product Name":"Bowler Hat","ProductID":858383,"SKU":"040657863","Description":{"Colour":"Purple","Width":300,"Height":200,"Depth":210,"Weight":0.75},"Price":34.45,"Quantity":4},{"ProductID":345664,"SKU":"0406654603","Product Name":"Cloak","Description":{"Colour":"Black","Width":30,"Height":20,"Depth":210,"Weight":2},"Price":107.99,"Quantity":1}]}]}}'
]]></output>
                </test-case>
                <test-case id="0-2581" name="transforms.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="758009993" result="Passed" start-time="2022-01-16T22:25:30.4430140Z" end-time="2022-01-16T22:25:30.4431815Z" duration="0.000168" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{&quot;Product&quot;:&quot;blah&quot;},nomatch|';&#xA; result: {&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;blah&quot;},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;blah&quot;}]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account ~> |Order|{"Product":"blah"},nomatch|'
Result: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
Expected: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
]]></output>
                </test-case>
                <test-case id="0-2582" name="transforms.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1216332136" result="Passed" start-time="2022-01-16T22:25:30.4431885Z" end-time="2022-01-16T22:25:30.4432657Z" duration="0.000078" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo ~&gt; |foo.bar|{&quot;Description&quot;:&quot;blah&quot;}|';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is 'foo ~> |foo.bar|{"Description":"blah"}|'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2583" name="transforms.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1190727254" result="Passed" start-time="2022-01-16T22:25:30.4432724Z" end-time="2022-01-16T22:25:30.4463714Z" duration="0.003099" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|5|';&#xA; result: error T2011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2011]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account ~> |Order|5|'
]]></output>
                </test-case>
                <test-case id="0-2584" name="transforms.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="569260124" result="Passed" start-time="2022-01-16T22:25:30.4468126Z" end-time="2022-01-16T22:25:30.4472699Z" duration="0.000457" asserts="0">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{},5|';&#xA; result: error T2012" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2012]]></message>
                  </reason>
                  <output><![CDATA[Expr is 'Account ~> |Order|{},5|'
]]></output>
                </test-case>
                <test-case id="0-2585" name="transforms.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1414369208" result="Passed" start-time="2022-01-16T22:25:30.4472811Z" end-time="2022-01-16T22:25:30.4478450Z" duration="0.000564" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account ~&gt; |Order|{&quot;Product&quot;:&quot;blah&quot;},nomatch|';&#xA; result: {&quot;Account Name&quot;:&quot;Firefly&quot;,&quot;Order&quot;:[{&quot;OrderID&quot;:&quot;order103&quot;,&quot;Product&quot;:&quot;blah&quot;},{&quot;OrderID&quot;:&quot;order104&quot;,&quot;Product&quot;:&quot;blah&quot;}]}" />
                  </properties>
                  <output><![CDATA[Expr is 'Account ~> |Order|{"Product":"blah"},nomatch|'
Result: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
Expected: '{"Account Name":"Firefly","Order":[{"OrderID":"order103","Product":"blah"},{"OrderID":"order104","Product":"blah"}]}'
]]></output>
                </test-case>
                <test-case id="0-2586" name="transforms.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="145479559" result="Passed" start-time="2022-01-16T22:25:30.4478562Z" end-time="2022-01-16T22:25:30.4489314Z" duration="0.001076" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '{} ~&gt; |$|['one', 'two', 'three']|';&#xA; result: error T2011" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code T2011]]></message>
                  </reason>
                  <output><![CDATA[Expr is '{} ~> |$|['one', 'two', 'three']|'
]]></output>
                </test-case>
                <test-case id="0-2587" name="transforms.case013" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case013" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="39473066" result="Failed" label="Error" start-time="2022-01-16T22:25:30.4491805Z" end-time="2022-01-16T22:25:30.4516181Z" duration="0.002438" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; | ** ['hi'] | {'hello': hi}, ['hi'] |';&#xA; result: {&quot;hello&quot;:&quot;world&quot;,&quot;bye&quot;:null}" />
                  </properties>
                  <failure>
                    <message><![CDATA[Jsonata.Net.Native.JsonataException : ????: Update can be applied only to objects. Got String ("world")]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.Eval.EvalProcessor_Transformation.ProcessItem(JToken item, FunctionTokenTransformation transformationFunction) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Transformation.cs:line 61
   at Jsonata.Net.Native.Eval.EvalProcessor_Transformation.CallTransformationFunction(FunctionTokenTransformation transformationFunction, List`1 args, JToken inputAsContext) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor_Transformation.cs:line 49
   at Jsonata.Net.Native.Eval.EvalProcessor.InvokeFunction(FunctionToken function, List`1 args, JToken context, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 463
   at Jsonata.Net.Native.Eval.EvalProcessor.evalFunctionApplication(FunctionApplicationNode functionApplicationNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 347
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 121
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$ ~> | ** ['hi'] | {'hello': hi}, ['hi'] |'
]]></output>
                </test-case>
                <test-case id="0-2588" name="transforms.case014" fullname="Jsonata.Net.Native.TestSuite.Tests.transforms.case014" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1754208087" result="Failed" start-time="2022-01-16T22:25:30.4525352Z" end-time="2022-01-16T22:25:30.4531981Z" duration="0.000663" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$ ~&gt; | ** [hi] | {'hello': hi}, ['hi'] |';&#xA; result: {&quot;bye&quot;:null,&quot;hello&quot;:&quot;world&quot;}" />
                  </properties>
                  <failure>
                    <message><![CDATA[  Expected '{"bye":null,"hello":"world"}', got '{"hi":"world","bye":null}'
  Expected: True
  But was:  False
]]></message>
                    <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                  </failure>
                  <output><![CDATA[Expr is '$ ~> | ** [hi] | {'hello': hi}, ['hi'] |'
Result: '{"hi":"world","bye":null}'
Expected: '{"bye":null,"hello":"world"}'
]]></output>
                  <assertions>
                    <assertion result="Failed">
                      <message><![CDATA[  Expected '{"bye":null,"hello":"world"}', got '{"hi":"world","bye":null}'
  Expected: True
  But was:  False
]]></message>
                      <stack-trace><![CDATA[   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 137
]]></stack-trace>
                    </assertion>
                  </assertions>
                </test-case>
                <test-case id="0-2589" name="variables.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1848339866" result="Passed" start-time="2022-01-16T22:25:30.4532165Z" end-time="2022-01-16T22:25:30.4533107Z" duration="0.000094" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$price.foo.bar';&#xA; result: 45" />
                  </properties>
                  <output><![CDATA[Expr is '$price.foo.bar'
Result: '45'
Expected: '45'
]]></output>
                </test-case>
                <test-case id="0-2590" name="variables.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1718116243" result="Passed" start-time="2022-01-16T22:25:30.4533179Z" end-time="2022-01-16T22:25:30.4533931Z" duration="0.000075" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$price.foo.bar';&#xA; result: 45" />
                  </properties>
                  <output><![CDATA[Expr is '$price.foo.bar'
Result: '45'
Expected: '45'
]]></output>
                </test-case>
                <test-case id="0-2591" name="variables.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="75594461" result="Passed" start-time="2022-01-16T22:25:30.4539298Z" end-time="2022-01-16T22:25:30.4539941Z" duration="0.000065" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$var[1]';&#xA; result: 2" />
                  </properties>
                  <output><![CDATA[Expr is '$var[1]'
Result: '2'
Expected: '2'
]]></output>
                </test-case>
                <test-case id="0-2592" name="variables.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1081141289" result="Passed" start-time="2022-01-16T22:25:30.4540035Z" end-time="2022-01-16T22:25:30.4540747Z" duration="0.000071" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$.foo.bar';&#xA; result: 42" />
                  </properties>
                  <output><![CDATA[Expr is '$.foo.bar'
Result: '42'
Expected: '42'
]]></output>
                </test-case>
                <test-case id="0-2593" name="variables.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1464279144" result="Passed" start-time="2022-01-16T22:25:30.4540810Z" end-time="2022-01-16T22:25:30.4543512Z" duration="0.000270" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$a := 5';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$a := 5'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2594" name="variables.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1771085893" result="Passed" start-time="2022-01-16T22:25:30.4546588Z" end-time="2022-01-16T22:25:30.4547201Z" duration="0.000061" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '$a := $b := 5';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '$a := $b := 5'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2595" name="variables.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1432734702" result="Passed" start-time="2022-01-16T22:25:30.4547593Z" end-time="2022-01-16T22:25:30.4553936Z" duration="0.000634" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a := $b := 5; $a)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '($a := $b := 5; $a)'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2596" name="variables.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1422735684" result="Passed" start-time="2022-01-16T22:25:30.4556722Z" end-time="2022-01-16T22:25:30.4557383Z" duration="0.000066" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '($a := $b := 5; $b)';&#xA; result: 5" />
                  </properties>
                  <output><![CDATA[Expr is '($a := $b := 5; $b)'
Result: '5'
Expected: '5'
]]></output>
                </test-case>
                <test-case id="0-2597" name="variables.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1380732857" result="Skipped" label="Ignored" start-time="2022-01-16T22:25:30.4559309Z" end-time="2022-01-16T22:25:30.4592409Z" duration="0.003310" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '( $a := 5; $a := $a + 2; $a )';&#xA; result: 7" />
                  </properties>
                  <reason>
                    <message><![CDATA[Failed with exception: An item with the same key has already been added. Key: a
(ArgumentException)
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Jsonata.Net.Native.Eval.Environment.Bind(String name, JToken value) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\Environment.cs:line 56
   at Jsonata.Net.Native.Eval.EvalProcessor.evalAssignment(AssignmentNode assignmentNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 400
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 101
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.evalBlock(BlockNode blockNode, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 415
   at Jsonata.Net.Native.Eval.EvalProcessor.EvalInternal(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 97
   at Jsonata.Net.Native.Eval.EvalProcessor.Eval(Node node, JToken input, Environment env) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 51
   at Jsonata.Net.Native.Eval.EvalProcessor.EvaluateJson(Node rootNode, JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\Eval\EvalProcessor.cs:line 37
   at Jsonata.Net.Native.JsonataQuery.Eval(JToken data, JObject bindings) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native\JsonataQuery.cs:line 30
   at Jsonata.Net.Native.TestSuite.Tests.Test(CaseInfo caseInfo) in F:\Projects\_NuGet\jsonata.net.native\src\Jsonata.Net.Native.TestSuite\UnitTest1.cs:line 93]]></message>
                  </reason>
                  <output><![CDATA[Expr is '( $a := 5; $a := $a + 2; $a )'
]]></output>
                </test-case>
                <test-case id="0-2598" name="variables.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="302176931" result="Passed" start-time="2022-01-16T22:25:30.4597580Z" end-time="2022-01-16T22:25:30.4598754Z" duration="0.000117" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '[1,2,3].$v';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '[1,2,3].$v'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2599" name="variables.case010" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case010" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1394123757" result="Passed" start-time="2022-01-16T22:25:30.4598920Z" end-time="2022-01-16T22:25:30.4599735Z" duration="0.000082" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $foo := &quot;defined&quot;; ( $foo := nothing ); $foo )';&#xA; result: &quot;defined&quot;" />
                  </properties>
                  <output><![CDATA[Expr is '( $foo := "defined"; ( $foo := nothing ); $foo )'
Result: '"defined"'
Expected: '"defined"'
]]></output>
                </test-case>
                <test-case id="0-2600" name="variables.case011" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case011" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1669639218" result="Passed" start-time="2022-01-16T22:25:30.4599811Z" end-time="2022-01-16T22:25:30.4600375Z" duration="0.000057" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '( $foo := &quot;defined&quot;; ( $foo := nothing; $foo ) )';&#xA; result: undefined" />
                  </properties>
                  <output><![CDATA[Expr is '( $foo := "defined"; ( $foo := nothing; $foo ) )'
Result: 'undefined'
Expected 'undefined'
]]></output>
                </test-case>
                <test-case id="0-2601" name="variables.case012" fullname="Jsonata.Net.Native.TestSuite.Tests.variables.case012" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1526220776" result="Passed" start-time="2022-01-16T22:25:30.4600442Z" end-time="2022-01-16T22:25:30.4610159Z" duration="0.000972" asserts="0">
                  <properties>
                    <property name="Description" value="expr: '($a := [1,2]; $a[1]:=3; $a)';&#xA; result: error S0212" />
                  </properties>
                  <reason>
                    <message><![CDATA[Expected to throw error with code S0212]]></message>
                  </reason>
                  <output><![CDATA[Expr is '($a := [1,2]; $a[1]:=3; $a)'
]]></output>
                </test-case>
                <test-case id="0-2602" name="wildcards.case000" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case000" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="36769482" result="Passed" start-time="2022-01-16T22:25:30.4610268Z" end-time="2022-01-16T22:25:30.4611406Z" duration="0.000114" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*';&#xA; result: [42,{&quot;baz&quot;:{&quot;fud&quot;:&quot;hello&quot;}},{&quot;baz&quot;:{&quot;fud&quot;:&quot;world&quot;}},{&quot;bazz&quot;:&quot;gotcha&quot;},&quot;here&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*'
Result: '[42,{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"},"here"]'
Expected: '[42,{"baz":{"fud":"hello"}},{"baz":{"fud":"world"}},{"bazz":"gotcha"},"here"]'
]]></output>
                </test-case>
                <test-case id="0-2603" name="wildcards.case001" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case001" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="703637073" result="Passed" start-time="2022-01-16T22:25:30.4611481Z" end-time="2022-01-16T22:25:30.4615581Z" duration="0.000410" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz';&#xA; result: [{&quot;fud&quot;:&quot;hello&quot;},{&quot;fud&quot;:&quot;world&quot;}]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz'
Result: '[{"fud":"hello"},{"fud":"world"}]'
Expected: '[{"fud":"hello"},{"fud":"world"}]'
]]></output>
                </test-case>
                <test-case id="0-2604" name="wildcards.case002" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case002" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="161665339" result="Passed" start-time="2022-01-16T22:25:30.4616254Z" end-time="2022-01-16T22:25:30.4622949Z" duration="0.000670" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.bazz';&#xA; result: &quot;gotcha&quot;" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.bazz'
Result: '"gotcha"'
Expected: '"gotcha"'
]]></output>
                </test-case>
                <test-case id="0-2605" name="wildcards.case003" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case003" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="342260621" result="Passed" start-time="2022-01-16T22:25:30.4625500Z" end-time="2022-01-16T22:25:30.4626557Z" duration="0.000106" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2606" name="wildcards.case004" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case004" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1575835364" result="Passed" start-time="2022-01-16T22:25:30.4638885Z" end-time="2022-01-16T22:25:30.4642067Z" duration="0.000318" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2607" name="wildcards.case005" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case005" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="2012143622" result="Passed" start-time="2022-01-16T22:25:30.4650570Z" end-time="2022-01-16T22:25:30.4652370Z" duration="0.000180" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'foo.*.baz.*';&#xA; result: [&quot;hello&quot;,&quot;world&quot;]" />
                  </properties>
                  <output><![CDATA[Expr is 'foo.*.baz.*'
Result: '["hello","world"]'
Expected: '["hello","world"]'
]]></output>
                </test-case>
                <test-case id="0-2608" name="wildcards.case006" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case006" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1958991285" result="Passed" start-time="2022-01-16T22:25:30.4652548Z" end-time="2022-01-16T22:25:30.4653873Z" duration="0.000133" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '*[type=&quot;home&quot;]';&#xA; result: [{&quot;type&quot;:&quot;home&quot;,&quot;number&quot;:&quot;0203 544 1234&quot;},{&quot;type&quot;:&quot;home&quot;,&quot;address&quot;:[&quot;freddy@my-social.com&quot;,&quot;frederic.smith@very-serious.com&quot;]}]" />
                  </properties>
                  <output><![CDATA[Expr is '*[type="home"]'
Result: '[{"type":"home","number":"0203 544 1234"},{"type":"home","address":["freddy@my-social.com","frederic.smith@very-serious.com"]}]'
Expected: '[{"type":"home","number":"0203 544 1234"},{"type":"home","address":["freddy@my-social.com","frederic.smith@very-serious.com"]}]'
]]></output>
                </test-case>
                <test-case id="0-2609" name="wildcards.case007" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case007" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="1165441363" result="Passed" start-time="2022-01-16T22:25:30.4653945Z" end-time="2022-01-16T22:25:30.4658443Z" duration="0.000450" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account[$$.Account.&quot;Account Name&quot; = &quot;Firefly&quot;].*[OrderID=&quot;order104&quot;].Product.Price';&#xA; result: [34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account[$$.Account."Account Name" = "Firefly"].*[OrderID="order104"].Product.Price'
Result: '[34.45,107.99]'
Expected: '[34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2610" name="wildcards.case008" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case008" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="364580489" result="Passed" start-time="2022-01-16T22:25:30.4658552Z" end-time="2022-01-16T22:25:30.4662377Z" duration="0.000382" asserts="1">
                  <properties>
                    <property name="Description" value="expr: 'Account[$$.Account.`Account Name` = &quot;Firefly&quot;].*[OrderID=&quot;order104&quot;].Product.Price';&#xA; result: [34.45,107.99]" />
                  </properties>
                  <output><![CDATA[Expr is 'Account[$$.Account.`Account Name` = "Firefly"].*[OrderID="order104"].Product.Price'
Result: '[34.45,107.99]'
Expected: '[34.45,107.99]'
]]></output>
                </test-case>
                <test-case id="0-2611" name="wildcards.case009" fullname="Jsonata.Net.Native.TestSuite.Tests.wildcards.case009" methodname="Test" classname="Jsonata.Net.Native.TestSuite.Tests" runstate="Runnable" seed="371928260" result="Passed" start-time="2022-01-16T22:25:30.4662473Z" end-time="2022-01-16T22:25:30.4663071Z" duration="0.000060" asserts="1">
                  <properties>
                    <property name="Description" value="expr: '*';&#xA; result: [1,2,3]" />
                  </properties>
                  <output><![CDATA[Expr is '*'
Result: '[1,2,3]'
Expected: '[1,2,3]'
]]></output>
                </test-case>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>